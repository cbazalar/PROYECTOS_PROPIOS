<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="sisicc.ConsultaHIPSQL">

      <resultMap id="baseClienteResult"    class="java.util.HashMap">
    	<result property="oidCliente" 	    column="OID_CLIE"        javaType="java.lang.String"/>
    	<result property="codigoCliente"    column="COD_CLIE"/>
		<result property="apellido1" 		column="VAL_APE1" />
    	<result property="apellido2" 		column="VAL_APE2"/>
    	<result property="nombre1"	 		column="VAL_NOM1"/>
    	<result property="nombre2" 				column="VAL_NOM2"/>    	
    	<result property="oidTipoDocIdentidad" 	column="TDOC_OID_TIPO_DOCU" javaType="java.lang.String"/>
    	<result property="numeroDocIdentidad" 	column="NUM_DOCU_IDEN"/>
    	<result property="tipoDocIdentidad" 	column="TIPO_DOCU_DES"/>
    	<result property="estatus" 			column="ESTA_CLIEN_DES"/>    	
    	<result property="telefono" 		column="TELEFONO"/>    	    	    	
    	<result property="email" 			column="EMAIL"/>
        <result property="celular" 			column="TELEFONO_CELULAR"/>    	
    	<result property="fechaIngreso" 	column="FECHA_INGRESO"/>
    	<result property="periodoIngreso" 	column="COD_PERI"/>
    	<result property="fechaNacimiento" 	column="FECHA_NACIMIENTO"/>
    	<result property="codigoDigitoControl" 	column="COD_DIGI_CTRL"/>
    	<result property="indicadorActivo" 	column="IND_ACTI" javaType="java.lang.String"/>
    	<result property="nivelRiesgo" 	column="NIVEL_RIESGO"/>
    	<result property="oidNivelRiesgo" 	column="OID_NIVEL_RIESGO"/>
    	<result property="numeroContrato" 	column="NUM_DOCU_CONT"/>
    	<result property="codigoEstatus" 	column="COD_ESTA_CLIE"/>
    	<result property="saldoDeuda" 		column="SAL_DEUD_VENC"/>
    	<result property="estadoFlx" 		column="VAL_ESTA"/>
    	<result property="fechaActivacionFlx" 		column="VAL_FEC_ACTI"/>
    <result property="montoReclamoPendiente"	column="VAL_RECL_PEND"/>
    </resultMap>

    <resultMap id="baseDireccionResult"    class="java.util.HashMap">
    	<result property="tipoVia" 	    	column="DES_ABRV_TIPO_VIA"/>
    	<result property="nombreVia"    	column="VAL_NOMB_VIA"/>
		<result property="numero" 			column="NUM_PPAL" />
    	<result property="observaciones" 	column="VAL_OBSE"/>
    	<result property="codigoTerritorio"	column="COD_TERR" javaType="java.lang.String"/>
    	<result property="ubigeo"	 		column="DESC_UNI"/>
    	<result property="barrio" 	    	column="VAL_BARR"/>    	
    	<result property="ciudad" 	    	column="DES_CIUD"/>
    	<result property="villaPoblacion"  	column="DES_VILLA_POBL"/>
    	<result property="fechaUltimaActualizacion" column="FEC_ULTI_ACTU"/>
    	<result property="codigoPostal" 	column="VAL_COD_POST"/>
    	<result property="etapaConj" 		column="VAL_ETA_CONJ"/>
    	<result property="manzana" 			column="VAL_NOM_MANZ"/>
    	<result property="callePrincipal" 	column="VAL_CAL_PRIN"/>
    	<result property="calleSecundaria" 	column="VAL_CAL_SECU"/>
    	<result property="numeroAuxiliar" 	column="NUM_PPRI" />
    </resultMap>

    <resultMap id="baseUltimoPedidoResult"    class="java.util.HashMap">
    	<result property="periodoUltimoPedido" column="COD_PERI"/>
    	<result property="boletaUltimoPedido"  column="VAL_NUME_SOLI" javaType="java.lang.String"/>
		<result property="importeUltimoPedido" 	column="VAL_TOTA_PAGA_LOCA" javaType="java.lang.String"/>
    </resultMap>

      <resultMap id="baseUnidadAdministrativaResult"    class="java.util.HashMap">
    	<result property="codigoPeriodo" 	    column="COD_PERI"/>
    	<result property="codigoMarca"    		column="COD_MARC"/>
		<result property="codigoCanal" 			column="COD_CANA" />
    	<result property="codigoSubGerencia" 	column="COD_SUBG_VENT"/>
    	<result property="codigoRegion"	 		column="COD_REGI"/>
    	<result property="codigoZona" 			column="COD_ZONA"/>    	
    	<result property="codigoSeccion" 		column="COD_SECC"/>
    	<result property="nombrePeriodo" 		column="VAL_NOMB_PERI"/>
    	<result property="descripcionMarca" 			column="DES_MARC"/>    	
    	<result property="descripcionSubGerencia" 		column="DES_SUBG_VENT"/>    	    	    	
    	<result property="descripcionRegion" 			column="DES_REGI"/>
    	<result property="descripcionZona" 		column="DES_ZONA"/>
    	<result property="descripcionSeccion" 	column="DES_SECCI"/>
    	<result property="codigoTerritorio" 	column="COD_TERR"	javaType="java.lang.String"/>    	
    	<result property="indicadorActividad" 	column="IND_ACTI"	javaType="java.lang.String"/>    	    	    	
    	<result property="fechaCambio"		 	column="fec_camb"/>     	    	    	
    	<result property="usuarioCambio"		column="usu_camb"/>     	    	    	
    </resultMap>

    <resultMap id="baseTipificacionClienteResult"    class="java.util.HashMap">
    	<result property="tipoCliente"         column="TIPO_CLIENTE"/>
    	<result property="subtipoCliente"      column="SUB_TIPO_CLIENTE"/>
		<result property="tipoClasificacion"   column="TIPO_CLASIFICACION"/>
    	<result property="clasificacion"       column="CLASIFICACION"/>		
    </resultMap>

    <resultMap id="baseTipificacionClienteResult"    class="java.util.HashMap">
    	<result property="tipoCliente"         column="TIPO_CLIENTE"/>
    	<result property="subtipoCliente"      column="SUB_TIPO_CLIENTE"/>
		<result property="tipoClasificacion"   column="TIPO_CLASIFICACION"/>
    	<result property="clasificacion"       column="CLASIFICACION"/>		
    </resultMap>
    
    <resultMap id="baseCabeceraReclamoResult"    class="java.util.HashMap">
        <result property="numeroBr"       column="NUMERO_BR" javaType="java.lang.String"/>
    	<result property="oidCabecera"       column="OID_CABE_RECL" javaType="java.lang.String"/>		
    	<result property="nroReclamo"       column="NUMERO_RECLAMO" javaType="java.lang.String"/>		
    	<result property="nroSolicitud"       column="NUMERO_SOLICITUD"/>		
    	<result property="fechaRegistro"       column="FEC_INGR"/>		
    	<result property="campanaRegistro"       column="PERI_REGI"/>		    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="campanaReferencia"       column="PERI_REFE"/>		
    	<result property="estadoReclamo"       column="ESTADO_RECLAMO"/>		
    	<result property="importeDevuelve"       column="TOTAL_DEVUELVE"/>		
    	<result property="enviaReclamado"       column="TOTAL_ENVIA" javaType="java.lang.String"/>		
    	<result property="enviaAtendido"       column="REAL_ATENDIDO" javaType="java.lang.String"/>		
    	<result property="totalReclamado"       column="IMP_RECLAMADO"/>		
    	<result property="totalRealReclamado"       column="IMP_REAL_RECLAMADO"/>	
    	<result property="unidadesRealAtendido"        column="UDD_REAL_ATENDIDO"/>
    	<result property="unidadesRealDevuelta"        column="UDD_DEVUELVE"/>
    	<result property="unidadesRealReclamada"       column="UDD_ENVIA_RECLAMADA"/>
    	<result property="nroBr"       column="NROBR"/>
    	<result property="estadoBr"       column="ESTADOBR"/>
    	<result property="resultadoBr"       column="RESULTADOBR"/>	
    </resultMap>

    <resultMap id="baseDetalleReclamoResult"    class="java.util.HashMap">
    	<result property="operacion"       		column="OPERACION"/>		
    	<result property="codigoMovimiento" 	column="COD_TIPO_MOVI"/>		    	
    	<result property="movimiento"       		column="MOVIMIENTO"/>		
    	<result property="codigoVenta"       		column="CODIGO_VENTA"/>		
    	<result property="descripcion"       		column="DESCRIPCION_PRODUCTO"/>		
    	<result property="unidadesReclamadas"       	column="UNIDADES_RECLAMADAS"/>		    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="unidadesAtendidas"       	column="UNIDADES_ATENDIDAS"/>		
    	<result property="precio"       			column="PRECIO"/>		
    	<result property="precioContable"       	column="PRECIO_CONTABLE"/>		
    	<result property="precioFactura"       		column="PRECIO_FACTURA"/>		
    	<result property="totalCargoReclamado"            column="IMPORTE_CARGO_RECLAMADO"/>		
    	<result property="totalCargoRealizado"           column="IMPORTE_CARGO_REALIZADO"/>		
    	<result property="totalAbono"              column="IMPORTEABONO"/>		
    	<result property="motivo"    		   column="MOTIVO"/>		
    	<result property="numeroConcurso"       column="NUM_CONCURSO"/>		
    	<result property="nivel"     		  column="NUM_NIVEL"/>		
    	<result property="numeroPremio"       column="NUM_PREMIO"/>
        <result property="valorProcesado"       column="VAL_PROC"/>
		<result property="valorDocumento"       column="VAL_DOCU"/>
		<result property="valorFecha"       column="VAL_FECH"/>    
		<result property="oidPedido"       column="OID_PEDI"/>    
    </resultMap>

    <resultMap id="baseBoletasRecojoResult"    class="java.util.HashMap">   
        <result property="numeroBoleta"			column="val_nume_bore"/>
		<result property="codigoVenta"			column="CUV"/>
		<result property="descripcionProducto"	column="descripcion_producto"/>      
		<result property="numeroCDR"			column="nro_cdr"/>                    
		<result property="numeroDespacho"		column="nro_despacho"/>              
		<result property="periodoDiscrepante" 	column="periodo_referencia"/>                      
		<result property="tipoCDR"				column="tipo_cdr"/>
		<result property="codigoSAP" 			column="codigo_sap"/>
		<result property="unidadesReclamadas"	column="reclamadas"/>      
		<result property="unidadesRecogidas" 	column="recogidas"/>
		<result property="unidadesEliminadas"	column="eliminadas"/>       
		<result property="precio"  				column="precio_facturado"/>		      
	    <result property="cargo"  				column="cargo"/>		      
	    <result property="abono"  				column="abono"/>	
    	<result property="fechaProceso"       	column="FEC_RECO"/>		
    	<result property="fechaEmision"       	column="FEC_INGR"/>		
    	<result property="etapa"			    column="ETAPA"/>		
    	<result property="estado"       		column="ESTADO"/>			    	    
    </resultMap>
    
	<resultMap id="baseResult"          class="baseGenerico">
		<result property="codigo" 		column="CODIGO" 	/>
		<result property="descripcion" 	column="DESCRIPCION"/>
	</resultMap>    

    <resultMap id="baseBusqClienteResult"    class="java.util.HashMap">
    	<result property="codigoCliente"    	column="COD_CLIE"/>		
    	<result property="nombre1"       		column="VAL_NOM1"/>		
    	<result property="nombre2"       		column="VAL_NOM2"/>		
    	<result property="apellido1"       		column="VAL_APE1"/>		
    	<result property="apellido2"      	 	column="VAL_APE2"/>		    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="tipoDocumento"       	column="TIPO_DOCU"/>		
    	<result property="numeroDocumento"     	column="NUM_DOCU_IDEN"/>		    	
    	<result property="codigoZona"     		column="COD_ZONA"/>
    	<result property="indActi"     			column="ACTIVA"/>
	</resultMap>    

    <resultMap id="baseConcursoResult"    class="java.util.HashMap">
    	<result property="oidConcurso" 				column="OID_PARA_GRAL" javaType="java.lang.String"/>		    
    	<result property="numeroConcurso"			column="NUM_CONC"/>		
    	<result property="nombreConcurso"  			column="VAL_NOMB"/>
    	<result property="situacion"     			column="SITUACION"/>
    	<result property="periodoInicio"   			column="COD_PERI_INI"/>		
    	<result property="periodoFin"     			column="COD_PERI_FIN"/>		
    	<result property="marca"     		     	column="DES_MARC"/>		    	
    	<result property="estado"		  	 		column="ESTADO_CONCURSO"/>		    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="periodoInicioDespacho"    column="CAMP_INCICIO_DESP"/>		
    	<result property="periodoFinDespacho"    	column="CAMP_FIN_DESP"/>		
    	<result property="periodoMaximoReclamo"    	column="CAMP_MAXI_RECL"/>
    	<result property="campanaDescalificacion"   column="campana_descalificacion"/>
    	<result property="fechaDescalificacion"    	column="fecha_descalificacion"/>
    	<result property="motivoDescalificacion"    column="motivo_descalificacion"/>		    	
	</resultMap>    

    <resultMap id="basePuntajeDetalleResult"    class="java.util.HashMap">
    	<result property="codigoPeriodo"			column="COD_PERI"/>		    
    	<result property="fechaMovimiento"			column="FEC_MOVI"/>		    
    	<result property="tipoMovimiento"			column="TIPO_MOVIMIENTO"/>		    
    	<result property="numeroPuntaje"    		column="NUM_PUNT"/>		    
    	<result property="descripcion" 				column="VAL_DESC"/>		        	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="fechaUltimaActualizacion" column="FEC_ULTI_ACTU"/>		        	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="numeroPuntosBonificados"  column="NUM_PUNT_BONI"/>		        	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="numeroPuntosExigidos"     column="NUM_PUNT_EXIG"/>		        	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="motivo"     				column="DES_MOTI"/>		        	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	
	</resultMap>    	

    <resultMap id="basePuntajeResumenResult"    class="java.util.HashMap">
    	<result property="nivelAlcanzado" 			column="NIVEL_ALCANZADO" javaType="java.lang.String"/>		    
    	<result property="situacion"				column="SITUACION"/>
    	<result property="codigoDupla"				column="COD_DUPLACYZ"/>
    	<result property="nombreDupla"  			column="NOMBRE_DUPLACYZ"/>		    
    	<result property="ventaBase"				column="VENTA_BASE"	javaType="java.lang.String"/>
    	<result property="totalPuntajeObtenido"		column="TOTAL_PUNTAJE_OBTENIDO"/>		    
    	<result property="totalPuntajePerdido" 		column="TOTAL_PUNTAJE_PERDIDO"/>		    
    	<result property="totalPuntajeUtilizado"	column="TOTAL_PUNTAJE_UTILIZADO"/>		    
    	<result property="saldoPuntaje"				column="SALDO_PUNTAJE" javaType="java.lang.String"/>		    
    	<result property="saldoPuntaje"				column="SALDO_PUNTAJE" javaType="java.lang.String"/>
    	<result property="puntajeTotal"				column="Ptos_Total"/>
    	<result property="puntajeUtilizado"			column="Ptos_Utiliz"/>
    	<result property="saldo"					column="Saldo"/>
    	<result property="reserva"					column="Reserva"/>
	</resultMap>   

    <resultMap id="basePremioResult"    class="java.util.HashMap">
    	<result property="oidPremio" 				column="OID_PARA_NIVE_PREM"/>		    
    	<result property="nivel" 					column="NUM_NIVE" javaType="java.lang.String"/>		    
    	<result property="puntosExigidos"			column="PUNTOS_EXIGIDOS" javaType="java.lang.String"/>		    
    	<result property="tipoPremio"		 		column="TIPO_PREMIO"/>		    
    	<result property="numeroPremio"				column="NUM_PREM" javaType="java.lang.String"/>		    
    	<result property="codigoProducto"			column="COD_SAP"/>		    
    	<result property="codigoVenta"				column="COD_VENT_FICT"/>		    
    	<result property="descripcionProducto"		column="DES_CORT"/>		    
    	<result property="numeroUnidades"			column="NUM_UNIDADES" javaType="java.lang.String"/>		    
    	<result property="indicadorPremioElectivo" 	column="IND_PREM_ELEC" javaType="java.lang.String"/>		    
	</resultMap>   

    <resultMap id="baseBolsaFaltanteResult"    class="java.util.HashMap">
    	<result property="numeroConcurso" 			column="NUM_CONC"/>		    
    	<result property="nombreConcurso" 			column="VAL_NOMB"/>		    
    	<result property="codigoProducto"			column="COD_SAP"/>		    
    	<result property="cuv"						column="VAL_CODI_VENT_FICT"/>		        	
    	<result property="descripcionProducto"		column="DES_PROD"/>		    
    	<result property="numeroUnidades"			column="NUM_UNID_FALT"/>
    	<result property="numeroPremio"				column="NUM_PREM"/>
    	<result property="numeroNivel"				column="NUM_NIVE"/>		    
	</resultMap>   

    <resultMap id="baseDuplaActualResult"    class="java.util.HashMap">
    	<result property="codigoCliente" 		column="COD_CLIE"/>		    
    	<result property="nombre1" 				column="VAL_NOM1"/>		    
    	<result property="nombre2"				column="VAL_NOM2"/>		    
    	<result property="apellidoPaterno"		column="VAL_APE1"/>		        	
    	<result property="apellidoMaterno"		column="VAL_APE2"/>		    
    	<result property="fechaNacimiento"		column="FEC_NAC"/>		    
    	<result property="email"				column="EMAIL"/>		        	
    	<result property="telefono"				column="TELEFONO"/>
    	<result property="celular"				column="CELULAR"/>
	</resultMap>   
	
	<resultMap id="getPedidoBaseLineaCreditoResultMap"    class="java.util.HashMap">
    	<result property="codigoPeriodo" 		column="COD_PERI_FACT"/>		    
    	<result property="lineaCredito" 		column="VAL_LINE_CRED"/>		    
    	<result property="pedidoBase"			column="VAL_PEDI_BASE"/>		    
	</resultMap>
	
	<!-- OBTIENE DATOS GENERALES DE LA CONSULTORA -->
    <select id="getDatosGenerales" parameterClass="java.util.Map" resultMap="baseClienteResult">
		SELECT a.OID_CLIE, a.COD_CLIE, 
		       a.VAL_APE1, a.VAL_APE2, 
		       a.VAL_NOM1, a.VAL_NOM2,
		       b.TDOC_OID_TIPO_DOCU,
		       b.NUM_DOCU_IDEN,
		       PQ_APL_AUX.VALOR_GEN_I18N_SICC (#oidIdioma#,
		                                       c.OID_TIPO_DOCU,
		                                       'MAE_TIPO_DOCUM'
		                                      ) tipo_docu_des,
		       PQ_APL_AUX.VALOR_GEN_I18N_SICC (#oidIdioma#,
		                                       e.OID_ESTA_CLIE,
		                                       'MAE_ESTAT_CLIEN'
		                                      ) esta_clien_des,
		       f.VAL_TEXT_COMU telefono, 
		       f1.VAL_TEXT_COMU email,
			  (SELECT com.val_text_comu 
			     FROM MAE_CLIEN_COMUN com, MAE_TIPO_COMUN tip
                WHERE com.ticm_oid_tipo_comu = tip.oid_tipo_comu 
                  AND com.clie_oid_clie = a.oid_clie
                  AND tip.cod_tipo_comu = 'TM') telefono_Celular,		       
		       TO_CHAR(a.FEC_INGR,'DD/MM/YYYY') fecha_ingreso,
		       s.COD_PERI,
		       TO_CHAR(d.FEC_NACI,'DD/MM/YYYY') fecha_nacimiento,
		       a.COD_DIGI_CTRL,
		       d.IND_ACTI,
		       pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                       		   d.NIRI_OID_NIVE_RIES,
                                       		   'CAR_NIVEL_RIESG'
                                      		   ) NIVEL_RIESGO,
               d.NIRI_OID_NIVE_RIES OID_NIVEL_RIESGO,
               (SELECT MAX(NUM_DOCU) FROM CED_CONTR_DESAR X WHERE X.COD_CLIE = a.COD_CLIE  )NUM_DOCU_CONT,
               e.COD_ESTA_CLIE,
               CCC_PKG_GENER.Ccc_Fn_Obtie_Saldo_Venci(a.oid_clie) SAL_DEUD_VENC,
			   NVL((SELECT
				       CASE
				          WHEN chf.ind_acti = '0' AND chf.ind_canc = '0'
				             THEN 'Inactivo'
				          WHEN chf.ind_acti = '1' AND chf.ind_canc = '0'
				             THEN 'Activo'
				       END 
				  FROM flx_consu_habil_flexi chf
				 WHERE chf.cod_clie = a.COD_CLIE 
				      AND chf.cod_peri_fact = #campanhaActivo#), 'No invitada al programa') VAL_ESTA,
			   NVL((SELECT
				       CASE
				          WHEN chf.ind_acti = '0' AND chf.ind_canc = '0' THEN 
				             NULL
				          WHEN chf.ind_acti = '1' AND chf.ind_canc = '0' THEN 
				       (SELECT TO_CHAR(MAX (fec_acci), 'DD/MM/YYYY')
				          FROM flx_audit_consu_habil 
				         WHERE cod_clie = chf.cod_clie
				              AND cod_acci = '02') 
				       END 
				  FROM flx_consu_habil_flexi chf
				 WHERE chf.cod_clie = a.COD_CLIE 
				      AND chf.cod_peri_fact = #campanhaActivo#), '') VAL_FEC_ACTI,
				NVL( a.VAL_RECL_PEND, 0) VAL_RECL_PEND		      	
		  FROM SEG_PAIS p,
		       MAE_CLIEN a,
		       MAE_CLIEN_IDENT b,
		       MAE_TIPO_DOCUM c,
		       MAE_CLIEN_DATOS_ADICI d,
		       MAE_ESTAT_CLIEN e,
		       MAE_CLIEN_COMUN f,
		       MAE_CLIEN_COMUN f1,
		       MAE_CLIEN_PRIME_CONTA g,
		       CRA_PERIO i,
		       SEG_PERIO_CORPO s
		 WHERE p.COD_PAIS = #codigoPais#
		 
		   <isNotEmpty prepend="AND" property="codigoCliente">
		     a.COD_CLIE = #codigoCliente#
		   </isNotEmpty>
		   
		   AND b.CLIE_OID_CLIE = a.OID_CLIE
		   AND b.VAL_IDEN_DOCU_PRIN = 1
		   
		   <isNotEmpty prepend="AND" property="numeroDocIdentidad">
		   	 b.NUM_DOCU_IDEN = #numeroDocIdentidad#
		   </isNotEmpty>
		   
		   AND c.OID_TIPO_DOCU(+) = b.TDOC_OID_TIPO_DOCU
		   AND d.CLIE_OID_CLIE = a.OID_CLIE
		   AND e.OID_ESTA_CLIE(+) = d.ESTA_OID_ESTA_CLIE
		   AND f.CLIE_OID_CLIE(+) = a.OID_CLIE
		   AND f.TICM_OID_TIPO_COMU(+) = 1
		   AND f1.CLIE_OID_CLIE(+) = a.OID_CLIE
		   AND f1.TICM_OID_TIPO_COMU(+) = 3
		   AND g.CLIE_OID_CLIE(+) = a.OID_CLIE
		   AND i.OID_PERI(+) = g.PERD_OID_PERI
		   AND s.OID_PERI(+) = i.PERI_OID_PERI
	</select>

	<!-- OBTIENE MOTIVO DEL BLOQUEO -->
    <select id="getMotivoBloqueo" parameterClass="java.util.Map" resultClass="string">
		SELECT X.cod_tipo_bloq || '__' || X.VAL_I18N
		FROM (SELECT A.NUM_NIVE_GRAV_BLOQ, A.cod_tipo_bloq, D.VAL_I18N 
		from MAE_TIPO_BLOQU A,
			 MAE_CLIEN_BLOQU B,
			 MAE_CLIEN C,
			 GEN_I18N_SICC_COMUN D
		WHERE A.OID_TIPO_BLOQ = B.TIBQ_OID_TIPO_BLOQ
		AND B.CLIE_OID_CLIE = C.OID_CLIE
		AND B.FEC_DESB IS NULL
		AND D.ATTR_ENTI = 'MAE_TIPO_BLOQU'
		AND D.VAL_OID = A.OID_TIPO_BLOQ
		AND C.COD_CLIE = #codigoCliente#
		ORDER BY 1 ) X
		WHERE ROWNUM=1
		
	</select>

	<!-- OBTIENE LA DIRECCION DEL DOMICILIO DE LA CONSULTORA -->
    <select id="getDireccionDomicilio" parameterClass="java.util.Map" resultMap="baseDireccionResult">
		SELECT DES_ABRV_TIPO_VIA, 
		       VAL_NOMB_VIA, 
		       NUM_PPAL, 
		       VAL_OBSE,
		       VAL_ETA_CONJ,
	           VAL_NOM_MANZ,
	           VAL_CAL_PRIN,
	           VAL_CAL_SECU,
		       COD_TERR,
		       nivel_1
		       || DECODE (nivel_2, NULL, '', '/' || nivel_2)
		       || DECODE (nivel_3, NULL, '', '/' || nivel_3)
		       || DECODE (nivel_4, NULL, '', '/' || nivel_4)
		       || DECODE (nivel_5, NULL, '', '/' || nivel_5)
		       || DECODE (nivel_6, NULL, '', '/' || nivel_6)
		       || DECODE (nivel_7, NULL, '', '/' || nivel_7)
		       || DECODE (nivel_8, NULL, '', '/' || nivel_8)
		       || DECODE (nivel_9, NULL, '', '/' || nivel_9) AS DESC_UNI,
		       VAL_BARR,
		       DES_CIUD,
               DES_VILLA_POBL,
               TO_CHAR(FEC_ULTI_ACTU,'dd/mm/yyyy HH:MI:SS') FEC_ULTI_ACTU,
               VAL_COD_POST,
               NUM_PPRI
            
		  FROM (SELECT   a.OID_CLIE_DIRE OID,
		                 c.DES_ABRV_TIPO_VIA, 
		                 a.VAL_NOMB_VIA, 
		                 a.NUM_PPAL, 
		                 a.VAL_OBSE, 
		                 a.VAL_ETA_CONJ,
	                     a.VAL_NOM_MANZ,
	                     a.VAL_CAL_PRIN,
	                     a.VAL_CAL_SECU,
		                 a.VAL_BARR,
		                 t.COD_TERR,
		                 a.fec_ulti_actu,
                         (SELECT DES_CIUD FROM ZON_CIUDA WHERE COD_UGEO_REGI = a.CIUD_COD_UGEO_REGI AND COD_CIUD = a.CIUD_COD_CIUD) DES_CIUD,
                          a.DES_VILLA_POBL,                     
		                 (SELECT des_geog
		                    FROM zon_valor_estru_geopo
		                   WHERE pais_oid_pais = d.pais_oid_pais
		                     AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                     AND orde_2 IS NULL) AS nivel_1,
		                 (SELECT des_geog
		                    FROM zon_valor_estru_geopo
		                   WHERE pais_oid_pais = d.pais_oid_pais
		                     AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                     AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                     AND orde_3 IS NULL) AS nivel_2,
		                 (SELECT des_geog
		                    FROM zon_valor_estru_geopo
		                   WHERE pais_oid_pais = d.pais_oid_pais
		                     AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                     AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                     AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                     AND orde_4 IS NULL) AS nivel_3,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 18
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 IS NULL)
		                    ELSE NULL
		                 END AS nivel_4,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 24
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 IS NULL)
		                    ELSE NULL
		                 END AS nivel_5,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 30
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 IS NULL)
		                    ELSE NULL
		                 END AS nivel_6,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 36
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
		                                AND orde_8 IS NULL)
		                    ELSE NULL
		                 END AS nivel_7,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 42
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
		                                AND orde_8 = SUBSTR (a.cod_unid_geog, 43, 6)
		                                AND orde_9 IS NULL)
		                    ELSE NULL
		                 END AS nivel_8,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 48
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
		                                AND orde_8 = SUBSTR (a.cod_unid_geog, 43, 6)
		                                AND orde_9 = SUBSTR (a.cod_unid_geog, 49, 6))
		                    ELSE NULL
		                 END AS nivel_9, 
		                 a.VAL_COD_POST, 
		                 a.NUM_PPRI
		            FROM MAE_CLIEN_DIREC a,
		                 MAE_TIPO_DIREC b,
		                 SEG_TIPO_VIA c,
		                 MAE_CLIEN d,
		                 ZON_TERRI t
		           WHERE d.OID_CLIE = #oidCliente#
		             AND d.OID_CLIE = a.CLIE_OID_CLIE		           
		             AND a.IND_ELIM = 0
		             AND b.OID_TIPO_DIRE = a.TIDC_OID_TIPO_DIRE
		             AND c.OID_TIPO_VIA = a.TIVI_OID_TIPO_VIA		             
		             AND a.IND_DIRE_PPAL  = 1
		             AND a.TERR_OID_TERR = t.OID_TERR (+)
		        ORDER BY a.OID_CLIE_DIRE DESC)
		 WHERE ROWNUM = 1
	</select>

	<!-- OBTIENE LA DIRECCION DE DESPACHO DE LA CONSULTORA -->
    <select id="getDireccionDespacho" parameterClass="java.util.Map" resultMap="baseDireccionResult">
		SELECT DES_ABRV_TIPO_VIA, 
		       VAL_NOMB_VIA, 
		       NUM_PPAL,  
		       VAL_OBSE,
		       VAL_ETA_CONJ,
	           VAL_NOM_MANZ,
	           VAL_CAL_PRIN,
	           VAL_CAL_SECU,
		       COD_TERR,		       
		          nivel_1
		       || DECODE (nivel_2, NULL, '', '/' || nivel_2)
		       || DECODE (nivel_3, NULL, '', '/' || nivel_3)
		       || DECODE (nivel_4, NULL, '', '/' || nivel_4)
		       || DECODE (nivel_5, NULL, '', '/' || nivel_5)
		       || DECODE (nivel_6, NULL, '', '/' || nivel_6)
		       || DECODE (nivel_7, NULL, '', '/' || nivel_7)
		       || DECODE (nivel_8, NULL, '', '/' || nivel_8)
		       || DECODE (nivel_9, NULL, '', '/' || nivel_9) AS DESC_UNI,
		       VAL_BARR,
		       DES_CIUD,
               DES_VILLA_POBL,
               NULL FEC_ULTI_ACTU ,
               VAL_COD_POST,
               NUM_PPRI
		  FROM (SELECT   a.OID_CLIE_DIRE OID,
		                 c.DES_ABRV_TIPO_VIA, 
		                 a.VAL_NOMB_VIA, 
		                 a.NUM_PPAL, 
		                 a.VAL_OBSE, 
		                 a.VAL_ETA_CONJ,
	                     a.VAL_NOM_MANZ,
	                     a.VAL_CAL_PRIN,
	                     a.VAL_CAL_SECU,
		                 a.VAL_BARR,
		                 t.COD_TERR,
		                 (SELECT DES_CIUD FROM ZON_CIUDA WHERE COD_UGEO_REGI = a.CIUD_COD_UGEO_REGI AND COD_CIUD = a.CIUD_COD_CIUD) DES_CIUD,
                         a.DES_VILLA_POBL,
		                 (SELECT des_geog
		                    FROM zon_valor_estru_geopo
		                   WHERE pais_oid_pais = d.pais_oid_pais
		                     AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                     AND orde_2 IS NULL) AS nivel_1,
		                 (SELECT des_geog
		                    FROM zon_valor_estru_geopo
		                   WHERE pais_oid_pais = d.pais_oid_pais
		                     AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                     AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                     AND orde_3 IS NULL) AS nivel_2,
		                 (SELECT des_geog
		                    FROM zon_valor_estru_geopo
		                   WHERE pais_oid_pais = d.pais_oid_pais
		                     AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                     AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                     AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                     AND orde_4 IS NULL) AS nivel_3,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 18
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 IS NULL)
		                    ELSE NULL
		                 END AS nivel_4,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 24
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 IS NULL)
		                    ELSE NULL
		                 END AS nivel_5,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 30
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 IS NULL)
		                    ELSE NULL
		                 END AS nivel_6,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 36
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
		                                AND orde_8 IS NULL)
		                    ELSE NULL
		                 END AS nivel_7,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 42
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
		                                AND orde_8 = SUBSTR (a.cod_unid_geog, 43, 6)
		                                AND orde_9 IS NULL)
		                    ELSE NULL
		                 END AS nivel_8,
		                 CASE
		                    WHEN LENGTH (a.cod_unid_geog) > 48
		                       THEN (SELECT des_geog
		                               FROM zon_valor_estru_geopo
		                              WHERE pais_oid_pais =
		                                                   d.pais_oid_pais
		                                AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
		                                AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
		                                AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
		                                AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
		                                AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
		                                AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
		                                AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
		                                AND orde_8 = SUBSTR (a.cod_unid_geog, 43, 6)
		                                AND orde_9 = SUBSTR (a.cod_unid_geog, 49, 6))
		                    ELSE NULL
		                 END AS nivel_9,
		                 a.val_cod_post,
		                 a.NUM_PPRI
		            FROM MAE_CLIEN_DIREC a,
		                 MAE_TIPO_DIREC b,
		                 SEG_TIPO_VIA c,
		                 MAE_CLIEN d,
		                 ZON_TERRI t
		           WHERE d.OID_CLIE = #oidCliente#
		             AND d.OID_CLIE = a.CLIE_OID_CLIE           
		             AND a.IND_ELIM = 0
		             AND b.OID_TIPO_DIRE = a.TIDC_OID_TIPO_DIRE
		             AND c.OID_TIPO_VIA = a.TIVI_OID_TIPO_VIA
		             AND b.COD_TIPO_DIRE = '07'
                     AND a.TERR_OID_TERR = t.OID_TERR (+)		             
		        ORDER BY a.OID_CLIE_DIRE DESC)
		 WHERE ROWNUM = 1
	</select>

	<!-- OBTIENE LOS DATOS DEL ULTIMO PEDIDO -->
    <select id="getUltimoPedido" parameterClass="java.util.Map" resultMap="baseUltimoPedidoResult">
		SELECT COD_PERI, 
		       VAL_NUME_SOLI, 
		       VAL_TOTA_PAGA_LOCA      
		       FROM (SELECT per.COD_PERI, psc.VAL_NUME_SOLI, psc.VAL_TOTA_PAGA_LOCA
		              FROM PED_SOLIC_CABEC psc, 
		                   PED_TIPO_SOLIC_PAIS tsp, 
		                   PED_TIPO_SOLIC ts,
	              		   CRA_PERIO cra,
		               	   SEG_PERIO_CORPO per
		             WHERE cra.OID_PERI = psc.PERD_OID_PERI
		               AND per.OID_PERI = cra.peri_oid_peri 
		               AND psc.TSPA_OID_TIPO_SOLI_PAIS = tsp.OID_TIPO_SOLI_PAIS 
		               AND tsp.TSOL_OID_TIPO_SOLI = ts.OID_TIPO_SOLI 
		               AND psc.CLIE_OID_CLIE = #oidCliente#
		               AND ts.COD_TIPO_SOLI = 'C1'
		   	   	<![CDATA[		               
		               AND psc.ESSO_OID_ESTA_SOLI <> 4
			    ]]>		   		               
		            ORDER BY cra.FEC_INIC DESC, psc.VAL_NUME_SOLI DESC      				 				 
				)			
		 WHERE ROWNUM = 1		
 	</select>
	
	<!-- OBTIENE EL SALDO UNICO DE LA CONSULTORA -->
    <select id="getSaldoUnico" parameterClass="java.util.Map" resultClass="string">
		SELECT NVL(SUM(ccc.IMP_PEND), 0)
		  FROM CCC_MOVIM_CUENT_CORRI ccc, MAE_CLIEN cli
		 WHERE cli.OID_CLIE = #oidCliente#
		   AND ccc.CLIE_OID_CLIE = cli.OID_CLIE
	   	   	<![CDATA[
		   AND ccc.IMP_PEND > 0
		    ]]>		   
 	</select>

	<!-- OBTIENE EL SALDO DE CAMPAÑA DE LA CONSULTORA -->
    <select id="getSaldoCampana" parameterClass="java.util.Map" resultClass="string">
		SELECT HIP_PKG_CONSU.HIP_FN_DEVUE_SALDO_CAMPA(#codigoPais#, #codigoMarca#, #codigoCanal#,
												#codigoCliente#, #codigoPeriodo#, #codigoZona#)
		  FROM DUAL
 	</select>

	<!-- OBTIENE LAS UNIDADES ADMINISTRATIVAS DE LA CONSULTORA -->
    <select id="getUnidadesAdministrativas" parameterClass="java.util.Map" resultMap="baseUnidadAdministrativaResult">
		SELECT   j.COD_PERI, 
		         l.COD_MARC,
		         m.COD_CANA,
		         g.COD_SUBG_VENT,
		         f.COD_REGI,
		         e.COD_ZONA,
		         d.COD_SECC,
		         i.VAL_NOMB_PERI, 
		         l.DES_MARC,
		         g.DES_SUBG_VENT, 
		         f.DES_REGI, 
		         e.DES_ZONA,
		         d.DES_SECCI, 
		         b.COD_TERR,
				 h.IND_ACTI,
				 to_char(h.fec_camb,'dd/mm/yyyy HH:MI:SS') fec_camb,
				  h.usu_modi usu_camb
		    FROM ZON_TERRI b,
		         ZON_TERRI_ADMIN c,
		         ZON_SECCI d,
		         ZON_ZONA e,
		         ZON_REGIO f,
		         ZON_SUB_GEREN_VENTA g,
		         MAE_CLIEN_UNIDA_ADMIN h,
		         CRA_PERIO i,
		         SEG_PERIO_CORPO j,
		         SEG_MARCA l,
		         SEG_CANAL m
		   WHERE h.CLIE_OID_CLIE = #oidCliente#
		     AND h.ZTAD_OID_TERR_ADMI = c.OID_TERR_ADMI		   
		     AND c.TERR_OID_TERR = b.OID_TERR
		     AND d.OID_SECC = c.ZSCC_OID_SECC
		     AND e.OID_ZONA = d.ZZON_OID_ZONA
		     AND f.OID_REGI = e.ZORG_OID_REGI
		     AND g.OID_SUBG_VENT = f.ZSGV_OID_SUBG_VENT
		     AND i.OID_PERI = h.PERD_OID_PERI_INI
		     AND j.OID_PERI = i.PERI_OID_PERI
		     AND l.OID_MARC = g.MARC_OID_MARC
		     AND m.OID_CANA = g.CANA_OID_CANA
		     AND c.IND_BORR = 0
		ORDER BY i.FEC_INIC DESC
 	</select>
 	 	
	<!-- OBTIENE LAS UNIDADES ADMINISTRATIVAS DE LA CONSULTORA -->
    <select id="getUnidadesAdministrativas2" parameterClass="java.util.Map" resultMap="baseUnidadAdministrativaResult">
		SELECT   j.COD_PERI, 
		         l.COD_MARC,
		         m.COD_CANA,
		         g.COD_SUBG_VENT,
		         f.COD_REGI,
		         e.COD_ZONA,
		         d.COD_SECC,
		         i.VAL_NOMB_PERI, 
		         l.DES_MARC,
		         g.DES_SUBG_VENT, 
		         f.DES_REGI, 
		         e.DES_ZONA,
		         d.DES_SECCI, 
		         b.COD_TERR
		    FROM MAE_CLIEN_DIREC a,
		         ZON_TERRI b,
		         ZON_TERRI_ADMIN c,
		         ZON_SECCI d,
		         ZON_ZONA e,
		         ZON_REGIO f,
		         ZON_SUB_GEREN_VENTA g,
		         MAE_CLIEN_UNIDA_ADMIN h,
		         CRA_PERIO i,
		         SEG_PERIO_CORPO j,
		         SEG_MARCA l,
		         SEG_CANAL m
		   WHERE a.CLIE_OID_CLIE = #oidCliente#
		     AND a.IND_DIRE_PPAL = 1
		     AND a.IND_ELIM = 0
		     AND b.OID_TERR = a.TERR_OID_TERR
		     AND c.TERR_OID_TERR = b.OID_TERR
		     AND d.OID_SECC = c.ZSCC_OID_SECC
		     AND e.OID_ZONA = d.ZZON_OID_ZONA
		     AND f.OID_REGI = e.ZORG_OID_REGI
		     AND g.OID_SUBG_VENT = f.ZSGV_OID_SUBG_VENT
		     AND h.CLIE_OID_CLIE = a.CLIE_OID_CLIE
		     AND h.IND_ACTI = 1
		     AND i.OID_PERI = h.PERD_OID_PERI_INI
		     AND j.OID_PERI = i.PERI_OID_PERI
		     AND l.OID_MARC = g.MARC_OID_MARC
		     AND m.OID_CANA = g.CANA_OID_CANA
		     AND c.IND_BORR = 0
		ORDER BY i.FEC_INIC DESC
 	</select>

	<!-- OBTIENE LOS TIPOS DE CLIENTES, Y TIPOS DE CLASIFICACION DE LA CONSULTORA -->
    <select id="getTipificacionCliente" parameterClass="java.util.Map" resultMap="baseTipificacionClienteResult">
    
    SELECT   pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma#, a.TICL_OID_TIPO_CLIE, 'MAE_TIPO_CLIEN') AS TIPO_CLIENTE,
         pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma#, a.SBTI_OID_SUBT_CLIE, 'MAE_SUBTI_CLIEN') AS SUB_TIPO_CLIENTE,
         (CASE WHEN (SELECT COUNT(*) FROM MAE_CLASI c
				             WHERE c.tccl_oid_tipo_clas = a.TCCL_OID_TIPO_CLASI
							   AND c.OID_CLAS = a.CLAS_OID_CLAS
							   AND c.IND_ACTI = 1 
                 AND c.IND_HIPE = 1) > 0 THEN
                 
              pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma#, a.TCCL_OID_TIPO_CLASI, 'MAE_TIPO_CLASI_CLIEN') 
             ELSE ''
          END) AS TIPO_CLASIFICACION,     
         (CASE WHEN (SELECT COUNT(*) FROM MAE_CLASI c
				             WHERE c.tccl_oid_tipo_clas = a.TCCL_OID_TIPO_CLASI
							   AND c.OID_CLAS = a.CLAS_OID_CLAS
							   AND c.IND_ACTI = 1 
                 AND c.IND_HIPE = 1) > 0 THEN
                 
              pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma#, a.CLAS_OID_CLAS, 'MAE_CLASI') 
             ELSE ''
          END) AS CLASIFICACION
        FROM V_MAE_TIPIF_CLIEN a    
       WHERE a.CLIE_OID_CLIE = #oidCliente#
    ORDER BY a.TICL_OID_TIPO_CLIE,
             a.SBTI_OID_SUBT_CLIE,
             a.TCCL_OID_TIPO_CLASI,
             a.CLAS_OID_CLAS
    </select>

	<!-- OBTIENE LAS CABECERAS DE RECLAMO DE LA CONSULTORA -->
    <select id="getCabeceraReclamos" parameterClass="java.util.Map" resultMap="baseCabeceraReclamoResult">
     SELECT NVL((select distinct(a.cod_Cabe_bore)
                  from int_Rec_linea_borec a
                 where A.CARE_OID_CABE_RECL = OID_CABE_RECL  and rownum = 1),0) numero_br,
                 TEMP.*,
         (SELECT CB.COD_CABE_BORE 
          FROM rec_tipo_movim        mov,
               rec_opera_recla       ror,
               rec_linea_opera_recla lor,
               int_rec_linea_borec lb, 
               int_rec_cabec_borec cb 
         WHERE mov.oid_tipo_movi = lor.timo_oid_tipo_movi
           AND ror.care_oid_cabe_recl = oid_cabe_recl
           AND lor.opre_oid_oper_recl = ror.oid_oper_recl
           AND mov.cod_tipo_movi = 'D' 
           and lor.OID_LINE_OPER_RECL = lb.LOR_OID_LINE_OPER_RECL(+)
           and lb.COD_CABE_BORE = cb.COD_CABE_BORE(+) 
           and cb.COD_CABE_BORE is not null
           and rownum = 1) NROBR,
       (SELECT  INT_PKG_RECLA.gen_fn_devue_deest_borec( CB.ESBO_OID_ESTA_BOR1) 
          FROM rec_tipo_movim        mov,
               rec_opera_recla       ror,
               rec_linea_opera_recla lor,
               int_rec_linea_borec lb, 
               int_rec_cabec_borec cb 
         WHERE mov.oid_tipo_movi = lor.timo_oid_tipo_movi
           AND ror.care_oid_cabe_recl = oid_cabe_recl
           AND lor.opre_oid_oper_recl = ror.oid_oper_recl
           AND mov.cod_tipo_movi = 'D' 
           and lor.OID_LINE_OPER_RECL = lb.LOR_OID_LINE_OPER_RECL(+)
           and lb.COD_CABE_BORE = cb.COD_CABE_BORE(+) 
           and cb.COD_CABE_BORE is not null
           and rownum = 1) ESTADOBR ,          
       (SELECT INT_PKG_RECLA.gen_fn_devue_deest_borec( CB.ESBO_OID_ESTA_BOR2)
          FROM rec_tipo_movim        mov,
               rec_opera_recla       ror,
               rec_linea_opera_recla lor,
               int_rec_linea_borec lb, 
               int_rec_cabec_borec cb 
         WHERE mov.oid_tipo_movi = lor.timo_oid_tipo_movi
           AND ror.care_oid_cabe_recl = oid_cabe_recl
           AND lor.opre_oid_oper_recl = ror.oid_oper_recl
           AND mov.cod_tipo_movi = 'D' 
           and lor.OID_LINE_OPER_RECL = lb.LOR_OID_LINE_OPER_RECL(+)
           and lb.COD_CABE_BORE = cb.COD_CABE_BORE(+) 
           and cb.COD_CABE_BORE is not null
           and rownum = 1) RESULTADOBR
      FROM (
      <isNotEmpty property="filas">
    	SELECT * 
		  FROM  (
      </isNotEmpty>
        SELECT cr.OID_CABE_RECL, 
               cr.NUM_RECL numero_reclamo,
                 sc.VAL_NUME_SOLI numero_solicitud,
                 TO_CHAR(cr.FEC_INGR,'dd/MM/yyyy') FEC_INGR, 
                 pe.VAL_NOMB_PERI peri_regi,
               pe2.VAL_NOMB_PERI peri_refe,
               INT_PKG_RECLA.REC_FN_DEVUE_ESTAD_CDR(cr.OID_CABE_RECL, 'RCR') estado_reclamo,
                 cr.NUM_TOTA_DEVU total_devuelve,                                      
               cr.NUM_TOTA_ENVI total_envia,
               HIP_PKG_CONSU.HIP_FN_DEVUE_IMPOR_ATEND(cr.OID_CABE_RECL) real_atendido,
               cr.IMP_SALD_PAGA imp_reclamado,           
               (HIP_PKG_CONSU.HIP_FN_DEVUE_IMPOR_ATEND(cr.OID_CABE_RECL) - cr.NUM_TOTA_DEVU) IMP_REAL_RECLAMADO,
               HIP_PKG_CONSU.HIP_FN_DEVUE_UNIDA_ATEND(cr.OID_CABE_RECL) UDD_REAL_ATENDIDO,
                (SELECT SUM (lor.Num_Unid_recl)
                 FROM rec_tipo_movim mov,
                      rec_opera_recla ror,
                      rec_linea_opera_recla lor
                WHERE mov.oid_tipo_movi = lor.timo_oid_tipo_movi
                  AND ror.care_oid_cabe_recl = cr.oid_cabe_recl
                  AND lor.opre_oid_oper_recl = ror.oid_oper_recl
                  AND mov.cod_tipo_movi = 'D') UDD_DEVUELVE,
               (SELECT SUM (lor.Num_Unid_Recl)
                 FROM rec_tipo_movim mov,
                      rec_opera_recla ror,
                      rec_linea_opera_recla lor
                WHERE mov.oid_tipo_movi = lor.timo_oid_tipo_movi
                  AND ror.care_oid_cabe_recl = cr.oid_cabe_recl
                  AND lor.opre_oid_oper_recl = ror.oid_oper_recl
                  AND mov.cod_tipo_movi = 'E') UDD_ENVIA_RECLAMADA                                                            
          FROM REC_CABEC_RECLA cr,
               CRA_PERIO pe,
               CRA_PERIO pe2,
               PED_SOLIC_CABEC sc,
               REC_ESTAD_RECLA er
         WHERE cr.SOCA_OID_SOLI_CABE = sc.OID_SOLI_CABE
           AND cr.ESRE_OID_ESTA_RECL = er.OID_ESTA_RECL
           AND cr.CLIE_OID_CLIE = #oidCliente#
           AND pe.OID_PERI = cr.PERD_OID_PERI_RECL
           AND pe2.OID_PERI = cr.PERD_OID_PERI_DOCU_REFE
         ORDER BY cr.FEC_INGR DESC	    
	  <isNotEmpty property="filas">   
	   	<![CDATA[
	   		)				
			WHERE ROWNUM < #filas#									         
	    ]]>
      </isNotEmpty>	
      ) TEMP    	     	   
    </select>
 	 	
	<!-- OBTIENE EL DETALLE DEL RECLAMO -->
    <select id="getDetalleReclamo" parameterClass="java.util.Map" resultMap="baseDetalleReclamoResult">
        SELECT pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               top.oid_tipo_oper,
                                               'REC_TIPOS_OPERA'
                                              ) operacion,
               tmv.cod_tipo_movi,
               pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               tmv.oid_tipo_movi,
                                               'REC_TIPO_MOVIM'
                                              ) movimiento,
               NVL (od.val_codi_vent, al.cod_vent_fict) codigo_venta,
               pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               pro.oid_prod,
                                               'MAE_PRODU'
                                              ) descripcion_producto,
               DECODE (tmv.oid_tipo_movi,
                       1, ABS (NVL (psp.num_unid_por_aten, '')),
                       lor.num_unid_recl
                      ) unidades_reclamadas,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (psp.num_unid_aten, ''),
                       0
                      ) unidades_atendidas,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (psp.val_prec_cata_unit_loca, ''),
                       lor.val_prec
                      ) precio,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (psp.val_prec_cont_unit_loca, ''),
                       lor.val_prec_cont
                      ) precio_contable,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (psp.val_prec_fact_unit_loca, ''),
                       0
                      ) precio_factura,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (  ABS (psp.num_unid_por_aten)
                               * psp.val_prec_fact_unit_loca,
                               ''
                              ),
                       0
                      ) importe_cargo_reclamado,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (ABS (psp.num_unid_aten) * psp.val_prec_fact_unit_loca,
                               ''
                              ),
                       0
                      ) importe_cargo_realizado,
               lor.imp_abon importeabono,
               pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               md.oid_moti_devo,
                                               'REC_MOTIV_DEVOL'
                                              ) motivo,
               cpg.num_conc num_concurso, pn.num_nive num_nivel,
               lpa.num_prem num_premio, 
               lor.oid_line_oper_recl,
               decode(PSC1.GRPR_OID_GRUP_PROC,5,'S','N') VAL_PROC,
               PSC1.VAL_NUME_SOLI VAL_DOCU,
               TO_CHAR(PSC1.FEC_FACT, 'DD/MM/YYYY') VAL_FECH,
               PSC1.oid_soli_cabe  OID_PEDI
          FROM rec_opera_recla opr,
               rec_tipos_opera top,
               rec_opera op,
               rec_linea_opera_recla lor,
               rec_tipo_movim tmv,
               ped_solic_cabec sc,
               pre_matri_factu mf,
               pre_ofert_detal od,
               mae_produ pro,
               rec_motiv_devol md,
               rec_solic_opera rso,
               ped_solic_cabec psc1,
               ped_solic_cabec psc,
               ped_solic_posic psp,
               inc_concu_param_gener cpg,
               inc_param_nivel_premi pn,
               inc_artic_lote al,
               inc_lote_premi_artic lpa
         WHERE opr.tiop_oid_tipo_oper = top.oid_tipo_oper
           AND top.rope_oid_oper = op.oid_oper
           AND opr.esop_oid_esta_oper not in (1,9)
           AND opr.oid_oper_recl = lor.opre_oid_oper_recl(+)
           AND opr.soca_oid_soli_cabe = sc.oid_soli_cabe
           AND lor.timo_oid_tipo_movi = tmv.oid_tipo_movi(+)
           AND lor.mafa_oid_matr_fact = mf.oid_matr_fact(+)
           AND mf.ofde_oid_deta_ofer = od.oid_deta_ofer(+)
           AND lor.prod_oid_prod = pro.oid_prod(+)
           AND lor.modv_oid_moti_devo = md.oid_moti_devo(+)
           AND opr.care_oid_cabe_recl = #oidCabecera#
           AND lor.copa_oid_para_gral = cpg.oid_para_gral(+)
           AND lor.panp_oid_para_nive_prem = pn.oid_para_nive_prem(+)
           AND lor.lopa_oid_lote_prem_arti = lpa.oid_lote_prem_arti(+)
           AND lor.prod_oid_prod = al.prod_oid_prod(+)
           AND lor.lopa_oid_lote_prem_arti = al.lopa_oid_lote_prem_arti(+)
           AND psc.oid_soli_cabe = rso.soca_oid_soli_cabe
           AND opr.oid_oper_recl = rso.opre_oid_oper_recl
           AND lor.tspa_oid_tipo_soli_pais = rso.tspa_oid_tipo_soli_pais(+)
           AND psp.soca_oid_soli_cabe = psc.oid_soli_cabe
           AND psc.soca_oid_soli_cabe = psc1.oid_soli_cabe(+)
           AND lor.prod_oid_prod = psp.prod_oid_prod
           
           AND decode(mf.ofde_oid_deta_ofer, null, decode(psp.ofde_oid_deta_ofer,null,1,psp.ofde_oid_deta_ofer), mf.ofde_oid_deta_ofer) =
       		   decode(psp.ofde_oid_deta_ofer, null, decode(mf.ofde_oid_deta_ofer,null,1,mf.ofde_oid_deta_ofer), psp.ofde_oid_deta_ofer)
          and abs(lor.NUM_UNID_RECL) = abs(PSP.NUM_UNID_DEMA)             
        UNION
        SELECT pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               top.oid_tipo_oper,
                                               'REC_TIPOS_OPERA'
                                              ) operacion,
               tmv.cod_tipo_movi,
               pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               tmv.oid_tipo_movi,
                                               'REC_TIPO_MOVIM'
                                              ) movimiento,
               NVL (od.val_codi_vent, al.cod_vent_fict) codigo_venta,
               pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               pro.oid_prod,
                                               'MAE_PRODU'
                                              ) descripcion_producto,
                    lor.num_unid_recl as unidades_reclamadas,
                    0 as unidades_atendidas,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (od.imp_prec_cata, '0'),
                       lor.val_prec
                      ) precio,
                       lor.val_prec_cont as  precio_contable,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (lor.val_prec, ''),
                       0
                      ) precio_factura,
               DECODE (tmv.oid_tipo_movi,
                       1, NVL (  ABS (lor.num_unid_recl)
                               * lor.val_prec,
                               ''
                              ),
                       0
                      ) importe_cargo_reclamado,
               0 as importe_cargo_realizado,
               lor.imp_abon importeabono,
               pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#,
                                               md.oid_moti_devo,
                                               'REC_MOTIV_DEVOL'
                                              ) motivo,
               cpg.num_conc num_concurso, pn.num_nive num_nivel,
               lpa.num_prem num_premio,
               lor.oid_line_oper_recl,
               NULL VAL_PROC,
               NULL VAL_DOCU,
               NULL VAL_FECH,
               NULL OID_PEDI               
          FROM rec_opera_recla opr,
               rec_tipos_opera top,
               rec_opera op,
               rec_linea_opera_recla lor,
               rec_tipo_movim tmv,
               ped_solic_cabec sc,
               pre_matri_factu mf,
               pre_ofert_detal od,
               mae_produ pro,
               rec_motiv_devol md,
               inc_concu_param_gener cpg,
               inc_param_nivel_premi pn,
               inc_artic_lote al,
               inc_lote_premi_artic lpa
         WHERE opr.tiop_oid_tipo_oper = top.oid_tipo_oper
           AND opr.esop_oid_esta_oper in (1,9)
           AND top.rope_oid_oper = op.oid_oper
           AND opr.oid_oper_recl = lor.opre_oid_oper_recl(+)
           AND opr.soca_oid_soli_cabe = sc.oid_soli_cabe
           AND lor.timo_oid_tipo_movi = tmv.oid_tipo_movi(+)
           AND lor.mafa_oid_matr_fact = mf.oid_matr_fact(+)
           AND mf.ofde_oid_deta_ofer = od.oid_deta_ofer(+)
           AND lor.prod_oid_prod = pro.oid_prod(+)
           AND lor.modv_oid_moti_devo = md.oid_moti_devo(+)
           AND opr.care_oid_cabe_recl = #oidCabecera#
           AND lor.copa_oid_para_gral = cpg.oid_para_gral(+)
           AND lor.panp_oid_para_nive_prem = pn.oid_para_nive_prem(+)
           AND lor.lopa_oid_lote_prem_arti = lpa.oid_lote_prem_arti(+)
           AND lor.prod_oid_prod = al.prod_oid_prod(+)
           AND lor.lopa_oid_lote_prem_arti = al.lopa_oid_lote_prem_arti(+)
           UNION
           SELECT pq_apl_aux.valor_gen_i18n_sicc(#oidIdioma#,
                                                top.oid_tipo_oper,
                                                'REC_TIPOS_OPERA') operacion,
                 tmv.cod_tipo_movi,
                 pq_apl_aux.valor_gen_i18n_sicc(#oidIdioma#,
                                                tmv.oid_tipo_movi,
                                                'REC_TIPO_MOVIM') movimiento,
                 NVL(od.val_codi_vent, al.cod_vent_fict) codigo_venta,
                 pq_apl_aux.valor_gen_i18n_sicc(#oidIdioma#, pro.oid_prod, 'MAE_PRODU') descripcion_producto,
                 lor.num_unid_recl as unidades_reclamadas,
                 0 as unidades_atendidas,
                 DECODE(tmv.oid_tipo_movi,
                        1,
                        NVL(od.imp_prec_cata, '0'),
                        lor.val_prec) precio,
                 lor.val_prec_cont as precio_contable,
                 DECODE(tmv.oid_tipo_movi, 1, NVL(lor.val_prec, ''), 0) precio_factura,
                 DECODE(tmv.oid_tipo_movi,
                        1,
                        NVL(ABS(lor.num_unid_recl) * lor.val_prec, ''),
                        0) importe_cargo_reclamado,
                 0 as importe_cargo_realizado,
                 lor.imp_abon importeabono,
                 pq_apl_aux.valor_gen_i18n_sicc(#oidIdioma#,
                                                md.oid_moti_devo,
                                                'REC_MOTIV_DEVOL') motivo,
                 cpg.num_conc num_concurso,
                 pn.num_nive num_nivel,
                 lpa.num_prem num_premio,
                 lor.oid_line_oper_recl,
                 'R' VAL_PROC,
                 NULL VAL_DOCU,
                 NULL VAL_FECH,
                 NULL OID_PED
            FROM rec_opera_recla       opr,
                 rec_tipos_opera       top,
                 rec_opera             op,
                 rec_linea_opera_recla lor,
                 rec_tipo_movim        tmv,
                 rec_solic_opera        rso,
                 ped_solic_cabec       sc,
                 pre_matri_factu       mf,
                 pre_ofert_detal       od,
                 mae_produ             pro,
                 rec_motiv_devol       md,
                 inc_concu_param_gener cpg,
                 inc_param_nivel_premi pn,
                 inc_artic_lote        al,
                 inc_lote_premi_artic  lpa
          WHERE opr.tiop_oid_tipo_oper = top.oid_tipo_oper
             AND opr.esop_oid_esta_oper in (4, 6)
             AND top.rope_oid_oper = op.oid_oper
             AND opr.oid_oper_recl = lor.opre_oid_oper_recl(+)
             AND opr.soca_oid_soli_cabe = sc.oid_soli_cabe
             and OPR.OID_OPER_RECL = RSO.OPRE_OID_OPER_RECL(+)
             and RSO.OPRE_OID_OPER_RECL is null
             AND lor.timo_oid_tipo_movi = tmv.oid_tipo_movi(+)
             AND lor.mafa_oid_matr_fact = mf.oid_matr_fact(+)
             AND mf.ofde_oid_deta_ofer = od.oid_deta_ofer(+)
             AND lor.prod_oid_prod = pro.oid_prod(+)
             AND lor.modv_oid_moti_devo = md.oid_moti_devo(+)
             AND opr.care_oid_cabe_recl = #oidCabecera#
             AND lor.copa_oid_para_gral = cpg.oid_para_gral(+)
             AND lor.panp_oid_para_nive_prem = pn.oid_para_nive_prem(+)
             AND lor.lopa_oid_lote_prem_arti = lpa.oid_lote_prem_arti(+)
             AND lor.prod_oid_prod = al.prod_oid_prod(+)
             AND lor.lopa_oid_lote_prem_arti = al.lopa_oid_lote_prem_arti(+)
	</select> 	 	

	<!-- OBTIENE EL DETALLE DEL RECLAMO -->
    <select id="getBoletasRecojo" parameterClass="java.util.Map" resultMap="baseBoletasRecojoResult">
           SELECT *
            FROM
            (
            SELECT  CB.val_nume_bore,
                    DECODE(L.COPA_OID_PARA_GRAL,
                              NULL,
                              INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_MFACT(L.TOFE_OID_TIPO_OFER,
                                                                         L.MAFA_OID_MATR_FACT,
                                                                         l.prod_oid_prod),
                              INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_FICTI(L.LOPA_OID_LOTE_PREM_ARTI,
                                                                         L.PANP_OID_PARA_NIVE_PREM,
                                                                         L.COPA_OID_PARA_GRAL,
                                                                         l.prod_oid_prod)) CUV,
                    INT_PKG_RECLA.GEN_FN_DESC_PROD(l.prod_oid_prod) descripcion_producto,
                    (select num_recl from rec_cabec_recla where oid_cabe_recl = L.CARE_OID_CABE_RECL) nro_cdr, 
                    (select val_nume_soli from ped_solic_cabec where oid_soli_cabe = l.SOCA_OID_SOLI_CABE) nro_despacho,
                    (select a.COD_PERI 
                     from ped_solic_cabec p,
                          seg_perio_corpo a,
                          cra_perio b 
                     where oid_soli_cabe = l.SOCA_OID_SOLI_CABE 
                     and p.perd_oid_peri = b.oid_peri 
                     and b.peri_oid_peri = a.oid_peri
                     ) periodo_referencia ,
                     des_oper tipo_cdr,
                    INT_PKG_RECLA.GEN_FN_CODSAP_PROD(L.prod_oid_prod) codigo_sap,
                    l.NUM_UNID_RECL reclamadas, 
                    DECODE(L.IND_DISC,1,0,l.NUM_UNID_RECO) recogidas,
                    l.NUM_UNID_ELIM eliminadas,
                    val_prec precio_facturado,
                    decode(num_unid_elim,0,decode(num_unid_recl,0,0,(num_unid_recl-DECODE(L.IND_DISC,1,0,l.NUM_UNID_RECO)+l.NUM_UNID_ELIM)*val_prec),num_unid_elim*val_prec) cargo,
                    decode(num_unid_recl,0,DECODE(L.IND_DISC,1,0,l.NUM_UNID_RECO)*val_prec_disc,0) abono,
                    TO_CHAR(CB.FEC_RECO, 'DD/MM/YYYY') FEC_RECO, 
                    TO_CHAR(CB.FEC_INGR, 'DD/MM/YYYY') FEC_INGR,    
                    (SELECT DES_ESTA_BORE											
                     FROM INT_REC_ESTAD_BOREC												
                     WHERE OID_ESTA_BORE = CB.ESBO_OID_ESTA_BOR1											
                     AND COD_PAIS = #codigoPais#) ETAPA,
                    (SELECT DES_ESTA_BORE											
                      FROM INT_REC_ESTAD_BOREC												
                     WHERE OID_ESTA_BORE = CB.ESBO_OID_ESTA_BOR2 										
                       AND COD_PAIS = #codigoPais#) ESTADO      
            FROM INT_REC_CABEC_BOREC CB, 
              INT_REC_LINEA_BOREC L             
            WHERE L.CARE_OID_CABE_RECL = #oidCabecera#
              AND CB.COD_CABE_BORE = L.COD_CABE_BORE
            and l.prod_oid_prod is not null 
            and l.REFE_COD_LINE_BORE is null            
            union ALL
            SELECT  CB.val_nume_bore,
                    L.COD_VENT_DISC cuv,
                    INT_PKG_RECLA.GEN_FN_DESC_PROD(l.prod_oid_prod_disc) descripcion_producto,
                    null nro_cdr, 
                    null nro_despacho,
                    L.COD_PERI_DISC periodo_referencia,
                    null tipo_cdr,
                    INT_PKG_RECLA.GEN_FN_CODSAP_PROD(L.prod_oid_prod_disc) codigo_sap,
                    0 reclamadas, 
                    l.NUM_UNID_RECO recogidas,
                    0 eliminadas,
                    val_prec_disc precio_facturado,
                    0 cargo,
                    decode(num_unid_recl,0,0,num_unid_reco*val_prec_disc) abono,
                    TO_CHAR(CB.FEC_RECO, 'DD/MM/YYYY') FEC_RECO, 
                    TO_CHAR(CB.FEC_INGR, 'DD/MM/YYYY') FEC_INGR,    
                    (SELECT DES_ESTA_BORE											
                     FROM INT_REC_ESTAD_BOREC												
                     WHERE OID_ESTA_BORE = CB.ESBO_OID_ESTA_BOR1											
                     AND COD_PAIS = #codigoPais#) ETAPA,
                    (SELECT DES_ESTA_BORE											
                      FROM INT_REC_ESTAD_BOREC												
                     WHERE OID_ESTA_BORE = CB.ESBO_OID_ESTA_BOR2 										
                       AND COD_PAIS = #codigoPais#) ESTADO     
            FROM INT_REC_CABEC_BOREC CB, 
              INT_REC_LINEA_BOREC L
            WHERE L.CARE_OID_CABE_RECL = #oidCabecera#
             AND CB.COD_CABE_BORE = L.COD_CABE_BORE
             and l.prod_oid_prod is not null 
             and l.prod_oid_prod_disc is not null
            ) A
            ORDER BY 3 
    </select> 	 	
    
    <!-- OBTIENE TIPOS DE DOCUMENTO -->
    <select id="getTiposDocumento" parameterClass="java.util.Map" resultMap="baseResult">
  	    SELECT doc.OID_TIPO_DOCU as codigo, 
	           pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma#, doc.OID_TIPO_DOCU, 'MAE_TIPO_DOCUM') as descripcion
  	      FROM MAE_TIPO_DOCUM doc, SEG_PAIS pai
  	     WHERE doc.PAIS_OID_PAIS = pai.OID_PAIS
  	       AND pai.COD_PAIS = #codigoPais#
	    ORDER BY 2
    </select>
        
    <!-- OBTIENE LISTA DE CLIENTES QUE CUMPLAN CON EL FILTRO DE BUSQUEDA -->
    <select id="getClientesByCriteria" parameterClass="java.util.Map" resultMap="baseBusqClienteResult">
		SELECT cod_clie, 
		       val_nom1, 
			   val_nom2, 
			   val_ape1, 
			   val_ape2,
			   TIPO_DOCU, 
			   NUM_DOCU_IDEN,
			   COD_ZONA,
			   ACTIVA
		  FROM  (SELECT ROWNUM, cod_clie, val_nom1, val_nom2, val_ape1, val_ape2, TIPO_DOCU, NUM_DOCU_IDEN, COD_ZONA, ACTIVA
		          FROM (SELECT DISTINCT c.cod_clie, 
		          						c.val_nom1,
		                                c.val_nom2, 
		                                c.val_ape1,
		                                c.val_ape2, 
		                                pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma#, i.TDOC_OID_TIPO_DOCU, 'MAE_TIPO_DOCUM') TIPO_DOCU,
		                                i.NUM_DOCU_IDEN,
		                                zon.COD_ZONA,
		                                decode(da.IND_ACTI,1,'SI','NO') AS ACTIVA
									FROM MAE_CLIEN c, 
										 MAE_CLIEN_DATOS_ADICI da,
										 MAE_CLIEN_IDENT i,
										 SEG_PAIS s,
										 MAE_CLIEN_UNIDA_ADMIN adm,
										 ZON_TERRI_ADMIN ter,
										 ZON_SECCI sec,
										 ZON_ZONA zon,
										 ZON_REGIO reg
									WHERE s.COD_PAIS = #codigoPais#
									  AND c.PAIS_OID_PAIS = s.OID_PAIS
									  AND i.CLIE_OID_CLIE = c.OID_CLIE
									  AND da.CLIE_OID_CLIE(+) = c.oid_clie
									  AND adm.CLIE_OID_CLIE (+) = c.OID_CLIE
									  AND adm.IND_ACTI (+) = 1
									  AND adm.ZTAD_OID_TERR_ADMI = ter.OID_TERR_ADMI (+)
									  AND ter.IND_BORR (+) = 0
									  AND ter.ZSCC_OID_SECC = sec.OID_SECC (+)
									  AND sec.ZZON_OID_ZONA = zon.OID_ZONA (+)
									  AND zon.ZORG_OID_REGI = reg.OID_REGI (+)
									  
									  <isNotEmpty prepend="AND" property="codigoCliente">        
										c.COD_CLIE LIKE #codigoCliente#
									  </isNotEmpty>
									  <isNotEmpty prepend="AND" property="nombre1">        
										UPPER(c.VAL_NOM1) LIKE UPPER(#nombre1#)
									  </isNotEmpty>
									  <isNotEmpty prepend="AND" property="nombre2">        
										UPPER(c.VAL_NOM2) LIKE UPPER(#nombre2#)
									  </isNotEmpty>
									  <isNotEmpty prepend="AND" property="apellido1">        
										UPPER(c.VAL_APE1) LIKE UPPER(#apellido1#)
									  </isNotEmpty>
									  <isNotEmpty prepend="AND" property="apellido2">        
										UPPER(c.VAL_APE2) LIKE UPPER(#apellido2#)
									  </isNotEmpty>  
									  <isNotEmpty prepend="AND" property="tipoDocIdentidad">        
										i.TDOC_OID_TIPO_DOCU = #tipoDocIdentidad#
									  </isNotEmpty>
									  <isNotEmpty prepend="AND" property="numeroDocIdentidad">        
										UPPER(i.NUM_DOCU_IDEN) LIKE UPPER(#numeroDocIdentidad#)
									  </isNotEmpty>
									  
									  <isNotEmpty prepend="AND" property="codigoRegion">        
										reg.COD_REGI = #codigoRegion#
									  </isNotEmpty>

									  <isNotEmpty prepend="AND" property="codigoZona">        
										zon.COD_ZONA = #codigoZona#
									  </isNotEmpty>
									  
						)
				)
	   	<![CDATA[				
		WHERE ROWNUM < 501									         
	    ]]>
    </select>

    <select id="getClientesByCriteriaFOX" parameterClass="java.util.Map" resultMap="baseBusqClienteResult">
		SELECT
		ZDC.COD_CLIE,
		ZDC.VAL_NOM1,
		ZDC.VAL_NOM2,
		ZDC.APE_PATE VAL_APE1,
		ZDC.APE_MATE VAL_APE2,
		'' TIPO_DOCU,
		ZDC.NUM_DOCU NUM_DOCU_IDEN,
		'' COD_ZONA,
		decode(ZDC.IND_ACTI,1,'SI','NO') AS ACTIVA
		FROM ZON_DIREC_CLIEN ZDC
		WHERE ZDC.PAIS_COD_PAIS = #codigoPais#

		  <isNotEmpty prepend="AND" property="codigoCliente">        
			ZDC.COD_CLIE LIKE #codigoCliente#
		  </isNotEmpty>
		  <isNotEmpty prepend="AND" property="nombre1">        
			UPPER(ZDC.VAL_NOM1) LIKE UPPER(#nombre1#)
		  </isNotEmpty>
		  <isNotEmpty prepend="AND" property="nombre2">        
			UPPER(ZDC.VAL_NOM2) LIKE UPPER(#nombre2#)
		  </isNotEmpty>
		  <isNotEmpty prepend="AND" property="apellido1">        
			UPPER(ZDC.APE_PATE) LIKE UPPER(#apellido1#)
		  </isNotEmpty>
		  <isNotEmpty prepend="AND" property="apellido2">        
			UPPER(ZDC.APE_MATE) LIKE UPPER(#apellido2#)
		  </isNotEmpty>  
		  <isNotEmpty prepend="AND" property="numeroDocIdentidad">        
			UPPER(ZDC.NUM_DOCU) LIKE UPPER(#numeroDocIdentidad#)
		  </isNotEmpty>
	
	   	<![CDATA[				
			AND ROWNUM < 501									         
	    ]]>
	
	</select>
	
    <!-- OBTIENE OPCIONES QUE PUEDE CONSULTAR EL USUARIO LOGUEADO -->
    <select id="getOpcionesPermitidas" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT COD_OPCI as CODIGO, DES_OPCI as DESCRIPCION
		FROM
		  (SELECT o.COD_OPCI, o.DES_OPCI, a.NUM_ORDE 
		    FROM HIP_ACCES a, HIP_OPCIO o
		   WHERE a.COD_OPCI = o.COD_OPCI
		     AND o.COD_PAIS = #codigoPais#		   
		     AND a.COD_PAIS = #codigoPais#
		     AND o.NIV_ACCE = '1'
		     AND o.IND_REST_USUA = '0'
		  UNION  
		  SELECT o.COD_OPCI, o.DES_OPCI, a.NUM_ORDE 
		    FROM HIP_ACCES a, HIP_OPCIO o, HIP_ACCES_USUAR u
		   WHERE a.COD_OPCI = o.COD_OPCI
		     AND o.COD_PAIS = #codigoPais#
		     AND a.COD_PAIS = #codigoPais#
		     AND o.NIV_ACCE = '1'
		     AND o.IND_REST_USUA = '1'  
		     AND a.COD_PAIS = u.COD_PAIS
		     AND a.COD_OPCI = u.COD_OPCI
		     AND u.COD_USUA = #codigoUsuario#
		  )  
		ORDER BY DES_OPCI
    </select>

    <!-- OBTIENE OPCIONES QUE PUEDE CONSULTAR EL USUARIO LOGUEADO -->
    <select id="validarOpcionSecundaria" parameterClass="java.util.Map" resultClass="string">
        SELECT COUNT(*)
          FROM (                      
				  SELECT o.COD_OPCI
				    FROM HIP_ACCES a, HIP_OPCIO o
				   WHERE a.COD_OPCI = o.COD_OPCI
				     AND o.COD_PAIS = #codigoPais#		   
				     AND a.COD_PAIS = #codigoPais#
				     AND o.NIV_ACCE = '2'
				     AND o.IND_REST_USUA = '0'
			    UNION  
				  SELECT o.COD_OPCI
				    FROM HIP_ACCES a, HIP_OPCIO o, HIP_ACCES_USUAR u
				   WHERE a.COD_OPCI = o.COD_OPCI
				     AND o.COD_PAIS = #codigoPais#
				     AND a.COD_PAIS = #codigoPais#
				     AND o.NIV_ACCE = '2'
				     AND o.IND_REST_USUA = '1'  
				     AND a.COD_PAIS = u.COD_PAIS
				     AND a.COD_OPCI = u.COD_OPCI
				     AND u.COD_USUA = #codigoUsuario#
				)
		WHERE COD_OPCI = #codigoOpcion#								     
    </select>
  
    <!-- OBTIENE LOS CONCURSOS RELACIONADOS A LA CONSULTORA -->
    <select id="getConcursos" parameterClass="java.util.Map" resultMap="baseConcursoResult">
		SELECT OID_PARA_GRAL, 
				NUM_CONC, 
				VAL_NOMB,
               (CASE WHEN ESTADO_CONCURSO = 'CERRADO' 
                    THEN ( 
                   CASE WHEN (SELECT DISTINCT cga.clie_oid_clie
                                     FROM inc_candi_ganad cga                                        
                                    WHERE cga.copa_oid_para_gral = OID_PARA_GRAL                                          
                                      AND cga.clie_oid_clie      = #oidCliente#
                                  ) IS NULL
                                THEN  'NO PARTICIPÓ' 
                                  ELSE 
                                      CASE WHEN NVL((SELECT MAX (pnp_na.num_nive)                            
                                                                 FROM inc_ganad gan_na
                                                                     ,inc_param_nivel_premi pnp_na
                                                                     ,inc_param_gener_premi pgp_na                           
                                                                WHERE gan_na.panp_oid_para_nive_prem = pnp_na.oid_para_nive_prem                             
                                                                  AND pnp_na.pagp_oid_para_gene_prem =  pgp_na.oid_para_gene_prem                             
                                                                  AND pgp_na.copa_oid_para_gral      = OID_PARA_GRAL                             
                                                                  AND gan_na.clie_oid_clie           = #oidCliente#                        
                                                             GROUP BY pgp_na.copa_oid_para_gral, gan_na.clie_oid_clie
                                                             
										<![CDATA[		                                                             
                                                      ),0) <> 0
                                        ]]>		              
                                                      
                                                THEN 'GANADORA' 
                                                ELSE 'NO GANADORA' END 
                                  END
                      )
                  ELSE 
                          
                           CASE WHEN (SELECT DISTINCT cga.clie_oid_clie
                                             FROM inc_candi_ganad cga                                        
                                            WHERE cga.copa_oid_para_gral = OID_PARA_GRAL                                          
                                              AND cga.clie_oid_clie      = #oidCliente#
                                     )IS NULL
                                     AND  (SELECT DISTINCT rete.clie_oid_clie FROM inc_pedid_concu_recom ped, inc_clien_recte rete 
                                           WHERE clre_oid_clie_redo IS NULL
                                                AND clr3_oid_clie_rete = oid_clie_rete 
                                                AND rete.copa_oid_para_gral = oid_para_gral and rete.clie_oid_clie = #oidCliente#
                                           UNION
                                             SELECT DISTINCT rete.clie_oid_clie FROM inc_clien_recte rete
                                             WHERE rete.copa_oid_para_gral = oid_para_gral 
                                               AND rete.clie_oid_clie = #oidCliente# 
                                               AND rete.ind_part=1     
                                          ) IS NULL
                                     
                                THEN  
                                   'NO PARTICIPA'
                                ELSE 
                                      CASE WHEN NVL((SELECT MAX (pnp_na.num_nive)                            
                                                                 FROM inc_ganad gan_na
                                                                     ,inc_param_nivel_premi pnp_na
                                                                     ,inc_param_gener_premi pgp_na                           
                                                                WHERE gan_na.panp_oid_para_nive_prem = pnp_na.oid_para_nive_prem                             
                                                                  AND pnp_na.pagp_oid_para_gene_prem =  pgp_na.oid_para_gene_prem                             
                                                                  AND pgp_na.copa_oid_para_gral      = OID_PARA_GRAL                             
                                                                  AND gan_na.clie_oid_clie           = #oidCliente#                        
                                                             GROUP BY pgp_na.copa_oid_para_gral, gan_na.clie_oid_clie
                                                             
										<![CDATA[                                                             
                                                     ),0) <> 0
                                        ]]>                                                     
                                                THEN 'GANADORA' 
                                                ELSE  
                                                
                                                	CASE WHEN (SELECT MAX(cga.copa_oid_migr_dest)
											             FROM inc_candi_ganad cga                                       
											            WHERE cga.copa_oid_para_gral = OID_PARA_GRAL                                         
											             AND cga.clie_oid_clie = #oidCliente#   
											           )IS  NULL
												       THEN 'EN COMPETENCIA'
												       ELSE 'MIGRADA'      
													END
                                                
                                                END 

                                END              

               END) SITUACION,
		       COD_PERI_INI, 
		       COD_PERI_FIN, 
		       DES_MARC, 
		       ESTADO_CONCURSO, 
		       CAMP_INCICIO_DESP, 
		       CAMP_FIN_DESP, 
		       GEN_FN_CALCU_PERIO(CAMP_FIN_DESP, VAL_NUME_PERI_PARA_RECL) CAMP_MAXI_RECL,
        	   campana_descalificacion,
               fecha_descalificacion,
               motivo_descalificacion
		FROM
		(    
			SELECT DISTINCT cpg.OID_PARA_GRAL,
				   			cpg.NUM_CONC, 
				   			cpg.VAL_NOMB,
			                (SELECT COD_PERI
			                   FROM SEG_PERIO_CORPO corini
			                  WHERE perini.PERI_OID_PERI = corini.OID_PERI
			                    AND perini.PAIS_OID_PAIS = cpg.PAIS_OID_PAIS) cod_peri_ini,
			                (SELECT COD_PERI
			                   FROM SEG_PERIO_CORPO corfin
			                  WHERE perfin.PERI_OID_PERI = corfin.OID_PERI
			                    AND perfin.PAIS_OID_PAIS = cpg.PAIS_OID_PAIS) cod_peri_fin,
			              (SELECT DES_MARC
			                 FROM SEG_MARCA mar
			                WHERE cpg.MARC_OID_MARC = mar.OID_MARC) des_marc,		                    
			                CASE WHEN cpg.IND_ACTI=1 THEN 'ACTIVO' ELSE 'CERRADO' END estado_concurso,   
			                CASE
			                   WHEN prem.PERD_OID_PERI IS NOT NULL
			                      THEN (SELECT pcor.COD_PERI
			                              FROM SEG_PERIO_CORPO pcor,
			                                   CRA_PERIO per
			                             WHERE pcor.OID_PERI = per.PERI_OID_PERI
			                               AND per.OID_PERI = prem.PERD_OID_PERI)
			                   ELSE (CASE
			                            WHEN (    cpg.BCAL_OID_BASE_CALC = 4
			                                  AND cons.IND_PREM_CAMP_EFEC = 1
			                                 )
			                               THEN (SELECT pcor.COD_PERI
			                                       FROM SEG_PERIO_CORPO pcor,
			                                            CRA_PERIO per
			                                      WHERE pcor.OID_PERI = per.PERI_OID_PERI
			                                        AND per.OID_PERI = cons.PERD_OID_PERI_INIC_EVAL)
			                            ELSE ''
			                         END
			                        )
			                END camp_incicio_desp,
			                CASE
			                   WHEN prem.PERD_OID_PERI IS NOT NULL
			                      THEN (SELECT pcor.COD_PERI
			                              FROM SEG_PERIO_CORPO pcor,
			                                   CRA_PERIO per
			                             WHERE pcor.OID_PERI = per.PERI_OID_PERI
			                               AND per.OID_PERI = prem.PERD_OID_PERI)
			                   ELSE (CASE
			                            WHEN (    cpg.BCAL_OID_BASE_CALC = 4
			                                  AND cons.IND_PREM_CAMP_EFEC = 0
			                                 )
			                               THEN ''
			                            ELSE ''
			                         END
			                        )
			                END camp_fin_desp,
	                    rec_prem.VAL_NUME_PERI_PARA_RECL,
                        scp.cod_peri   campana_descalificacion,
                        scp.fec_desc   fecha_descalificacion,
                        scp.moti_desc   motivo_descalificacion
         FROM (
         
SELECT DISTINCT COPA_OID_PARA_GRAL, 
                    (select sp.cod_peri from inc_desca des, cra_perio cp, seg_perio_corpo sp
                            where des.perd_oid_peri =cp.oid_peri and cp.peri_oid_peri = sp.oid_peri and 
                                    des.copa_oid_para_gral = scp.copa_oid_para_gral and des.clie_oid_clie = scp.clie_oid_clie) cod_peri,
                   (select des.fec_desc from inc_desca des where des.copa_oid_para_gral = scp.copa_oid_para_gral 
                                     and des.clie_oid_clie = scp.clie_oid_clie) fec_desc,
                    (select des.fec_desc from inc_desca des, (select g.val_i18n, g.val_oid from gen_i18n_sicc_comun g 
                                where g.attr_enti = 'INC_CAUSA_DESCA') cau where 
                                    des.copa_oid_para_gral = scp.copa_oid_para_gral and des.clie_oid_clie = scp.clie_oid_clie
                                        and des.cade_oid_caus_desc = cau.val_oid) moti_desc
				         FROM INC_SOLIC_CONCU_PUNTA scp
				        WHERE scp.CLIE_OID_CLIE = #oidCliente#
				          AND scp.CLIE_OID_CLIE_GERE IS NULL
                    UNION
                    SELECT DISTINCT COPA_OID_PARA_GRAL, 
                    (select sp.cod_peri from inc_desca des, cra_perio cp, seg_perio_corpo sp
                            where des.perd_oid_peri =cp.oid_peri and cp.peri_oid_peri = sp.oid_peri and 
                                    des.copa_oid_para_gral = scp.copa_oid_para_gral and des.clie_oid_clie = scp.clie_oid_clie) cod_peri,
                   (select des.fec_desc from inc_desca des where des.copa_oid_para_gral = scp.copa_oid_para_gral 
                                     and des.clie_oid_clie = scp.clie_oid_clie) fec_desc,
                    (select des.fec_desc from inc_desca des, 
					   (select g.val_i18n, g.val_oid from gen_i18n_sicc_comun g where g.attr_enti = 'INC_CAUSA_DESCA') cau 
                                where 
                                    des.copa_oid_para_gral = scp.copa_oid_para_gral and des.clie_oid_clie = scp.clie_oid_clie
                                        and des.cade_oid_caus_desc = cau.val_oid) moti_desc
                            FROM INC_CANDI_GANAD scp  
                               WHERE  scp.CLIE_OID_CLIe = #oidCliente#       
                     ) scp,
				      INC_CONCU_PARAM_GENER cpg,
				      CRA_PERIO perini,
				      CRA_PERIO perfin,
				      INC_PLANT_CONCU pla,
				      INC_VERSI_CONCU veco,
				      INC_PARAM_GENER_PREMI prem,
				      INC_CONCU_PARAM_CONSU cons,
			          INC_RECLA_PREMI rec_prem			      
			    WHERE  scp.COPA_OID_PARA_GRAL = cpg.OID_PARA_GRAL
			       AND cpg.PERD_OID_PERI_DESD = perini.OID_PERI
			       AND cpg.PERD_OID_PERI_HAST = perfin.OID_PERI
			       AND cpg.PLC2_OID_PLAN_CONC = pla.OID_PLAN_CONC(+)
			       AND veco.COPA_OID_PARA_GRAL(+) = cpg.OID_PARA_GRAL
	
			   	   	<![CDATA[		               		       
			       AND (veco.VICO_OID_VIGE_CONC(+) <> 4 AND veco.VICO_OID_VIGE_CONC(+) <> 5)
				    ]]>		   		               		               		       
			       
			       AND cpg.OID_PARA_GRAL = prem.COPA_OID_PARA_GRAL
			       AND cpg.OID_PARA_GRAL = cons.COPA_OID_PARA_GRAL(+)
			       AND rec_prem.PAIS_OID_PAIS = perini.PAIS_OID_PAIS
			       AND rec_prem.MARC_OID_MARC = perini.MARC_OID_MARC
			       AND rec_prem.CANA_OID_CANA = perini.CANA_OID_CANA
			)		       
	     ORDER BY estado_concurso DESC, 
		          num_conc DESC
    </select>
        
    <!-- OBTIENE EL DETALLE DE LOS PUNTAJES RELACIONADOS A UN CONCURSO DE UNA DETERMINADA CONSULTORA -->
    <select id="getPuntajeDetalleConcurso" parameterClass="java.util.Map" resultMap="basePuntajeDetalleResult">
      <![CDATA[		               		               		          
		SELECT   COD_PERI,
		         FEC_MOVI,
		         TIPO_MOVIMIENTO,
		         NUM_PUNT,
		         NUM_PUNT_BONI,
                                        NUM_PUNT_EXIG, 
		         VAL_DESC,
		         FEC_ULTI_ACTU,
		         DES_MOTI
		    FROM (SELECT spc.cod_peri cod_peri,
		                 TO_CHAR (icc.fec_movi,
		                          'DD/MM/YYYY'
		                         ) fec_movi,
		                 (SELECT idio.val_i18n
		                    FROM v_gen_i18n_sicc idio
		                   WHERE idio.attr_enti = 'INC_TIPO_MOVIM'
		                     AND idio.idio_oid_idio = #oidIdioma#
		                     AND idio.val_oid = icc.tmov_oid_tipo_movi) tipo_movimiento,
                                                icc.num_punt, icc.num_punt_boni, icc.num_punt_exig, icc.val_desc,
		                 TO_CHAR
		                     (icc.fec_ulti_actu,
		                      'DD/MM/YYYY HH24:MI:SS'
		                     ) fec_ulti_actu,
		                 icc.copa_oid_para_gral oid_concurso,
		                 icc.clie_oid_clie clie_oid_clie,
		                 icc.fec_movi fec_moviord,
		                 icc.fec_ulti_actu fechaultiactuord,
		                 icc.des_moti
		            FROM inc_cuent_corri_punto icc,
		                 cra_perio crp,
		                 seg_perio_corpo spc
		           WHERE icc.clie_oid_clie = #oidCliente#
		             AND icc.copa_oid_para_gral = #oidConcurso#
		             AND crp.oid_peri = icc.perd_oid_peri
		             AND spc.oid_peri = crp.peri_oid_peri)
		   WHERE 1 = 1
		     AND oid_concurso = #oidConcurso#
		     AND clie_oid_clie = #oidCliente#
		     AND EXISTS (
		            SELECT 1
		              FROM inc_concu_param_gener concurso
		             WHERE concurso.oid_para_gral = oid_concurso
		               AND concurso.diri_oid_diri = 1)
		ORDER BY cod_peri DESC,
		         fec_moviord DESC,
		         fechaultiactuord DESC
	    ]]>		   		  		  		
    </select>        

    <!-- OBTIENE EL RESUMEN DE LOS PUNTAJES RELACIONADOS A UN CONCURSO DE UNA DETERMINADA CONSULTORA -->
    <select id="getPuntajeResumenConcurso" parameterClass="java.util.Map" resultMap="basePuntajeResumenResult">
      <![CDATA[		               		               		      
		SELECT NVL ((SELECT   MAX (pnp_na.num_nive)
		                 FROM inc_ganad gan_na,
		                      inc_param_nivel_premi pnp_na,
		                      inc_param_gener_premi pgp_na
		                WHERE gan_na.panp_oid_para_nive_prem =
		                                                     pnp_na.oid_para_nive_prem
		                  AND pnp_na.pagp_oid_para_gene_prem =
		                                                     pgp_na.oid_para_gene_prem
		                  AND pgp_na.copa_oid_para_gral = #oidConcurso#
		                  AND gan_na.clie_oid_clie = #oidCliente#
		             GROUP BY pgp_na.copa_oid_para_gral, gan_na.clie_oid_clie),
		            0
		           ) nivel_alcanzado,
		       DECODE (NVL ((SELECT   MAX (pnp_na.num_nive)
		                         FROM inc_ganad gan_na,
		                              inc_param_nivel_premi pnp_na,
		                              inc_param_gener_premi pgp_na
		                        WHERE gan_na.panp_oid_para_nive_prem =
		                                                     pnp_na.oid_para_nive_prem
		                          AND pnp_na.pagp_oid_para_gene_prem =
		                                                     pgp_na.oid_para_gene_prem
		                          AND pgp_na.copa_oid_para_gral = #oidConcurso#
		                          AND gan_na.clie_oid_clie = #oidCliente#
		                     GROUP BY pgp_na.copa_oid_para_gral, gan_na.clie_oid_clie),
		                    0
		                   ),
		               0, DECODE ((SELECT DISTINCT cga.clie_oid_clie
		                                      FROM inc_candi_ganad cga
		                                     WHERE cga.copa_oid_para_gral = #oidConcurso#
		                                       AND cga.clie_oid_clie = #oidCliente#),
		                          NULL, 'NO GANADORA',
		                          'EN COMPETENCIA'
		                         ),
		               'GANADORA'
		              ) situacion,
		       CASE
		          WHEN (    ((SELECT con.ind_dupl_cyzo
		                        FROM inc_concu_param_gener con
		                       WHERE con.oid_para_gral = #oidConcurso#) = 1)
		                AND (EXISTS (
		                        SELECT 1
		                          FROM mae_clien_vincu vin
		                         WHERE vin.clie_oid_clie_vnte = #oidCliente#
		                           AND vin.tivc_oid_tipo_vinc = 1
		                           AND (vin.fec_hast IS NULL OR vin.fec_hast > SYSDATE
		                               ))
		                    )
		               )
		             THEN (SELECT cli.cod_clie
		                     FROM mae_clien cli
		                    WHERE cli.oid_clie =
		                             (SELECT vin.clie_oid_clie_vndo
		                                FROM mae_clien_vincu vin
		                               WHERE vin.clie_oid_clie_vnte = #oidCliente#
		                                 AND vin.tivc_oid_tipo_vinc = 1
		                                 AND (   vin.fec_hast IS NULL
		                                      OR vin.fec_hast > SYSDATE
		                                     )))
		          ELSE '-'
		       END cod_duplacyz,
		       CASE
		          WHEN (    ((SELECT con.ind_dupl_cyzo
		                        FROM inc_concu_param_gener con
		                       WHERE con.oid_para_gral = #oidConcurso#) = 1)
		                AND (EXISTS (
		                        SELECT 1
		                          FROM mae_clien_vincu vin
		                         WHERE vin.clie_oid_clie_vnte = #oidCliente#
		                           AND vin.tivc_oid_tipo_vinc = 1
		                           AND (vin.fec_hast IS NULL OR vin.fec_hast > SYSDATE
		                               ))
		                    )
		               )
		             THEN (SELECT    cli.val_nom1
		                          || ' '
		                          || cli.val_nom2
		                          || ' '
		                          || cli.val_ape1
		                          || ' '
		                          || cli.val_ape2
		                     FROM mae_clien cli
		                    WHERE cli.oid_clie =
		                             (SELECT vin.clie_oid_clie_vndo
		                                FROM mae_clien_vincu vin
		                               WHERE vin.clie_oid_clie_vnte = #oidCliente#
		                                 AND vin.tivc_oid_tipo_vinc = 1
		                                 AND (   vin.fec_hast IS NULL
		                                      OR vin.fec_hast > SYSDATE
		                                     )))
		          ELSE '-'
		       END nombre_duplacyz,
		       NVL ((SELECT imp_monto_venta
		               FROM inc_metas_tipo_venta mtv
		              WHERE mtv.clie_oid_clie = #oidCliente#
		                    AND mtv.copa_oid_para_gral = #oidConcurso#),
		            0
		           ) venta_base,
		       NVL
		          ((SELECT SUM (icc.num_punt) total_puntaje_obtenido
		              FROM inc_cuent_corri_punto icc
		             WHERE icc.clie_oid_clie = #oidCliente#
		               AND icc.copa_oid_para_gral = #oidConcurso#
		               AND icc.tmov_oid_tipo_movi = 1),
		           0
		          ) total_puntaje_obtenido,
		       NVL
		          ((SELECT SUM (icc.num_punt) total_puntaje_perdido
		              FROM inc_cuent_corri_punto icc
		             WHERE icc.clie_oid_clie = #oidCliente#
		               AND icc.copa_oid_para_gral = #oidConcurso#
		               AND icc.tmov_oid_tipo_movi = 2
		               AND UPPER (icc.val_desc) NOT LIKE UPPER ('%Entrega de Premio%')),
		           0
		          ) total_puntaje_perdido,
		       NVL
		          ((SELECT SUM (icc.num_punt) total_puntaje_utilizado
		              FROM inc_cuent_corri_punto icc
		             WHERE icc.clie_oid_clie = #oidCliente#
		               AND icc.copa_oid_para_gral = #oidConcurso#
		               AND UPPER (icc.val_desc) LIKE UPPER ('%Entrega de Premio%')),
		           0
		          ) total_puntaje_utilizado,
		       (SELECT SUM (icc.num_punt) saldo_puntaje
		          FROM inc_cuent_corri_punto icc
		         WHERE icc.clie_oid_clie = #oidCliente#
		           AND icc.copa_oid_para_gral = #oidConcurso#) saldo_puntaje,
		           
		    NVL     
		        ((SELECT sum((CASE WHEN val_desc NOT LIKE '%Entrega de Premio%' AND val_desc NOT LIKE '%puntos por Cupones%' THEN num_punt ELSE 0 END)) Ptos_Total
					FROM               
    				inc_cuent_corri_punto cc,
    				inc_concu_param_gener cpg,
				    inc_param_gener_premi gen,
				    inc_concu_param_consu cons                    
				    WHERE cpg.oid_para_gral = cc.copa_oid_para_gral
				    AND cons.copa_oid_para_gral = cpg.oid_para_gral
				    AND gen.copa_oid_para_gral = cpg.oid_para_gral                                
				    AND cc.clie_oid_clie = #oidCliente#
				    AND cpg.oid_para_gral = #oidConcurso#),0) Ptos_Total,
			 NVL
				((SELECT sum((CASE WHEN val_desc LIKE '%Entrega de Premio%' OR val_desc  LIKE '%puntos por Cupones%' THEN num_punt ELSE 0 END)) Ptos_Utiliz
				FROM               
				    inc_cuent_corri_punto cc,
				    inc_concu_param_gener cpg,
				    inc_param_gener_premi gen,
				    inc_concu_param_consu cons                    
				    WHERE cpg.oid_para_gral = cc.copa_oid_para_gral
				    AND cons.copa_oid_para_gral = cpg.oid_para_gral
				    AND gen.copa_oid_para_gral = cpg.oid_para_gral                                
				    AND cc.clie_oid_clie = #oidCliente#
				    AND cpg.oid_para_gral = #oidConcurso#),0) Ptos_Utiliz,
			 NVL		
				((SELECT sum((CASE WHEN  tprm_oid_tipo_pion<>1 THEN 0 ELSE  num_punt END)) Saldo
				FROM               
				    inc_cuent_corri_punto cc,
				    inc_concu_param_gener cpg,
				    inc_param_gener_premi gen,
				    inc_concu_param_consu cons                    
				    WHERE cpg.oid_para_gral = cc.copa_oid_para_gral
				    AND cons.copa_oid_para_gral = cpg.oid_para_gral
				    AND gen.copa_oid_para_gral = cpg.oid_para_gral                                
				    AND cc.clie_oid_clie = #oidCliente#
				    AND cpg.oid_para_gral = #oidConcurso#),0) Saldo,
			   (SELECT NVL(SUM(DECODE(pnp.NUM_CANT_FIJA_PUNT, null, pnp.NUM_CANT_INIC_PUNT, pnp.NUM_CANT_FIJA_PUNT)),0) Reserva
			      FROM INC_PREMI_ELEGI PRE, INC_PARAM_NIVEL_PREMI pnp
			     WHERE COPA_OID_PARA_GRAL = #oidConcurso#
			       AND PRE.CLIE_OID_CLIE =  #oidCliente#
			       AND PRE.IND_PEND = 1
			       AND pnp.OID_PARA_NIVE_PREM = PRE.PANP_OID_PARA_NIVE_PREM) Reserva	    
			 FROM DUAL
	    ]]>		   		  		  		
    </select>            

    <!-- OBTIENE EL CODIGO Y NOMBRE DE LA DUPLA ASOCIADA -->
    <select id="getDuplaAsociada" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT m.COD_CLIE as CODIGO, m.VAL_NOM1 || ' ' || m.VAL_NOM2 || ' ' || m.VAL_APE1 || ' ' || m.VAL_APE2 as DESCRIPCION
		FROM MAE_CLIEN_VINCU v, MAE_CLIEN m
		WHERE v.CLIE_OID_CLIE_VNDO = #oidCliente#
		  AND v.TIVC_OID_TIPO_VINC = '1'
      <![CDATA[		               		               		  
		  AND ((v.FEC_HAST IS NULL) or (v.FEC_HAST > sysdate))
	    ]]>		   		  
		  AND v.CLIE_OID_CLIE_VNTE = m.OID_CLIE
		  AND EXISTS (SELECT * 
		              FROM INC_CONCU_PARAM_GENER 
		              WHERE OID_PARA_GRAL = #oidConcurso#
		                AND IND_DUPL_CYZO = '1'
		  )
    </select>            

    <!-- OBTIENE EL CODIGO Y NOMBRE DE LA DUPLA ASOCIADA -->
    <select id="getPremiosByNivel" parameterClass="java.util.Map" resultMap="basePremioResult">
		SELECT   *
		    FROM (SELECT pnp.oid_para_nive_prem, pnp.num_nive,
		                 DECODE (pgp.tprm_oid_tipo_pion,
		                         1, pnp.num_cant_fija_punt,
		                         2, pnp.num_cant_inic_punt
		                        ) puntos_exigidos,
		                 i18n.val_i18n tipo_premio, lpa.num_prem, mpr.cod_sap,
		                 arl.cod_vent_fict, i18n1.val_i18n des_cort,
		                 (pra.num_unid * arl.num_unid) num_unidades,
		                  pgp.ind_prem_elec
		            FROM inc_param_nivel_premi pnp,
		                 inc_param_gener_premi pgp,
		                 inc_premi_artic pra,
		                 inc_lote_premi_artic lpa,
		                 inc_artic_lote arl,
		                 mae_produ mpr,
		                 v_gen_i18n_sicc i18n,
		                 v_gen_i18n_sicc i18n1
		           WHERE pnp.pagp_oid_para_gene_prem = pgp.oid_para_gene_prem
		             AND pgp.copa_oid_para_gral = #oidConcurso# 
		             AND pnp.oid_para_nive_prem = pra.panp_oid_para_nive_prem
		             AND pra.oid_prem_arti = lpa.prar_oid_prem_arti
		             AND arl.lopa_oid_lote_prem_arti = lpa.oid_lote_prem_arti
		             AND arl.prod_oid_prod = mpr.oid_prod
		             AND pnp.tpre_oid_tipo_prem = i18n.val_oid
		             AND i18n.idio_oid_idio = #oidIdioma#
		             AND i18n.attr_num_atri = 1
		             AND i18n.attr_enti = 'INC_TIPO_PREMI'
		             AND mpr.oid_prod = i18n1.val_oid
		             AND i18n1.idio_oid_idio = #oidIdioma#
		             AND i18n1.attr_num_atri = 1
		             AND i18n1.attr_enti = 'MAE_PRODU'
		          UNION
		          SELECT pnp.oid_para_nive_prem, pnp.num_nive,
		                 DECODE (pgp.tprm_oid_tipo_pion,
		                         1, pnp.num_cant_fija_punt,
		                         2, pnp.num_cant_inic_punt
		                        ) puntos_exigidos,
		                 i18n.val_i18n tipo_premio, ipm.num_prem, NULL cod_sap,
		                 NULL cod_vent_fict, NULL des_cort, NULL num_unidades,
		                 pgp.ind_prem_elec
		            FROM inc_param_nivel_premi pnp,
		                 inc_param_gener_premi pgp,
		                 inc_premi_monet ipm,
		                 v_gen_i18n_sicc i18n
		           WHERE pnp.pagp_oid_para_gene_prem = pgp.oid_para_gene_prem
		             AND pgp.copa_oid_para_gral = #oidConcurso#
		             AND pnp.oid_para_nive_prem = ipm.panp_oid_para_nive_prem
		             AND pnp.tpre_oid_tipo_prem = i18n.val_oid
		             AND i18n.idio_oid_idio = #oidIdioma#
		             AND i18n.attr_num_atri = 1
		             AND i18n.attr_enti = 'INC_TIPO_PREMI'
		          UNION
		          SELECT pnp.oid_para_nive_prem, pnp.num_nive,
		                 DECODE (pgp.tprm_oid_tipo_pion,
		                         1, pnp.num_cant_fija_punt,
		                         2, pnp.num_cant_inic_punt
		                        ) puntos_exigidos,
		                 i18n.val_i18n tipo_premio, ipp.num_prem, NULL cod_sap,
		                 NULL cod_vent_fict, NULL des_cort, NULL num_unidades,
		                 pgp.ind_prem_elec
		            FROM inc_param_nivel_premi pnp,
		                 inc_param_gener_premi pgp,
		                 inc_premi_punto ipp,
		                 v_gen_i18n_sicc i18n
		           WHERE pnp.pagp_oid_para_gene_prem = pgp.oid_para_gene_prem
		             AND pgp.copa_oid_para_gral = #oidConcurso#
		             AND pnp.oid_para_nive_prem = ipp.panp_oid_para_nive_prem
		             AND pnp.tpre_oid_tipo_prem = i18n.val_oid
		             AND i18n.idio_oid_idio = #oidIdioma#
		             AND i18n.attr_num_atri = 1
		             AND i18n.attr_enti = 'INC_TIPO_PREMI'
		          UNION
		          SELECT pnp.oid_para_nive_prem, pnp.num_nive,
		                 DECODE (pgp.tprm_oid_tipo_pion,
		                         1, pnp.num_cant_fija_punt,
		                         2, pnp.num_cant_inic_punt
		                        ) puntos_exigidos,
		                 i18n.val_i18n tipo_premio, ipd.num_prem, NULL cod_sap,
		                 NULL cod_vent_fict, NULL des_cort, NULL num_unidades,
		                 pgp.ind_prem_elec
		            FROM inc_param_nivel_premi pnp,
		                 inc_param_gener_premi pgp,
		                 inc_premi_descu ipd,
		                 v_gen_i18n_sicc i18n
		           WHERE pnp.pagp_oid_para_gene_prem = pgp.oid_para_gene_prem
		             AND pgp.copa_oid_para_gral = #oidConcurso#
		             AND pnp.oid_para_nive_prem = ipd.oid_para_nive_prem
		             AND pnp.tpre_oid_tipo_prem = i18n.val_oid
		             AND i18n.idio_oid_idio = #oidIdioma#
		             AND i18n.attr_num_atri = 1
		             AND i18n.attr_enti = 'INC_TIPO_PREMI')
		ORDER BY num_nive, num_prem, cod_sap     
    </select>  

    <!-- OBTIENE LAS BOLSAS FALTANTES DE LA CONSULTORA -->
    <select id="getBolsaFaltantes" parameterClass="java.util.Map" resultMap="baseBolsaFaltanteResult">
		SELECT cpg.NUM_CONC, 
		       cpg.VAL_NOMB,
		       prod.COD_SAP, 
			   solpos.VAL_CODI_VENT_FICT,		       
		       pq_apl_Aux.Valor_Gen_I18n_Sicc(#oidIdioma#, prod.OID_PROD, 'MAE_PRODU') DES_PROD, 
		       bolfal.NUM_UNID_FALT,
		       solcab.NUM_PREM ,
		       (SELECT C.NUM_NIVE
					FROM  INC_LOTE_PREMI_ARTIC A,
					  INC_PREMI_ARTIC B,
					  INC_PARAM_NIVEL_PREMI C,
					   INC_PARAM_GENER_PREMI D
					WHERE  A.NUM_PREM =solcab.NUM_PREM
					 AND A.PRAR_OID_PREM_ARTI =B.OID_PREM_ARTI
					 AND B.PANP_OID_PARA_NIVE_PREM =C.OID_PARA_NIVE_PREM
					 AND C.PAGP_OID_PARA_GENE_PREM = D.OID_PARA_GENE_PREM
					  AND D.COPA_OID_PARA_GRAL = cpg.Oid_Para_Gral) AS NUM_NIVE		       		       
		 FROM INC_CONCU_PARAM_GENER cpg, 
		      PED_SOLIC_CABEC solcab, 
		      PED_SOLIC_POSIC solpos, 
		      INC_BOLSA_FALTA bolfal,
		      MAE_PRODU	prod 
		WHERE solcab.COPA_OID_PARA_GENE = cpg.OID_PARA_GRAL 
		  AND solcab.CLIE_OID_CLIE = #oidCliente#
		  AND solpos.SOCA_OID_SOLI_CABE = solcab.OID_SOLI_CABE 
		  AND bolfal.SOPO_OID_SOLI_POSI = solpos.OID_SOLI_POSI
		  AND solpos.PROD_OID_PROD = prod.OID_PROD 
		  AND bolfal.FEC_SOLU IS NULL     
		 ORDER BY  cpg.NUM_CONC, prod.COD_SAP 
    </select>  

	<!-- OBTIENE EL SALDO A PAGAR PARA PROXIMO PEDIDO -->
    <select id="getSaldoPagar" parameterClass="java.util.Map" resultClass="string">
		SELECT ccc_pkg_gener.ccc_fn_obtie_saldo_proxi_pedid(TO_NUMBER(#oidCliente#))
		  FROM DUAL
 	</select>            
 	
 	<typeAlias alias="cronogramaActividades" type="biz.belcorp.ssicc.dao.scsicc.model.CronogramaActividades"/>
	<resultMap id="cronogramaActividadesResult" class ="cronogramaActividades">
		<result property="codActividad"			column ="COD_ACTI"/>         
		<result property="desActividad"			column ="DES_ACTI"/>		        
		<result property="fecPeriodoAnterior"	column ="FEC_PERI_ANTE"/>            
		<result property="fecPeriodoActual"	    column ="FEC_PERI_ACTU"/>            
		<result property="fecPeriodoDespues"	column ="FEC_PERI_DESP"/>
		<result property="fecPeriodoDespues2"	column ="FEC_PERI_DESP2"/>
	</resultMap>

	<parameterMap id="HIPCronogramaActividadesParams" class="map">
  		<parameter property="pais"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="marca"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="canal"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codZona"           jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

  <procedure id="executaCronogramaActividadesList" parameterMap="HIPCronogramaActividadesParams">
    {call HIP_PKG_CONSU.HIP_PR_ACTIV(?,?,?,?)}    	
  </procedure>
  
    <select id="getCronogramaActividadesList" parameterClass="java.util.Map" resultMap="cronogramaActividadesResult">
select '' COD_ACTI, 'Descripción Actividad'  DES_ACTI, 
       FIN_PKG_GENER.FIN_FN_OBTIE_NSGTE_CAMPA(#codigoPeriodo#,-1) FEC_PERI_ANTE, 
       #codigoPeriodo# FEC_PERI_ACTU,
       FIN_PKG_GENER.FIN_FN_OBTIE_NSGTE_CAMPA(#codigoPeriodo#,1) FEC_PERI_DESP,
       FIN_PKG_GENER.FIN_FN_OBTIE_NSGTE_CAMPA(#codigoPeriodo#,2) FEC_PERI_DESP2
from dual       
union all
select crAct.cod_acti COD_ACTI, crAct.Nom_Acti DES_ACTI, 
    NVL(to_char(crAnt.fec_inic,'dd/mm/yyyy'),'-') FEC_PERI_ANTE,  
    NVL(to_char(crAct.fec_inic,'dd/mm/yyyy'),'-') FEC_PERI_ACTU, 
    NVL(to_char(crSig.fec_inic,'dd/mm/yyyy'),'-') FEC_PERI_DESP,
    NVL(to_char(crSig2.fec_inic,'dd/mm/yyyy'),'-') FEC_PERI_DESP2
      from (select ca.cod_acti, ca.nom_acti, cr.fec_inic
              from cra_crono cr, cra_activ ca, hip_activ_crono hcr, zon_zona zz
             where cr.cact_oid_acti = ca.oid_acti
               and ca.pais_oid_pais = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#pais#)
               and cr.perd_oid_peri = FIN_PKG_GENER.FIN_FN_OBTIE_OID_PERIO(#pais#, FIN_PKG_GENER.FIN_FN_OBTIE_NSGTE_CAMPA(#codigoPeriodo#,-1))
               and cr.zzon_oid_zona = zz.oid_zona
               and zz.cod_zona = #codZona#
               and hcr.cod_pais = #pais#
               and hcr.cod_acti = ca.cod_acti
            order by hcr.num_orde) crAnt,
           (select ca.cod_acti, ca.nom_acti, cr.fec_inic
              from cra_crono cr, cra_activ ca, hip_activ_crono hcr, zon_zona zz
             where cr.cact_oid_acti = ca.oid_acti
               and ca.pais_oid_pais = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#pais#)
               and cr.perd_oid_peri = FIN_PKG_GENER.FIN_FN_OBTIE_OID_PERIO(#pais#, #codigoPeriodo#)
               and cr.zzon_oid_zona = zz.oid_zona
               and 
               zz.cod_zona = #codZona#
               and hcr.cod_pais = #pais#
               and hcr.cod_acti = ca.cod_acti
            order by hcr.num_orde) crAct,
           (select ca.cod_acti, ca.nom_acti, cr.fec_inic
              from cra_crono cr, cra_activ ca, hip_activ_crono hcr, zon_zona zz
             where cr.cact_oid_acti = ca.oid_acti
               and ca.pais_oid_pais = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#pais#)
               and cr.perd_oid_peri = FIN_PKG_GENER.FIN_FN_OBTIE_OID_PERIO(#pais#, FIN_PKG_GENER.FIN_FN_OBTIE_NSGTE_CAMPA(#codigoPeriodo#,1))
               and cr.zzon_oid_zona = zz.oid_zona
               and zz.cod_zona = #codZona#
               and hcr.cod_pais = #pais#
               and hcr.cod_acti = ca.cod_acti
            order by hcr.num_orde) crSig,
           (select ca.cod_acti, ca.nom_acti, cr.fec_inic
              from cra_crono cr, cra_activ ca, hip_activ_crono hcr, zon_zona zz
             where cr.cact_oid_acti = ca.oid_acti
               and ca.pais_oid_pais = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#pais#)
               and cr.perd_oid_peri = FIN_PKG_GENER.FIN_FN_OBTIE_OID_PERIO(#pais#, FIN_PKG_GENER.FIN_FN_OBTIE_NSGTE_CAMPA(#codigoPeriodo#,2))
               and cr.zzon_oid_zona = zz.oid_zona
               and zz.cod_zona = #codZona#
               and hcr.cod_pais = #pais#
               and hcr.cod_acti = ca.cod_acti
            order by hcr.num_orde) crSig2
     where crAct.cod_acti = crAnt.cod_acti(+)
       and crAct.cod_acti = crSig.cod_acti(+)
       and crAct.cod_acti = crSig2.cod_acti(+)
	</select>

    <resultMap id="getGerenteZonaResult" 	class="java.util.HashMap">
    	<result property="apellido1" 	    column="VAL_APE1" />
    	<result property="apellido2"    	column="VAL_APE2"/>
		<result property="nombre1" 			column="VAL_NOM1" />
    	<result property="nombre2" 			column="VAL_NOM2"/>
    	<result property="telefonoCasa" 	column="TELEFONO_CASA"/>    	
    	<result property="email" 			column="EMAIL"/>
    	<result property="celular" 			column="CELULAR"/>
    </resultMap>

    <select id="getGerenteZonaList" parameterClass="java.util.Map" resultMap="getGerenteZonaResult">
		SELECT M.VAL_APE1,
	       M.VAL_APE2,
	       M.VAL_NOM1,
	       M.VAL_NOM2,
	       (SELECT c.val_text_comu
	          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
	         WHERE c.clie_oid_clie = cli.oid_clie
	           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
	           AND tc.cod_tipo_comu = 'TF'
	           AND cli.oid_clie = M.OID_CLIE
	           AND ROWNUM = 1) TELEFONO_CASA,
	       (SELECT c.val_text_comu
	          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
	         WHERE c.clie_oid_clie = cli.oid_clie
	           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
	           AND tc.cod_tipo_comu = 'ML'
	           AND cli.oid_clie = M.OID_CLIE
	           AND ROWNUM = 1) EMAIL,
	       (SELECT c.val_text_comu
	          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
	         WHERE c.clie_oid_clie = cli.oid_clie
	           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
	           AND tc.cod_tipo_comu = 'TM'
	           AND cli.oid_clie = M.OID_CLIE
	           AND ROWNUM = 1) CELULAR
	  FROM ZON_ZONA Z, MAE_CLIEN M
	  WHERE Z.COD_ZONA = #codZona#
	  AND M.OID_CLIE = Z.CLIE_OID_CLIE
	</select>

    <select id="getGerenteRegionList" parameterClass="java.util.Map" resultMap="getGerenteZonaResult">
	    SELECT M.VAL_APE1,
	       M.VAL_APE2,
	       M.VAL_NOM1,
	       M.VAL_NOM2,
	       (SELECT c.val_text_comu
	          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
	         WHERE c.clie_oid_clie = cli.oid_clie
	           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
	           AND tc.cod_tipo_comu = 'TF'
	           AND cli.oid_clie = M.OID_CLIE
	           AND ROWNUM = 1) TELEFONO_CASA,
	       (SELECT c.val_text_comu
	          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
	         WHERE c.clie_oid_clie = cli.oid_clie
	           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
	           AND tc.cod_tipo_comu = 'ML'
	           AND cli.oid_clie = M.OID_CLIE
	           AND ROWNUM = 1) EMAIL,
	       (SELECT c.val_text_comu
	          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
	         WHERE c.clie_oid_clie = cli.oid_clie
	           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
	           AND tc.cod_tipo_comu = 'TM'
	           AND cli.oid_clie = M.OID_CLIE
	           AND ROWNUM = 1) CELULAR       
	    FROM ZON_REGIO R, ZON_ZONA Z, MAE_CLIEN M
	    WHERE Z.ZORG_OID_REGI = R.OID_REGI
	    AND Z.COD_ZONA = #codZona#
	    AND R.COD_REGI = #codRegion#
	    AND R.CLIE_OID_CLIE = M.OID_CLIE
	</select>
    
	<parameterMap id="HIPEnviosPreferencialesParams" class="map">
  		<parameter property="codCliente"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="nomCliente"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

  <procedure id="executaEnviosPreferencialesList" parameterMap="HIPEnviosPreferencialesParams">
    {call HIP_PKG_CONSU.HIP_PR_PROGR(?,?)}    	
  </procedure>

    <resultMap id="enviosPreferencialesResult"    class="java.util.HashMap">
        <result property="codCliente" 		column="COD_CLIE" />      
    	<result property="nomCliente" 		column="NOM_CLIE" />
    	<result property="codPrograma" 		column="COD_PROG" />      
    	<result property="desPrograma" 		column="DES_PROG" />
    	<result property="fecInscripcion"   column="FEC_INSC"/>
		<result property="desObservacion" 	column="DES_OBSE" />
    	<result property="flagSuscripcion"  column="FLG_SUSC" />
		<result property="oidClas"			column="OID_CLAS" />
		<result property="oidClieTipoSubT"	column="OID_CLIE_TIPO_SUBT" />
		<result property="oidTipoClas"		column="OID_TIPO_CLAS" />
    </resultMap>

	<select id="getEnviosPreferencialesList" parameterClass="java.util.Map" resultMap="enviosPreferencialesResult">
				SELECT COD_CLIE,
					   NOM_CLIE,
					   COD_PROG,
					   DES_PROG, 
				       FEC_INSC, 
				       DES_OBSE,
				       FLG_SUSC,
				       OID_CLAS,
					   OID_CLIE_TIPO_SUBT,
					   OID_TIPO_CLAS
				FROM GTT_HIPER_ENVIO_PREFE
	</select>    

	<parameterMap id="HIPSuscribirEnviosPreferencialesParams" class="map">
  		<parameter property="codCliente"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="nomCliente"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codPrograma"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="oidClas"		    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="oidClieTipoSubT"	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="oidTipoClas"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoPais"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoMarca"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoCanal"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>  		  		  		
	  </parameterMap>

	<procedure id="executaSuscribirEnviosPreferenciales" parameterMap="HIPSuscribirEnviosPreferencialesParams">
    {call HIP_PKG_CONSU.HIP_PR_SUSCR(?,?,?,?,?,?,?,?,?)}    	
  	</procedure>

	<parameterMap id="HIPFinSuscribirEnviosPreferencialesParams" class="map">
  		<parameter property="codCliente"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codPrograma"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="oidClas"		    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="oidClieTipoSubT"	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="oidTipoClas"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>   		
	</parameterMap>

	<procedure id="executaFinSuscribirEnviosPreferenciales" parameterMap="HIPFinSuscribirEnviosPreferencialesParams">
    {call HIP_PKG_CONSU.HIP_PR_FINSU(?,?,?,?,?)}
  	</procedure>


    <resultMap id="responsableSeccionResult"    class="java.util.HashMap">
        <result property="region" 		column="REGION"/>      
    	<result property="zona" 		column="ZONA"/>
    	<result property="descZona" 	column="DESCZONA"/>      
    	<result property="seccion" 		column="SECCION"/>
    	<result property="periodoDesde"	column="PERIO_DESDE"/>
		<result property="periodoHasta" column="PERIO_HASTA"/>
    	<result property="territorio"	column="TERRITORIO"/>
    </resultMap>

	<select id="getResponsableSeccionList" parameterClass="java.util.Map" resultMap="responsableSeccionResult">
		  SELECT SUBSTR(Z.UA,3,2) AS REGION, SUBSTR(Z.UA,5,4) AS ZONA, (SELECT DES_ZONA FROM ZON_ZONA WHERE COD_ZONA = SUBSTR (z.ua, 5, 4)) AS DESCZONA,
		         SUBSTR(Z.UA,9,1) AS SECCION,
		         Inc_pkg_proce_incen.inc_fn_obtie_codig_perio(z.perd_oid_peri_desd ) AS PERIO_DESDE,
		         Inc_pkg_proce_incen.inc_fn_obtie_codig_perio(z.perd_oid_peri_hast) AS PERIO_HASTA,
		         HIP_PKG_CONSU.HIP_FN_TERRI(#pais#, SUBSTR(Z.UA,5,4), SUBSTR(Z.UA,9,1)) AS TERRITORIO
		  FROM ZON_HISTO_GEREN Z
		  WHERE Z.GERE = #codCliente#
		  ORDER BY 5 DESC
	</select>

    <resultMap id="historiaBloqueoResult"   class="java.util.HashMap">
        <result property="codTipoBloqueo"	column="COD_TIPO_BLOQ"/>      
    	<result property="descripcion" 		column="DESCRIPCION"/>
    	<result property="fecBloqueo" 		column="FEC_BLOQ"/>      
    	<result property="valUsuaBloq" 		column="VAL_USUA_BLOQ"/>
    	<result property="obsBloqueo"		column="OBS_BLOQ"/>
		<result property="fecDesbloqueo" 	column="FEC_DESB"/>
    	<result property="valUsuaDesbloq"	column="VAL_USUA_DESB"/>
    	<result property="obsDesbloq"		column="OBS_DESB"/>
    </resultMap>

	<select id="getHistoriaBloqueoList" parameterClass="java.util.Map" resultMap="historiaBloqueoResult">
		SELECT TB.COD_TIPO_BLOQ,
		       PQ_APL_AUX.Valor_Gen_I18n_Sicc(#oidIdioma#, TB.OID_TIPO_BLOQ, 'MAE_TIPO_BLOQU') AS DESCRIPCION,
		       TC.FEC_BLOQ,
		       TC.VAL_USUA_BLOQ,
		       TC.val_moti_bloq ||' / '|| TC.OBS_BLOQ OBS_BLOQ,
		       TC.FEC_DESB,
		       TC.VAL_USUA_DESB,
		       TC.OBS_DESB
		  FROM MAE_TIPO_BLOQU TB, MAE_CLIEN_BLOQU TC
		 WHERE TB.OID_TIPO_BLOQ = TC.TIBQ_OID_TIPO_BLOQ
		   AND TC.CLIE_OID_CLIE = #oidCliente#
		ORDER BY TC.FEC_BLOQ DESC
	</select>


    <resultMap id="eduConsultorasResult"   class="java.util.HashMap">
        <result property="nivAlcanzado"	column="NIVEL_ALCANZADO"/>      
    	<result property="estado" 		column="ESTADO"/>
    	<result property="nivPorAlcanzar" 	column="NIVEL_POR_ALCANZAR"/>
    	<result property="codCurso"			column="CCAP_COD_CURS_CAPA"/>     
    </resultMap>

	<select id="getEduConsultorasList" parameterClass="java.util.Map" resultMap="eduConsultorasResult">
	   WITH TMP AS(	
		 SELECT   A.CCAP_COD_CURS_CAPA || ' - ' || C.NOM_CURS_CAPA AS NIVEL_ALCANZADO,
				 (SELECT X.DES_ESTA_CAPA
				   FROM EDU_ESTAD_CAPAC X
				    WHERE X.COD_ESTA_CAPA = A.EST_CAPA 
				     AND X.EST_REGI = '1'
				  ) AS ESTADO,
		            EDU_PKG_PROCE_GENER.EDU_FN_DEVUE_NIVEL_SIGTE
		                                 (A.PAIS_COD_PAIS,
		                                  A.EMCO_COD_EMPR_COME,
		                                  '01',
		                                  A.CCAP_COD_CURS_CAPA
		                                 )
		         || ' - '
		         || (SELECT Z.NOM_CURS_CAPA
		               FROM EDU_PARAM_CURSO_CAPAC Z
		              WHERE Z.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		                AND Z.EMCO_COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		                AND Z.COD_CURS_CAPA =
		                       EDU_PKG_PROCE_GENER.EDU_FN_DEVUE_NIVEL_SIGTE
		                                                        (A.PAIS_COD_PAIS,
		                                                         A.EMCO_COD_EMPR_COME,
		                                                         '01',
		                                                         A.CCAP_COD_CURS_CAPA
		                                                        ))
		                                                        AS NIVEL_POR_ALCANZAR,
		            A.CCAP_COD_CURS_CAPA                                            
		    FROM EDU_HISTO_APTAS A,
		         EDU_EMPRE_COMER B,
		         EDU_PARAM_CURSO_CAPAC C,
		         EDU_MAEST_CLIEN D,
		         EDU_PARAM_PROGR_CAPAC PPC
		   WHERE B.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		     AND B.COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		     AND PPC.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		     AND PPC.EMCO_COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		     AND PPC.COD_PROG_CAPA = '01'
		     AND A.EST_REGI != '9'
		     AND A.PAIS_COD_PAIS = C.PAIS_COD_PAIS
		     AND A.EMCO_COD_EMPR_COME = C.EMCO_COD_EMPR_COME
		     AND A.CCAP_COD_CURS_CAPA = C.COD_CURS_CAPA
		     AND D.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		     AND D.EMCO_COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		     AND D.COD_CLIE = A.CLIE_COD_CLIE
		     AND A.PAIS_COD_PAIS = #pais#
		     AND A.CLIE_COD_CLIE = #codCliente#
		ORDER BY A.CCAP_COD_CURS_CAPA DESC)
	   SELECT X.* 
	   FROM TMP X	
	   WHERE ROWNUM = 1
	</select>

    <resultMap id="eduCursosResult"		class="java.util.HashMap">
        <result property="campana"			column="CAM_CRON"/>      
    	<result property="descripcion"		column="NOM_CURS_CAPA"/>
    	<result property="lugar" 			column="DES_LOCA"/>
		<result property="direccion" 		column="DES_DIRE"/>    	
		<result property="fechaDictado" 	column="FEC_DICT"/>	    	
		<result property="horaInicio" 		column="HOR_INIC"/>
		<result property="horaFin" 			column="HOR_FINA"/>
		<result property="sala" 	column="DES_SALA"/>
    </resultMap>

	<select id="getEduCursosList" parameterClass="java.util.Map" resultMap="eduCursosResult">
		SELECT A.CAM_CRON,
		       D.NOM_CURS_CAPA ,
		       E.DES_LOCA,        
		       E.DES_DIRE,       
		       TO_CHAR(A.FEC_DICT,'DD/MM/YYYY') FEC_DICT,
		       A.HOR_INIC,
		       A.HOR_FINA,
		       A.SALA_COD_SALA ||' '|| EDU_PKG_PROCE_GENER.EDU_FN_DEVUE_DESCR_SALA
				(A.PAIS_COD_PAIS, A.EMCO_COD_EMPR_COME, A.LOCA_COD_LOCA, A.SALA_COD_SALA) AS DES_SALA  
		FROM  EDU_CRONO_DICTA A,
		       EDU_EMPRE_COMER B,
		       EDU_REGIO C,
		       EDU_PARAM_CURSO_CAPAC D,
		       EDU_LOCAL E ,
		       EDU_CRONO_DICTA_ZONA F,
		       EDU_HISTO_APTAS G,
		       mae_clien m,
		       mae_clien_unida_admin n,
		       zon_terri_admin o,
		       zon_secci p,
		       zon_zona q,
		       zon_regio r
		 WHERE A.PAIS_COD_PAIS = #pais#
		       AND A.EST_REGI != '9'
		       AND B.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		       AND B.COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		       AND C.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		       AND C.EMCO_COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		       AND C.COD_REGI = A.REGI_COD_REGI
		       AND D.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		       AND D.EMCO_COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		       AND D.COD_CURS_CAPA = A.CCAP_COD_CURS_CAPA
		       AND E.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		       AND E.EMCO_COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		       AND E.COD_LOCA = A.LOCA_COD_LOCA
		       AND F.PAIS_COD_PAIS= A.PAIS_COD_PAIS
		       AND F.EMCO_COD_EMPR_COME= A.EMCO_COD_EMPR_COME
		       AND F.REGI_COD_REGI=A.REGI_COD_REGI
		       AND F.CRON_OID_CRON=A.OID_CRON
		       AND A.REGI_COD_REGI = r.COD_REGI
		       AND A.EST_ACTI = 'A'
		       AND F.ZONA_COD_ZONA  = q.cod_zona
		       and m.OID_CLIE = n.CLIE_OID_CLIE
		       and n.IND_ACTI = 1
		       and n.ZTAD_OID_TERR_ADMI = o.OID_TERR_ADMI
		       and o.ZSCC_OID_SECC = p.OID_SECC
		       and p.ZZON_OID_ZONA = q.OID_ZONA
		       and q.ZORG_OID_REGI = r.OID_REGI
		       AND G.PAIS_COD_PAIS = A.PAIS_COD_PAIS
		       AND G.EMCO_COD_EMPR_COME = A.EMCO_COD_EMPR_COME
		       AND G.CCAP_COD_CURS_CAPA  =A.CCAP_COD_CURS_CAPA
		       AND G.CLIE_COD_CLIE = #codCliente#
		       AND G.CLIE_COD_CLIE = M.COD_CLIE
		       AND G.EST_CAPA = 'PR'
		ORDER BY A.CCAP_COD_CURS_CAPA, A.REGI_COD_REGI,A.FEC_DICT, A.HOR_INIC, A.HOR_FINA
	</select>

    <resultMap id="tipoCertificacionsResult"		class="java.util.HashMap">
        <result property="codTCertificacion"		column="COD_CERT"/>      
    	<result property="desTCertificacion"		column="DES_CERT"/>
    </resultMap>

	<select id="getTipoCertificacionList" parameterClass="java.util.Map" resultMap="tipoCertificacionsResult">
					SELECT TC.COD_CERT,
						   TC.DES_CERT
					FROM HIP_TIPO_CERTI TC
	</select>


	<select id="getValorStatus" parameterClass="java.util.Map" resultClass="string">
			SELECT TO_CHAR(COUNT(1)) AS VALOR
			FROM MAE_CLIEN_DATOS_ADICI MD, 
			     MAE_ESTAT_CLIEN M
			WHERE M.OID_ESTA_CLIE = MD.ESTA_OID_ESTA_CLIE
			      AND M.COD_ESTA_CLIE IN ('04','05','07')
			      AND MD.CLIE_OID_CLIE = #oidCliente#
	</select>

	<select id="execCalculoPeriIniPromVentas" parameterClass="java.util.Map" resultClass="string">
					SELECT 
					GEN_FN_CALCU_PERIO(#codperiFinalPromVenta#,-(#numCampPromedio#)+1) AS CALPERI
					FROM DUAL
	</select>

    <resultMap id="premiosClienteResult"	class="java.util.HashMap">
        <result property="codPremio"		column="CODIGO"/>
    	<result property="desPremio"	column="DESCRIPCION"/>
    </resultMap>

	<select id="getPremiosClienteList" parameterClass="java.util.Map" resultMap="premiosClienteResult">
		SELECT PQ_APL_AUX.VALOR_GEN_I18N_SICC(#oidIdioma#, PRO.OID_PROD, 'MAE_PRODU')||'|'||CAB.FEC_FACT AS CODIGO,
			   PQ_APL_AUX.VALOR_GEN_I18N_SICC(#oidIdioma#, PRO.OID_PROD, 'MAE_PRODU') AS DESCRIPCION
		 FROM INC_GANAD GAN, PED_SOLIC_CABEC CAB,
		   PED_SOLIC_POSIC POS, MAE_PRODU PRO
		WHERE
		      GAN.CLIE_OID_CLIE = #oidCliente#
		  AND CAB.OID_SOLI_CABE = GAN.SOCA_OID_SOLI_CABE
		  AND POS.SOCA_OID_SOLI_CABE = CAB.OID_SOLI_CABE
		  AND PRO.OID_PROD = POS.PROD_OID_PROD
		  AND GAN.IND_DESP = 1		  
	</select>

	<select id="getFecMesAnno" parameterClass="java.util.Map" resultClass="string">
		SELECT TO_CHAR(CRA.FEC_INIC, 'YYYY') || ',' || TO_CHAR(CRA.FEC_INIC, 'Month') AS FECHA
		  FROM MAE_CLIEN_PRIME_CONTA CON, CRA_PERIO CRA
		 WHERE CON.PERD_OID_PERI = CRA.OID_PERI
		   AND CON.CLIE_OID_CLIE = #OidCliente#
	</select>


<insert id="execGeneraCertificacion" parameterClass="java.util.Map">
		INSERT INTO MSG_BUZON_MENSA M
		       (M.OID_BUZO_MENS,
		               M.NUM_SECU,
		               M.DATO_VARI_01,
		               M.DATO_VARI_02,
		               M.DATO_VARI_03,
		               M.DATO_VARI_04,
		               M.DATO_VARI_05,
		               M.DATO_VARI_06,
		               M.DATO_VARI_08,
		               M.DATO_VARI_09,
		               M.DATO_VARI_10,
		               M.DATO_VARI_11,
		               M.DATO_VARI_12,
		               M.DATO_VARI_13,
		               M.DATO_VARI_14,
		               M.DATO_VARI_15,
		               M.DATO_VARI_16,
		               M.MENS_OID_MENS,
		               M.CLIE_OID_CLIE,
		               M.FEC_GRAB,
		               M.IND_LIST_CONS,
		               M.IND_ACTI,
		               M.MODU_OID_MODU_ORIG)
				VALUES
				      (MSG_BUME_SEQ.NEXTVAL,
		               (SELECT NVL((MAX(M.NUM_SECU)),0) + 1 FROM MSG_BUZON_MENSA M
					   WHERE M.MENS_OID_MENS = #msjOidMsj# AND M.CLIE_OID_CLIE = #clieOidClie#),				      
				      	#nomCliente#, 
				      	#tipDocIdentidad#,  
				      	#numDocIdentidad#,
				      	#mesInicPeriodo#, 
				      	#promedioVenta#,
						#entidad#, 
						#premio#,
						#modelo#,
						#serie#,
						#marca#,
						#color#,
						TO_CHAR(SYSDATE,'DD'),
						TO_CHAR(SYSDATE,'Month'),
						TO_CHAR(SYSDATE,'YYYY'),
						#annoInicPeriodo#,
						#msjOidMsj#,
						#clieOidClie#,
						SYSDATE,
						0,
						1,
						#moduloOidModuOrig#
						)
	</insert>

	<select id="getOidMsj" parameterClass="java.util.Map" resultClass="string">
			SELECT M.OID_MENS
			FROM HIP_TIPO_CERTI H, MSG_MENSA M
			WHERE H.COD_MENS = M.COD_MENS
			      AND H.COD_CERT = #codTCertificacion#
	</select>

	<!-- OBTIENE EL PROMEDIO DE VENTAS DE LA CONSULTORA -->
    <select id="getPromedioVentas" parameterClass="java.util.Map" resultClass="string">
		SELECT HIP_PKG_CONSU.HIP_FN_DEVUE_PROME_VENTA(#codigoPais#, #codigoMarca#, #codigoCanal#,
												#periodoInicio#, #periodoFin#, #codigoCliente#, #numeroCampanas#)
		  FROM DUAL
 	</select>
 	
    <resultMap id="productosDespachadosResult"   class="java.util.HashMap">
        <result property="codPeriodo"		column="periodo"/>      
    	<result property="codVenta" 		column="codigoVenta"/>
    	<result property="desProducto" 		column="descripcion"/>      
   		<result property="unidDemandadas" 	column="unidades_demandadas"/>
    </resultMap>
     	
 	<!-- OBTIENE LA LISTA DE PRODUCTOS DESPACHADOS AUTOMATICAMENTE-->
    <select id="getProductosDespachadosAutomaticamente" parameterClass="java.util.Map" resultMap="productosDespachadosResult">
    
		SELECT * FROM
		(
			SELECT a.cod_peri as periodo, a.cod_venta as codigoVenta, a.DES_PROD as descripcion, c.val_unid_dem as unidades_demandadas
			FROM 
				CUP_DESP_PROD a,
				PED_HISTO_SOLIC_CONSO_DETAL c,
				Ped_solic_cabec b,
				Ped_solic_posic g,
				Mae_clien d,
				seg_perio_corpo e,
				cra_perio f
			WHERE
				a.COD_PERI = c.COD_PERI
				and a.COD_VENTA = c.COD_VENT
				and c.cod_clie = #codigoCliente#
				and c.cod_clie = d.cod_clie
				and b.clie_oid_clie = d.oid_clie
				and b.OID_SOLI_CABE = g.SOCA_OID_SOLI_CABE
				and b.PERD_OID_PERI = f.OID_PERI
				and f.PERI_OID_PERI = e.OID_PERI
				and g.VAL_CODI_VENT = a.COD_VENTA
				and e.COD_PERI = a.COD_PERI
			
			UNION
			
			SELECT a.cod_peri as periodo, a.cod_venta as codigoVenta, a.DES_PROD as descripcion, c.val_unid_dem as unidades_demandadas
			FROM 
				CUP_DESP_PROD a,
				INT_SOLIC_CONSO_DETAL c,
				Ped_solic_cabec b,
				Ped_solic_posic g,
				Mae_clien d,
				seg_perio_corpo e,
				cra_perio f
			WHERE
				a.COD_PERI = c.COD_PERI
				and a.COD_VENTA = c.COD_VENT
				and c.cod_clie = #codigoCliente#
				and c.cod_clie = d.cod_clie
				and b.clie_oid_clie = d.oid_clie
				and b.OID_SOLI_CABE = g.SOCA_OID_SOLI_CABE
				and b.PERD_OID_PERI = f.OID_PERI
				and f.PERI_OID_PERI = e.OID_PERI
				and g.VAL_CODI_VENT = a.COD_VENTA
				and e.COD_PERI = a.COD_PERI
				and b.FEC_FACT is not null
		)
		ORDER BY periodo, codigoVenta
 	</select>
 	
 	<resultMap id="productosSolicitadosResult"   class="java.util.HashMap">
        <result property="nivel"				column="COD_NIVEL"/>
    	<result property="codigoCupon" 			column="COD_CUPON"/>
    	<result property="tipoCupon" 			column="TIPO_CUPON"/>
    	<result property="campanaIniVigencia" 	column="CAM_INIC_VIG"/>
   		<result property="campanaFinVigencia" 	column="CAM_FIN_VIG"/>
   		<result property="campanaUtilizacion" 	column="CAMPANA_UTILIZACION"/>
   		<result property="codigoVenta" 			column="COD_VENT"/>
   		<result property="descripcion" 			column="DES_PROD"/>
   		<result property="unidades" 			column="VAL_UNID_DEM"/>
   		<result property="observaciones" 		column="OBSERVACIONES"/>
    </resultMap>
 	
 	<!-- OBTIENE LA LISTA DE PRODUCTOS SOLICITADO POR LA CONSULTORA -->
    <select id="getProductosSolicitadosConsultoras" parameterClass="java.util.Map" resultMap="productosSolicitadosResult">
		SELECT COD_NIVEL,
		       COD_CUPON,
		       CAM_INIC_VIG,
		       CAM_FIN_VIG,
		       CAMPANA_UTILIZACION,
		       COD_VENT,
		       DES_PROD,
		       VAL_UNID_DEM,
		       OBSERVACIONES,
		       TIPO_CUPON
			FROM
			(	(SELECT 
					TO_CHAR(TO_NUMBER(Q1.COD_NIVEL) + 1,'00') as COD_NIVEL, Q1.COD_CUPON, Q1.CAM_INIC_VIG, Q1.CAM_FIN_VIG, 
					Q1.CAMPANA_UTILIZACION, Q2.COD_VENT, Q2.DES_PROD, Q2.VAL_UNID_DEM,
					DECODE(Q2.IND_ERRO_SSE,'1','RECHAZADO POR NO CUMPLIR LAS REGLAS DEL CONCURSO','') AS OBSERVACIONES,
					DECODE(q2.sta_proc,'L', 'DEFAULT' ,
                             'B', 'SOLICITADO',
                             '') AS TIPO_CUPON
					
				FROM
					(
					  select b.cod_cupon as q1_cupon,a.cod_pais as codPais,  a.COD_NIVEL, b.COD_CUPON ,a.CAM_INIC_VIG, a.CAM_FIN_VIG,  b.CAM_UTILI campana_utilizacion
					  from 
					    CUP_CONSU_NIVEL a,
					    CUP_CONSU_CUPON b
					  where
					    b.COD_CONS = #codigoConsultora# and 
					    a.COD_CONS = b.COD_CONS
					    and a.COD_NIVEL   = b.COD_NIVEL
					    order by a.COD_NIVEL
					  ) Q1,
					  
					( 
					  select b.cod_nivel, b.cod_cupon as q2cupon, a.cod_pais as codPais, d.COD_VENT, c.DES_PROD, d.NUM_UNID_DEMA, d.VAL_UNID_DEM, d.IND_ERRO_SSE, d.sta_proc sta_proc
					  from 
					    CUP_CONSU_NIVEL a,
					    CUP_CONSU_CUPON b,
					    CUP_EQUIV_MATR c,
					    PED_HISTO_SOLIC_CONSO_DETAL  d
					  where
					    b.COD_CONS = #codigoConsultora# and
					    a.COD_CONS = b.COD_CONS 
					    and a.COD_NIVEL   = b.COD_NIVEL
					    and c.COD_VENTA = d.COD_VENT
					    and c.COD_CUPON = b.COD_CUPON
					    and b.CAM_UTILI = c.COD_PERI
					    and b.CAM_UTILI = d.COD_PERI
					    and d.COD_CLIE = b.cod_cons
					    
					    UNION
					    
					  select b.cod_nivel, b.cod_cupon ,d.COD_VENT, a.cod_pais as codPais, c.DES_PROD, d.NUM_UNID_DEMA, d.VAL_UNID_DEM, d.IND_ERRO_SSE, d.sta_proc sta_proc
					  from 
					    CUP_CONSU_NIVEL a,
					    CUP_CONSU_CUPON b,
					    CUP_EQUIV_MATR c,
					    INT_SOLIC_CONSO_DETAL  d
					  where 
					    b.COD_CONS = #codigoConsultora# and 
					    a.COD_CONS = b.COD_CONS 
					    and a.COD_NIVEL   = b.COD_NIVEL
					    and c.COD_VENTA = d.COD_VENT
					    and c.COD_CUPON = b.COD_CUPON
					    and b.CAM_UTILI = c.COD_PERI
					    and b.CAM_UTILI = d.COD_PERI
					    and d.COD_CLIE = b.cod_cons
					) Q2
				
				WHERE 
					Q1.COD_CUPON = Q2.Q2CUPON(+)
					AND Q1.COD_NIVEL = Q2.COD_NIVEL(+)
					AND Q1.CAMPANA_UTILIZACION IS NOT NULL)
			union
				(select TO_CHAR(TO_NUMBER(a.COD_NIVEL) + 1,'00') COD_NIVEL, b.COD_CUPON ,a.CAM_INIC_VIG, a.CAM_FIN_VIG,  b.CAM_UTILI campana_utilizacion,
			         NULL COD_VENT, NULL DES_PROD, NULL VAL_UNID_DEM,
			         
			    <![CDATA[		 			         
			         (CASE WHEN a.CAM_FIN_VIG < gen_pkg_gener.GEN_FN_DEVUELVE_PERIO_ACTU(gen_pkg_gener.GEN_FN_DEVUELVE_ID_PAIS(a.COD_PAIS), 'T', gen_pkg_gener.GEN_FN_DEVUELVE_ID_CANAL('VD'))
	    		]]>				         
			               THEN 'VENCIDO'
			               ELSE 'PENDIENTE'
			           END ) AS OBSERVACIONES
			           , '' sta_proc 
			  from 
					    CUP_CONSU_NIVEL a,
					    CUP_CONSU_CUPON b
			  where
				    b.COD_CONS = #codigoConsultora#
			   and  a.COD_CONS = b.COD_CONS
			   and  a.COD_NIVEL   = b.COD_NIVEL
			   and  b.CAM_UTILI is null)
			)   
		ORDER BY COD_NIVEL, COD_CUPON
 	</select>
	
    <!-- OBTIENE EL CODIGO Y NOMBRE DE LA DUPLA ACTUAL -->
    <select id="getDuplaActual" parameterClass="java.util.Map" resultMap="baseDuplaActualResult">
		SELECT m.COD_CLIE, m.VAL_NOM1, m.VAL_NOM2, m.VAL_APE1, m.VAL_APE2, TO_CHAR(a.FEC_NACI,'DD/MM/YYYY') FEC_NAC,
		       (SELECT C.VAL_TEXT_COMU
		        FROM   MAE_CLIEN_COMUN C, MAE_TIPO_COMUN T
		        WHERE  C.TICM_OID_TIPO_COMU = T.OID_TIPO_COMU
		          AND  T.COD_TIPO_COMU = 'ML'
		          AND  C.CLIE_OID_CLIE = m.OID_CLIE) EMAIL,
		       (SELECT C.VAL_TEXT_COMU
		        FROM   MAE_CLIEN_COMUN C, MAE_TIPO_COMUN T
		        WHERE  C.TICM_OID_TIPO_COMU = T.OID_TIPO_COMU
		          AND  T.COD_TIPO_COMU = 'TF'
		          AND  C.CLIE_OID_CLIE = m.OID_CLIE) TELEFONO,
		       (SELECT C.VAL_TEXT_COMU
		        FROM   MAE_CLIEN_COMUN C, MAE_TIPO_COMUN T
		        WHERE  C.TICM_OID_TIPO_COMU = T.OID_TIPO_COMU
		          AND  T.COD_TIPO_COMU = 'TM'
		          AND  C.CLIE_OID_CLIE = m.OID_CLIE) CELULAR
		FROM MAE_CLIEN_VINCU v, MAE_CLIEN m, MAE_CLIEN_DATOS_ADICI a
		WHERE v.CLIE_OID_CLIE_VNTE = #oidCliente#
		  AND v.TIVC_OID_TIPO_VINC = '1'
      <![CDATA[		               		               		  
		  AND ((v.FEC_HAST IS NULL) or (v.FEC_HAST > sysdate))
	    ]]>		   		  
		  AND v.CLIE_OID_CLIE_VNDO = m.OID_CLIE
		  AND a.CLIE_OID_CLIE = m.OID_CLIE
    </select>
    	
    <insert id="insertDocumentoDigitacion" parameterClass="java.util.Map">
	    INSERT INTO STO_DOCUM_DIGIT
			  (COD_PAIS,
			   COD_TIPO_DOCU,
			   NUM_LOTE,
			   SEC_NUME_DOCU,
			   IND_ENVI,
			   IND_RECH,
			   COD_ZONA,
			   COD_CLIE,
			   COD_REGI,
			   USU_DIGI,
			   FEC_DIGI,
			   USU_MODI,			   
			   FEC_MODI
			   )
			VALUES
			  (#codigoPais#,
			   #codigoTipoDocumento#,
			   #numeroLote#,
			   #numeroSecuencia#,
			   #indicadorEnvio#,
			   #indicadorRechazo#,
			   #codigoZona#,
			   #codigoCliente#,
			   #codigoRegion#,
			   #login#,
			   SYSDATE,	
			   #login#,			   		   
			   SYSDATE
			   )
	</insert>

	<insert id="insertSolicitudDuplaCyzone" parameterClass="java.util.Map">    	
		INSERT INTO INT_SOLIC_CONSO_DUPLA_CYZON
		  (COD_PAIS,
		   COD_COMP,
		   COD_CLIE,
		   NUM_DOCU,
		   FEC_PROC,
		   VAL_APE1,
		   VAL_APE2,
		   VAL_NOM1,
		   VAL_NOM2,
		   FEC_NACI,
		   VAL_MAIL_CLIE,
		   VAL_TELF_CLIE,
		   VAL_CELU_CLIE, 
		   IND_DUPL_NUEV,
		   IND_ACTU_DATO,
		   IND_ENVI,
		   COD_CLIE_DUPL,
		   OID_CLIE_MADR,
		   NUM_LOTE,
		   SEC_NUME_DOCU,
		   COD_PERI)
		VALUES
		  (#codigoPais#,
		   #codigoCompania#,   
		   #codigoMadreDupla#,
		   #numeroDocumento#,
		   SYSDATE,
		   #apellido1#,
		   #apellido2#,
		   #nombre1#,
		   #nombre2#,
		   #fechaNacimiento#,
		   #email#,
		   #telefono#,
  		   #celular#,
		   #indicadorDuplaNueva#,
		   #indicadorActualizacion#,
		   #indicadorEnvio#,
		   #codigoClienteDupla#,
		   #oidMadreDupla#,
		   #numeroLote#,
		   #numeroSecuencia#,
		   #codigoPeriodo#)
	</insert>

	<insert id="insertSolicitudActualizacionDatos" parameterClass="java.util.Map">    	
		INSERT INTO INT_SOLIC_CONSO_ACTUA_DATOS
		  (COD_PAIS,
		   COD_COMP,
		   COD_CLIE,
		   NUM_DOCU,
		   FEC_PROC,
		   VAL_APE1, 
		   VAL_APE2, 
		   VAL_NOM1, 
		   VAL_NOM2, 
		   TIP_DOCU, 
		   NUM_DOCU_IDEN,
		   VAL_TELF_CLIE,
		   VAL_CELU_CLIE,
		   VAL_MAIL_CLIE,
		   NUM_LOTE,
		   SEC_NUME_DOCU,
		   COD_PERI,
		   DOCU_COD_TIPO_DOCU,
		   FEC_NACI
		   )
		VALUES
		  (#codigoPais#,
		   #codigoCompania#,   
		   #codigoCliente#,
		   #numeroDocumento#,
		   trunc(SYSDATE),
		   #apellido1#,
		   #apellido2#,
		   #nombre1#,
		   #nombre2#,
		   (SELECT a.COD_TIPO_DOCU 
 		      FROM MAE_TIPO_DOCUM A
			 WHERE A.OID_TIPO_DOCU = #tipoDocumento#),
		   #numeroDocumentoCliente#,
		   #telefonoCasa#,
		   #telefonoCelular#,
		   #mail#,
		   #numeroLote#,
		   #numeroSecuencia#,
		   #codigoPeriodo#,
		   #codigoTipoDocumento#,
		   #fechaNacimiento#
		   )
	</insert>
	
	<resultMap id="pedidosConsultoraResult"   class="java.util.HashMap">
        <result property="oidSoliCabecera"	column="OID_SOLI_CABE" javaType="java.lang.String"/>
    	<result property="fechaFactura" 	column="FEC_FACT_AUX"/>
    	<result property="campana" 			column="CAMPANHA"/> 
   		<result property="tipoSolicitud" 	column="TIPO_SOLICITUD"/>
   		<result property="origen" 	        column="ORIGEN"/>
   		<result property="nroBoleta" 		column="NRO_BOLETA"/>
   		<result property="monto" 			column="MONTO"/>
   		<result property="montoCatalogo" 	column="MONTO_CATALOGO"/>
		<result property="montoDescuento"   column="MONTO_DESCUENTO"/>
		<result property="gastoAdministrativo"   column="GASTO_ADMINISTRATIVO"/>
		<result property="flete"   column="FLETE"/>   		
        <result property="flexipago"   column="FLEXIPAGO"/>		
   		<result property="unidades" 		column="UNIDADES"/>
   		<result property="pedServicio" 		column="PED_SERVICIO"/>
   		<result property="territorio" 		column="TERRITORIO"/>
   		<result property="zona" 			column="ZONA"/>
   		<result property="indicadorChequeo" column="IND_CHEQUEO"/>
   		<result property="statusChequeo" column="STA_CHEQUEO"/>
   		<result property="flete1"   column="FLETE1"/>   	
   		<result property="secuencia"   column="SEC_NUME_DOCU"/>   	
   		<result property="numeroFactura"   column="NUMERO_DE_FACTURA"/>   	
    </resultMap>
 	
 	<!-- OBTIENE LA LISTA DE PRODUCTOS SOLICITADO POR LA CONSULTORA -->
    <select id="getPedidosConsultora" parameterClass="java.util.Map" resultMap="pedidosConsultoraResult">
      <isNotEmpty property="filas">
    	SELECT * 
		  FROM  (
      </isNotEmpty>
    
	    SELECT 
		  OID_SOLI_CABE,
		  TO_CHAR(FEC_FACT,'dd/MM/yyyy') FEC_FACT_AUX,
		  COD_PERI CAMPANHA,
		  G1.VAL_I18N TIPO_SOLICITUD,
		  HIP_PKG_CONSU.HIP_FN_OBTIE_ORIGE_PEDID_CONSO(OC.OID_OC, #codigoCliente#) ORIGEN,
		  VAL_NUME_SOLI NRO_BOLETA,
		  VAL_TOTA_PAGA_LOCA MONTO,
          VAL_PREC_CATA_TOTA_LOCA MONTO_CATALOGO,
		  VAL_IMPO_DESC_1_TOTA_LOCA MONTO_DESCUENTO,
		  VAL_TOTA_GAST_ADMI GASTO_ADMINISTRATIVO,
		  VAL_TOTA_FLET_LOCA FLETE1,
		  CCC_PKG_GENER.CCC_FN_OBTIE_MONTO_FLEXI_PEDID(OID_SOLI_CABE) FLEXIPAGO,
		  NUM_UNID_ATEN_TOTA UNIDADES, 
		  DECODE(OC.SOCA_OID_SOLI_CABE,null,1,0) as PED_SERVICIO,
		  COD_TERR TERRITORIO,
		  COD_ZONA ZONA,
	      CHEQUEO.IND_CHEQUEO IND_CHEQUEO,
         (SELECT IO.VAL_I18N
            FROM REC_RESUL_CHEQU RC, GEN_I18N_SICC_PAIS IO
           WHERE RC.OID_RESU_CHEQ = IO.VAL_OID
             AND IO.ATTR_ENTI = 'REC_RESUL_CHEQU'
             AND RC.OID_RESU_CHEQ = PED_SOLIC_CABEC.RECQ_OID_RESU_CHEQ) STA_CHEQUEO,
          PED_SOLIC_CABEC.VAL_IMPO_FLET_TOTA_LOCA FLETE,
          (SELECT c.sec_nume_docu
          FROM INT_SOLIC_CONSO_CABEC c
         WHERE c.soca_oid_soli_cabe_refe = oid_soli_cabe) sec_nume_docu,
                        (SELECT max(num_docu_cont_inte)
                  FROM fac_docum_conta_cabec c
                 WHERE c.soca_oid_soli_cabe = oid_soli_cabe and tido_oid_tipo_docu=1) NUMERO_DE_FACTURA             
		FROM
		  PED_SOLIC_CABEC,
		  MAE_CLIEN,
		  PED_TIPO_SOLIC_PAIS,
		  PED_TIPO_SOLIC,
		  GEN_I18N_SICC_COMUN G1,
		  CRA_PERIO,
		  SEG_PERIO_CORPO,
		  ZON_TERRI,
		  ZON_ZONA,
		  HIP_TIPO_SOLIC,
		  (SELECT   SOCA_OID_SOLI_CABE, OID_SOLI_CABE OID_OC
		   FROM   PED_SOLIC_CABEC A,
		    PED_TIPO_SOLIC C,
		    PED_TIPO_SOLIC_PAIS D,
		    MAE_CLIEN B
		 	WHERE B.COD_CLIE = #codigoCliente#
		    AND A.CLIE_OID_CLIE=B.OID_CLIE
		    AND A.IND_TS_NO_CONSO=1
		    AND A.IND_OC = 1
		    AND A.FEC_FACT IS NOT NULL
		    AND A.TSPA_OID_TIPO_SOLI_PAIS_CONS = D.OID_TIPO_SOLI_PAIS
		    AND D.TSOL_OID_TIPO_SOLI = C.OID_TIPO_SOLI
		    AND C.IND_SOLI_NEGA = 0) OC,
			(SELECT A1.OID_SOLI_CABE CAB, 
					A1.RECQ_OID_RESU_CHEQ IND_CHEQUEO
		      FROM PED_SOLIC_CABEC A1
		      WHERE A1.IND_TS_NO_CONSO = 0 
		            AND A1.RECQ_OID_RESU_CHEQ = 2009 ) CHEQUEO   		    	    
		WHERE COD_CLIE = #codigoCliente#
		  AND PED_SOLIC_CABEC.CLIE_OID_CLIE=OID_CLIE
		  AND TSPA_OID_TIPO_SOLI_PAIS=OID_TIPO_SOLI_PAIS
		  AND PED_TIPO_SOLIC_PAIS.TSOL_OID_TIPO_SOLI = PED_TIPO_SOLIC.OID_TIPO_SOLI
		  AND G1.ATTR_ENTI='PED_TIPO_SOLIC'
		  AND G1.VAL_OID=OID_TIPO_SOLI
		  AND CRA_PERIO.OID_PERI=PED_SOLIC_CABEC.PERD_OID_PERI
		  AND CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI
		  AND TERR_OID_TERR=OID_TERR
		  AND ZZON_OID_ZONA=OID_ZONA
		  AND IND_TS_NO_CONSO=0
		  AND FEC_FACT IS NOT NULL
		  AND OC.SOCA_OID_SOLI_CABE (+) = OID_SOLI_CABE
		  AND PED_TIPO_SOLIC.COD_TIPO_SOLI = HIP_TIPO_SOLIC.COD_TIPO_SOLI
		  AND CHEQUEO.CAB (+) = OID_SOLI_CABE
		ORDER BY FEC_FACT DESC, COD_PERI

	  <isNotEmpty property="filas">   
	   	<![CDATA[
	   		)				
			WHERE ROWNUM < #filas#									         
	    ]]>
      </isNotEmpty>	    	     	   
 	</select>
	
	<resultMap id="detallePedidoResult"   class="java.util.HashMap">
        <result property="tipoSolicitud"			column="TIPO_DE_SOLICITUD"/>
    	<result property="tipoPosicion" 			column="TIPO_POSICION"/>
    	<result property="codVenta" 				column="COD_VENTA"/> 
   		<result property="valCodVentaFict" 			column="VAL_CODI_VENT_FICT"/>
   		<result property="codSAP" 					column="COD_SAP"/>
   		<result property="descripcion" 				column="DESCRIPCION"/>
   		<result property="uddDemandadas" 			column="UDD_DEMANDADAS"/>
   		<result property="uddPorAtender" 			column="UDD_X_ATENDER"/>
   		<result property="uddAtendidas" 			column="UDD_ATENDIDAS"/>
   		<result property="precioFactura"			column="PRECIO_FACTURA"/>
    	<result property="precioFacturaTotal" 		column="PRECIO_FACTURA_TOTAL"/>
    	<result property="precioCatalogo" 			column="PRECIO_CATALOGO"/> 
    	<result property="precioCatalogoTotal" 		column="PRECIO_CATALOGO_TOTAL"/>
   		<result property="precioContable" 			column="PRECIO_CONTABLE"/>
   		<result property="porcentajeDescuento" 		column="PORC_DESC"/>
   		<result property="montoDescuento" 			column="MONTO_DESC"/>
   		<result property="tipoOferta" 				column="TIPO_OFERTA"/>
   		<result property="indicadorComisionable" 	column="IND_COMI"/>
   		<result property="observaciones" 			column="OBSERVACIONES"/>
   		<result property="oidSoli"              	column="OID_SOLI_POSI"/>
   		<result property="desMarca" 				column="DES_MARCA"/>
   		<result property="unidNego" 				column="UNID_NEGO"/>
   		<result property="desNego" 					column="DES_NEGO"/>
   		<result property="supeGene"              	column="SUPE_GENE"/>
   		<result property="desGene"              	column="DES_GENE"/>
    </resultMap>
 	
 	<!-- OBTIENE LA LISTA DE PRODUCTOS SOLICITADO POR LA CONSULTORA -->
    <select id="getDetallePedido" parameterClass="java.util.Map" resultMap="detallePedidoResult">
   	SELECT J.VAL_I18N TIPO_DE_SOLICITUD,
	  D.COD_TIPO_POSI TIPO_POSICION,
	  A.VAL_CODI_VENT COD_VENTA,
	  A.VAL_CODI_VENT_FICT,
	  B.COD_SAP COD_SAP,
	  G1.VAL_I18N DESCRIPCION,
	  A.NUM_UNID_DEMA UDD_DEMANDADAS,
	  A.NUM_UNID_POR_ATEN UDD_X_ATENDER,
	  A.NUM_UNID_ATEN UDD_ATENDIDAS,
	  A.VAL_PREC_FACT_UNIT_LOCA PRECIO_FACTURA,
	  A.VAL_PREC_FACT_TOTA_LOCA PRECIO_FACTURA_TOTAL,
	  A.VAL_PREC_CATA_UNIT_LOCA PRECIO_CATALOGO,
	  (A.NUM_UNID_ATEN * A.VAL_PREC_CATA_UNIT_LOCA) PRECIO_CATALOGO_TOTAL,
	  A.VAL_PREC_CONT_UNIT_LOCA PRECIO_CONTABLE,
	  A.VAL_PORC_DESC PORC_DESC,
	  A.VAL_IMPO_DESC_TOTA_LOCA MONTO_DESC,
	  F.COD_TIPO_OFER TIPO_OFERTA,
      (select des_marc_prod from SEG_MARCA_PRODU where oid_marc_prod = B.MAPR_OID_MARC_PROD)  DES_MARCA,
      (select VAL_I18N from GEN_I18N_SICC_PAIS where attr_enti = 'MAE_UNIDA_NEGOC' AND VAL_OID = B.UNEG_OID_UNID_NEGO) UNID_NEGO,
      (select VAL_I18N from GEN_I18N_SICC_PAIS where attr_enti = 'MAE_NEGOC' AND IDIO_OID_IDIO = 1 AND VAL_OID = B.NEGO_OID_NEGO) DES_NEGO,
      (select VAL_I18N from GEN_I18N_SICC_PAIS where attr_enti = 'MAE_SUPER_GENER' AND VAL_OID = B.SGEN_OID_SUPE_GENE) SUPE_GENE,      
      (select VAL_I18N from GEN_I18N_SICC_PAIS where attr_enti = 'MAE_GENER' AND VAL_OID = B.GENE_OID_GENE) DES_GENE,
	  F.IND_COMI,
	  <![CDATA[
	  (CASE 
         WHEN psp.COD_SUBT_POSI ='AM' THEN 'Monto Máximo'
         WHEN IND_LIMI_VENT = 1 AND (A.num_unid_dema-A.num_unid_dema_real)>0 THEN 'Faltante Anunciado'
         WHEN pep.COD_ESTA_POSI ='AN' AND psp.COD_SUBT_POSI <>'AM' AND IND_LIMI_VENT <> 1 THEN  'Regla de Negocio'
         WHEN psp.COD_SUBT_POSI ='MM' THEN 'Monto Minimo'
         WHEN preof.coes_oid_estr IN (2019,2020) THEN 'Pack Super.'
         ELSE NULL
        END) OBSERVACIONES
       ]]>,
       A.OID_SOLI_POSI
	FROM 
	  PED_SOLIC_POSIC A,
	  MAE_PRODU B,
	  GEN_I18N_SICC_PAIS G1,
	  PED_TIPO_POSIC D,
	  PRE_OFERT_DETAL E,
	  PRE_TIPO_OFERT F,
	  PED_SOLIC_CABEC G,
	  PED_TIPO_SOLIC_PAIS H,
	  PED_TIPO_SOLIC I,
	  GEN_I18N_SICC_COMUN J,
       PED_SUBTI_POSIC psp,        
       PED_ESTAD_POSIC pep,
       PRE_OFERT       preof
	WHERE 
	  A.PROD_OID_PROD=B.OID_PROD
	  AND G1.ATTR_ENTI='MAE_PRODU'
	  AND G1.VAL_OID=B.OID_PROD
	  AND A.TPOS_OID_TIPO_POSI=D.OID_TIPO_POSI
	  AND E.OID_DETA_OFER (+) = A.OFDE_OID_DETA_OFER 
	  AND E.TOFE_OID_TIPO_OFER = F.OID_TIPO_OFER (+)
	  AND A.SOCA_OID_SOLI_CABE = G.OID_SOLI_CABE
	  AND G.SOCA_OID_SOLI_CABE = #oidSoliCabecera#
	  AND G.TSPA_OID_TIPO_SOLI_PAIS = H.OID_TIPO_SOLI_PAIS
	  AND H.TSOL_OID_TIPO_SOLI = I.OID_TIPO_SOLI
	  AND J.ATTR_ENTI = 'PED_TIPO_SOLIC'
	  AND J.VAL_OID = I.OID_TIPO_SOLI
	  AND A.STPO_OID_SUBT_POSI = psp.OID_SUBT_POSI
      AND A.ESPO_OID_ESTA_POSI = pep.OID_ESTA_POSI
      AND E.OFER_OID_OFER      = preof.oid_ofer (+)
	<isNotEmpty property="codigoVentaLog">
	  AND A.VAL_CODI_VENT = #codigoVentaLog#
	</isNotEmpty>
 	</select>
	
	
	<resultMap id="consultaCdrRechazadosResult"   class="java.util.HashMap">
    	<result property="numLote" 				column="LOTE"/>
    	<result property="numReclamo" 			column="NUM_RECL"/>
    	<result property="docuReferencia" 		column="DOCUMENTO_REFERENCIA"/>    	 
   		<result property="fechaRegistro" 		column="FECHA_REGISTRO"/>
   		<result property="campanaAtencion" 		column="CAMPAÑA_DE_ATENCION"/>
   		<result property="campanaReferencia" 	column="CAMPAÑA_DE_REFERENCIA"/>
   		<result property="motivoRechazo" 		column="MOTIVO_RECHAZO"/>
   		<result property="codigoCliente" 		column="COD_CLIENTE"/>
   		<result property="codigoPeriodo" 		column="COD_PERI"/>
    </resultMap>

	 	<!-- OBTIENE CDR RECHAZADOS -->
  <select id="getConsultaCdrRechazados" parameterClass="java.util.Map" resultMap="consultaCdrRechazadosResult">
		SELECT   c.num_lote lote, c.num_docu num_recl,
		         c.num_docu_cruc documento_referencia,
		         TO_CHAR (c.fec_proc_docu, 'dd/MM/yyyy') fecha_registro,
		         DECODE
		            (c.oid_peri_recl,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                              (c.oid_peri_recl)
		            ) campaÑa_de_atencion,
		         DECODE
		            (c.oid_peri_refe,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                              (c.oid_peri_refe)
		            ) campaÑa_de_referencia,
		         mv.des_larg_mens motivo_rechazo, #codigoCliente# cod_cliente,
		         c.cod_peri cod_peri
		    FROM int_solic_conso_poven_cabec c,
		         sto_detal_docum_excep de,
		         sto_docum_digit dg,
		         sto_param_valid sp,
		         sto_mensa_valid mv,
		         mae_clien m
		   WHERE c.cod_pais = #codigoPais#
		     AND c.cod_pais = de.cod_pais
		     AND de.cod_pais = dg.cod_pais
		     AND dg.cod_pais = sp.cod_pais
		     AND sp.cod_pais = mv.cod_pais
		     AND de.cod_tipo_docu IN (#tipoDocumento#)
		     AND c.sec_nume_docu = dg.sec_nume_docu
		     AND m.cod_clie = c.cod_clie
		     AND dg.sec_nume_docu = de.sec_nume_docu
		     AND dg.ind_rech = 1
		     AND de.ind_leva_erro = 0
		     AND sp.cod_vali = de.cod_vali
		     AND de.cod_tipo_docu = c.docu_cod_tipo_docu
		     AND de.cod_tipo_docu = dg.cod_tipo_docu
		     AND mv.cod_vali = sp.cod_vali
		     AND m.cod_clie = #codigoCliente#
		UNION ALL
		SELECT   hc.num_lote lote, hc.num_docu num_recl,
		         hc.num_docu_cruc documento_referencia,
		         TO_CHAR (hc.fec_proc_docu, 'dd/MM/yyyy') fecha_registro,
		         DECODE
		            (hc.oid_peri_recl,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                             (hc.oid_peri_recl)
		            ) campaÑa_de_atencion,
		         DECODE
		            (hc.oid_peri_refe,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                             (hc.oid_peri_refe)
		            ) campaÑa_de_referencia,
		         mv.des_larg_mens motivo_rechazo, #codigoCliente# cod_cliente,
		         hc.cod_peri cod_peri
		    FROM int_histo_conso_poven_cabec hc,
		         sto_histo_detal_docum_excep hde,
		         sto_histo_docum_digit hdg,
		         sto_param_valid sp,
		         sto_mensa_valid mv,
		         mae_clien m
		   WHERE hc.cod_pais = #codigoPais#
		     AND hc.cod_pais = hde.cod_pais
		     AND hde.cod_pais = hdg.cod_pais
		     AND hdg.cod_pais = sp.cod_pais
		     AND sp.cod_pais = mv.cod_pais
		     AND hde.cod_tipo_docu IN (#tipoDocumento#)
		     AND hc.sec_nume_docu = hdg.sec_nume_docu
		     AND m.cod_clie = hc.cod_clie
		     AND hdg.sec_nume_docu = hde.sec_nume_docu
		     AND hdg.ind_rech = 1
		     AND hde.ind_leva_erro = 0
		     AND sp.cod_vali = hde.cod_vali
		     AND hde.cod_tipo_docu = hc.docu_cod_tipo_docu
		     AND hde.cod_tipo_docu = hdg.cod_tipo_docu
		     AND mv.cod_vali = sp.cod_vali
		     AND m.cod_clie = #codigoCliente#
		UNION ALL
		SELECT   c.num_lote lote, c.num_docu num_recl,
		         c.num_docu_cruc documento_referencia,
		         TO_CHAR (c.fec_proc_docu, 'dd/MM/yyyy') fecha_registro,
		         DECODE
		            (c.oid_peri_recl,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                              (c.oid_peri_recl)
		            ) campaÑa_de_atencion,
		         DECODE
		            (c.oid_peri_refe,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                              (c.oid_peri_refe)
		            ) campaÑa_de_referencia,
		         'RECHAZO PARCIAL' AS motivo_rechazo, #codigoCliente# cod_cliente,
		         c.cod_peri cod_peri
		    FROM int_solic_conso_poven_cabec c,
		         sto_docum_digit dg,
		         mae_clien m
		   WHERE c.cod_pais = #codigoPais#
		     AND dg.cod_tipo_docu IN (#tipoDocumento#)
		     AND c.sec_nume_docu = dg.sec_nume_docu
		     AND m.cod_clie = c.cod_clie
		     AND dg.ind_rech = 0
		     AND dg.ind_envi = 1
		     AND EXISTS (
		            SELECT 1
		              FROM sto_docum_digit dd
		             WHERE dd.sec_nume_docu_cabe = dg.sec_nume_docu
		                   AND dd.ind_rech = 1)
		     AND m.cod_clie = #codigoCliente#
		UNION ALL
		SELECT   hc.num_lote lote, hc.num_docu num_recl,
		         hc.num_docu_cruc documento_referencia,
		         TO_CHAR (hc.fec_proc_docu, 'dd/MM/yyyy') fecha_registro,
		         DECODE
		            (hc.oid_peri_recl,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                             (hc.oid_peri_recl)
		            ) campaÑa_de_atencion,
		         DECODE
		            (hc.oid_peri_refe,
		             NULL, NULL,
		             gen_pkg_gener.gen_fn_devuelve_des_perio
		                                                             (hc.oid_peri_refe)
		            ) campaÑa_de_referencia,
		         'RECHAZO PARCIAL' AS motivo_rechazo, #codigoCliente# cod_cliente,
		         hc.cod_peri cod_peri
		    FROM int_histo_conso_poven_cabec hc,
		         sto_histo_docum_digit hdg,
		         mae_clien m
		   WHERE hc.cod_pais = #codigoPais#
		     AND hdg.cod_tipo_docu IN (#tipoDocumento#)
		     AND hc.sec_nume_docu = hdg.sec_nume_docu
		     AND m.cod_clie = hc.cod_clie
		     AND hdg.ind_rech = 0
		     AND hdg.ind_envi = 1
		     AND EXISTS (
		            SELECT 1
		              FROM sto_histo_docum_digit hdd
		             WHERE hdd.sec_nume_docu_cabe = hdg.sec_nume_docu
		               AND hdd.ind_rech = 1)
		     AND m.cod_clie = #codigoCliente#
		ORDER BY 3, 1
 	</select>

	<resultMap id="detalleCdrRechazadosResult"   class="java.util.HashMap">
        <result property="operacion"				column="OPERACION" />
    	<result property="movimiento" 				column="MOVIMIENTO"/>
    	<result property="codVenta" 				column="CODIGO_VENTA"/>
    	<result property="descripcion" 				column="DESCRIPCION_PRODUCTO"/>    	 
   		<result property="cantidad" 				column="CANTIDAD"/>
   		<result property="precioFactura" 			column="PRECIO_FACTURA"/>
   		<result property="precioContable" 			column="PRECIO_CONTABLE"/>
   		<result property="motivoRechazo" 			column="MOTIVO_RECHAZO"/>
    </resultMap>

 	<!-- OBTIENE CDR RECHAZADOS -->
    <select id="getDetalleCdrRechazados" parameterClass="java.util.Map" resultMap="detalleCdrRechazadosResult">
		SELECT 
                    ROP.VAL_DESC_LARG OPERACION,
                    'DEVUELVE' MOVIMIENTO,
                    D.COD_VENT_DEVU CODIGO_VENTA,
                    INT_PKG_RECLA.GEN_FN_DESC_PROD(D.PROD_OID_PROD_DEVU) DESCRIPCION_PRODUCTO,
                    D.CAN_VENT_DEVU CANTIDAD,
                    D.VAL_PREC_CATA_DEVU PRECIO_FACTURA,
                    D.VAL_PREC_CONT_DEVU PRECIO_CONTABLE,                   
                    MV.DES_LARG_MENS MOTIVO_RECHAZO                    
             FROM 
                 INT_SOLIC_CONSO_POVEN_DETAL D,
                 INT_SOLIC_CONSO_POVEN_CABEC C,
                 STO_DETAL_DOCUM_EXCEP DE,
                 STO_DOCUM_DIGIT DG,
                 STO_PARAM_VALID SP,
                 MAE_CLIEN M,
                 STO_MENSA_VALID MV,
                 REC_OPERA  ROP
             WHERE  DE.COD_TIPO_DOCU IN (#tipoDocumentoDetalle#)
                 AND D.NUM_DOCU = C.NUM_DOCU
                 AND D.NUM_LOTE = C.NUM_LOTE
                 AND D.COD_CLIE = C.COD_CLIE
                 AND D.COD_PAIS = C.COD_PAIS
                 AND ROP.COD_OPER = D.COD_OPER
                 AND D.COD_PERI = C.COD_PERI
                 AND M.COD_CLIE = C.COD_CLIE
                 AND D.SEC_NUME_DOCU = DG.SEC_NUME_DOCU
                 AND DG.SEC_NUME_DOCU = DE.SEC_NUME_DOCU
                 AND DG.IND_RECH = 1
                 AND DE.IND_APRO = 0
                 AND DE.IND_LEVA_ERRO = 0
                 AND SP.COD_VALI = DE.COD_VALI
                 AND DE.COD_TIPO_DOCU = D.DOCU_COD_TIPO_DOCU
                 AND DE.COD_TIPO_DOCU = DG.COD_TIPO_DOCU
                 AND MV.COD_VALI = SP.COD_VALI
                 AND (D.PROD_OID_PROD_DEVU IS NOT NULL OR D.COD_VENT_DEVU IS NOT NULL)                 
                 AND C.NUM_LOTE = #numLote#
                 AND M.COD_CLIE = #codigoCliente#
                 AND C.COD_PERI = #codigoPeriodo#
                 AND C.NUM_DOCU = #numReclamo#
        UNION                                  
              SELECT ROP.VAL_DESC_LARG OPERACION,
                       'ENVIA' MOVIMIENTO,
                     D.COD_VENT_DESE CODIGO,
                     INT_PKG_RECLA.GEN_FN_DESC_PROD(D.PROD_OID_PROD_ENVI) DESCRIPCION_PRODUCTO,
                     D.CAN_PROD_DESE CANTIDAD,
                     D.VAL_PREC_CATA_ENVI PRECIO_FACTURA,  
                     D.VAL_PREC_CONT_ENVI PRECIO_CONTABLE,             
                     MV.DES_LARG_MENS MOTIVO_RECHAZO
              FROM INT_SOLIC_CONSO_POVEN_DETAL D,
                   INT_SOLIC_CONSO_POVEN_CABEC C,
                   STO_DETAL_DOCUM_EXCEP DE,
                   STO_DOCUM_DIGIT DG,
                   STO_PARAM_VALID SP,
                   MAE_CLIEN M,
                   STO_MENSA_VALID MV,
                   REC_OPERA  ROP
             WHERE  DE.COD_TIPO_DOCU IN (#tipoDocumentoDetalle#)
                 AND D.NUM_DOCU = C.NUM_DOCU
                 AND D.NUM_LOTE = C.NUM_LOTE
                 AND D.COD_CLIE = C.COD_CLIE
                 AND D.COD_PAIS = C.COD_PAIS
                 AND ROP.COD_OPER = D.COD_OPER
                 AND D.COD_PERI = C.COD_PERI
                 AND M.COD_CLIE = C.COD_CLIE
                 AND D.SEC_NUME_DOCU = DG.SEC_NUME_DOCU
                 AND DG.SEC_NUME_DOCU = DE.SEC_NUME_DOCU
                 AND DG.IND_RECH = 1
                 AND DE.IND_APRO = 0
                 AND DE.IND_LEVA_ERRO = 0
                 AND SP.COD_VALI = DE.COD_VALI
                 AND DE.COD_TIPO_DOCU = D.DOCU_COD_TIPO_DOCU
                 AND DE.COD_TIPO_DOCU = DG.COD_TIPO_DOCU
                 AND MV.COD_VALI = SP.COD_VALI
                 AND (D.PROD_OID_PROD_ENVI IS NOT NULL OR D.COD_VENT_DESE IS NOT NULL)
                 AND C.NUM_LOTE = #numLote#
                 AND M.COD_CLIE = #codigoCliente#
                 AND C.COD_PERI = #codigoPeriodo#
                 AND C.NUM_DOCU = #numReclamo#                                                           
     	UNION                
            SELECT 
                    ROP.VAL_DESC_LARG OPERACION,
                    'DEVUELVE' MOVIMIENTO,
                    HD.COD_VENT_DEVU CODIGO_VENTA,
                    INT_PKG_RECLA.GEN_FN_DESC_PROD(HD.PROD_OID_PROD_DEVU) DESCRIPCION_PRODUCTO,
                    HD.CAN_VENT_DEVU CANTIDAD,
                    HD.VAL_PREC_CATA_DEVU PRECIO_FACTURA,
                    HD.VAL_PREC_CONT_DEVU PRECIO_CONTABLE,                   
                    MV.DES_LARG_MENS MOTIVO_RECHAZO
             FROM 
                  INT_HISTO_CONSO_POVEN_DETAL HD,
                  INT_HISTO_CONSO_POVEN_CABEC HC,
                  STO_HISTO_DETAL_DOCUM_EXCEP HDE,
                  STO_HISTO_DOCUM_DIGIT HDG,
                  STO_PARAM_VALID SP,
                  MAE_CLIEN M,
                  STO_MENSA_VALID MV,
                  REC_OPERA  ROP
             WHERE  HDE.COD_TIPO_DOCU IN (#tipoDocumentoDetalle#)
                 AND HD.NUM_DOCU = HC.NUM_DOCU
                 AND HD.NUM_LOTE = HC.NUM_LOTE
                 AND HD.COD_CLIE = HC.COD_CLIE
                 AND HD.COD_PAIS = HC.COD_PAIS
                 AND ROP.COD_OPER = HD.COD_OPER
                 AND HD.COD_PERI = HC.COD_PERI
                 AND M.COD_CLIE = HC.COD_CLIE
                 AND HD.SEC_NUME_DOCU = HDG.SEC_NUME_DOCU
                 AND HDG.SEC_NUME_DOCU = HDE.SEC_NUME_DOCU
                 AND HDG.IND_RECH = 1
                 AND HDE.IND_APRO = 0
                 AND HDE.IND_LEVA_ERRO = 0
                 AND SP.COD_VALI = HDE.COD_VALI
                 AND HDE.COD_TIPO_DOCU = HD.DOCU_COD_TIPO_DOCU
                 AND HDE.COD_TIPO_DOCU = HDG.COD_TIPO_DOCU
                 AND MV.COD_VALI = SP.COD_VALI
                 AND (HD.PROD_OID_PROD_DEVU IS NOT NULL OR HD.COD_VENT_DEVU IS NOT NULL)
                 AND HC.NUM_LOTE = #numLote#
                 AND M.COD_CLIE = #codigoCliente#
                 AND HC.COD_PERI = #codigoPeriodo#
                 AND HC.NUM_DOCU = #numReclamo#                 
      UNION           
            SELECT ROP.VAL_DESC_LARG OPERACION,
                   'ENVIA' MOVIMIENTO,
                   HD.COD_VENT_DESE CODIGO,
                   INT_PKG_RECLA.GEN_FN_DESC_PROD(HD.PROD_OID_PROD_ENVI) DESCRIPCION_PRODUCTO,
                   HD.CAN_PROD_DESE CANTIDAD,
                   HD.VAL_PREC_CATA_ENVI PRECIO_FACTURA,  
                   HD.VAL_PREC_CONT_ENVI PRECIO_CONTABLE,             
                   MV.DES_LARG_MENS MOTIVO_RECHAZO
             FROM 
                   INT_HISTO_CONSO_POVEN_DETAL HD,
                   INT_HISTO_CONSO_POVEN_CABEC HC,
                   STO_HISTO_DETAL_DOCUM_EXCEP HDE,
                   STO_HISTO_DOCUM_DIGIT HDG,
                   STO_PARAM_VALID SP,
                   MAE_CLIEN M,
                   STO_MENSA_VALID MV,
                   REC_OPERA  ROP
             WHERE  HDE.COD_TIPO_DOCU IN (#tipoDocumentoDetalle#)
                 AND HD.NUM_DOCU = HC.NUM_DOCU
                 AND HD.NUM_LOTE = HC.NUM_LOTE
                 AND HD.COD_CLIE = HC.COD_CLIE
                 AND HD.COD_PAIS = HC.COD_PAIS
                 AND ROP.COD_OPER = HD.COD_OPER
                 AND HD.COD_PERI = HC.COD_PERI
                 AND M.COD_CLIE = HC.COD_CLIE
                 AND HD.SEC_NUME_DOCU = HDG.SEC_NUME_DOCU
                 AND HDG.SEC_NUME_DOCU = HDE.SEC_NUME_DOCU
                 AND HDG.IND_RECH = 1
                 AND HDE.IND_APRO = 0
                 AND HDE.IND_LEVA_ERRO = 0
                 AND SP.COD_VALI = HDE.COD_VALI
                 AND HDE.COD_TIPO_DOCU = HD.DOCU_COD_TIPO_DOCU
                 AND HDE.COD_TIPO_DOCU = HDG.COD_TIPO_DOCU
                 AND MV.COD_VALI = SP.COD_VALI
                 AND (HD.PROD_OID_PROD_ENVI IS NOT NULL OR HD.COD_VENT_DESE IS NOT NULL)
                 AND HC.NUM_LOTE = #numLote#
                 AND M.COD_CLIE = #codigoCliente#
                 AND HC.COD_PERI = #codigoPeriodo#
                 AND HC.NUM_DOCU = #numReclamo#                 
        UNION  
            SELECT ROP.VAL_DESC_LARG OPERACION,
                   'DEVUELVE' MOVIMIENTO,
                   D.COD_VENT_DEVU CODIGO_VENTA,
                   INT_PKG_RECLA.GEN_FN_DESC_PROD(D.PROD_OID_PROD_DEVU) DESCRIPCION_PRODUCTO,
                   D.CAN_VENT_DEVU CANTIDAD,
                   D.VAL_PREC_CATA_DEVU PRECIO_FACTURA,
                   D.VAL_PREC_CONT_DEVU PRECIO_CONTABLE,                  
                   MV.DES_MOTI_RECH  || '  ' || DG.VAL_OBSE_RECH_DEFI MOTIVO_RECHAZO                   
            FROM
                   INT_SOLIC_CONSO_POVEN_DETAL D,
                   INT_SOLIC_CONSO_POVEN_CABEC C,
                   STO_DETAL_DOCUM_EXCEP DE,
                   STO_DOCUM_DIGIT DG,
                   STO_PARAM_VALID SP,
                   MAE_CLIEN M,
                   STO_RECHA_MOTIV MV,
                   REC_OPERA  ROP,
                   (select distinct cod_oper , cod_oper_sicc from REC_DIGIT_HOMOL_OPER) rdh
            WHERE  DG.COD_TIPO_DOCU IN (#tipoDocumentoDetalle#)
                   AND D.NUM_DOCU = C.NUM_DOCU
                   AND D.NUM_LOTE = C.NUM_LOTE
                   AND D.COD_CLIE = C.COD_CLIE
                   AND D.COD_PAIS = C.COD_PAIS
                   AND D.TIP_REFE = rdh.cod_oper
                   AND ROP.COD_OPER(+) = rdh.COD_OPER_sicc
                   AND D.COD_PERI = C.COD_PERI
                   AND M.COD_CLIE = C.COD_CLIE
                   AND D.SEC_NUME_DOCU = DG.SEC_NUME_DOCU
                   AND DG.SEC_NUME_DOCU = DE.SEC_NUME_DOCU(+)
                   AND DG.IND_RECH = 1
                   AND SP.COD_VALI = DG.COD_ULTI_VALI_ERRO  
                   AND MV.COD_MOTI_RECH = DG.COD_MOTI_RECH
                   AND MV.COD_TIPO_DOCU = DG.COD_TIPO_DOCU
                   AND (D.PROD_OID_PROD_DEVU IS NOT NULL OR D.COD_VENT_DEVU IS NOT NULL)                
                   and DE.SEC_NUME_DOCU is null
                   AND C.NUM_LOTE = #numLote#
                   AND C.COD_CLIE = #codigoCliente#
                   AND C.COD_PERI = #codigoPeriodo#
                   AND C.NUM_DOCU = #numReclamo#
      UNION 
            SELECT ROP.VAL_DESC_LARG OPERACION,
                   'ENVIA' MOVIMIENTO,
                   D.COD_VENT_DESE CODIGO,
                   INT_PKG_RECLA.GEN_FN_DESC_PROD(D.PROD_OID_PROD_ENVI) DESCRIPCION_PRODUCTO,
                   D.CAN_PROD_DESE CANTIDAD,
                   D.VAL_PREC_CATA_ENVI PRECIO_FACTURA, 
                   D.VAL_PREC_CONT_ENVI PRECIO_CONTABLE,            
                   MV.DES_MOTI_RECH  || '  ' || DG.VAL_OBSE_RECH_DEFI MOTIVO_RECHAZO                   
             FROM INT_SOLIC_CONSO_POVEN_DETAL D,
                  INT_SOLIC_CONSO_POVEN_CABEC C,
                  STO_DETAL_DOCUM_EXCEP DE,
                  STO_DOCUM_DIGIT DG,
                  STO_PARAM_VALID SP,
                  MAE_CLIEN M,
                  STO_RECHA_MOTIV MV,
                  REC_OPERA  ROP,
                   (select distinct cod_oper , cod_oper_sicc from REC_DIGIT_HOMOL_OPER) rdh
             WHERE  DG.COD_TIPO_DOCU IN (#tipoDocumentoDetalle#)
                   AND D.NUM_DOCU = C.NUM_DOCU
                   AND D.NUM_LOTE = C.NUM_LOTE
                   AND D.COD_CLIE = C.COD_CLIE
                   AND D.COD_PAIS = C.COD_PAIS
                   and D.TIP_REFE = rdh.cod_oper
                   AND ROP.COD_OPER(+) = rdh.COD_OPER_sicc
                   AND D.COD_PERI = C.COD_PERI
                   AND M.COD_CLIE = C.COD_CLIE
                   AND D.SEC_NUME_DOCU = DG.SEC_NUME_DOCU
                   AND DG.SEC_NUME_DOCU = DE.SEC_NUME_DOCU(+)
                   AND DG.IND_RECH = 1
                   AND SP.COD_VALI = DG.COD_ULTI_VALI_ERRO  
                   AND MV.COD_MOTI_RECH = DG.COD_MOTI_RECH
                   AND MV.COD_TIPO_DOCU = DG.COD_TIPO_DOCU
                   AND (D.PROD_OID_PROD_ENVI IS NOT NULL OR D.COD_VENT_DESE IS NOT NULL)  
                   AND DE.SEC_NUME_DOCU is null
                   AND C.NUM_LOTE = #numLote#
                   AND M.COD_CLIE = #codigoCliente#
                   AND C.COD_PERI = #codigoPeriodo#
                   AND C.NUM_DOCU = #numReclamo#            
        order by 1,2
    </select>        
	
		
	<resultMap id="tipoPremiosResult"   class="java.util.HashMap">
    	<result property="numNivel" 			column="NUM_NIVE"/>
    	<result property="puntajeRequerido" 	column="PUNTAJE_REQUERIDO"/>
    	<result property="tipoPremio" 			column="TIPO_PREMIO"/>    	    		
    </resultMap>

	 	<!-- OBTIENE TIPO PREMIOS -->
   <select id="getListaTipoPremios" parameterClass="java.util.Map" resultMap="tipoPremiosResult">
   	   SELECT D.NUM_NIVE , 
       		  D.NUM_CANT_INIC_PUNT PUNTAJE_REQUERIDO, 
	   	      E.TPRM_OID_TIPO_PION TIPO_PREMIO
		FROM INC_CONCU_PARAM_GENER A,
			 INC_PARAM_NIVEL_PREMI D,
			 INC_PARAM_GENER_PREMI E
		WHERE A.OID_PARA_GRAL = E.COPA_OID_PARA_GRAL
		AND E.OID_PARA_GENE_PREM = D.PAGP_OID_PARA_GENE_PREM
		AND a.NUM_CONC = #nroConcurso#
		ORDER BY 1
   </select> 
   
   	<!-- IMPEDIDA DE PASAR CDR -->
    <select id="getImpedidaPasarCdr" parameterClass="java.util.Map" resultClass="string">
			   SELECT DISTINCT NVL(x.CLIE_OID_CLIE,'')
               FROM MAE_CLIEN_BLOQU x
               WHERE x.CLIE_OID_CLIE = #oidCliente#
                   AND x.FEC_DESB IS NULL
                   AND x.TIBQ_OID_TIPO_BLOQ IN(SELECT y.OID_TIPO_BLOQ
                                               FROM MAE_TIPO_BLOQU y
					                           WHERE y.COD_TIPO_BLOQ = 'BR')
		
	</select>
	
   	<!-- IMPEDIDA DE PASAR PEDIDO -->
    <select id="getImpedidaPasarPedido" parameterClass="java.util.Map" resultClass="string">
				SELECT DISTINCT NVL(B.COD_CLIE,'')
				FROM MAE_CLIEN_BLOQU A,
						 MAE_CLIEN B 
				WHERE 
					A.CLIE_OID_CLIE = B.OID_CLIE
					AND A.FEC_DESB IS NULL
					AND B.COD_CLIE = #codigoCliente#
					AND A.CLIE_OID_CLIE NOT IN (SELECT X.CLIE_OID_CLIE
	  							FROM MAE_CLIEN_BLOQU X,
									 MAE_ACCIO_PROCE_BLOQU Y,
								     MAE_ACCIO_BLOQU C,
								     MAE_PROCE_BLOQU D
	 							WHERE X.FEC_DESB IS NULL
									  AND X.CLIE_OID_CLIE = #oidCliente#
									  AND X.TIBQ_OID_TIPO_BLOQ = Y.TIBQ_OID_TIPO_BLOQ
									  AND Y.MABL_OID_ACCI_BLOQ = C.OID_ACCI_BLOQ
									  AND Y.MAPB_OID_PROC_BLOQ = D.OID_PROC_BLOQ
									  AND D.COD_PROC_BLOQ = 'FA'
									  AND C.COD_ACCI_BLOQ = 'FS')
		
	</select>
	
	<resultMap id="vinculoReferenciaResult"   class="java.util.HashMap">
        <result property="codigo"				column="CODIGO"/>
    	<result property="nombre" 				column="NOMBRE"/>
    	<result property="telefonoCasa" 		column="TELEFONO_CASA"/> 
   		<result property="telefonoCelular" 		column="TELEFONO_CELULAR"/>
   		<result property="referencia" 			column="REFERENCIA"/>
   		<result property="vinculo" 				column="VINCULO"/>
   		<result property="documentoIdentidad" 	column="DOC_IDENT"/>
   		<result property="vinculante" 	        column="VINCULANTE"/>
    </resultMap>
 	
 	<!-- OBTIENE LA LISTA DE VINCULOS Y REFERENCIAS DE  LA CONSULTORA -->
    <select id="getVinculosReferencias" parameterClass="java.util.Map" resultMap="vinculoReferenciaResult">
		(SELECT '' CODIGO,
		        A.VAL_NOM1 ||' '|| A.VAL_NOM2 ||' '|| A.VAL_APE1 ||' '|| A.VAL_APE2 NOMBRE, 
		        A.VAL_TELF TELEFONO_CASA, 
		        A.VAL_TELF_TRAB TELEFONO_CELULAR, 
		        C.DES_TIPO_REFER REFERENCIA, 
		        D.DES_TIPO_VINCU VINCULO, 
	            A.NUM_DOCU_REFE DOC_IDENT,
	            NULL  VINCULANTE
		   FROM MAE_REFER A,
		        MAE_TIPO_REFER C,
		        MAE_TIPO_VINCU_SSICC D
		  WHERE A.TIPO_REFE = C.COD_TIPO_REFER
		   AND A.TIPO_VINCU = D.COD_TIPO_VINCU
		   AND A.COD_CLIE = #codigoCliente#)
		
		UNION
		
		(SELECT C.COD_CLIE CODIGO,
		        C.VAL_NOM1||' '||  C.VAL_NOM2||' '||  C.VAL_APE1||' '||  C.VAL_APE2 NOMBRE, 
		        F.VAL_TEXT_COMU TELEFONO_CASA,
		        G.VAL_TEXT_COMU TELEFONO_CELULAR,
		        '' REFERENCIA,
		        D.VAL_I18N VINCULO,
	            E.NUM_DOCU_IDEN DOC_IDENT,
	            'SI'  VINCULANTE
		  FROM  MAE_CLIEN A,
		        MAE_CLIEN_VINCU  B,
		        MAE_CLIEN C,
		        GEN_I18N_SICC_PAIS D,
		        MAE_CLIEN_IDENT E,
		        MAE_CLIEN_COMUN F,
		        MAE_CLIEN_COMUN G
		  WHERE A.OID_CLIE = B.CLIE_OID_CLIE_VNTE
		    AND B.CLIE_OID_CLIE_VNDO = C.OID_CLIE
		    AND D.ATTR_ENTI = 'MAE_TIPO_VINCU'
		    AND D.VAL_OID = B.TIVC_OID_TIPO_VINC
		    AND D.IDIO_OID_IDIO = #oidIdioma#
		    AND E.CLIE_OID_CLIE (+) = C.OID_CLIE  
		    AND E.VAL_IDEN_DOCU_PRIN (+) = 1
		    AND G.CLIE_OID_CLIE (+) = C.OID_CLIE  
		    AND F.CLIE_OID_CLIE (+) = C.OID_CLIE  
		    AND F.TICM_OID_TIPO_COMU (+) = 1
		    AND G.TICM_OID_TIPO_COMU (+) = 6
		    AND A.COD_CLIE = #codigoCliente#
		    AND (B.FEC_HAST>= SYSDATE OR B.FEC_HAST IS NULL )
		)
		
		UNION
		
		(SELECT C.COD_CLIE CODIGO,
				C.VAL_NOM1||' '||  C.VAL_NOM2||' '||  C.VAL_APE1||' '||  C.VAL_APE2 NOMBRE,
				F.VAL_TEXT_COMU TELEFONO_CASA,
				G.VAL_TEXT_COMU TELEFONO_CELULAR,
				''REFERENCIA,
				D.VAL_I18N VINCULO,
		        E.NUM_DOCU_IDEN DOC_IDENT,
		        'NO'  VINCULANTE
	  	   FROM 
				MAE_CLIEN_VINCU  B,
				MAE_CLIEN C,
				MAE_CLIEN C1, 
				GEN_I18N_SICC_PAIS D,
				MAE_CLIEN_IDENT E,
				MAE_CLIEN_COMUN F,
				MAE_CLIEN_COMUN G
		  WHERE 
			    B.CLIE_OID_CLIE_VNTE = C.OID_CLIE
			AND B.CLIE_OID_CLIE_VNDO = C1.OID_CLIE  
			AND D.ATTR_ENTI = 'MAE_TIPO_VINCU'
			AND D.VAL_OID = B.TIVC_OID_TIPO_VINC 
			AND D.IDIO_OID_IDIO = #oidIdioma# 
			AND E.CLIE_OID_CLIE (+) = C.OID_CLIE  
			AND E.VAL_IDEN_DOCU_PRIN (+) = 1
			AND G.CLIE_OID_CLIE (+) = C.OID_CLIE  
			AND F.CLIE_OID_CLIE (+) = C.OID_CLIE  
			AND F.TICM_OID_TIPO_COMU (+) = 1
			AND G.TICM_OID_TIPO_COMU (+) = 6
			AND C1.COD_CLIE =#codigoCliente#
		)
		
		ORDER BY 5,6
 	</select>
	
	<!-- OBTIENE EL PROMEDIO DE VENTAS por 5 CAMPAÑAS DE LA CONSULTORA -->
    <select id="getPromedioVentasxCampanhas" parameterClass="java.util.Map" resultClass="string">
		SELECT HIP_PKG_CONSU.HIP_FN_OBTIE_PROME_VENTA_PEDID(#codigoPais#, #codigoMarca#, #codigoCanal#,
												#codigoRegion#, #codigoCliente#, #numeroPedidos#)
		  FROM DUAL		  
 	</select>
 
    <!-- OBTIENE LOS MEDIOS DE COMUNICACION DE LA CONSULTORA -->
    <select id="getMediosComunicacion" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT c.VAL_I18N as codigo, a.VAL_TEXT_COMU as descripcion, a. IND_COMU_PPAL 
		  FROM MAE_CLIEN_COMUN a,
		       GEN_I18N_SICC_COMUN c
		 WHERE a.TICM_OID_TIPO_COMU = c.VAL_OID
		   AND c.IDIO_OID_IDIO = 1
		   AND c.ATTR_ENTI = 'MAE_TIPO_COMUN'
		   AND clie_oid_clie = #oidCliente#
		 ORDER BY 3 DESC	    
    </select>
 
    <select id="getLiderSeccionList" parameterClass="java.util.Map" resultMap="getGerenteZonaResult">
		SELECT M.VAL_APE1,
			       M.VAL_APE2,
			       M.VAL_NOM1,
			       M.VAL_NOM2,
			       (SELECT c.val_text_comu
			          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
			         WHERE c.clie_oid_clie = cli.oid_clie
			           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
			           AND tc.cod_tipo_comu = 'TF'
			           AND cli.oid_clie = M.OID_CLIE
			           AND ROWNUM = 1) TELEFONO_CASA,
			       (SELECT c.val_text_comu
			          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
			         WHERE c.clie_oid_clie = cli.oid_clie
			           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
			           AND tc.cod_tipo_comu = 'ML'
			           AND cli.oid_clie = M.OID_CLIE
			           AND ROWNUM = 1) EMAIL,
			       (SELECT c.val_text_comu
			          FROM mae_clien_comun c, mae_tipo_comun tc, MAE_CLIEN cli
			         WHERE c.clie_oid_clie = cli.oid_clie
			           AND c.ticm_oid_tipo_comu = tc.oid_tipo_comu
			           AND tc.cod_tipo_comu = 'TM'
			           AND cli.oid_clie = M.OID_CLIE
			           AND ROWNUM = 1) CELULAR
		  	  FROM ZON_ZONA Z, ZON_SECCI S, MAE_CLIEN M
			   WHERE Z.COD_ZONA = #codZona#
		       AND S.ZZON_OID_ZONA = Z.OID_ZONA
		       AND S.COD_SECC = #codSeccion#
		       AND M.OID_CLIE = S.CLIE_OID_CLIE
	</select>
 
	<!-- OBTIENE LA CLASIFICACION LOVE DE LA CONSULTORA -->
    <select id="getClasificacionLove" parameterClass="java.util.Map" resultClass="string">
		SELECT pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma# , mcc.TCCL_OID_TIPO_CLASI, 'MAE_TIPO_CLASI_CLIEN')
		       ||' / '|| pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma# , mcc.CLAS_OID_CLAS, 'MAE_CLASI') AS "clasificacion"        
		FROM   MAE_CLIEN_TIPO_SUBTI mts,
		       MAE_TIPO_CLIEN mtc,
		       MAE_SUBTI_CLIEN mstc,
		       mae_clien_clasi mcc,
		       mae_clien mc,
		       MAE_LOVE_CLASI mlc
		WHERE
		      mc.OID_CLIE = mts.CLIE_OID_CLIE
		  AND mts.OID_CLIE_TIPO_SUBT = mcc.CTSU_OID_CLIE_TIPO_SUBT
		  AND mcc.CLAS_OID_CLAS = mlc.OID_CLAS
		  AND mcc.TCCL_OID_TIPO_CLASI = mlc.OID_TIPO_CLAS
		  AND mts.SBTI_OID_SUBT_CLIE = mlc.OID_SUBT_CLIE
		  AND mts.TICL_OID_TIPO_CLIE = mtc.OID_TIPO_CLIE
		  AND mtc.COD_TIPO_CLIE = '02' 
		  AND mts.SBTI_OID_SUBT_CLIE = mstc.OID_SUBT_CLIE
		  AND mstc.COD_SUBT_CLIE IN ('04', '06') 
		  AND mc.cod_clie = #codigoCliente#
 	</select>
 
    <resultMap id="basePremiosAtendidosFaltantesResult"    class="java.util.HashMap">
    	<result property="campanaFacturacion" 			column="COD_PERI"/>		    
    	<result property="boletaDespacho" 	     		column="VAL_NUME_SOLI"/>		    
    	<result property="documentoLegal"		    	column="DOC_LEGA"/>		    
    	<result property="fechaFacturacion"				column="FEC_FACT"/>		        	
    	<result property="cuv"							column="CUV"/>		    
    	<result property="codigoSAP"					column="COD_SAP"/>
    	<result property="descripcion"					column="DES_PROD"/>
    	<result property="unidadesDemandadas"			column="NUM_UNID_DEMA_REAL"/>		    
    	<result property="unidadesAtendidas"			column="NUM_UNID_ATEN"/>
    	<result property="unidadesFaltantes"			column="NUM_UNID_FALT"/>
    	<result property="fechaAtencionFaltante"		column="FEC_ATEN_FALT"/>
    	<result property="observacion"					column="VAL_OBSE"/>
    	<result property="usuarioAtencion"				column="USU_MODI"/>
	</resultMap>   
 
    <!-- OBTIENE LOS PREMIOS ATENDIDOS Y FALTANTES DE LA CONSULTORA Y UN DETERMINADO CONCURSO -->
    <select id="getPremiosAtendidosFaltantes" parameterClass="java.util.Map" resultMap="basePremiosAtendidosFaltantesResult">
		SELECT COR.COD_PERI, 
		       sc1.VAL_NUME_SOLI, 
		        I.VAL_I18N  AS  DOC_LEGA,
		       TO_CHAR(sc1.fec_fact,'DD/MM/YYYY') AS FEC_FACT,
		       SP.VAL_CODI_VENT_FICT AS CUV,
		       PROD.COD_SAP AS COD_SAP,
		       pq_apl_aux.Valor_Gen_I18n_Sicc(#oidIdioma#, PROD.OID_PROD, 'MAE_PRODU')  DES_PROD,
		       SP.NUM_UNID_DEMA_REAL,
		       SP.NUM_UNID_ATEN,
		       (SP.NUM_UNID_DEMA_REAL -  SP.NUM_UNID_ATEN) AS NUM_UNID_FALT,
		        TO_CHAR(FALT.FEC_SOLU,'DD/MM/YYYY') AS FEC_ATEN_FALT,
		        FALT.VAL_OBSE,
		        FALT.USU_MODI
		  FROM PED_SOLIC_CABEC SC,
		       PED_SOLIC_CABEC SC1, 
		       PED_SOLIC_POSIC SP,
		       INC_BOLSA_FALTA FALT,
		       CRA_PERIO PER,
		       SEG_PERIO_CORPO COR,
		       MAE_PRODU PROD,
		  	   MAE_CLIEN MC,
		  	   INC_CONCU_PARAM_GENER CCPG,
		        PED_TIPO_SOLIC_PAIS TSP,
                PED_TIPO_SOLIC TS,
                V_GEN_I18N_SICC I
		WHERE SC.FEC_FACT IS NOT NULL 
		  AND SC.OID_SOLI_CABE = SP.SOCA_OID_SOLI_CABE
		  AND sc.SOCA_OID_SOLI_CABE = SC1.OID_SOLI_CABE 
		  AND FALT.SOPO_OID_SOLI_POSI (+) = SP.OID_SOLI_POSI 
		  AND SC.PERD_OID_PERI = PER.OID_PERI
		  AND PER.PERI_OID_PERI = COR.OID_PERI
		  AND PROD.OID_PROD = SP.PROD_OID_PROD
		  AND SC.COPA_OID_PARA_GENE = CCPG.OID_PARA_GRAL
		  AND SP.ESPO_OID_ESTA_POSI <![CDATA[ <> ]]>2
		  AND CCPG.OID_PARA_GRAL  = #oidConcurso#
		  AND sc.CLIE_OID_CLIE =  MC.OID_CLIE 
		  AND MC.OID_CLIE = #oidCliente# 
           AND I.IDIO_OID_IDIO = 1
           AND I.ATTR_ENTI = 'PED_TIPO_SOLIC'
           AND I.VAL_OID = TS.OID_TIPO_SOLI
           AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
           AND SC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS
		  ORDER BY 1,4,5 DESC
    </select>  
 
    <resultMap id="baseRecomendacionesResult"    class="java.util.HashMap">
        <result property="numeroConcurso"       			column="NUM_CONC"/>
    	<result property="periodoRecomendacion" 			column="COD_PERI"/>		    
    	<result property="documentoIdentidad" 			    column="NUM_DOCU_IDEN"/>	    
    	<result property="codigoRecomendada" 	     		column="COD_CLIE"/>		    
    	<result property="nombreRecomendada"		    	column="NOM_RECO"/>		    
    	<result property="estadoRecomendacion"				column="EST_RECO"/>		        	
    	<result property="numeroPedidos"					column="NUM_PEDI"/>		    
    	<result property="venta_1erperiodo"					column="venta_1erperiodo"/>		   
    	<result property="venta_2doperiodo"					column="venta_2doperiodo"/>		
    	<result property="venta_3erperiodo"					column="venta_3erperiodo"/>		
    	<result property="retail_1erperiodo"				column="retail_1erperiodo"/>
    	<result property="retail_2doperiodo"				column="retail_2doperiodo"/>
    	<result property="retail_3erperiodo"				column="retail_3erperiodo"/>		
	</resultMap>   
 			
    <!-- OBTIENE LAS RECOMENDACIONES DE LA CONSULTORA Y UN DETERMINADO CONCURSO -->
    <select id="getRecomendaciones" parameterClass="java.util.Map" resultMap="baseRecomendacionesResult">
		SELECT ccpg.num_conc,
			   pc.cod_peri,
		       mc.cod_clie,
           mci.num_docu_iden,
		       mc.val_nom1 || ' ' || mc.val_nom2 || ' ' || mc.val_ape1 || ' ' ||
		       mc.val_ape2 AS NOM_RECO,
		       DECODE(NVL(rd.ind_efec,0),1,'EFECTIVA','NO EFECTIVA') AS EST_RECO,
		       (SELECT COUNT(1)
		     	    FROM PED_SOLIC_CABEC SC,
		               PED_SOLIC_CABEC SC2,
		          	   PED_TIPO_SOLIC_PAIS TSP,
		          	   PED_TIPO_SOLIC TS,
		          	   CRA_PERIO CRA,
		          	   SEG_PERIO_CORPO SPC
		    	   WHERE SC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS
		      		 AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
		           AND SC.SOCA_OID_SOLI_CABE=SC2.OID_SOLI_CABE
		       		 AND TS.COD_TIPO_SOLI  = 'SOC'
		      		 AND sc.CLIE_OID_CLIE  = rd.clie_oid_clie
	  		<![CDATA[		      		 
		      		 AND sc.PERD_OID_PERI >= rd.perd_oid_peri
		      		 AND sc.PERD_OID_PERI <= cra.OID_PERI
		           AND cra.PERI_OID_PERI = spc.OID_PERI
		           AND SC2.ESSO_OID_ESTA_SOLI <> 4
	       	]]>	      		 
		           AND spc.COD_PERI =
		               GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codPais#,  
		                                                PC.COD_PERI,
		                                                CPC.Num_Mini_Pedi_Reco - 1)) AS NUM_PEDI,                                                                                              
       NVL((SELECT SUM(SP.NUM_UNID_DEMA_REAL * SP.VAL_PREC_CATA_UNIT_LOCA)
             FROM PED_SOLIC_CABEC     SC,
		                  PED_SOLIC_CABEC SC2,
                  PED_SOLIC_POSIC     SP,
                  PED_TIPO_SOLIC      TS,
                  PED_TIPO_SOLIC_PAIS TSP
            WHERE SP.SOCA_OID_SOLI_CABE = SC.OID_SOLI_CABE
		              AND SC.PERD_OID_PERI =
		                  GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(PC.COD_PERI)
              AND SC.CLIE_OID_CLIE = MC.OID_CLIE
		              AND SC.SOCA_OID_SOLI_CABE=SC2.OID_SOLI_CABE
              AND SC.IND_OC = 1
              AND SC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS
              AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
              AND TS.COD_TIPO_SOLI = 'SOC'
               <![CDATA[ 
		              AND SC2.ESSO_OID_ESTA_SOLI <> 4
              AND SP.ESPO_OID_ESTA_POSI <> 2 
                ]]>
           ),
		           0) -
		           NVL((SELECT SUM(imp_mont_devu) FROM inc_pedid_concu_recom incp 
		                    WHERE incp.CLRE_OID_CLIE_REDO = rd.oid_clie_redo 
		                                AND incp.CLR3_OID_CLIE_RETE=rt.oid_clie_rete
		                                AND incp.perd_oid_peri  
		                                =GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(PC.COD_PERI)),0) 
		                                venta_1erperiodo,
		                          
              NVL((SELECT SUM(SP.NUM_UNID_DEMA_REAL * SP.VAL_PREC_CATA_UNIT_LOCA)
             FROM PED_SOLIC_CABEC     SC,
		                  PED_SOLIC_CABEC    SC2,
                  PED_SOLIC_POSIC     SP,
                  PED_TIPO_SOLIC      TS,
                  PED_TIPO_SOLIC_PAIS TSP
            WHERE SP.SOCA_OID_SOLI_CABE = SC.OID_SOLI_CABE
		              AND SC.PERD_OID_PERI =
		                  GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(
		                                            GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codPais#, 
		                                            PC.COD_PERI,1))
              AND SC.CLIE_OID_CLIE = MC.OID_CLIE
		              AND SC.SOCA_OID_SOLI_CABE=SC2.OID_SOLI_CABE              
              AND SC.IND_OC = 1
              AND SC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS
              AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
              AND TS.COD_TIPO_SOLI = 'SOC'
                <![CDATA[ 
		              AND SC2.ESSO_OID_ESTA_SOLI <> 4
              AND SP.ESPO_OID_ESTA_POSI <> 2   
              ]]>       
              ),
		           0) -
		            NVL((SELECT SUM(imp_mont_devu) FROM inc_pedid_concu_recom incp 
		                    WHERE incp.CLRE_OID_CLIE_REDO = rd.oid_clie_redo 
		                            AND incp.CLR3_OID_CLIE_RETE=rt.oid_clie_rete
		                            AND incp.perd_oid_peri  = 
		                            GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(
		                                            GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codPais#,  
		                                    PC.COD_PERI,1))),0) venta_2doperiodo,
              NVL(( SELECT SUM(SP.NUM_UNID_DEMA_REAL * SP.VAL_PREC_CATA_UNIT_LOCA)
             FROM PED_SOLIC_CABEC     SC,
		                  PED_SOLIC_CABEC SC2,
                  PED_SOLIC_POSIC     SP,
                  PED_TIPO_SOLIC      TS,
                  PED_TIPO_SOLIC_PAIS TSP
            WHERE SP.SOCA_OID_SOLI_CABE = SC.OID_SOLI_CABE
		              AND SC.PERD_OID_PERI =
		                  GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(
		                                           GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codPais#,  
		                                           PC.COD_PERI, 2))
              AND SC.CLIE_OID_CLIE = MC.OID_CLIE
		              AND SC.SOCA_OID_SOLI_CABE=SC2.OID_SOLI_CABE
              AND SC.IND_OC = 1
              AND SC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS
              AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
              AND TS.COD_TIPO_SOLI = 'SOC'
              AND SC.FEC_FACT IS NOT NULL
               <![CDATA[ 
		              AND SC2.ESSO_OID_ESTA_SOLI <> 4
              AND SP.ESPO_OID_ESTA_POSI <> 2
              ]]> 
            ),
		           0) -
		            NVL((SELECT SUM(imp_mont_devu) FROM inc_pedid_concu_recom incp 
		                        WHERE incp.CLRE_OID_CLIE_REDO = rd.oid_clie_redo 
		                            AND incp.CLR3_OID_CLIE_RETE=rt.oid_clie_rete
		                            AND incp.perd_oid_peri  = 
		                                GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(
		                                    GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codPais#, 
		                                          PC.COD_PERI, 2))),0) venta_3erperiodo,
		           (SELECT SUM(IMP_MONT_RETL) FROM inc_pedid_concu_recom incp 
		                WHERE incp.CLRE_OID_CLIE_REDO = rd.oid_clie_redo 
		                        AND incp.CLR3_OID_CLIE_RETE=rt.oid_clie_rete
		                        AND incp.perd_oid_peri  =
		                            GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(
		                                    PC.COD_PERI)) retail_1erperiodo,
		           (SELECT SUM(IMP_MONT_RETL) FROM inc_pedid_concu_recom incp 
		                WHERE incp.CLRE_OID_CLIE_REDO = rd.oid_clie_redo 
		                        AND incp.CLR3_OID_CLIE_RETE=rt.oid_clie_rete
		                        AND incp.perd_oid_peri  = 
		                            GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(
		                                    GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codPais#,  
		                                            PC.COD_PERI,1))) retail_2doperiodo,
		           (SELECT SUM(IMP_MONT_RETL) FROM inc_pedid_concu_recom incp 
		                WHERE incp.CLRE_OID_CLIE_REDO = rd.oid_clie_redo 
		                        AND incp.CLR3_OID_CLIE_RETE=rt.oid_clie_rete
		                        AND incp.perd_oid_peri  = 
		                            GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(
		                                GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codPais#,  
		                                           PC.COD_PERI, 2))) retail_3erperiodo
		 FROM INC_CLIEN_RECTE rt,
		      INC_CONCU_PARAM_GENER ccpg,
		       INC_CONCU_PARAM_CONSU    cpc,
		      INC_CLIEN_RECDO rd,
		      MAE_CLIEN mc,
		      CRA_PERIO cp,
          SEG_PERIO_CORPO pc,        
		       MAE_CLIEN_IDENT                  mci
    WHERE mc.oid_clie = mci.clie_oid_clie 
      AND mci.val_iden_docu_prin = 1       
      AND rt.oid_clie_rete = rd.clr3_oid_clie_rete
		  AND rt.COPA_OID_PARA_GRAL = ccpg.OID_PARA_GRAL
		  AND CCPG.OID_PARA_GRAL = CPC.COPA_OID_PARA_GRAL 
		   
		   <isNotEmpty prepend="AND" property="oidConcurso">
		   	  CCPG.OID_PARA_GRAL = #oidConcurso#
		   </isNotEmpty>
		   
		  AND rd.clie_oid_clie = mc.oid_clie
		  AND rd.perd_oid_peri = cp.oid_peri
		  AND cp.peri_oid_peri = pc.oid_peri
		  AND rt.clie_oid_clie = #oidCliente#  
		   AND (EXISTS (SELECT *
		                  FROM inc_pedid_concu_recom ped
		                 WHERE ped.clr3_oid_clie_rete = rt.oid_clie_rete
		                   AND clre_oid_clie_redo IS NULL) OR rt.ind_part = 1)
		ORDER BY ccpg.num_conc, pc.cod_peri, mc.cod_clie
    </select>
  
    <!-- OBTIENE LOS TIPOS DE VINCULOS -->
    <select id="getTiposVinculos" parameterClass="java.util.Map" resultMap="baseResult">
	    SELECT VIN.OID_TIPO_VINC AS CODIGO, I18N.VAL_I18N AS DESCRIPCION
	      FROM MAE_TIPO_VINCU VIN, V_GEN_I18N_SICC I18N
	     WHERE VIN.OID_TIPO_VINC = I18N.VAL_OID
	       AND I18N.IDIO_OID_IDIO = #oidIdioma#
	       AND I18N.ATTR_ENTI = 'MAE_TIPO_VINCU'
	     ORDER BY I18N.VAL_I18N 
    </select> 

    <resultMap id="baseHistoricoVinculosResult"    class="java.util.HashMap">
        <result property="codigoClienteVinculada"  	column="COD_CLIE"/>
    	<result property="nombreCliente" 			column="NOM_CLIE"/>		    
    	<result property="telefonoCasa" 	     	column="TEL_CASA"/>		    
    	<result property="telefonoCelular"		    column="TEL_CELU"/>		    
    	<result property="referencia"				column="REFERENCIA"/>		        	
    	<result property="vinculo"					column="DES_VINC"/>		    
    	<result property="fechaInicioVinculo"		column="FEC_INIC_VINC"/>
    	<result property="fechaFinVinculo"			column="FEC_FINA_VINC"/>
    	<result property="documentoIdentidad"		column="NUM_DOCU_IDEN"/>    	    	    	
    	<result property="vinculante"         		column="VINCULANTE"/>
	</resultMap>   
  
    <!-- OBTIENE EL HISTORICO DE VINCULOS DE LA CONSULTORA -->
    <select id="getHistoricoVinculos" parameterClass="java.util.Map" resultMap="baseHistoricoVinculosResult">
		SELECT 
		       A.COD_CLIE,
		       A.VAL_NOM1||' '||  A.VAL_NOM2||' '||  A.VAL_APE1||' '||  A.VAL_APE2 NOM_CLIE,
		       F.VAL_TEXT_COMU TEL_CASA,
		       G.VAL_TEXT_COMU TEL_CELU,
		       '' REFERENCIA,
		       D.VAL_I18N DES_VINC,
		       TO_CHAR(b.FEC_DESD,'DD/MM/YYYY') AS FEC_INIC_VINC,
		       TO_CHAR(b.FEC_HAST,'DD/MM/YYYY') AS FEC_FINA_VINC,
               E.NUM_DOCU_IDEN,
               CASE   WHEN  A1.OID_CLIE = B.CLIE_OID_CLIE_VNTE THEN   'SI'
               ELSE   'NO'
               END VINCULANTE
		FROM 
		     MAE_CLIEN A,
		     MAE_CLIEN A1,
		     MAE_CLIEN_VINCU  B,
		     GEN_I18N_SICC_PAIS D,
		     MAE_CLIEN_IDENT E,
		     MAE_CLIEN_COMUN F,
		     MAE_CLIEN_COMUN G,
		     MAE_TIPO_VINCU TV
		WHERE 
          ((A.OID_CLIE = B.CLIE_OID_CLIE_VNDO AND  A1.OID_CLIE = B.CLIE_OID_CLIE_VNTE)OR  (A1.OID_CLIE = B.CLIE_OID_CLIE_VNDO AND  A.OID_CLIE = B.CLIE_OID_CLIE_VNTE))
		  AND D.ATTR_ENTI = 'MAE_TIPO_VINCU'
		  AND D.VAL_OID = B.TIVC_OID_TIPO_VINC 
		  AND D.IDIO_OID_IDIO = #oidIdioma#
		  AND E.CLIE_OID_CLIE (+) = A.OID_CLIE  
		  AND E.VAL_IDEN_DOCU_PRIN (+) = 1
		  AND G.CLIE_OID_CLIE (+) = A.OID_CLIE  
		  AND F.CLIE_OID_CLIE (+) = A.OID_CLIE  
		  AND F.TICM_OID_TIPO_COMU (+) = 1
		  AND G.TICM_OID_TIPO_COMU (+) = 6
		  AND A1.OID_CLIE = #oidCliente#  
		  AND B.TIVC_OID_TIPO_VINC = TV.OID_TIPO_VINC
		
		<isNotEmpty property="oidTiposVinculos">    
			<iterate prepend="AND" property="oidTiposVinculos" open="(" close=")" conjunction="OR">
		  	TV.OID_TIPO_VINC = #oidTiposVinculos[]#    
         	</iterate>                                  
		</isNotEmpty>   
		  
		ORDER BY B.TIVC_OID_TIPO_VINC, B.FEC_DESD DESC
	</select>    
  
    <!-- OBTENER FECHA CASTIGADA DE UN CLIENTE -->
    <select id="getFechaCastigada" parameterClass="java.util.Map" resultClass="string">
		SELECT TO_CHAR(FEC_CAST,'DD/MM/YYYY')
		FROM   CCC_CLIEN_CASTI 
		WHERE  OID_CLIE= #oidCliente#    
	</select>
	
	<!-- OBTENER LIMITE DE CREDITO DE UN CLIENTE -->
    <select id="getLimiteCredito" parameterClass="java.util.Map" resultClass="string">
		SELECT HIP_PKG_CONSU.HIP_FN_DEVUE_LIMIT_CREDI(#oidCliente#,#oidNivelRiesgo#) from dual  
	</select>
	
    <resultMap id="getSaldoVencidosResult" 	class="java.util.HashMap">
    	<result property="saldoVencido"    	column="SAL_VENC" javaType="java.lang.String"/>
		<result property="saldoPorVencer" 	column="SAL_POR_VENC" javaType="java.lang.String"/>
    </resultMap>
    
	<!-- OBTIENE EL SALDO VENCIDO y SALDO POR VENCER -->
    <select id="getSaldoVencidos" parameterClass="java.util.Map" resultMap="getSaldoVencidosResult">
		SELECT ccc_pkg_gener.ccc_fn_obtie_saldo_venci (TO_NUMBER(#oidCliente#)) AS SAL_VENC,
					 ccc_pkg_gener.ccc_fn_obtie_saldo_pvence (TO_NUMBER(#oidCliente#)) AS SAL_POR_VENC
		  FROM DUAL
 	</select>            
	
	<!-- Obtiene el Estado de la Solicitud de Poliza de la Consultora -->
    <select id="getEstadoSolicitudPoliza" parameterClass="java.util.Map" resultClass="string">
		SELECT HIP_PKG_CONSU.HIP_FN_DEVUE_ESTAT_SOLIC_POLIZ(#codigoCliente#)
		  FROM DUAL
 	</select>
	
    <!-- Obtiene las fechas de Cobertura de la Poliza -->
    <select id="getFechasCoberturaPoliza" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT TO_CHAR(FEC_INIC_POLI,'dd-MM-yyyy') as CODIGO, 
		       TO_CHAR(FEC_FINA_POLI, 'dd-MM-yyyy') as DESCRIPCION
		 FROM ( 
		      SELECT FEC_INIC_POLI, FEC_FINA_POLI
		        FROM CCC_HISTO_CARGO_FAMIL_SEGUR
		       WHERE COD_CLIE = #codigoCliente#
		       ORDER BY FEC_INIC_POLI DESC) 
		WHERE ROWNUM = 1 
    </select>
  
    <resultMap id="baseSolicitudesPolizaResult"    class="java.util.HashMap">
    	<result property="fechaSolicitud"          column="FEC_SOLI"/>
    	<result property="codigoPoliza"            column="POLI_COD_POLI"/>		
    	<result property="numeroPoliza"            column="NUM_POLI"/>		
    	<result property="estadoSolicitud"         column="EST_POLI"/>		
    	<result property="motivoRechazo"           column="MOT_RECH"/>		
    	<result property="fechaInicioCobertura"    column="FEC_INIC_COBE"/>		    	    	    	    	    	    	    	    	    	    	    	    	
    	<result property="fechaFinCobertura"       column="FEC_FIN_COBE"/>		
    </resultMap>
  
	<!-- OBTIENE LAS SOLICITUDES DE POLIZA DE LA CONSULTORA -->
    <select id="getSolicitudesPoliza" parameterClass="java.util.Map" resultMap="baseSolicitudesPolizaResult">
		SELECT TO_CHAR(FEC_SOLI,'dd/MM/yyyy') FEC_SOLI ,
			   FEC_SOLI FEC_SOLI_ORDE,
			   POLI_COD_POLI,
		       NUM_POLI,
		       EST_POLI,
		       MOT_RECH,
		       FEC_INIC_COBE,
		       FEC_FIN_COBE
		FROM
			(SELECT TRUNC(pol.Fec_Soli) FEC_SOLI, 
			        pol.POLI_COD_POLI,
			       pol.NUM_POLI,
			       DECODE(pol.est_poli, '1', 'Registrada', '3', 'Activa', '4', 'Cancelada') EST_POLI,
			       '' MOT_RECH,
			       (SELECT TO_CHAR(MIN(FEC_INIC_POLI),'dd/MM/yyyy')
			        FROM CCC_HISTO_CARGO_FAMIL_SEGUR
			        WHERE COD_POLI = pol.POLI_COD_POLI
			          AND COD_CLIE = pol.Cod_Clie
			          AND NUM_POLI = pol.Num_Poli) FEC_INIC_COBE,
			       (SELECT TO_CHAR(MAX(FEC_FINA_POLI),'dd/MM/yyyy')
			        FROM CCC_HISTO_CARGO_FAMIL_SEGUR
			        WHERE COD_POLI = pol.POLI_COD_POLI
			          AND COD_CLIE = pol.Cod_Clie
			          AND NUM_POLI = pol.Num_Poli) FEC_FIN_COBE
			 FROM SGR_FAMSE_POLIZ_REGIS pol
			WHERE COD_CLIE = #codigoCliente#
			  AND EST_REGI = '1'
			  
			UNION ALL
			
			SELECT TRUNC(fs.FEC_PROC),
				   '',
			       '',
			       'Rechazada',
			       (SELECT DES_MOTI_RECH FROM STO_RECHA_MOTIV WHERE COD_TIPO_DOCU = 'FAS' AND COD_MOTI_RECH = fs.Mot_Rech_Ocr) MOT_RECH,
			       '',
			       ''
			  FROM STO_DOCUM_DIGIT        dd,
			       INT_SOLIC_CONSO_FAMIL_SEGUR fs      
			WHERE dd.sec_nume_docu = fs.sec_nume_docu
			  AND dd.cod_tipo_docu = 'FAS'  
			  AND dd.cod_clie = #codigoCliente#
			  AND dd.Ind_Rech = '1'
			)
		ORDER BY FEC_SOLI_ORDE DESC
    </select>

    <resultMap id="baseHistoricoCargosPolizaResult"    class="java.util.HashMap">
    	<result property="codigoPeriodo"          column="COD_PERI"/>		
    	<result property="fechaInicioPoliza"      column="FEC_INIC_POLI"/>		
    	<result property="fechaFinPoliza"         column="FEC_FINA_POLI"/>		
    </resultMap>
  
	<!-- OBTIENE EL HISTORICO DE CARGOS DE LA SOLICITUD DE POLIZA DE LA CONSULTORA -->
    <select id="getHistoricoCargosPoliza" parameterClass="java.util.Map" resultMap="baseHistoricoCargosPolizaResult">
		SELECT COD_PERI, 
			   TO_CHAR(FEC_INIC_POLI,'dd/MM/yyyy') FEC_INIC_POLI, 
			   TO_CHAR(FEC_FINA_POLI,'dd/MM/yyyy') FEC_FINA_POLI
		  FROM CCC_HISTO_CARGO_FAMIL_SEGUR
		 WHERE COD_CLIE = #codigoCliente#
		   AND COD_POLI = #codigoPoliza#
		   AND NUM_POLI = #numeroPoliza#
		 ORDER BY 1, 2
    </select>
    
    <select id="getObtenerMontoPlanSuperacion" parameterClass="java.util.Map" resultClass="string">
    
     SELECT SUM(val_prec_cata_unit_loca * num_unid_dema_real)
         FROM ped_solic_posic a,
              pre_ofert_detal b,
              pre_ofert       c,
              ped_solic_cabec d
        WHERE a.ofde_oid_deta_ofer = b.oid_deta_ofer
          AND b.ofer_oid_ofer = c.oid_ofer
          AND c.coes_oid_estr NOT IN (2019,2020)
          AND a.soca_oid_soli_cabe = d.oid_soli_cabe
          AND d.soca_oid_soli_cabe = #oidSoliCabecera#
          AND d.ind_oc = 1		
    </select>
    		    	
    		    	
    <select id="validarImagenesEscaneoSC" parameterClass="string" resultClass="string">
    	SELECT COUNT(1) 
		  FROM  OCR_SOLIC_CREDI_TRANS
         WHERE COD_CLIE = #value#
    </select>
    
    <resultMap id="baseDatosClienteEscaneoSCResult"    class="java.util.HashMap">
    	<result property="codigoCliente"          column="COD_CLIE"/>		
    	<result property="documentoIdentidad"     column="NUM_DOCU_IDEN"/>		
    	<result property="nombreCliente"          column="NOM_CLIE"/>		
    	<result property="region"                 column="DES_REGI"/>
    	<result property="zona"                   column="DES_ZONA"/>
    	<result property="imagen"                 column="IMG_CLIE"/>
    </resultMap>
  
    <select id="getDatosClienteEscaneoSC" parameterClass="java.util.Map" resultMap="baseDatosClienteEscaneoSCResult">
        SELECT cli.COD_CLIE,
               ide.NUM_DOCU_IDEN,
               CLI.VAL_NOM1 || ' ' || CLI.VAL_NOM2 || ' ' || CLI.VAL_APE1 || ' ' || CLI.VAL_APE2 NOM_CLIE,
               reg.DES_REGI,
               zon.DES_ZONA,
               decode((select 1 from OCR_SOLIC_CREDI_TRANS tra where tra.cod_clie = cli.Cod_Clie), 1, 'SI', 'NO') IMG_CLIE
          FROM MAE_CLIEN cli,
               MAE_CLIEN_IDENT ide,
               MAE_CLIEN_UNIDA_ADMIN uni,
               ZON_TERRI_ADMIN adm,
               ZON_SECCI sec,
               ZON_ZONA zon,
               ZON_REGIO reg
         WHERE cli.oid_clie = ide.clie_oid_clie
           AND ide.val_iden_docu_prin = 1
           AND cli.oid_clie = uni.clie_oid_clie
           AND uni.ind_acti = 1
           AND uni.ztad_oid_terr_admi = adm.oid_terr_admi
           AND adm.zscc_oid_secc = sec.oid_secc
           AND sec.zzon_oid_zona = zon.oid_zona
           AND zon.zorg_oid_regi = reg.oid_regi
    
		   <isNotEmpty prepend="AND" property="codigoCliente">
		   	  cli.COD_CLIE = #codigoCliente#
		   </isNotEmpty>
		   		   
		   <isNotEmpty prepend="AND" property="documentoIdentidad">
		   	  ide.NUM_DOCU_IDEN = #documentoIdentidad#
		   </isNotEmpty>
		
		   <isNotEmpty prepend="AND" property="indRetiradas">
		   		FIN_PKG_GENER.FIN_FN_OBTIE_RETIR_SINDE(cli.OID_CLIE) = 1
		   </isNotEmpty>		          
    </select>

    <select id="getDatosTodosClienteEscaneoSC" parameterClass="java.util.Map" resultMap="baseDatosClienteEscaneoSCResult">
		SELECT cli.COD_CLIE,
		       ide.NUM_DOCU_IDEN,
		       CLI.VAL_NOM1 || ' ' || CLI.VAL_NOM2 || ' ' || CLI.VAL_APE1 || ' ' || CLI.VAL_APE2 NOM_CLIE,
		       reg.DES_REGI,
		       zon.DES_ZONA,
		       'S' IMG_CLIE
		  FROM MAE_CLIEN cli,
		       OCR_SOLIC_CREDI_TRANS tra,
		       MAE_CLIEN_IDENT ide,
		       MAE_CLIEN_UNIDA_ADMIN uni,
		       ZON_TERRI_ADMIN adm,
		       ZON_SECCI sec,
		       ZON_ZONA zon,
		       ZON_REGIO reg
		 WHERE cli.Cod_Clie = tra.cod_clie
		   AND ide.val_iden_docu_prin = 1
		   AND cli.oid_clie = ide.clie_oid_clie
		   AND cli.oid_clie = uni.clie_oid_clie
		   AND uni.ind_acti = 1
		   AND uni.ztad_oid_terr_admi = adm.oid_terr_admi
		   AND adm.zscc_oid_secc = sec.oid_secc
		   AND sec.zzon_oid_zona = zon.oid_zona
		   AND zon.zorg_oid_regi = reg.oid_regi
	   	   AND FIN_PKG_GENER.FIN_FN_OBTIE_RETIR_SINDE(cli.OID_CLIE) = 1
    </select>
  
    <delete id="deleteImagenesEscaneoSC" parameterClass="string">
    	DELETE FROM OCR_SOLIC_CREDI_TRANS
         WHERE COD_CLIE = #value#
    </delete>
  
    <resultMap id="baseDatosCodigoVentaPrincipalResult"    class="java.util.HashMap">
    	<result property="codigoPeriodo" 	    	column="COD_PERI"/>
    	<result property="codigoVenta"    			column="COD_VENT"/>
		<result property="estrategia" 				column="ESTRATEGIA" />
    	<result property="codigoSAP" 				column="COD_SAP"/>
    	<result property="descripcionProducto"		column="DESC_PRODUCTO"/>
    	<result property="indPrincipal" 			column="IND_PROD_PRIN"/>    	
    	<result property="numeroGrupo"		 		column="NUM_GRUP"		   javaType="java.lang.String"/>
    	<result property="tipoOferta" 				column="TIPO_OFERTA"/>
    	<result property="precioCatalogo" 			column="PRECIO_CATALOGO"   javaType="java.lang.String"/>
    	<result property="precioPosicionamiento" 	column="PRECIO_CONTABLE"   javaType="java.lang.String"/>    	
    	<result property="factorRepeticion" 		column="VAL_FACT_REPE"	   javaType="java.lang.String"/>    	    	    	
    	<result property="indAplicaComisiones" 		column="IND_COMISIONES"/>
        <result property="indEstadisticable" 		column="IND_ESTADISTICA"/>    	
    	<result property="indAplicaPuntajes" 		column="IND_PUNTAJES"/>
    	<result property="codigoCatalogo" 			column="COD_CATA"/>
    	<result property="descripcionCatalogo" 		column="DES_CATA"/>
    	<result property="numeroPagina" 			column="NUM_PAGI_CATA"		javaType="java.lang.String"/>
    	<result property="numeroOferta" 			column="NUM_OFER"/>
    	<result property="formaPago" 				column="FORMA_PAGO"/>
    	<result property="indCuadre"	 			column="COD_INDI_CUAD"/>
    	<result property="factorCuadre" 			column="COD_FACT_CUAD"/>
    	<result property="indDespAuto"	 			column="IND_DESP_AUTO"/>
    	<result property="indDespCompl" 			column="IND_DESP_COMPL"/>
    	<result property="indDigitable" 			column="IND_DIGI"/>
    	<result property="productoReemplazo" 		column="PROD_REEMP"/>
    	<result property="productoAlternativo" 		column="PROD_ALTER"/>
    </resultMap>
    
    <select id="getDatosCodigoVentaPrincipal" parameterClass="java.util.Map" resultMap="baseDatosCodigoVentaPrincipalResult">
		SELECT peri.val_nomb_peri AS COD_PERI,
		       ofedet.val_codi_vent COD_VENT,
		       i18est.val_i18n ESTRATEGIA,
		       prod.COD_SAP,
		       i18prod.val_i18n AS DESC_PRODUCTO,
		       DECODE(ofedet.IND_PROD_PRIN, 1, 'SI', 'NO') IND_PROD_PRIN,
		       
		       (SELECT gof.num_grup
		          FROM pre_grupo_ofert gof
		         WHERE ofedet.gofe_oid_grup_ofer = gof.oid_grup_ofer) AS NUM_GRUP,
		       
		       i18tipofert.val_i18n AS TIPO_OFERTA,
		       ofedet.imp_prec_cata PRECIO_CATALOGO,
		       ofedet.imp_prec_posi PRECIO_CONTABLE,
		       ofedet.VAL_FACT_REPE,
		       DECODE(tofe.ind_comi, 1, 'SI', 'NO') IND_COMISIONES,
		       DECODE(tofe.ind_esta, 1, 'SI', 'NO') IND_ESTADISTICA,
		       DECODE(tofe.ind_punt, 1, 'SI', 'NO') IND_PUNTAJES,
		       cat.COD_CATA,
		       cat.DES_CATA,
		       ofedet.NUM_PAGI_CATA,
		       ofe.NUM_OFER,
		       
		       (SELECT val_i18n
		          FROM gen_i18n_sicc_comun
		         WHERE attr_enti = 'BEL_FORMA_PAGO'
		           AND val_oid = ofedet.fopa_oid_form_pago) FORMA_PAGO,
		       
		       (SELECT ic.cod_indi_cuad
		          FROM pre_indic_cuadr            ic,
		               pre_indic_cuadr_tipo_estra icte
		         WHERE icte.indc_oid_indi_cuad = ic.oid_ind_cuad
		           AND icte.oid_ind_cuad_tipo_estr =
		               (SELECT gof.cues_oid_ind_cuad_tipo_estr
		                  FROM pre_grupo_ofert gof
		                 WHERE ofedet.gofe_oid_grup_ofer = gof.oid_grup_ofer)) COD_INDI_CUAD,
		       
		       (SELECT gof.cod_fact_cuad
		          FROM pre_grupo_ofert gof
		         WHERE ofedet.gofe_oid_grup_ofer = gof.oid_grup_ofer) AS COD_FACT_CUAD,
		       
		       DECODE(ofe.ind_desp_auto, 1, 'SI', 'NO') IND_DESP_AUTO,
		       DECODE(ofe.ind_desp_compl, 1, 'SI', 'NO') IND_DESP_COMPL,
		       DECODE(ofedet.ind_digi, 1, 'SI', 'NO') IND_DIGI,
		       
		       (select c_REEMP.val_codi_vent || ' - ' || pq_apl_aux.Valor_Gen_I18n_Sicc(1, c_reemp.prod_oid_prod, 'MAE_PRODU')
		          from pre_matri_factu_cabec a,
		               pre_ofert             b,
		               pre_ofert_detal       c,
		               cra_perio             d,
		               seg_perio_corpo       e,
		               pre_matri_factu       f,
		               PRE_MATRI_REEMP       g,
		               pre_matri_factu       h,
		               PRE_OFERT_DETAL       c_reemp
		         where a.OID_CABE = b.MFCA_OID_CABE
		           and b.oid_ofer = c.OFER_OID_OFER
		           and c.val_codi_vent = ofedet.val_codi_vent
		           AND a.perd_oid_peri = d.OID_PERI
		           and d.PERI_OID_PERI = e.oid_peri
		           AND e.cod_peri = seg_perio_corpo.cod_peri
		           and f.OFDE_OID_DETA_OFER = C.OID_DETA_OFER
		           and g.MAFA_OID_COD_PPAL = f.OID_MATR_FACT
		           and g.MAFA_OID_COD_REEM = h.OID_MATR_FACT
		           AND h.OFDE_OID_DETA_OFER = C_REEMP.OID_DETA_OFER
		           and g.ind_acti = '1') AS PROD_REEMP,
		       
		       (select c_alter.val_codi_vent || ' - ' || pq_apl_aux.Valor_Gen_I18n_Sicc(1, c_alter.prod_oid_prod, 'MAE_PRODU')
		          from pre_matri_factu_cabec a,
		               pre_ofert             b,
		               pre_ofert_detal       c,
		               cra_perio             d,
		               seg_perio_corpo       e,
		               pre_matri_factu       f,
		               PRE_MATRI_CODIG_ALTER g,
		               pre_matri_factu       h,
		               PRE_OFERT_DETAL       c_alter
		         where a.OID_CABE = b.MFCA_OID_CABE
		           and b.oid_ofer = c.OFER_OID_OFER
		           and c.val_codi_vent = ofedet.val_codi_vent
		           AND a.perd_oid_peri = d.OID_PERI
		           and d.PERI_OID_PERI = e.oid_peri
		           AND e.cod_peri = seg_perio_corpo.cod_peri
		           and f.OFDE_OID_DETA_OFER = C.OID_DETA_OFER
		           and g.MAFA_OID_COD_PPAL = f.OID_MATR_FACT
		           and g.MAFA_OID_COD_ALTE = h.OID_MATR_FACT
		           AND h.OFDE_OID_DETA_OFER = C_alter.OID_DETA_OFER) AS PROD_ALTER
		
		  FROM cra_perio peri,
		       pre_ofert ofe,
		       pre_ofert_detal ofedet,
		       pre_matri_factu mf,
		       pre_matri_factu_cabec mfc,
		       mae_produ prod,
		       bel_forma_pago fp,
		       pre_estra es,
		       pre_catal cat,
		       seg_marca marca,
		       pre_ciclo_vida cvida,
		       pre_tipo_ofert tofe,
		       seg_acces acc,
		       seg_perio_corpo,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'MAE_PRODU'
		           AND v.idio_oid_idio = 1) i18prod,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'PRE_ESTRA'
		           AND v.idio_oid_idio = 1) i18est,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'SEG_PAIS'
		           AND v.idio_oid_idio = 1) i18pais,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'SEG_CANAL'
		           AND v.idio_oid_idio = 1) i18canal,
		       (select v.val_oid, v.val_i18n
		          from GEN_I18N_SICC_COMUN v
		         WHERE v.attr_enti = 'PRE_TIPO_OFERT'
		           AND v.idio_oid_idio = 1) i18tipofert
		
		 WHERE peri.oid_peri = mfc.perd_oid_peri
		   AND ofe.mfca_oid_cabe = mfc.oid_cabe
		   AND mf.mfca_oid_cabe = mfc.oid_cabe
		   AND ofe.oid_ofer = ofedet.ofer_oid_ofer
		   AND ofedet.oid_deta_ofer = mf.ofde_oid_deta_ofer
		   AND ofedet.prod_oid_prod = prod.oid_prod
		   AND ofe.fopa_oid_form_pago = fp.oid_form_pago(+)
		   AND ofedet.ocat_oid_catal = cat.oid_cata(+)
		   AND ofe.coes_oid_estr = es.oid_estr(+)
		   AND ofedet.civi_oid_ciclo_vida = cvida.oid_cicl_vida(+)
		   AND ofedet.tofe_oid_tipo_ofer = tofe.oid_tipo_ofer(+)
		   AND ofe.acce_oid_acce = acc.oid_acce(+)
		   AND i18est.val_oid(+) = ofe.coes_oid_estr
		   AND i18pais.val_oid(+) = peri.pais_oid_pais
		   AND i18canal.val_oid(+) = peri.cana_oid_cana
		   AND i18prod.val_oid(+) = ofedet.prod_oid_prod
		   AND i18tipofert.val_oid(+) = tofe.oid_tipo_ofer
		   AND peri.marc_oid_marc = marca.oid_marc(+)
		   AND peri.peri_oid_peri = seg_perio_corpo.oid_peri
		   AND seg_perio_corpo.cod_peri = #codigoPeriodo#
		   AND ofedet.val_codi_vent = #codigoVenta#
		
		 ORDER BY ofedet.val_codi_vent
    </select>
             
    <select id="getListCodigoVentaRelacionados" parameterClass="java.util.Map" resultMap="baseDatosCodigoVentaPrincipalResult">
		SELECT peri.val_nomb_peri AS COD_PERI,
		       ofedet.val_codi_vent COD_VENT,
		       i18est.val_i18n ESTRATEGIA,
		       prod.COD_SAP,
		       i18prod.val_i18n AS DESC_PRODUCTO,
		       DECODE(ofedet.IND_PROD_PRIN, 1, 'SI', 'NO') IND_PROD_PRIN,
		       (SELECT gof.num_grup
		          FROM pre_grupo_ofert gof
		         WHERE ofedet.gofe_oid_grup_ofer = gof.oid_grup_ofer) AS NUM_GRUP,
		       i18tipofert.val_i18n AS TIPO_OFERTA,
		       ofedet.imp_prec_cata PRECIO_CATALOGO,
		       ofedet.imp_prec_posi PRECIO_CONTABLE,
		       ofedet.VAL_FACT_REPE,
		       DECODE(tofe.ind_comi, 1, 'SI', 'NO') IND_COMISIONES,
		       DECODE(tofe.ind_esta, 1, 'SI', 'NO') IND_ESTADISTICA,
		       DECODE(tofe.ind_punt, 1, 'SI', 'NO') IND_PUNTAJES,
		       cat.COD_CATA,
		       cat.DES_CATA,
		       ofedet.NUM_PAGI_CATA,
		       ofe.NUM_OFER,
		       (SELECT val_i18n
		          FROM gen_i18n_sicc_comun
		         WHERE attr_enti = 'BEL_FORMA_PAGO'
		           AND val_oid = ofedet.fopa_oid_form_pago) FORMA_PAGO,
		       (SELECT ic.cod_indi_cuad
		          FROM pre_indic_cuadr ic, pre_indic_cuadr_tipo_estra icte
		         WHERE icte.indc_oid_indi_cuad = ic.oid_ind_cuad
		           AND icte.oid_ind_cuad_tipo_estr =
		               (SELECT gof.cues_oid_ind_cuad_tipo_estr
		                  FROM pre_grupo_ofert gof
		                 WHERE ofedet.gofe_oid_grup_ofer = gof.oid_grup_ofer)) COD_INDI_CUAD,
		       (SELECT gof.cod_fact_cuad
		          FROM pre_grupo_ofert gof
		         WHERE ofedet.gofe_oid_grup_ofer = gof.oid_grup_ofer) AS COD_FACT_CUAD,
		       DECODE(ofe.ind_desp_auto, 1, 'SI', 'NO') IND_DESP_AUTO,
		       DECODE(ofe.ind_desp_compl, 1, 'SI', 'NO') IND_DESP_COMPL,
		       DECODE(ofedet.ind_digi, 1, 'SI', 'NO') IND_DIGI,
		       
		       (select c_REEMP.val_codi_vent || ' - ' || pq_apl_aux.Valor_Gen_I18n_Sicc(1, c_reemp.prod_oid_prod, 'MAE_PRODU')
		          from pre_matri_factu_cabec a,
		               pre_ofert             b,
		               pre_ofert_detal       c,
		               cra_perio             d,
		               seg_perio_corpo       e,
		               pre_matri_factu       f,
		               PRE_MATRI_REEMP       g,
		               pre_matri_factu       h,
		               PRE_OFERT_DETAL       c_reemp
		         where a.OID_CABE = b.MFCA_OID_CABE
		           and b.oid_ofer = c.OFER_OID_OFER
		           and c.val_codi_vent = ofedet.val_codi_vent
		           AND a.perd_oid_peri = d.OID_PERI
		           and d.PERI_OID_PERI = e.oid_peri
		           AND e.cod_peri = seg_perio_corpo.cod_peri
		           and f.OFDE_OID_DETA_OFER = C.OID_DETA_OFER
		           and g.MAFA_OID_COD_PPAL = f.OID_MATR_FACT
		           and g.MAFA_OID_COD_REEM = h.OID_MATR_FACT
		           AND h.OFDE_OID_DETA_OFER = C_REEMP.OID_DETA_OFER) AS PROD_REEMP,
		           
		       (select c_alter.val_codi_vent || ' - ' || pq_apl_aux.Valor_Gen_I18n_Sicc(1, c_alter.prod_oid_prod, 'MAE_PRODU')
		          from pre_matri_factu_cabec a,
		               pre_ofert             b,
		               pre_ofert_detal       c,
		               cra_perio             d,
		               seg_perio_corpo       e,
		               pre_matri_factu       f,
		               PRE_MATRI_CODIG_ALTER g,
		               pre_matri_factu       h,
		               PRE_OFERT_DETAL       c_alter
		         where a.OID_CABE = b.MFCA_OID_CABE
		           and b.oid_ofer = c.OFER_OID_OFER
		           and c.val_codi_vent = ofedet.val_codi_vent
		           AND a.perd_oid_peri = d.OID_PERI
		           and d.PERI_OID_PERI = e.oid_peri
		           AND e.cod_peri = seg_perio_corpo.cod_peri
		           and f.OFDE_OID_DETA_OFER = C.OID_DETA_OFER
		           and g.MAFA_OID_COD_PPAL = f.OID_MATR_FACT
		           and g.MAFA_OID_COD_ALTE = h.OID_MATR_FACT
		           AND h.OFDE_OID_DETA_OFER = C_alter.OID_DETA_OFER) AS PROD_ALTER
		
		  FROM cra_perio peri,
		       pre_ofert ofe,
		       pre_ofert_detal ofedet,
		       pre_matri_factu mf,
		       pre_matri_factu_cabec mfc,
		       mae_produ prod,
		       bel_forma_pago fp,
		       pre_estra es,
		       pre_catal cat,
		       seg_marca marca,
		       pre_ciclo_vida cvida,
		       pre_tipo_ofert tofe,
		       seg_acces acc,
		       seg_perio_corpo,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'MAE_PRODU'
		           AND v.idio_oid_idio = 1) i18prod,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'PRE_ESTRA'
		           AND v.idio_oid_idio = 1) i18est,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'SEG_PAIS'
		           AND v.idio_oid_idio = 1) i18pais,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'SEG_CANAL'
		           AND v.idio_oid_idio = 1) i18canal,
		       (select v.val_oid, v.val_i18n
		          from GEN_I18N_SICC_COMUN v
		         WHERE v.attr_enti = 'PRE_TIPO_OFERT'
		           AND v.idio_oid_idio = 1) i18tipofert
		
		 WHERE peri.oid_peri = mfc.perd_oid_peri
		   AND ofe.mfca_oid_cabe = mfc.oid_cabe
		   AND mf.mfca_oid_cabe = mfc.oid_cabe
		   AND ofe.oid_ofer = ofedet.ofer_oid_ofer
		   AND ofedet.oid_deta_ofer = mf.ofde_oid_deta_ofer
		   AND ofedet.prod_oid_prod = prod.oid_prod
		   AND ofe.fopa_oid_form_pago = fp.oid_form_pago(+)
		   AND ofedet.ocat_oid_catal = cat.oid_cata(+)
		   AND ofe.coes_oid_estr = es.oid_estr(+)
		   AND ofedet.civi_oid_ciclo_vida = cvida.oid_cicl_vida(+)
		   AND ofedet.tofe_oid_tipo_ofer = tofe.oid_tipo_ofer(+)
		   AND ofe.acce_oid_acce = acc.oid_acce(+)
		   AND i18est.val_oid(+) = ofe.coes_oid_estr
		   AND i18pais.val_oid(+) = peri.pais_oid_pais
		   AND i18canal.val_oid(+) = peri.cana_oid_cana
		   AND i18prod.val_oid(+) = ofedet.prod_oid_prod
		   and i18tipofert.val_oid(+) = tofe.oid_tipo_ofer
		   AND peri.marc_oid_marc = marca.oid_marc(+)
		   AND peri.peri_oid_peri = seg_perio_corpo.oid_peri
		   AND seg_perio_corpo.cod_peri = #codigoPeriodo#
		   AND ofe.oid_ofer in
		       (select c1.ofer_oid_ofer
		          from pre_matri_factu_cabec a1, pre_ofert b1, pre_ofert_detal c1
		         where a1.OID_CABE = b1.MFCA_OID_CABE
		           and b1.oid_ofer = c1.OFER_OID_OFER
		           and a1.perd_oid_peri = peri.oid_peri
		           and c1.val_codi_vent = #codigoVenta#)
		           
		<![CDATA[		           
		   and ofedet.val_codi_vent <> #codigoVenta#
		]]>	
		 ORDER BY ofedet.val_codi_vent
    </select>

	<resultMap id="baseListVentaExclusivaResult"    class="java.util.HashMap">
    	<result property="codigoPeriodo" 	    	column="COD_PERI"/>
    	<result property="codigoVenta"    			column="COD_VENT"/>
    	<result property="indVentaExclusica" 	    column="INDVTAEX"/>
    	<result property="tipoCliente"    			column="TCLIEN"/>
		<result property="subTipoCliente" 			column="STCLIEN" />
    	<result property="tipoClasificacion" 		column="TCLASI"/>
    	<result property="clasificacion"			column="CLASI"/>
	</resultMap>

    <select id="getListVentaExclusiva" parameterClass="java.util.Map" resultMap="baseListVentaExclusivaResult">
		SELECT peri.val_nomb_peri AS COD_PERI,
		       ofedet.val_codi_vent COD_VENT,
		       DECODE(vtaex.ofer_oid_ofer, NULL, 'NO', 'SI') AS INDVTAEX,
		       i18tclien.val_i18n AS TCLIEN,
		       i18stclien.val_i18n AS STCLIEN,
		       i18tclasi.val_i18n AS TCLASI,
		       i18clasi.val_i18n AS CLASI
		
		  FROM cra_perio peri,
		       pre_ofert ofe,
		       pre_ofert_detal ofedet,
		       pre_matri_factu mf,
		       pre_matri_factu_cabec mfc,
		       mae_produ prod,
		       bel_forma_pago fp,
		       pre_estra es,
		       pre_catal cat,
		       seg_marca marca,
		       pre_ciclo_vida cvida,
		       pre_tipo_ofert tofe,
		       seg_acces acc,
		       pre_venta_exclu vtaex,
		       seg_perio_corpo,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'MAE_PRODU'
		           AND v.idio_oid_idio = 1) i18prod,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'PRE_ESTRA'
		           AND v.idio_oid_idio = 1) i18est,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'MAE_TIPO_CLIEN'
		           AND v.idio_oid_idio = 1) i18tclien,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'MAE_SUBTI_CLIEN'
		           AND v.idio_oid_idio = 1) i18stclien,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'MAE_TIPO_CLASI_CLIEN'
		           AND v.idio_oid_idio = 1) i18tclasi,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'MAE_CLASI'
		           AND v.idio_oid_idio = 1) i18clasi,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'SEG_PAIS'
		           AND v.idio_oid_idio = 1) i18pais,
		       (SELECT v.val_oid, v.val_i18n
		          FROM v_gen_i18n_sicc v
		         WHERE v.attr_enti = 'SEG_CANAL'
		           AND v.idio_oid_idio = 1) i18canal,
		       (select v.val_oid, v.val_i18n
		          from GEN_I18N_SICC_COMUN v
		         WHERE v.attr_enti = 'PRE_TIPO_OFERT'
		           AND v.idio_oid_idio = 1) i18tipofert
		
		 WHERE peri.oid_peri = mfc.perd_oid_peri
		   AND ofe.mfca_oid_cabe = mfc.oid_cabe
		   AND mf.mfca_oid_cabe = mfc.oid_cabe
		   AND ofe.oid_ofer = ofedet.ofer_oid_ofer
		   AND ofedet.oid_deta_ofer = mf.ofde_oid_deta_ofer
		   AND ofedet.prod_oid_prod = prod.oid_prod
		   AND ofe.fopa_oid_form_pago = fp.oid_form_pago(+)
		   AND ofedet.ocat_oid_catal = cat.oid_cata(+)
		   AND ofe.coes_oid_estr = es.oid_estr(+)
		   AND ofedet.civi_oid_ciclo_vida = cvida.oid_cicl_vida(+)
		   AND ofedet.tofe_oid_tipo_ofer = tofe.oid_tipo_ofer(+)
		   AND ofe.acce_oid_acce = acc.oid_acce(+)
		   AND i18est.val_oid(+) = ofe.coes_oid_estr
		   AND i18tclien.val_oid(+) = vtaex.ticl_oid_tipo_clie
		   AND i18stclien.val_oid(+) = vtaex.sbti_oid_subt_clie
		   AND i18tclasi.val_oid(+) = vtaex.tccl_oid_tipo_clas
		   AND i18clasi.val_oid(+) = vtaex.clas_oid_clas
		   AND i18pais.val_oid(+) = peri.pais_oid_pais
		   AND i18canal.val_oid(+) = peri.cana_oid_cana
		   AND i18prod.val_oid(+) = ofedet.prod_oid_prod
		   AND i18tipofert.val_oid(+) = tofe.oid_tipo_ofer
		   AND ofe.oid_ofer = vtaex.ofer_oid_ofer(+)
		   AND peri.marc_oid_marc = marca.oid_marc(+)
		   AND peri.peri_oid_peri = seg_perio_corpo.oid_peri
		   AND seg_perio_corpo.cod_peri = #codigoPeriodo#
		   AND ofedet.val_codi_vent = #codigoVenta#
		 ORDER BY ofedet.val_codi_vent
    </select>
  
	<resultMap id="baseListLimiteVentaResult"    class="java.util.HashMap">
    	<result property="codigoVenta"    			column="COD_VENT"/>
		<result property="codigoRegion" 			column="COD_REGI" />
    	<result property="descripcionRegion" 		column="DES_REGI"/>
    	<result property="codigoZona" 	    		column="COD_ZONA"/>
    	<result property="descripcionZona"  		column="DES_ZONA"/>
    	<result property="unidades"					column="VAL_UNID"/>
	</resultMap>
	  
	<select id="getListLimiteVenta" parameterClass="java.util.Map" resultMap="baseListLimiteVentaResult">
		SELECT c.VAL_CODI_VENT COD_VENT,
		       o.COD_REGI,
		       o.DES_REGI,
		       n.COD_ZONA,
		       n.DES_ZONA,
		       l.VAL_LIMI_CTRL_VENT VAL_UNID
		  FROM pre_matri_factu_cabec a,
		       pre_ofert             b,
		       pre_ofert_detal       c,
		       pre_matri_factu       d,
		       cra_perio             e,
		       seg_perio_corpo       f,
		       gen_i18n_sicc_pais    m,
		       ped_gesti_stock       l,
		       mae_produ             j,
		       zon_zona              n,
		       zon_regio             o,
		       mae_tipo_clasi_clien  p,
		       mae_clasi             q,
		       mae_tipo_clien        r,
		       mae_subti_clien       s
		 WHERE a.OID_CABE = b.MFCA_OID_CABE
		   AND b.OID_OFER = c.OFER_OID_OFER
		   AND c.OID_DETA_OFER = d.OFDE_OID_DETA_OFER
		   AND a.PERD_OID_PERI = e.OID_PERI
		   AND c.oid_deta_ofer = l.ofde_oid_deta_ofer
		   AND f.OID_PERI = e.PERI_OID_PERI
		   AND f.COD_PERI = #codigoPeriodo#
		   AND c.PROD_OID_PROD = j.OID_PROD
		   AND j.OID_PROD = m.VAL_OID
		   AND m.ATTR_ENTI = 'MAE_PRODU'
		   AND l.ZZON_OID_ZONA = n.OID_ZONA(+)
		   AND l.ZORG_OID_REGI = o.OID_REGI(+)
		   AND l.TCCL_OID_TIPO_CLAS = p.OID_TIPO_CLAS(+)
		   AND l.CLAS_OID_CLAS = q.OID_CLAS(+)
		   AND l.TICL_OID_TIPO_CLIE = r.OID_TIPO_CLIE(+)
		   AND l.SBTI_OID_SUBT_CLIE = s.OID_SUBT_CLIE(+)
		   AND l.VAL_LIMI_CTRL_VENT is not null
		   AND c.val_codi_vent = #codigoVenta#
    </select>
    
	<select id="getListControlStock" parameterClass="java.util.Map" resultMap="baseListLimiteVentaResult">
		SELECT c.VAL_CODI_VENT COD_VENT,
		       o.COD_REGI,
		       o.DES_REGI,
		       n.COD_ZONA,
		       n.DES_ZONA,
		       decode(l.VAL_UNID, null, l.VAL_PORC, l.VAL_UNID) VAL_UNID
		  FROM pre_matri_factu_cabec a,
		       pre_ofert             b,
		       pre_ofert_detal       c,
		       pre_matri_factu       d,
		       cra_perio             e,
		       seg_perio_corpo       f,
		       gen_i18n_sicc_pais    m,
		       ped_gesti_stock       l,
		       mae_produ             j,
		       zon_zona              n,
		       zon_regio             o,
		       mae_tipo_clasi_clien  p,
		       mae_clasi             q,
		       mae_tipo_clien        r,
		       mae_subti_clien       s
		 WHERE a.OID_CABE = b.MFCA_OID_CABE
		   AND b.OID_OFER = c.OFER_OID_OFER
		   AND c.OID_DETA_OFER = d.OFDE_OID_DETA_OFER
		   AND a.PERD_OID_PERI = e.OID_PERI
		   AND c.oid_deta_ofer = l.ofde_oid_deta_ofer
		   AND f.OID_PERI = e.PERI_OID_PERI
		   AND f.COD_PERI = #codigoPeriodo#
		   AND c.PROD_OID_PROD = j.OID_PROD
		   AND j.OID_PROD = m.VAL_OID
		   AND m.ATTR_ENTI = 'MAE_PRODU'
		   AND l.ZZON_OID_ZONA = n.OID_ZONA(+)
		   AND l.ZORG_OID_REGI = o.OID_REGI(+)
		   AND l.TCCL_OID_TIPO_CLAS = p.OID_TIPO_CLAS(+)
		   AND l.CLAS_OID_CLAS = q.OID_CLAS(+)
		   AND l.TICL_OID_TIPO_CLIE = r.OID_TIPO_CLIE(+)
		   AND l.SBTI_OID_SUBT_CLIE = s.OID_SUBT_CLIE(+)
		   AND (l.VAL_UNID is not null or l.VAL_PORC is not null)
		   AND c.val_codi_vent = #codigoVenta#
    </select>
  	
  	<procedure id="getTipoConsultora" parameterClass="java.util.Map" resultClass="string">
    	SELECT HIP_PKG_CONSU.HIP_FN_DEVUELVE_TIPO_CONSUL(#codigoPais#,#oidCliente#) FROM DUAL
  	</procedure>
  	
  	<resultMap id="resultCoberturaCentroAcopio"    class="java.util.HashMap">
    	<result property="codigoRegion"    			column="COD_REGI"/>
		<result property="codigoZona" 			column="COD_ZONA" />
		<result property="codigoSeccion" 		column="COD_SECC"/>
    	<result property="codigoTerritorio" 		column="COD_TERR"/>
    	<result property="codigoCompaniaTransporte" 	    		column="COD_COMP_TRAN"/>
    	<result property="codigoCentroAcopio"  		column="COD_CENT_ACOP"/>
    	<result property="valorFlete"					column="VAL_FLET"/>
    	<result property="codigoBuzon"					column="COD_BUZO"/>
    	<result property="direccionBuzon"					column="DIR_BUZO"/>
    	<result property="telefonoBuzon"					column="TEL_BUZO"/>
    	<result property="celularBuzon"					column="CEL_BUZO"/>
    	<result property="descripcionBuzon"					column="DES_BUZO"/>
	</resultMap>  
	
  	<select id="getListCoberturaCentroAcopio" parameterClass="java.util.Map" resultMap="resultCoberturaCentroAcopio">
		select nvl(Trim(COD_REGI),'') COD_REGI, 
			   nvl(trim(COD_ZONA),'') COD_ZONA, 
			   nvl(trim(COD_SECC),'') COD_SECC, 
			   nvl(trim(COD_TERR),'') COD_TERR,
			   nvl(trim(COD_COMP_TRAN),'') COD_COMP_TRAN, 
			   nvl(trim(COD_CENT_ACOP),'') COD_CENT_ACOP,
			   nvl(trim(VAL_FLET),'') VAL_FLET,
			   nvl(trim(COD_BUZO),'') COD_BUZO,
			   nvl(trim(DIR_BUZO),'') DIR_BUZO,
			   nvl(trim(TEL_BUZO),'') TEL_BUZO,
			   nvl(trim(CEL_BUZO),'') CEL_BUZO,
			   nvl(trim(DES_BUZO),'') DES_BUZO
		from STO_ACOPI_COBER
		<dynamic prepend="where">
			<isNotEmpty property="codigoRegion" prepend="and">
			cod_regi = #codigoRegion#
			</isNotEmpty>
			<isNotEmpty property="codigoZona" prepend="and">
			COD_ZONA = #codigoZona#
			</isNotEmpty>
			<isNotEmpty property="codigoSeccion" prepend="and">
			COD_SECC = #codigoSeccion#
			</isNotEmpty>		
			<isNotEmpty property="codigoTerritorio" prepend="and">
			COD_TERR = #codigoTerritorio#
			</isNotEmpty>				
		</dynamic>
    </select>  
  
  	<resultMap id="getAdicionalesCabeceraReclamoResultMap"    class="java.util.HashMap">
    	<result property="usuarioRegistro"		column="USU_REG"/>
    	<result property="fechaRegistro"		column="FEC_REG"/>
    	<result property="usuarioDigitacion"	column="USU_DIGI"/>
    	<result property="fechaDigitacion"		column="FEC_DIGI"/>
    	<result property="usuarioAprobacion"	column="USU_APRO"/>
    	<result property="fechaAprobacion"		column="FEC_APRO"/>
    	<result property="origenCDR"			column="ORI_CDR"/>
	</resultMap>  
  
  	<select id="getAdicionalesCabeceraReclamo" parameterClass="java.util.Map" resultMap="getAdicionalesCabeceraReclamoResultMap">
		SELECT DECODE (isc.usu_digi,
		               NULL, REPLACE (rcr.cod_usua_ingr, 'S_', ''),
		               isc.usu_digi
		              ) usu_digi,
		       DECODE (isc.fec_digi,
		               NULL, TO_CHAR (rcr.fec_ulti_actu, 'DD/MM/YYYY'),
		               TO_CHAR (isc.fec_digi, 'DD/MM/YYYY')
		              ) fec_digi,
		       REPLACE (rcr.cod_usua_ingr, 'S_', '') usu_apro,
		       TO_CHAR (rcr.fec_ulti_actu, 'DD/MM/YYYY') fec_apro,
		       DECODE (rcr.cod_usua_ingr,
		               'MIGRACION', 'Migracion',
		               DECODE (isc.ind_orig,
		                       'C', 'Callcenter',
		                       '1', 'OCR',
		                       '2', 'Digitacion',
		                       'M', 'Masivo',
		                       '', decode((select count(*) from rec_audit_info x where X.OID_CABE_RECL = rcr.oid_cabe_recl  ),0,'Eliminado','Atencion' )
		                      )
		              ) ori_cdr,
		       (select usu_digi
		       	  from REC_DIGIT_CABEC_SERVI_HISTO
				 where num_docu = #numeroReclamo#
                   and cod_clie = #codConsultora#
                   and rownum = 1) usu_reg,                    
               (select fec_digi
               	  from REC_DIGIT_CABEC_SERVI_HISTO
                 where num_docu = #numeroReclamo#
                   and cod_clie = #codConsultora#
                   and rownum = 1) fec_reg 
		  FROM rec_cabec_recla rcr, int_solic_conso_poven_cabec isc
		 WHERE rcr.oid_cabe_recl = isc.oid_cabe_recl_refe(+)
		       AND rcr.oid_cabe_recl = #oidCabecera#
	</select>
	
  	<resultMap id="getDatosCabeceraDetallePedidoSolicitadoResultMap"    class="java.util.HashMap">
    	<result property="codigoCampanya"	column="COD_PERI"/>
    	<result property="codigoRegion"		column="DES_REGI"/>
    	<result property="codigoZona"	column="DES_ZONA"/>
    	<result property="tipo"		column="TIPO"/>
	</resultMap>  

	<select id="getDatosCabeceraDetallePedidoSolicitado" parameterClass="string" resultMap="getDatosCabeceraDetallePedidoSolicitadoResultMap">
		SELECT 
		       COD_PERI,
		       DES_REGI,
		       DES_ZONA,
		       (SELECT C.GRPR_OID_GRUP_PROC
		          FROM PED_SOLIC_CABEC C
		         WHERE W.SOCA_OID_SOLI_CABE_REFE = C.OID_SOLI_CABE) TIPO 
		  FROM INT_SOLIC_CONSO_CABEC W
		WHERE SEC_NUME_DOCU = #value#
	</select>
	
	<resultMap id="datosPolizaResult"    class="java.util.HashMap">
        <result property="aseguradora" 			column="DES_POLI"/>      
    	<result property="numeroPoliza" 		column="NUM_POLI"/>
    	<result property="indicadorOrigen" 		column="DES_ORIG_REGI"/>      
    	<result property="periodoActivacion"	column="CAM_ACTI"/>
    	<result property="fechaActivacion"		column="FEC_ACTI"/>
    	<result property="estadoPoliza"			column="DES_ESTA_POLI"/>
    	<result property="periodoCancelacion"	column="CAM_CANC"/>
    	<result property="fechaCancelacion"		column="FEC_CANC"/>
    	<result property="motivoCancelacion"	column="DES_MOTI_CANC"/>
    </resultMap>
	
	<select id="getDatosPoliza" parameterClass="java.util.Map" resultMap="datosPolizaResult">
		SELECT FPO.DES_POLI,
	           FPR.NUM_POLI,
	           DECODE(FPR.IND_ORIG_REGI,'C', 'Sistema Comercial','O','OCR','W','Web','B','Blackberry') DES_ORIG_REGI,
	           FPR.CAM_ACTI,
	       	   TO_CHAR(FPR.FEC_ACTI,'dd-MM-yyyy') FEC_ACTI,
		       DECODE(FPR.EST_POLI,1,'Registrada/Aceptada',2,'Rechazada',3,'Activa',4,'Cancelada') DES_ESTA_POLI,
		       FPR.CAM_CANC,
		       TO_CHAR(FPR.FEC_CANC,'dd-MM-yyyy') FEC_CANC,
		       FMC.DES_MOTI_CANC
		  FROM SGR_FAMSE_POLIZ_REGIS FPR,
		       SGR_FAMSE_POLIZ FPO,
		       SGR_FAMSE_MOTIV_CANCE FMC
		WHERE FPR.COD_CLIE = #codigoCliente#
		  AND FPR.POLI_COD_POLI = FPO.COD_POLI
		  AND FPR.MOTI_COD_MOTI_CANC = FMC.COD_MOTI_CANC (+)
		  <![CDATA[
		  	AND FPR.EST_REGI <> '9'
		  ]]>	  	
	</select>
	
	<resultMap id="historialCobrosSeguroResult"    class="java.util.HashMap">
        <result property="fechaDocumento" 		column="FEC_DOCU"/>      
    	<result property="periodo"		 		column="COD_PERI"/>
    	<result property="subProceso"	 		column="DES_SUBP"/>      
    	<result property="numeroDocumento"		column="NUM_IDEN_CUOT"/>
    	<result property="importe"				column="IMP_MOVI"/>
    </resultMap>
    
	<select id="getHistorialCobrosSeguro" parameterClass="java.util.Map" resultMap="historialCobrosSeguroResult">
		SELECT TO_CHAR(mcc.FEC_DOCU,'dd-MM-yyyy') FEC_DOCU,
		       spc.COD_PERI,
		       su.DES_SUBP, 
		       mcc.NUM_IDEN_CUOT,
		       mcc.IMP_MOVI
		  FROM CCC_MOVIM_CUENT_CORRI mcc,
		       CCC_PROCE pr,
		       CCC_SUBPR su,
		       CRA_PERIO cp,
		       SEG_PERIO_CORPO spc
		 WHERE mcc.SUBP_OID_SUBP_CREA = su.OID_SUBP
		   AND mcc.PERD_OID_PERI = cp.OID_PERI
		   AND cp.PERI_OID_PERI = spc.OID_PERI
		   AND pr.OID_PROC = su.CCPR_OID_PROC
		   AND pr.COD_PROC = 'CCC007'
		   AND su.COD_SUBP = '7'
		   AND mcc.CLIE_OID_CLIE = #oidCliente#
		 ORDER BY mcc.FEC_DOCU DESC
	</select>
	
	<resultMap id="datosMetasResult"    class="java.util.HashMap">
        <result property="tipoMeta" 			column="VAL_TIPO_META"/>
    	<result property="origen"		 		column="DES_ORIG"/>              
    	<result property="montoMeta" 			column="VAL_IMPO_META" javaType="java.lang.String"/>
    	<result property="periodoInicio"		column="CAM_INIC"/>
    	<result property="periodoFin"			column="CAM_FINA"/>
    	<result property="oportunidadAhorro"	column="VAL_OPOR_AHOR_ACUM" javaType="java.lang.String"/>
    	<result property="montoFaltante"		column="VAL_DIFE_OBTE_META" javaType="java.lang.String"/>
    	<result property="estadoMeta"			column="EST_META"/>
    </resultMap>
    
	<select id="getDatosMetas" parameterClass="java.util.Map" resultMap="datosMetasResult">
		WITH temp AS
		(
		SELECT nvcg.cod_clie,
		       nvtl.des_tipo_logr val_tipo_meta,
		       NVL(nvcg.imp_logr,0) val_impo_meta,
		       nvcg.ori_regi origen,
		       nvcg.cmp_inic cam_inic,
		       nvcg.cmp_fina cam_fina,
		       (
		         SELECT SUM( NVL(cons.val_gana_tota_loca,0))
		           FROM PED_SOLIC_CABEC SOCA,
		                PED_SOLIC_CABEC CONS,
		                PED_TIPO_SOLIC_PAIS TSPA,
		                PED_TIPO_SOLIC TSOL
		          WHERE soca.soca_oid_soli_cabe = cons.oid_soli_cabe
		            AND soca.tspa_oid_tipo_soli_pais = tspa.oid_tipo_soli_pais
		            AND tspa.tsol_oid_tipo_soli = tsol.oid_tipo_soli
		            AND tsol.cod_tipo_soli = 'SOC'
		            AND soca.ind_oc = 1
		            AND cons.esso_oid_esta_soli != 4
		            AND soca.clie_oid_clie = clie.oid_clie
		            AND soca.perd_oid_peri BETWEEN FIN_PKG_GENER.FIN_FN_OBTIE_OID_PERIO( nvcg.cmp_inic ) AND
		                                           FIN_PKG_GENER.FIN_FN_OBTIE_OID_PERIO( nvcg.cmp_fina )
		       ) val_opor_ahor_acum
		  FROM nvs_consu_logro nvcg,
		       nvs_tipo_logro nvtl,
		       nvs_medio_captu_logro nvcl,
		       mae_clien clie
		 WHERE nvcg.cod_clie = #codigoCliente#
		   AND nvcg.cod_tipo_logr = nvtl.cod_tipo_logr
		   AND nvcg.cod_medi_capt = nvcl.cod_medi_capt(+)
		   AND nvcg.cod_clie = clie.cod_clie
		)
		SELECT VAL_TIPO_META,
		       DECODE(ORIGEN,'C', 'Sistema Comercial','O','OCR','W','Web','B','Blackberry') DES_ORIG,
		       VAL_IMPO_META,
		       CAM_INIC,
		       CAM_FINA,
		       VAL_OPOR_AHOR_ACUM,
		       CASE WHEN VAL_IMPO_META > NVL(VAL_OPOR_AHOR_ACUM,0) THEN VAL_IMPO_META - NVL(VAL_OPOR_AHOR_ACUM,0) ELSE 0 END VAL_DIFE_OBTE_META,
               CASE WHEN VAL_IMPO_META > NVL(VAL_OPOR_AHOR_ACUM,0) THEN 'META NO LOGRADA' ELSE 'LOGRO LA META' END EST_META
		  FROM temp
	</select>
	
	<resultMap id="getFacturacionAdicionalListResult"    class="java.util.HashMap">
        <result property="campania" 				column="COD_PERI"/>
    	<result property="promedioVentaCalculado"	column="VAL_MONT_PROM_CALC" javaType="string"/>              
    	<result property="promedioVentaReal" 		column="VAL_MONT_PROM_REAL" javaType="string"/>
    	<result property="montoMinimoCalculado"		column="VAL_MTMI_CALC" javaType="string"/>
    	<result property="montoMinimoReal"			column="VAL_MTMI_REAL" javaType="string"/>
    	<result property="validaPromedio"			column="IND_VALI_PROM"/>
    	<result property="validaMontoMinimo"		column="IND_VALI_MTMI"/>
    </resultMap>	

	<select id="getFacturacionAdicionalList" parameterClass="string" resultMap="getFacturacionAdicionalListResult">
		SELECT 
		COD_PERI,
		VAL_MONT_PROM_CALC, 
		VAL_MONT_PROM_REAL,
		VAL_MTMI_CALC, 
		VAL_MTMI_REAL,
		DECODE(IND_VALI_PROM, '1', 'SI', 'NO') IND_VALI_PROM,
		DECODE(IND_VALI_MTMI, '1', 'SI', 'NO') IND_VALI_MTMI
		FROM STO_FACTU_ADICI_CLIEN
		WHERE COD_CLIE = #value#
		ORDER BY COD_PERI
	</select>
		  
	<resultMap id="getListPeriodoRetailResult"    class="java.util.HashMap">
        <result property="periodoRetail" 			column="CAM_RETA"/>
    	<result property="periodoProceso"			column="CAM_PROC"/>              
    	<result property="unidadesVenta" 			column="UNI_VEND"/>
    	<result property="totalVenta"				column="TOT_VENT"/>
    	<result property="unidadesDevolucion"		column="UNI_DEVO"/>
    	<result property="totalDevolucion"			column="TOT_DEVO"/>
    	<result property="estado"					column="DES_ESTA"/>
    	<result property="puntos"					column="NUM_PUNT" />
    </resultMap>	

	<select id="getListPeriodoRetail" parameterClass="java.util.Map" resultMap="getListPeriodoRetailResult">
	  select  cab.cam_proc CAM_PROC, sum(det.uni_vend) UNI_VEND,sum(det.uni_vend * det.val_mont_cata) TOT_VENT,          
            devo.totalUnidadesDevueltas UNI_DEVO,devo.totalVentaDevuelta TOT_DEVO, case when pun.reg_proc >= 1 then 'Procesado' else 'Pendiente' end DES_ESTA
            ,' ' CAM_RETA,' ' NUM_PUNT 
	   	  from ret_venta_cabec cab, 
	           ret_venta_detal det,
           (select cam_fina, count(*) reg_proc from inc_punto_retai
            where cod_cons = #codigoCliente#  and ind_gene_punt = 1  group by  cam_fina
	           ) pun,
           ( select  cab.val_cuen_consu codigoCliente, cab.cam_proc campanaProceso, 
                sum(det.uni_devu) totalUnidadesDevueltas,sum(det.uni_devu * det.val_mont_cata) totalVentaDevuelta
	               from ret_venta_cabec cab, 
                    ret_venta_detal det
	             where cab.num_docu_reta = det.num_docu_reta 
	                 and cab.cod_tipo_docu = det.cod_tipo_docu 
	                 and cab.cod_sbac = det.cod_sbac
	                 and det.tipo_tran_ret in ('RR','RD') 
	                 and cab.val_cuen_consu = #codigoCliente#
              group by cab.val_cuen_consu,  cab.cam_proc
	           ) devo
		 where cab.num_docu_reta = det.num_docu_reta 
		     and cab.cod_tipo_docu = det.cod_tipo_docu 
		     and cab.cod_sbac = det.cod_sbac
       and cab.cam_proc  =  pun.cam_fina (+)     and cab.cam_proc = devo.campanaProceso  (+)     and cab.val_cuen_consu  = devo.codigoCliente  (+)     and det.tipo_tran_ret in ('VR') 
		     and cab.val_cuen_consu = #codigoCliente#
      group by cab.cam_proc, 
           devo.totalUnidadesDevueltas,           devo.totalVentaDevuelta,           pun.reg_proc
		  order by cab.cam_proc desc
	</select>
	
	<resultMap id="getListCabeceraRetailResult"    class="java.util.HashMap">
        <result property="periodoRetail" 			column="CAM_RETA"/>
    	<result property="fechaRetail"				column="FEC_RETA"/>              
    	<result property="subAcceso"	 			column="COD_SBAC"/>
    	<result property="local"					column="COD_LOCA"/>
    	<result property="tipoDocumento"			column="COD_TIPO_DOCU"/>
    	<result property="numeroDocumento"			column="NUM_DOCU_RETA"/>
    	<result property="fechaProceso"				column="FEC_PROC"/>
    	<result property="tipoTransaccion"			column="TIPO_TRAN_RET"/>
    	<result property="transaccion"				column="TIP_TRAN"/>
    	<result property="totalUnidades"			column="TOT_UNID" />
    	<result property="totalVenta"				column="TOT_VENT" />
    </resultMap>	

	<select id="getListCabeceraRetail" parameterClass="java.util.Map" resultMap="getListCabeceraRetailResult">
		select cab.CAM_RETA,  
		       TO_CHAR(cab.FEC_ENVI,'dd/MM/yyyy') FEC_RETA,
		       cab.COD_SBAC,
		       cab.COD_LOCA, 
		       cab.COD_TIPO_DOCU, 
		       cab.NUM_DOCU_RETA, 
		       TO_CHAR(trunc(cab.fec_proc),'dd/MM/yyyy') FEC_PROC,
		       det.TIPO_TRAN_RET,
		       case when det.tipo_tran_ret = 'VR' then  'Venta' 
		            when det.tipo_tran_ret = 'RR' then  'Devolucion VR' 
		            else 'Devolucion VD' end TIP_TRAN,
		       case when det.tipo_tran_ret = 'VR' then  sum(det.uni_vend) else  sum(det.uni_devu) end TOT_UNID,
		       case when det.tipo_tran_ret = 'VR' then  sum(det.uni_vend * det.val_mont_cata) 
		            else  sum(det.uni_devu * det.val_mont_cata) end TOT_VENT
		  from ret_venta_cabec cab, 
		       ret_venta_detal det 
		 where cab.num_docu_reta = det.num_docu_reta 
		   and cab.cod_tipo_docu = det.cod_tipo_docu 
		   and cab.cod_sbac = det.cod_sbac 
		   and det.tipo_tran_ret in ('VR','RR','RD')  
		   and cab.val_cuen_consu = #codigoCliente#
		   and cab.cam_proc = #codigoPeriodo#
		 group by cab.cam_reta,
		         cab.fec_envi,
		         cab.cod_sbac,
		         cab.cod_loca, 
		         cab.cod_tipo_docu, 
		         cab.num_docu_reta, 
		         cab.fec_proc,
		         det.tipo_tran_ret         
		 order by cab.fec_envi desc  
	</select>
	
	<resultMap id="getListDetalleRetailResult"    class="java.util.HashMap">
        <result property="periodoRetail" 			column="CAM_RETA"/>
    	<result property="fechaRetail"				column="FEC_RETA"/>              
    	<result property="subAcceso"	 			column="COD_SBAC"/>
    	<result property="local"					column="COD_LOCA"/>
    	<result property="tipoDocumento"			column="COD_TIPO_DOCU"/>
    	<result property="numeroDocumento"			column="NUM_DOCU_RETA"/>
    	<result property="codigoVenta"				column="COD_VENT"/>
    	<result property="codigoProducto"			column="COD_PROD"/>
    	<result property="descripcionProducto"		column="DES_PROD"/>
    	<result property="monto"					column="VAL_MONT_CATA"/>
    	<result property="unidades"					column="TOT_UNID" />
    	<result property="venta"					column="TOT_VENT" />
    </resultMap>	

	<select id="getListDetalleRetail" parameterClass="java.util.Map" resultMap="getListDetalleRetailResult">
		SELECT det.CAM_RETA,  
			   TO_CHAR(det.FEC_ENVI,'dd/MM/yyyy') FEC_RETA,
		       det.COD_SBAC,
		       det.COD_LOCA, 
		       det.COD_TIPO_DOCU, 
		       det.NUM_DOCU_RETA,
		       det.COD_VENT, 
		       det.COD_PROD, 
		       pq_apl_aux.valor_gen_i18n_sicc (#oidIdioma#, pro.OID_PROD, 'MAE_PRODU') DES_PROD,
		       det.VAL_MONT_CATA,
		       case when det.tipo_tran_ret = 'VR' then  det.uni_vend else  det.uni_devu end TOT_UNID,
		       case when det.tipo_tran_ret = 'VR' then  det.uni_vend * det.val_mont_cata else det.uni_devu * det.val_mont_cata end TOT_VENT
		  FROM RET_VENTA_DETAL det, MAE_PRODU pro 
		 WHERE det.COD_PAIS = #codigoPais#
		   AND det.COD_SBAC = #subAcceso#
		   AND det.COD_TIPO_DOCU = #tipoDocumento# 
		   AND det.NUM_DOCU_RETA = #numeroDocumento#  
		   AND det.TIPO_TRAN_RET = #tipoTransaccion#  
		   AND det.COD_PROD = pro.COD_SAP  
	</select>
	
	<resultMap id="getListDetallePuntosConcursoRetailResult"    class="java.util.HashMap">
        <result property="concurso" 			column="CONCURSO"/>
    	<result property="nombreConcurso"				column="NOMBRECONCURSO"/>              
    	<result property="puntos"	 			column="PUNTOS"/>    	
    </resultMap>
    <select id="getListDetallePuntosConcursoRetail" parameterClass="java.util.Map" resultMap="getListDetallePuntosConcursoRetailResult">
    	select num_conc CONCURSO, 
          val_nomb NOMBRECONCURSO, 
          sum(num_punt) PUNTOS 
		  from inc_cuent_corri_punto cc, 
		          cra_perio per, 
		          seg_perio_corpo perc, 
		          mae_clien, 
		          inc_concu_param_gener
		where clie_oid_clie = oid_clie 
		   and per.peri_oid_peri = perc.oid_peri
		   and per.oid_peri = cc.perd_oid_peri
		   and copa_oid_para_gral = oid_para_gral
		   and (val_desc like '%Venta Retail TIENDAS%' or val_desc like '%/ECM%')
		   and cod_clie = #codigoCliente#
		   and cod_peri = #codigoPeriodo#
		  group by num_conc, val_nomb
		  order by num_conc    	
    </select>
			  
	<parameterMap id="executeActualizarDatosClienteParams" class="map">
  		<parameter property="oidCliente"	   	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="primerApellido"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="segundoApellido"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="primerNombre"		    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="segundoNombre"			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="telefonoFijo"			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="telefonoCelular"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="email"					jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="fechaNacimiento"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>  	
  		<parameter property="codigoUsuario"			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>  	  			  		  		
	  </parameterMap>

	<procedure id="executeActualizarDatosCliente" parameterMap="executeActualizarDatosClienteParams">
    	{call HIP_PKG_CONSU.HIP_PR_ACTUA_DATOS_CLIEN(?,?,?,?,?,?,?,?,?,?)}    	
  	</procedure>
  				  
	<resultMap id="datosEjecutivaResult"    class="java.util.HashMap">
        <result property="codigoEjecutiva" 		column="CODIGO_EJECUTIVA"/>      
    	<result property="nombreEjecutiva" 		column="NOMBRE_EJECUTIVA"/>
    	<result property="nivelEjecutiva" 		column="NIVEL_EJECUTIVA"/>      
    	<result property="numeroContrato"		column="NUMERO_CONTRATO"/>
    	<result property="campanaNombramiento"	column="CAMPA_NOMBRAMIENTO"/>
    	<result property="fechaIngreso"			column="FECHA_INGRESO_EJECUTIVA"/>
    	<result property="zonaSeccion" 			column="ZONA_SECCION"/>
    	<result property="territorioInicial" 	column="TERR_INICIAL"/>
    	<result property="territorioFinal"		column="TERR_FINAL"/>
    	<result property="ciudadEjecutiva"		column="CIUDAD_EJECUTIVA"/>
    </resultMap>
	<select id="getDatosEjecutiva" parameterClass="java.util.Map" resultMap="datosEjecutivaResult">
		SELECT clie.cod_clie CODIGO_EJECUTIVA,
		       DECODE(clie.val_nom1,NULL,'',clie.val_nom1)
		       || DECODE(clie.val_nom1,NULL,'',' ' || clie.val_nom2)
		       || DECODE(clie.val_nom2,NULL,'',' ' || clie.val_ape1)
		       || DECODE(clie.val_ape1,NULL,'',' ' || clie.val_ape2) NOMBRE_EJECUTIVA,
		       (
		        SELECT ejni.des_nive
		          FROM eje_nivel_campa ejnc,
		               eje_nivel_progr ejni
		         WHERE ejnc.pais_cod_pais = ejni.pais_cod_pais
		           AND ejnc.cod_prog_ejec = ejni.cod_prog_ejec
		           AND ejnc.cod_nive = ejni.cod_nive
		           AND ejnc.pais_cod_pais = #codigoPais#
		           AND ejnc.cod_prog_ejec = #codigoPrograma#
		           AND ejnc.cod_fase = #codigoFase#
		           AND ejnc.clie_cod_clie = clie.cod_clie
		       ) NIVEL_EJECUTIVA,
		       gere.val_nume_cont NUMERO_CONTRATO,
		       peri.cod_peri CAMPA_NOMBRAMIENTO,
		       TO_CHAR(gere.fec_cont, 'DD/MM/YYYY') FECHA_INGRESO_EJECUTIVA,
		       gere.cod_zona || '-' || gere.cod_secc ZONA_SECCION,
		       (
		        SELECT MIN(terr.cod_terr)
		          FROM zon_terri_admin ztad,
		               zon_terri terr,
		               zon_secci zscc,
		               zon_zona zzon,
		               zon_regio zorg
		         WHERE ztad.ind_borr = 0
		           ANd zscc.cod_secc = gere.cod_secc
		           AND zzon.cod_zona = gere.cod_zona
		           AND zorg.cod_regi = gere.cod_regi
		           ANd ztad.terr_oid_terr = terr.oid_terr
		           AND ztad.zscc_oid_secc = zscc.oid_secc
		           AND zscc.zzon_oid_zona = zzon.oid_zona
		           AND zzon.zorg_oid_regi = zorg.oid_regi
		       ) TERR_INICIAL,
		       (
		        SELECT MAX(terr.cod_terr)
		          FROM zon_terri_admin ztad,
		               zon_terri terr,
		               zon_secci zscc,
		               zon_zona zzon,
		               zon_regio zorg
		         WHERE ztad.ind_borr = 0
		           ANd zscc.cod_secc = gere.cod_secc
		           AND zzon.cod_zona = gere.cod_zona
		           AND zorg.cod_regi = gere.cod_regi
		           ANd ztad.terr_oid_terr = terr.oid_terr
		           AND ztad.zscc_oid_secc = zscc.oid_secc
		           AND zscc.zzon_oid_zona = zzon.oid_zona
		           AND zzon.zorg_oid_regi = zorg.oid_regi
		       ) TERR_FINAL,
		       dire.nivel_3 CIUDAD_EJECUTIVA
		  FROM zon_histo_geren gere,
		       mae_clien clie,
		       cra_perio perd,
		       seg_perio_corpo peri,
		       (
		         SELECT cldi.clie_oid_clie,
		                cldi.oid_clie_dire,
		                tivi.des_abrv_tipo_via,
		                cldi.val_nomb_via,
		                cldi.num_ppal,
		                cldi.val_obse,
		                cldi.val_barr,
		                cldi.cod_unid_geog,
		                cldi.des_villa_pobl,
		                cldi.ind_dire_ppal,
		                cldi.tidc_oid_tipo_dire,
		               (SELECT des_geog
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE pais_oid_pais = clie.pais_oid_pais
		                   AND orde_1 = SUBSTR (cldi.cod_unid_geog, 1, 6)
		                   AND orde_2 IS NULL) AS NIVEL_1,
		               (SELECT des_geog
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE pais_oid_pais = clie.pais_oid_pais
		                   AND orde_1 = SUBSTR (cldi.cod_unid_geog, 1, 6)
		                   AND orde_2 = SUBSTR (cldi.cod_unid_geog, 7, 6)
		                   AND orde_3 IS NULL) AS NIVEL_2,
		               (SELECT des_geog
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE pais_oid_pais = clie.pais_oid_pais
		                   AND orde_1 = SUBSTR (cldi.cod_unid_geog, 1, 6)
		                   AND orde_2 = SUBSTR (cldi.cod_unid_geog, 7, 6)
		                   AND orde_3 = SUBSTR (cldi.cod_unid_geog, 13, 6)
		                   AND orde_4 IS NULL) AS NIVEL_3
		          FROM mae_clien_direc cldi,
		               mae_tipo_direc tidc,
		               seg_tipo_via tivi,
		               mae_clien clie,
		               zon_terri terr
		         WHERE clie.oid_clie = cldi.clie_oid_clie
		           AND cldi.ind_elim = 0
		           AND tidc.oid_tipo_dire = cldi.tidc_oid_tipo_dire
		           AND tivi.oid_tipo_via = cldi.tivi_oid_tipo_via
		           AND cldi.terr_oid_terr = terr.oid_terr (+)
		       ) dire
		 WHERE gere.cod_regi IS NOT NULL
		   AND gere.cod_zona IS NOT NULL
		   AND gere.cod_secc IS NOT NULL
		   AND gere.perd_oid_peri_hast IS NULL
		   AND gere.gere = #codigoCliente#
		   AND gere.gere = clie.cod_clie
		   AND clie.oid_clie = dire.clie_oid_clie(+)
		   AND gere.perd_oid_peri_desd = perd.oid_peri(+)
		   AND perd.peri_oid_peri = peri.oid_peri(+)
	</select>
	
	<resultMap id="detalleEvaluacionEjecutivaResult"    class="java.util.HashMap">
        <result property="etapa" 				column="CODIGO_FASE"/>
    	<result property="campana"		 		column="CAMPANA_PROCESO"/>
    	<result property="descNivel"			column="DES_NIVE"/>
    	<result property="metaPedido"	 		column="META_PEDIDO"/>
    	<result property="realPedido"			column="REAL_PEDIDO"/>
    	<result property="metaIngreso"			column="META_INGRESO"/>
    	<result property="realIngreso" 			column="REAL_INGRESO"/>
    	<result property="metaReca"		 		column="META_RECAUDO"/>
    	<result property="realReca"	 			column="REAL_RECAUDO"/>
    	<result property="porcentajeReca"		column="PORCENTAJE_RECAUDO"/>
    	<result property="porcentajeComision" 	column="PORCENTAJE_COMISION"/>
    	<result property="comisionBruta"		column="COMISION_BRUTA"/>
    	<result property="comisionNeta"			column="COMISION_NETA"/>
    	<result property="despachoCanasta"		column="DESPACHO_CANASTA"/>
    	<result property="campanaDespacho"		column="CAMPANA_DESPACHO"/>
    </resultMap>
	<select id="getDetalleEvaluacionEjecutiva" parameterClass="java.util.Map" resultMap="detalleEvaluacionEjecutivaResult">
		SELECT fapr.cod_fase CODIGO_FASE,
		       evse.cam_proc CAMPANA_PROCESO,
		       (SELECT ejni.des_nive
		          FROM eje_nivel_progr ejni
		         WHERE ejni.pais_cod_pais = evse.pais_cod_pais
		           AND ejni.cod_prog_ejec = evse.cod_prog_ejec
		           AND ejni.cod_nive = evse.cod_nive
		       ) DES_NIVE,
		       NVL(mese.val_meta_pedi,0) META_PEDIDO,
		       NVL(evse.val_real_pedi,0) REAL_PEDIDO,
		       NVL(mese.val_meta_ingr,0) META_INGRESO,
		       NVL(evse.val_real_ingr,0) REAL_INGRESO,
		       NVL(mese.val_meta_reca,0) META_RECAUDO,
		       NVL(evse.val_mont_reca,0) REAL_RECAUDO,
		       evse.val_porc_reca PORCENTAJE_RECAUDO,
		       evse.val_porc_comi PORCENTAJE_COMISION,
		       evse.val_mont_comi COMISION_BRUTA,
		       evse.val_mont_comi_neto COMISION_NETA,
		       '' DESPACHO_CANASTA,
			   '' CAMPANA_DESPACHO
		  FROM eje_evalu_secci_campa evse,
		       eje_metas_secci mese,
		       eje_fases_progr fapr
		 WHERE evse.pais_cod_pais = #codigoPais#
		   AND evse.cod_prog_ejec = #codigoPrograma#
		   AND evse.clie_cod_clie = #codigoCliente#
		   AND fapr.pais_cod_pais = #codigoPais#
		   AND fapr.cod_prog_ejec = #codigoPrograma#
		 <isNotEmpty property="codigoFaseGrilla">
		   AND fapr.cod_fase = #codigoFaseGrilla#
		 </isNotEmpty>
		   AND evse.cam_proc BETWEEN fapr.cod_camp_inic AND fapr.cod_camp_fina
		   AND evse.pais_cod_pais = mese.pais_cod_pais(+)
		   AND evse.cod_prog_ejec = mese.cod_prog_ejec(+)
		   AND evse.cod_secc = mese.cod_secc(+)
		   AND evse.clie_cod_clie = mese.clie_cod_clie(+)
		   AND evse.cam_proc = mese.cam_proc(+)
		   AND evse.pais_cod_pais = fapr.pais_cod_pais(+)
		   AND evse.cod_prog_ejec = fapr.cod_prog_ejec(+)
		 ORDER BY fapr.cod_fase DESC,
				  evse.cam_proc DESC
	</select>
	
	<select id="getFaseActivaPrograma" parameterClass="java.util.Map" resultClass="string">
		SELECT FAPR.COD_FASE
		  FROM EJE_FASES_PROGR FAPR
		 WHERE #campanaProceso# BETWEEN FAPR.COD_CAMP_INIC AND NVL(FAPR.COD_CAMP_FINA, #campanaProceso#)
		   AND FAPR.PAIS_COD_PAIS = #codigoPais#
		   AND FAPR.COD_PROG_EJEC = #codigoPrograma#
	</select>
	
	<select id="getEtapasEjecutivas" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT FAPR.COD_FASE CODIGO,
		       FAPR.COD_FASE DESCRIPCION
		  FROM EJE_EVALU_SECCI_CAMPA EVSE,
		       EJE_FASES_PROGR FAPR
		 WHERE EVSE.PAIS_COD_PAIS = #codigoPais#
		   AND EVSE.COD_PROG_EJEC = #codigoPrograma#
		   AND EVSE.CLIE_COD_CLIE = #codigoCliente#
		   AND EVSE.PAIS_COD_PAIS = FAPR.PAIS_COD_PAIS
		   AND EVSE.COD_PROG_EJEC = FAPR.COD_PROG_EJEC
		   AND EVSE.CAM_PROC BETWEEN FAPR.COD_CAMP_INIC AND FAPR.COD_CAMP_FINA
		 GROUP BY FAPR.COD_FASE
		 ORDER BY FAPR.COD_FASE DESC
 	</select>
 	
 	<select id="getBloqueoActivo" parameterClass="string" resultClass="string">
		SELECT PQ_APL_AUX.Valor_Gen_I18n_Sicc(1, TIP.OID_TIPO_BLOQ, 'MAE_TIPO_BLOQU')
		  FROM MAE_CLIEN_BLOQU       A,
		       MAE_ACCIO_PROCE_BLOQU B,
		       MAE_ACCIO_BLOQU       C,
		       MAE_PROCE_BLOQU       D,
		       MAE_CLIEN 			CLI,
		       MAE_TIPO_BLOQU        TIP
		 WHERE A.FEC_DESB IS NULL
		   AND A.CLIE_OID_CLIE = CLI.OID_CLIE
		   AND A.TIBQ_OID_TIPO_BLOQ = TIP.OID_TIPO_BLOQ
		   AND CLI.COD_CLIE = #value#
		   AND A.TIBQ_OID_TIPO_BLOQ = B.TIBQ_OID_TIPO_BLOQ
		   AND B.MABL_OID_ACCI_BLOQ = C.OID_ACCI_BLOQ
		   AND B.MAPB_OID_PROC_BLOQ = D.OID_PROC_BLOQ
		   AND D.COD_PROC_BLOQ = 'FA'
		   AND C.COD_ACCI_BLOQ = 'FN'
		   AND ROWNUM = 1
	</select>
	
	<select id="getSaldoCupon3" parameterClass="java.util.Map" resultClass="java.lang.Double">
		
		select sum(a.imp_valo) 
		from int_solic_conso_cupon_pago a, sto_docum_digit b 
		where a.cod_clie = #codigoCliente# 
		and a.sec_nume_docu=b.sec_nume_docu 
		and b.ind_envi=1 
		and a.cod_peri = #campaña#

 	</select>
 	
 	<select id="getOidPeriodo" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#) FROM DUAL
	</select>
	
	<select id="getOidCliente" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		select m.oid_clie 
		from mae_clien m 
		where m.cod_clie = #codigoCliente#
	</select>
	
	<select id="getMontoMinimo" parameterClass="java.util.Map"  resultClass="java.lang.Double">
		select (CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_CAMPA_ANTER(#oidCliente#,#codigoPeriodo#) - NVL(FLX_PKG_PROCE.FLX_FN_OBTIE_SALDO_MAXIM(#oidCliente#,#oidPeriodo#),0) -
               NVL(CCC_PKG_GENER.CCC_FN_OBTIE_ABONO_PEND(#oidCliente#),0)) montoMinimo 
		from dual
	</select>
	
	<select id="getDesPeriodoByCodigoPeriodoX" parameterClass="java.util.Map" resultClass="string">
	SELECT PER_PKG_REPOR_PERCE.PER_FN_OBTIE_PERIO 
       (seg_perio_corpo.cod_peri, peri.pais_oid_pais, peri.marc_oid_marc, peri.cana_oid_cana,#campanias#)
       FROM cra_perio peri,
            seg_perio_corpo
     where peri.oid_peri = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#)
	       AND peri.peri_oid_peri=seg_perio_corpo.oid_peri  

	</select>
	
	<select id="getAplicaMontoMinimo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT *
		FROM flx_gener_finan_consu_flexi ff
  		WHERE ff.oid_peri_sald_maxi_camp = #oidPeriodo#
  		AND ff.oid_clie = #oidCliente#
		AND ff.cod_moti_rech is null
	</select>
 
<resultMap id="consultaDetallePedidoSolicitadoResult"  class="java.util.HashMap">
	    <result property="codigoVenta"		    	column="COD_VENT"/>	                                                                       
    	<result property="descripcionProducto"		column="DES_PROD"/>
    	<result property="unidadDemanda"			column="VAL_UNID_DEM"/>
    	<result property="limiteVenta" 				column="LIMITE_VENTA"/>
    	<result property="valorPrecioCatalogo" 		column="VAL_PREC_CATA_UNIT_LOCA"/>
    	<result property="valorTotalPrecioCatalogo" column="PRECIO_CATALOGO_TOTAL"/>
    	<result property="origenOCR" 				column="IND_RECE_OCR"/>
    	<result property="origenWEB" 				column="IND_RECE_WEB"/>
    	<result property="origenDD" 				column="IND_RECE_DD"/>
    	<result property="origenIVR" 				column="IND_RECE_IVR"/>
    	<result property="origenDIG" 				column="IND_RECE_DIGI"/>
	</resultMap>
	
	<select id="getConsultaDetallePedidoSolicitado" parameterClass="java.util.Map" resultMap="consultaDetallePedidoSolicitadoResult">
		SELECT DISTINCT 
				B.COD_VENT, 
				DES_PROD, 
				VAL_UNID_DEM, 
				VAL_LIMI_CTRL_VENT LIMITE_VENTA, 
				VAL_PREC_CATA_UNIT_LOCA, 
				VAL_PREC_CATA_UNIT_LOCA*VAL_UNID_DEM PRECIO_CATALOGO_TOTAL,
        		B.VAL_UNID_OCR IND_RECE_OCR,
        		B.VAL_UNID_WEB IND_RECE_WEB,
        		B.VAL_UNID_DD IND_RECE_DD,
        		B.VAL_UNID_IVR IND_RECE_IVR,
        		B.VAL_UNID_DIGI IND_RECE_DIGI				
	  	  FROM INT_SOLIC_CONSO_CABEC A, INT_SOLIC_CONSO_DETAL B, PED_GESTI_STOCK C, PED_SOLIC_CABEC D
		 WHERE A.COD_CLIE=B.COD_CLIE AND A.COD_CLIE = #codigoCliente#
			<isNotEmpty property="codigoVenta">
				AND  B.COD_VENT = #codigoVenta#
			</isNotEmpty>
	  	   AND a.sec_nume_docu = b.sec_nume_docu_cabe
		   AND B.OFDE_OID_DETA_OFER=C.OFDE_OID_DETA_OFER(+)
		   AND C.VAL_LIMI_CTRL_VENT(+) IS NOT NULL
		   AND D.OID_SOLI_CABE = A.SOCA_OID_SOLI_CABE_REFE 
		   AND D.SOCA_OID_SOLI_CABE = #oidConsolidado#
	
		UNION
		
		SELECT DISTINCT 
				B.COD_VENT, 
				DES_PROD, 
				VAL_UNID_DEM, 
				VAL_LIMI_CTRL_VENT LIMITE_VENTA, 
				VAL_PREC_CATA_UNIT_LOCA, 
				VAL_PREC_CATA_UNIT_LOCA*VAL_UNID_DEM PRECIO_CATALOGO_TOTAL,
        		B.VAL_UNID_OCR IND_RECE_OCR,
        		B.VAL_UNID_WEB IND_RECE_WEB,
        		B.VAL_UNID_DD IND_RECE_DD,
        		B.VAL_UNID_IVR IND_RECE_IVR,
        		B.VAL_UNID_DIGI IND_RECE_DIGI				
	  	  FROM PED_HISTO_SOLIC_CONSO_CABEC A, PED_HISTO_SOLIC_CONSO_DETAL B, PED_GESTI_STOCK C, PED_SOLIC_CABEC D
		 WHERE A.COD_CLIE=B.COD_CLIE AND A.COD_CLIE = #codigoCliente#
			<isNotEmpty property="codigoVenta">
				AND  B.COD_VENT = #codigoVenta#
			</isNotEmpty>
	  	   AND a.sec_nume_docu = b.sec_nume_docu_cabe
		   AND B.OFDE_OID_DETA_OFER=C.OFDE_OID_DETA_OFER(+)
		   AND C.VAL_LIMI_CTRL_VENT(+) IS NOT NULL
		   AND D.OID_SOLI_CABE = A.SOCA_OID_SOLI_CABE_REFE 
		   AND D.SOCA_OID_SOLI_CABE = #oidConsolidado#			   
		   
	</select>	

	<select id="getPromedioVentasxNumeroPedidos" parameterClass="java.util.Map" resultClass="string">
		SELECT HIP_PKG_CONSU.HIP_FN_OBTIE_PROME_VENTA_PEDID(#codigoPais#, #codigoMarca#, #codigoCanal#,
												#codigoRegion#, #codigoCliente#, #numeroPedidos#)
		  FROM DUAL
 	</select>
 	
	<resultMap id="getCabeceraConsultoraCastigadaResult"    class="java.util.HashMap">
    	<result property="codigo" column="COD_CLIE"/>
    	<result property="cedula" column="NUM_DOCU_IDEN"/>
    	<result property="nombresApellidos" column="NOM_APEL"/>
    	<result property="region" column="COD_REGI"/>
    	<result property="zona" column="COD_ZONA"/>
    </resultMap>
    
	<select id="getCabeceraConsultoraCastigada" parameterClass="java.util.Map" resultMap="getCabeceraConsultoraCastigadaResult">
		SELECT cod_clie, num_docu_iden,
		       val_nom1 || ' ' || val_nom2 || ' ' || val_ape1 || ' '|| val_ape2 nom_apel,
		       cod_regi,
		       cod_zona
		  FROM ccc_consu_casti_cabec
		  WHERE IND_ACTI = 1
		
			<isNotEmpty prepend="AND" property="codigoCliente">
				cod_clie = #codigoCliente#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="numeroDocIdentidad">
				num_docu_iden = #numeroDocIdentidad#
			</isNotEmpty>
		
	</select>
	
	<resultMap id="getDetalleConsultoraCastigadaResult"    class="java.util.HashMap">
    	<result property="sociedad" column="COD_SOCI"/>
    	<result property="deudaCastigada" column="IMP_DEUD_CAST"/>
    	<result property="deudaActual" column="IMP_DEUD_ACTU"/>
    	<result property="periodoDeuda" column="cod_camp_deud"/>
    </resultMap>
    
	<select id="getDetalleConsultoraCastigada" parameterClass="java.util.Map" resultMap="getDetalleConsultoraCastigadaResult">
		SELECT cod_soci, imp_deud_cast, imp_deud_actu, cod_camp_deud
		  FROM ccc_consu_casti_cabec
		 WHERE IND_ACTI = 1
		 
			<isNotEmpty prepend="AND" property="codigoCliente">
				cod_clie = #codigoCliente#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="numeroDocIdentidad">
				num_docu_iden = #numeroDocIdentidad#
			</isNotEmpty>
		
	</select>
 	
	<!-- OBTIENE INDICADOR BASPARAMPAIS -->
    <select id="getIndicadorBasparampais" parameterClass="java.util.Map" resultClass="string">
    	select count(*)
          from bas_param_pais
         where IND_ACTI = '1'
           and cod_sist = 'HIP'
           and cod_pais = #codigoPais#
           and nom_para = 'formatoMontoMoneda'
           and rownum = 1
	</select>
 	
	<!-- DEVUELVE ETAPA DE COBRO -->
    <select id="getEtapaDeCobro" parameterClass="java.util.Map" resultClass="string">
    	   SELECT MIN(ed.val_desc)
		   FROM 
		     cob_detal_asign_carte d,
		     cob_etapa_deuda_pais ed
		   WHERE d.cod_etap_deud = ed.cod_etap_deud 
		     AND d.oid_clie = #oidCliente#
		     AND d.fec_cier >= TRUNC(SYSDATE)
	</select>
	
	<!-- DEVUELVE COBRADOR -->
    <select id="getCobrador" parameterClass="java.util.Map" resultClass="string">
       SELECT MIN(u.val_nomb_usua_cobr)
	   FROM cob_detal_asign_carte d,
	     cob_usuar_cobra_pais u
	   WHERE d.cod_usua_cobr = u.cod_usua_cobr 
	     AND d.oid_clie = #oidCliente#
	     AND d.fec_cier >= TRUNC(SYSDATE)
	</select>
	
	<!-- RESULT CUENTA CORRIENTE CONSULTORA CASTIGADA -->
	<resultMap id="getCuentaCorrienteConsultoraCastigadaResult"    class="java.util.HashMap">
    	<result property="descripcionCuentaCorriente"	column="des_cc"/>
    	<result property="fechaPago"					column="fec_pago"/>
    	<result property="fechaProceso"					column="fec_proc"/>
    	<result property="importePago"					column="imp_pago"/>
    </resultMap>
	
	<!-- DEVUELVE CUENTA CORRIENTE CONSULTORA CASTIGADA -->
    <select id="getCuentaCorrienteConsultoraCastigada" parameterClass="java.util.Map" resultMap="getCuentaCorrienteConsultoraCastigadaResult">
        SELECT ccb.des_cc, 
        	   TO_CHAR(mb.fec_pago,'dd/MM/yyyy') fec_pago, 
        	   TO_CHAR(mb.fec_proc,'dd/MM/yyyy') fec_proc, 
        	   mb.imp_pago
		FROM ccc_movim_banca_casti mb,
		     ccc_cuent_corri_banca ccb
		WHERE mb.oid_cuen_corr_banc = ccb.oid_cuen_corr_banc
		  AND mb.num_docu_iden = #numeroDocIdentidad#
	</select>
 	
 	<parameterMap id="executeCtaCteUltimasCampanhasParams" class="map">
  		<parameter property="codigoCliente"	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoPais"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoRegion"	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	  </parameterMap>

	<procedure id="executeCtaCteUltimasCampanhas" parameterMap="executeCtaCteUltimasCampanhasParams">
    	{call HIP_PKG_CONSU.HIP_PR_CONSU_CTACT_CAMPA(?,?,?)}
  	</procedure>
 	
 	<resultMap id="getCtaCteUltimasNCampanhasResult"   class="java.util.HashMap">
    	<result property="fechaEmision" 		column="FEC_EMIS"/>
    	<result property="descripcionMovimiento" 		column="DES_MOVI"/>
    	<result property="importeCargo"		column="IMP_CARG"/>
		<result property="importeAbono" 	column="IMP_ABON"/>
    	<result property="campaniaCalculada"		column="CAM_CALC"/>
    </resultMap>
  	
    <select id="getCtaCteUltimasNCampanhas"  resultMap="getCtaCteUltimasNCampanhasResult"  parameterClass="map">
		SELECT   to_char(fec_emis, 'DD/MM/YYYY') fec_emis, des_movi, imp_carg, -1*(imp_abon) imp_abon, cam_calc
		    FROM gtt_consu_cuent_corri_campa
		   WHERE cam_calc IN (
		               SELECT a.cam_calc
		                 FROM (SELECT   cam_calc
		                           FROM gtt_consu_cuent_corri_campa
		                           WHERE cam_calc IS NOT NULL 
		                       GROUP BY cam_calc
		                       ORDER BY CAM_CALC DESC) a
		   	   		<![CDATA[		               
		                WHERE ROWNUM <= #numeroCampanias#)
			    	]]>		   	
		ORDER BY gtt_consu_cuent_corri_campa.fec_emis ASC, gtt_consu_cuent_corri_campa.ind_caab 
	</select>
	
	<resultMap id="getCtaCteUltimasNCampanhasCabeceraResult" class="java.util.HashMap">
		<result property="codigo" 		column="CODIGO" 	/>
		<result property="descripcion" 	column="DESCRIPCION"/>
		<result property="sumaMontoCampania" 		column="SUMA" 	/>
			</resultMap>    
    	
    <select id="getCtaCteUltimasNCampanhasCabecera"  resultMap="getCtaCteUltimasNCampanhasCabeceraResult" parameterClass="map">
        	<![CDATA[        
	     		SELECT 
	     		a.cam_calc CODIGO,
	     		a.cam_calc DESCRIPCION,
                a.saldo SUMA
	            FROM (SELECT   cam_calc, sum(nvl(imp_carg, 0) + -1*nvl(imp_abon, 0)) saldo 
	                           FROM gtt_consu_cuent_corri_campa
	                           WHERE cam_calc IS NOT NULL
	                       GROUP BY cam_calc
	                       ORDER BY cam_calc DESC) a
	            WHERE ROWNUM <= #numeroCampanias#
	            ORDER BY a.cam_calc ASC 
            ]]>        
    </select>
    
    <insert id="insertReporteHIPCuentaCorrientesCampanha">
		INSERT INTO HIP_CONSU_CUENT_CORRI_CAMPA(
		        NUM_REGI,
				FEC_EMIS, 
				DES_MOVI,
				CAM_VAL0,
				CAM_VAL1, 
				CAM_VAL2, 
				CAM_VAL3, 
				CAM_VAL4, 
				CAM_VAL5, 
				CAM_VAL6, 
				CAM_VAL7, 
				CAM_VAL8, 
				CAM_VAL9, 
				CAM_VAL10,
				CAM_VAL11,
				CAM_VAL12,
				CAM_VAL13,
				CAM_VAL14,
				CAM_VAL15,
				CAM_VAL16,
				CAM_VAL17,
		        USU_REGI)
		VALUES(
			#numeroRegistro#,
			#fechaEmision#,
			#descripcionMovimiento#,
			#campaniaNumero0#,
			#campaniaNumero1#,
			#campaniaNumero2#,
			#campaniaNumero3#,
			#campaniaNumero4#,
			#campaniaNumero5#,
			#campaniaNumero6#,
			#campaniaNumero7#,
			#campaniaNumero8#,
			#campaniaNumero9#,
			#campaniaNumero10#,
			#campaniaNumero11#,
			#campaniaNumero12#,
			#campaniaNumero13#,
			#campaniaNumero14#,
			#campaniaNumero15#,
			#campaniaNumero16#,
			#campaniaNumero17#,
			#codigoUsuario#)        
    </insert>
 	
 	<delete id="deleteReporteHIPCuentaCorrientesCampanha" parameterClass="string">
        DELETE FROM HIP_CONSU_CUENT_CORRI_CAMPA WHERE USU_REGI = #value#
    </delete>
 	
 	<select id="getSaldoACampana" parameterClass="java.util.Map" resultClass="string">
    	<![CDATA[
	    SELECT
	    NVL(SUM(IMP_PEND), 0) 
	    FROM CCC_MOVIM_CUENT_CORRI
	    WHERE CLIE_OID_CLIE = #oidCliente#
	    AND PERD_OID_PERI <= GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#)
	    AND IMP_PEND > 0
		]]>		   
 	</select>
 	
 	<select id="getPedidoBaseLineaCredito" parameterClass="java.util.Map" resultMap="getPedidoBaseLineaCreditoResultMap">
 		<![CDATA[
			SELECT F.COD_PERI_FACT, F.VAL_LINE_CRED, F.VAL_PEDI_BASE
			FROM FLX_CONSU_HABIL_FLEXI F
			WHERE F.COD_PAIS = #codigoPais# 
			AND F.COD_PERI_FACT >= GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codigoPais#, #codigoPeriodo#, -1)
			AND F.COD_PERI_FACT <= GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codigoPais#, #codigoPeriodo#, 1)
			AND F.COD_CLIE = #codigoConsultora#
			ORDER BY F.COD_PERI_FACT
		]]>
 	</select>
 	
	<resultMap id="detalleRecuperacionAnulacionResult"    class="java.util.HashMap">
        <result property="pedidoAnulado" 		column="PED_ANULA"/>
    	<result property="campana"		 		column="CAMP_REFE"/>
    	<result property="solicitudRecuperada" 	column="TIP_SOL"/>
    	<result property="campanaEnvio"	 		column="CAMP_RECU"/>
    	<result property="codigoSAP"			column="COD_SAP"/>
    	<result property="cuv"					column="CUV"/>
    	<result property="descProducto" 		column="DESCRIPCION"/>
    	<result property="unidades"		 		column="UNIDADES"/>
    	<result property="gp"	 				column="GP"/>
    	<result property="fechaProceso"			column="FECHA"/>
    	<result property="documento" 			column="DOCUMENTO"/>
    	<result property="oidSoliPosi"			column="OID_SOLI_POSI"/>
    	<result property="oidSoliCabe"			column="SOCA_OID_SOLI_CABE"/>
    </resultMap>
	<select id="getDetalleRecuperacionAnulacion" parameterClass="java.util.Map" resultMap="detalleRecuperacionAnulacionResult">
		SELECT PSC1.VAL_NUME_SOLI PED_ANULA,
		       GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO( NVL(PSC1.PERD_OID_PERI ,PSC.PERD_OID_PERI)) CAMP_REFE,
		       GEN_PKG_GENER.GEN_FN_DEVUE_DESCR_TIPOS_SOLIC( PSC.TSPA_OID_TIPO_SOLI_PAIS ) TIP_SOL,
		       GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO( PSC.PERD_OID_PERI ) CAMP_RECU,
		       OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD( PSP.PROD_OID_PROD )  COD_SAP,
		       NVL(PSP.VAL_CODI_VENT, PSP.VAL_CODI_VENT_FICT) CUV,
		       GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(PSP.PROD_OID_PROD,'MAE_PRODU','es') DESCRIPCION ,   
		       PSP.NUM_UNID_DEMA UNIDADES,
		       PSC.GRPR_OID_GRUP_PROC GP,
		       TO_CHAR(PSC.FEC_FACT, 'DD/MM/YYYY') FECHA,
		       PSC2.VAL_NUME_SOLI DOCUMENTO,
		       PSP.OID_SOLI_POSI OID_SOLI_POSI,
		       PSP.SOCA_OID_SOLI_CABE SOCA_OID_SOLI_CABE
		  from ped_solic_Cabec psc, mae_clien mae, ped_solic_posic psp, ped_solic_Cabec psc1 , ped_solic_Cabec psc2
		 where PSC.CLIE_OID_CLIE =  MAE.OID_CLIE
		   and PSC.OID_SOLI_CABE = PSP.SOCA_OID_SOLI_CABE
		   and psc.VAL_OBSE_REVI = PSC1.OID_SOLI_CABE(+)
		   and psc.soca_oid_soli_Cabe = PSC2.OID_SOLI_CABE(+)
		   and PSC.VAL_GLOS_OBSE = 'GENERADO POR ANULACION'
		   and mae.cod_clie = #codigoCliente#
		 order by PSC.OID_SOLI_CABE desc
	</select>
	
	<insert id="insertRecuperacionAnulacionAudit" parameterClass="java.util.Map">
 		INSERT INTO REC_ELIM_RECU (
		                PED_ANUL,
		                CAM_REFE,
		                TIP_SOLI,
		                CAM_RECU,
		                COD_SAP,
		                COD_CUV,
		                DES_PROD,
		                NUM_UNID,
		                OID_GRUP,
		                FEC_FACT,
		                NUM_DOCU,
		                OID_SOLI_POSI,
		                SOCA_OID_SOLI_CABE,
		                FEC_DIGI,
		                USU_DIGI)
		SELECT PSC1.VAL_NUME_SOLI PED_ANULA,
		            GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO( NVL(PSC1.PERD_OID_PERI ,PSC.PERD_OID_PERI)) CAMP_REFE,
		            GEN_PKG_GENER.GEN_FN_DEVUE_DESCR_TIPOS_SOLIC( PSC.TSPA_OID_TIPO_SOLI_PAIS ) TIP_SOL,
		            GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO( PSC.PERD_OID_PERI ) CAMP_RECU,
		            OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD( PSP.PROD_OID_PROD )  COD_SAP,
		            NVL(PSP.VAL_CODI_VENT, PSP.VAL_CODI_VENT_FICT) CUV,
		            GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(PSP.PROD_OID_PROD,'MAE_PRODU','es') DESCRIPCION ,   
		            PSP.NUM_UNID_DEMA UNIDADES,
		            PSC.GRPR_OID_GRUP_PROC GP,
		            PSC.FEC_FACT FECHA,
		            PSC2.VAL_NUME_SOLI DOCUMENTO,
		            PSP.OID_SOLI_POSI,
		            PSP.SOCA_OID_SOLI_CABE,
		            SYSDATE,
		            #usuario#
		  FROM PED_SOLIC_CABEC PSC, MAE_CLIEN MAE, PED_SOLIC_POSIC PSP, PED_SOLIC_CABEC PSC1 , PED_SOLIC_CABEC PSC2
		WHERE PSC.CLIE_OID_CLIE =  MAE.OID_CLIE
		    AND PSC.OID_SOLI_CABE = PSP.SOCA_OID_SOLI_CABE
		    AND PSC.VAL_OBSE_REVI = PSC1.OID_SOLI_CABE(+)
		    AND PSC.SOCA_OID_SOLI_CABE = PSC2.OID_SOLI_CABE(+)
		    AND PSP.OID_SOLI_POSI = #oidSoliPosi#
 	</insert>
 	
 	<delete id="deleteRecuperacionAnulacion" parameterClass="string">
		DELETE FROM PED_SOLIC_POSIC x
 		 WHERE X.OID_SOLI_POSI = #value#
    </delete>
    
    <select id="getExisteIntegridadCabecera" parameterClass="string" resultClass="string">
    	SELECT COUNT(1)
		  FROM PED_SOLIC_POSIC
		 WHERE SOCA_OID_SOLI_CABE = #value#
    </select>
    
    <delete id="deleteRecuperacionAnulacionCabecera" parameterClass="string">
		DELETE FROM PED_SOLIC_CABEC
 		 WHERE OID_SOLI_CABE = #value#
    </delete>

    <resultMap id="basePremiosRechazadosResult"    class="java.util.HashMap">
    	<result property="periodoRechazo" 				column="COD_PERI"/>		    
    	<result property="fechaRechazo" 	     		column="FEC_DIGI"/>		    
    	<result property="codigoPremio"		    		column="COD_VENT_FICT"/>		    
    	<result property="codigoSAP"					column="COD_SAP"/>
    	<result property="descripcion"					column="DES_PROD"/>
    	<result property="unidadesSolicitadas"			column="NUM_UNID"/>		    
	</resultMap>   
	
    <select id="getPremiosRechazados" parameterClass="java.util.Map" resultMap="basePremiosRechazadosResult">
		SELECT pdin.Cod_Peri,
		       TO_CHAR(pdin.fec_digi,'dd/MM/yyyy') fec_digi,
		       pdin.cod_vent_fict,
		       prod.cod_sap,
		       pq_apl_aux.Valor_Gen_I18n_Sicc(1, prod.oid_prod, 'MAE_PRODU') des_prod,
		       pdin.num_unid
		  FROM inc_premi_digit_inval pdin,
		       inc_concu_param_gener copa,
		       INC_PREMI_ARTIC       ilpa,
		       INC_LOTE_PREMI_ARTIC  lopa,
		       inc_artic_lote        arlo,
		       mae_produ             prod,
		       mae_clien             clie,
		       mae_clien_ident       mi
		WHERE  copa.oid_para_gral = #oidConcurso#
		  AND  pdin.cod_conc = copa.num_conc
		  AND  pdin.clie_oid_clie = clie.oid_clie
		  AND  pdin.cod_clie      = #codigoCliente#
		  AND  pdin.panp_oid_para_nive_prem = ilpa.panp_oid_para_nive_prem
		  AND  ilpa.oid_prem_arti = lopa.prar_oid_prem_arti
		  AND  lopa.num_prem = pdin.num_prem
		  AND  lopa.oid_lote_prem_arti = arlo.lopa_oid_lote_prem_arti
		  AND  arlo.prod_oid_prod = prod.oid_prod (+)
		  AND  clie.oid_clie = mi.clie_oid_clie
		  AND  mi.val_iden_docu_prin = 1
    </select>  
    
	<resultMap id="baseEtapasCobroResult"    class="java.util.HashMap">
    	<result property="etapa" 			column="VAL_DESC"/>
    	<result property="periodo" 			column="COD_PERI"/>
    	<result property="saldo" 			column="IMP_DEUD_PEND"/>
    	<result property="cobrador" 		column="VAL_NOMB_USUA_COBR"/>
    	<result property="telefono" 		column="VAL_NUM_TELE"/>
    	<result property="direccion" 		column="VAL_DIRE"/>
    </resultMap>
    
    <select id="getEtapasCobro" parameterClass="java.util.Map" resultMap="baseEtapasCobroResult">
		SELECT e.VAL_DESC,
		       d.COD_PERI,
		       d.IMP_DEUD_PEND,
		       u.VAL_NOMB_USUA_COBR,
		       u.VAL_NUM_TELE,
		       u.VAL_DIRE
		  FROM cob_detal_asign_carte d,
		       cob_etapa_deuda_pais e,
		       cob_usuar_cobra_pais u
		 WHERE d.cod_etap_deud = e.cod_etap_deud
		   AND d.cod_usua_cobr = u.cod_usua_cobr
		   AND d.cod_clie = #codigoCliente#
		   AND d.fec_cier >= TRUNC(SYSDATE)
		   AND u.ind_supe = 0
    </select>  
        
	<select id="getDeshabilitarZonaTerritorio" parameterClass="java.util.Map" resultClass="string">
		SELECT HIP_PKG_CONSU.HIP_FN_DESHA_ZONA_TERRI(#codigoPais#, #codigoMarca#, #codigoCanal#,
												 #codigoCliente#, #numeroPeriodos#)
		  FROM DUAL
 	</select>
 	        
    <resultMap id="basePremiosElegidosResult"    class="java.util.HashMap">
    	<result property="nivel"						column="NUM_NIVE"/>		    
    	<result property="numeroPremio" 	     		column="NUM_PREM"/>		    
    	<result property="premio"			    		column="COD_VENT_FICT"/>		    
    	<result property="codigoSAP"					column="COD_SAP"/>
    	<result property="descripcionProducto"			column="DES_PROD"/>
    	<result property="unidades"						column="NUM_UNID"/>
    	<result property="fechaSol"						column="FECHASOL"/>
    	<result property="periodoSol"					column="PERIODO_SOL"/>		    
    	<result property="periodoDespacho"				column="PERIODO_DES"/>
    	<result property="estado"						column="IND_PEND"/>
    	<result property="motivoRechazo"				column="MOTIVO_RECHAZO"/>
    	<result property="fechaUltEval"					column="FECHA_UEVAL"/>
    	<result property="origen"						column="ORIGEN"/>
	</resultMap>   
	
    <select id="getPremiosElegidos" parameterClass="java.util.Map" resultMap="basePremiosElegidosResult">
		SELECT NUM_NIVE,
		       NUM_PREM,
		       COD_VENT_FICT,
		       COD_SAP, 
		       DES_PROD, 
   			   SUM(unids) NUM_UNID,
		       FECHASOL,
		       PERIODO_SOL,
		       PERIODO_DES,
		       IND_PEND,
		       MOTIVO_RECHAZO,
		       FECHA_UEVAL,
		       ORIGEN
		  FROM (SELECT cod_clie,
		               num_conc,
		               num_nive,
		               a.num_prem,
		               cod_vent_fict,
		               TO_CHAR(fec_sist,'dd/MM/yyyy') fechasol,
		               case
		                 when ind_pend = 0 then
		                  'Atendido'
		                 when ind_pend = 1 then
		                  'Pendiente'
		                 when ind_pend = 3 then
		                  'Pendiente sig Campaña'
		                 when ind_pend = 4 then
		                  'Rechazado'
		                 else ' ' 
		               end Ind_pend,
		               i.cod_peri periodo_sol,
		               case
		                 when a.tip_rece = 'M' then
		                  'Manual'
		                 else
		                  'Regular'
		               end Origen,
		               k.cod_peri periodo_des,
		               (SELECT des_moti_inva
		                  FROM inc_motiv_premi_inval desm
		                 WHERE desm.cod_moti_inva = a.cod_moti_inva) motivo_rechazo,
		               TO_CHAR(a.fec_modi,'dd/MM/yyyy') fecha_ueval,
		               e.num_unid unids,
                       m.cod_sap, 
                       des.VAL_I18N des_prod
		          FROM inc_premi_elegi       a,
		               inc_concu_param_gener b,
		               inc_premi_artic       c,
		               inc_lote_premi_artic  d,
		               inc_artic_lote        e,
		               inc_param_nivel_premi x,
		               mae_produ             f,
		               mae_clien             g,
		               cra_perio             h,
		               seg_perio_corpo       i,
		               cra_perio             j,
		               seg_perio_corpo       k,
		               mae_produ 			 m, 
		               gen_i18n_sicc_pais des
		         WHERE a.copa_oid_para_gral = b.oid_para_gral
		           AND c.PANP_OID_PARA_NIVE_PREM = a.PANP_OID_PARA_NIVE_PREM
		           AND d.PRAR_OID_PREM_ARTI = c.OID_PREM_ARTI
		           AND e.LOPA_OID_LOTE_PREM_ARTI = d.OID_LOTE_PREM_ARTI
		           AND c.PANP_OID_PARA_NIVE_PREM = x.OID_PARA_NIVE_PREM
		           AND d.num_prem = a.num_prem
		           AND a.clie_oid_clie = g.oid_clie
		           AND e.prod_oid_prod = f.oid_prod
		           AND h.oid_peri(+) = a.perd_oid_peri
		           AND h.peri_oid_peri = i.oid_peri(+)
		           AND j.oid_peri(+) = a.perd_oid_peri_iatn
		           AND j.peri_oid_peri = k.oid_peri(+)
		           AND e.prod_oid_prod = m.oid_prod
                   AND m.oid_proD = des.val_oid(+)
                   AND des.attr_enti(+) = 'MAE_PRODU'
		           AND b.oid_para_gral = #oidConcurso#
		           AND cod_clie = #codigoCliente# 
		        )
		 GROUP BY num_nive,
		          num_prem,
		          cod_vent_fict,
		          cod_sap, 
		          des_prod,
		          fechasol,
		          ind_pend,
		          periodo_sol,
		          origen,
		          periodo_des,
		          motivo_rechazo,
		          fecha_ueval
		 ORDER BY num_nive, num_prem, cod_vent_fict
    </select>  
 	        
    <select id="getPedidoCampanhaProceso"  parameterClass="java.util.Map" resultClass="int">
        SELECT count (1)
        FROM ped_solic_cabec ps,
             mae_clien mc,
             ped_tipo_solic_pais tsp,
             ped_tipo_solic ts
        WHERE cod_clie = #codigoCliente#
         AND ps.clie_oid_clie = mc.oid_clie
         AND ps.tspa_oid_tipo_soli_pais = tsp.oid_tipo_soli_pais
         AND tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli
         AND ps.perd_oid_peri = gen_pkg_gener.gen_fn_devuelve_id_cra_perio2(#codigoPeriodo#)
         AND ts.cod_tipo_soli = 'SOC'
    </select>
	
    <select id="getCierreRegionCampanhaProceso"  parameterClass="java.util.Map" resultClass="int">
		SELECT count (con.oid_ctrl)
		  FROM fac_contr_cierr con,
		       fac_tipos_cierr tip,
		       cra_perio cra,
		       seg_perio_corpo cor,
		       seg_pais pai,
		       zon_regio reg
		 WHERE con.tcie_oid_tipo_cier = tip.oid_tipo_cier
		   AND cra.oid_peri = con.perd_oid_peri
		   AND cor.oid_peri = cra.peri_oid_peri
		   AND pai.oid_pais = cra.pais_oid_pais
		   AND reg.oid_regi = con.zorg_oid_regi
		   AND reg.cod_regi = #codigoRegion#
		   AND tip.cod_tipo_cier = 'R'
		   AND cor.cod_peri = #codigoPeriodo#
		   AND pai.cod_pais = #codigoPais#
		   AND con.val_resu_proc = 'OK'
    </select>
    
	<select id="getCodigoProgramaLET" parameterClass="string" resultClass="string">
		SELECT LPRO.COD_PROG
		FROM LEC_PROGR LPRO
		WHERE #value# BETWEEN LPRO.CAM_INIC AND NVL(LPRO.CAM_FIN, #value#)
		AND IND_ACTI = '1'
	</select>

    <resultMap id="datosSociaEmpresariaResultMap"    class="java.util.HashMap">
    	<result property="codigo"			column="COD_CLIE"/>		    
    	<result property="codigoRegion" 	column="COD_REGI"/>		    
    	<result property="nombreRegion" 	column="NOM_REGI"/>		    
    	<result property="codigoZona"		column="COD_ZONA"/>
    	<result property="nombreZona"		column="NOM_ZONA"/>
    	<result property="codigoSeccion"	column="COD_SECC"/>
    	<result property="nombreSeccion"	column="NOM_SECC"/>
    	<result property="traccion"			column="TRA_LIDE"/>
    	<result property="nivel"			column="NIV_LIDE"/>
    	<result property="campanyaInicio"	column="CAM_INIC_LIDE"/>
    	<result property="fechaInicio"		column="FEC_INIC_LIDE"/>
    	<result property="campanyaCese"		column="CAM_CESE_LIDE"/>		    
    	<result property="fechaCese"		column="FEC_CESE_LIDE"/>
    	<result property="indicadorActivo"	column="IND_ACTI"/>
	</resultMap>   
	
	<select id="getDatosSociaEmpresaria" parameterClass="java.util.Map" resultMap="datosSociaEmpresariaResultMap">
		<![CDATA[
		    SELECT 
		        GERE.GERE COD_CLIE,
		        GERE.COD_REGI COD_REGI,
		        UADM.DES_REGI NOM_REGI,
		        GERE.COD_ZONA COD_ZONA,
		        UADM.DES_ZONA NOM_ZONA,
		        GERE.COD_SECC COD_SECC,
		        UADM.DES_SECCI NOM_SECC,
		        NVL((   SELECT LTDE.DES_TIPO_DESE
		                    FROM LEC_LIDER_DESEM LDET, LEC_TIPO_DESEM LTDE
		                    WHERE LDET.LTDE_COD_TIPO_DESE   = LTDE.COD_TIPO_DESE
		                    AND LDET.COD_LIDE = GERE.GERE
		                    AND LDET.LPEC_CAM_EVAL = #campanyaProceso#
		                    AND LDET.IND_TIPO_DESE = 'C' ),'Ninguno') TRA_LIDE,
		        NVL((   SELECT LLNI.LNIV_COD_NIVE || ' - ' || LNIV.DES_NIVE
		                    FROM LEC_LIDER_NIVEL LLNI, LEC_NIVEL LNIV
		                    WHERE LLNI.LNIV_COD_NIVE = LNIV.COD_NIVE
		                    AND LLNI.LPRO_COD_PROG = #codigoPrograma#
		                    AND LLNI.COD_LIDE = GERE.GERE
		                    AND LLNI.IND_TIPO_NIVE = 'R'
		                    AND #campanyaProceso# BETWEEN LLNI.CAM_INIC AND NVL(LLNI.CAM_FIN,#campanyaProceso#) ),'Ninguno') NIV_LIDE,
		       PERI.COD_PERI CAM_INIC_LIDE,
		       GERE.FEC_DESD FEC_INIC_LIDE,
		       CASE WHEN GERE.PERD_OID_PERI_HAST IS NOT NULL THEN PERI2.COD_PERI ELSE NULL END CAM_CESE_LIDE,
		       GERE.FEC_HAST FEC_CESE_LIDE,
		       CASE WHEN GERE.PERD_OID_PERI_HAST IS NOT NULL THEN 'Inactiva' ELSE 'Activa' END IND_ACTI
		  FROM ZON_HISTO_GEREN GERE,
		       CRA_PERIO PERD,
		       SEG_PERIO_CORPO PERI,
		       CRA_PERIO PERD2,
		       SEG_PERIO_CORPO PERI2,
		       MAE_CLIEN CLIE,
		       (
		        SELECT PERI.COD_PERI COD_PERI_INIC,
		               PERI1.COD_PERI COD_PERI_FINA,
		               ZORG.COD_REGI,
		               ZORG.DES_REGI,
		               ZZON.COD_ZONA,
		               ZZON.DES_ZONA,
		               ZSCC.COD_SECC,
		               ZSCC.DES_SECCI
		          FROM ZON_SECCI ZSCC,
		               ZON_ZONA ZZON,
		               ZON_REGIO ZORG,
		               CRA_PERIO PERD,
		               SEG_PERIO_CORPO PERI,
		               CRA_PERIO PERD1,
		               SEG_PERIO_CORPO PERI1
		         WHERE ZSCC.ZZON_OID_ZONA = ZZON.OID_ZONA
		           AND ZZON.ZORG_OID_REGI = ZORG.OID_REGI
		           AND ZSCC.PERD_OID_PERI_INIC = PERD.OID_PERI
		           AND PERD.PERI_OID_PERI = PERI.OID_PERI
		           AND NVL(ZSCC.PERD_OID_PERI_FINA, GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#campanyaProceso#)) = PERD1.OID_PERI
		           AND PERD1.PERI_OID_PERI = PERI1.OID_PERI
		       ) UADM
		 WHERE 1=1
		   AND GERE.PERD_OID_PERI_DESD = PERD.OID_PERI
		   AND PERD.PERI_OID_PERI = PERI.OID_PERI
		   AND NVL(GERE.PERD_OID_PERI_HAST, GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#campanyaProceso#)) = PERD2.OID_PERI
		   AND PERD2.PERI_OID_PERI = PERI2.OID_PERI
		   AND GERE.GERE = CLIE.COD_CLIE
		   AND GERE.COD_SECC = UADM.COD_SECC
		   AND GERE.COD_ZONA = UADM.COD_ZONA
		   AND GERE.COD_REGI = UADM.COD_REGI
		   AND GERE.COD_REGI IS NOT NULL
		   AND GERE.COD_ZONA IS NOT NULL
		   AND GERE.COD_SECC IS NOT NULL
		   AND GERE.GERE = #codigoConsultora#
		   AND ( SELECT COUNT(*) FROM LEC_LIDER_GANAN LLGA WHERE LLGA.COD_LIDE = GERE.GERE ) > 0	
		   AND #campanyaProceso# BETWEEN PERI.COD_PERI AND PERI2.COD_PERI	
		]]>	
	</select>

	<resultMap id="resultadosSociaEmpresariaResultMap"    class="java.util.HashMap">
		<result property="codigoPais"	column="CODIGOPAIS"/>
		<result property="codigoPrograma"	column="CODIGOPROGRAMA"/>
		<result property="codigoLider"	column="CODIGOLIDER"/>
		<result property="regionLider"	column="REGIONLIDER"/>
		<result property="zonaLider"	column="ZONALIDER"/>
		<result property="seccionLider"	column="SECCIONLIDER"/>
		<result property="campanyaBono"	column="CAMPANABONO"/>
		<result property="campanaRecaudo"	column="CAMPANARECAUDO"/>
		<result property="nivelLider"	column="NIVELLIDER"/>
		<result property="ventaCatalogo"	column="VENTACATALOGO"/>
		<result property="traccionLider"	column="TRACCIONLIDER"/>
		<result property="gananciaLider"	column="GANANCIALIDER"/>
		<result property="metaPedidos"	column="METAPEDIDOS"/>
		<result property="realPedidos"	column="REALPEDIDOS"/>
		<result property="pedidosConsec"	column="PEDIDOSCONSEC"/>
		<result property="pedidosNoConsec"	column="PEDIDOSNOCONSEC"/>
		<result property="meta4de4"	column="META4DE4"/>
		<result property="real2de2"	column="REAL2DE2"/>
		<result property="real4de4"	column="REAL4DE4"/>
		<result property="metaLanzaEstraCumpli"	column="METALANZESTRACUMPLI"/>
		<result property="metaLanzaEstraSobre"	column="METALANZESTRASOBRE"/>
		<result property="resulLanzaEstra"	column="RESULLANZAESTRA"/>
		<result property="tipoMediLanzaEstra"	column="TIPOMEDILANZAESTRA"/>
		<result property="porcPenetracion"	column="PORCPENETRPUP"/>
		<result property="gananciaPedidos"	column="GANANCIAPEDIDOS"/>
		<result property="gananciaCiclo"	column="GANANCIACICLO"/>
		<result property="ganancia2de2"	column="GANANCIA2DE2"/>
		<result property="gananciaLanzam"	column="GANANCIALANZAM"/>
		<result property="ganancia4de4"	column="GANANCIA4DE4"/>
		<result property="gananciaNivel"	column="GANANCIANIVEL"/>
		<result property="indPedidowebLider"	column="INDPEDIDOWEBLIDER"/>
		<result property="ventaObjetivo"	column="METAVENTA"/>

	</resultMap>   

	<select id="getResultadosSociaEmpresaria" parameterClass="java.util.Map" resultMap="resultadosSociaEmpresariaResultMap">
		<![CDATA[	
		WITH temp AS ( SELECT llga.pais_cod_pais codigoPais,
		                      llga.lpro_cod_prog codigoPrograma,
		                      llga.cod_lide codigoLider,
		                      llga.cod_regi regionLider,
		                      llga.cod_zona zonaLider,
		                      llga.cod_secc seccionLider,
		                      llga.cam_refe campanaBono,
		                      MIN(llga.cam_gana) campanaRecaudo,
		                      SUM( NVL(llga.mon_gana,0) ) gananciaLider,
		                      SUM( CASE WHEN llga.ltga_cod_tipo_gana = '16' THEN NVL(llga.mon_gana,0) ELSE 0 END ) gananciaPedidos,
		                      SUM( CASE WHEN llga.ltga_cod_tipo_gana IN ('13') THEN NVL(llga.mon_gana,0) ELSE 0 END ) gananciaCiclo, 
		                      SUM( CASE WHEN llga.ltga_cod_tipo_gana IN ('05','06','07','08') THEN NVL(llga.mon_gana,0) ELSE 0 END ) gananciaLanzam,
		                      SUM( CASE WHEN llga.ltga_cod_tipo_gana IN ('11') THEN NVL(llga.mon_gana,0) ELSE 0 END ) ganancia4de4, 
		                      SUM( CASE WHEN llga.ltga_cod_tipo_gana IN ('12') THEN NVL(llga.mon_gana,0) ELSE 0 END ) gananciaNivel,
		                      SUM( CASE WHEN llga.ltga_cod_tipo_gana IN ('09') THEN NVL(llga.mon_gana,0) ELSE 0 END ) ganancia2de2
		                 FROM lec_lider_ganan llga,
		                      lec_tipo_ganan ltga,
		                      lec_tipo_pago ltpa
		                WHERE llga.ltga_cod_tipo_gana = ltga.cod_tipo_gana
		                  AND ltga.ltpa_cod_tipo_pago = ltpa.cod_tipo_pago
		                  AND llga.pais_cod_pais = #codigoPais#
		                  AND llga.lpro_cod_prog = #codigoPrograma#
		                  AND llga.cod_lide = #codigoConsultora#
		                  AND llga.cam_refe >= GEN_PKG_GENER.GEN_FN_PERIO_NSIGU (#codigoPais#, #campanyaProceso#, -2)
		                GROUP BY llga.pais_cod_pais,
		                         llga.lpro_cod_prog,
		                         llga.cod_lide,
		                         llga.cod_regi,
		                         llga.cod_zona,
		                         llga.cod_secc,
		                         llga.cam_refe )
        SELECT CODIGOPAIS,
               CODIGOPROGRAMA,
               CODIGOLIDER,
               REGIONLIDER,
               ZONALIDER,
               SECCIONLIDER,
               CAMPANABONO,
               CAMPANARECAUDO,
		       ( SELECT LLNI.LNIV_COD_NIVE || ' - ' || LNIV.DES_NIVE
		           FROM LEC_LIDER_NIVEL LLNI,
		               LEC_NIVEL LNIV
		         WHERE LLNI.LNIV_COD_NIVE = LNIV.COD_NIVE
                    AND LLNI.LPRO_COD_PROG = CODIGOPROGRAMA
                    AND LLNI.COD_LIDE = CODIGOLIDER
		            AND LLNI.IND_TIPO_NIVE = 'R'
                    AND CAMPANARECAUDO BETWEEN LLNI.CAM_INIC AND NVL(LLNI.CAM_FIN,CAMPANARECAUDO) ) NIVELLIDER,
               ( SELECT LLNI.MON_VENT_CATA
                   FROM LEC_LIDER_NIVEL LLNI
                 WHERE LLNI.LPRO_COD_PROG = CODIGOPROGRAMA
                    AND LLNI.COD_LIDE = CODIGOLIDER
                    AND LLNI.IND_TIPO_NIVE = 'P'
                    AND CAMPANARECAUDO BETWEEN LLNI.CAM_INIC AND NVL(LLNI.CAM_FIN,CAMPANARECAUDO) ) VENTACATALOGO,     
                 (
             SELECT lsop.val_obje_vent
               FROM lec_lider_secci_objet_pedid lsop
              WHERE lsop.cod_regi = regionLider
                AND lsop.cod_zona = zonaLider
                AND lsop.cod_secc = seccionLider
                AND lsop.lpro_cod_pais = codigoPais
                AND lsop.lpro_cod_prog = codigoPrograma
                AND lsop.cam_obje(+) = campanaBono
           ) METAVENTA,
		       ( SELECT LTDE.DES_TIPO_DESE
		               FROM LEC_LIDER_DESEM LDET,
		                    LEC_TIPO_DESEM LTDE
		              WHERE LDET.LTDE_COD_TIPO_DESE   = LTDE.COD_TIPO_DESE
                        AND LDET.COD_LIDE = CODIGOLIDER
                        AND LDET.LPEC_CAM_EVAL = CAMPANABONO
                        AND LDET.IND_TIPO_DESE = 'C' ) TRACCIONLIDER,
               TO_CHAR(GANANCIALIDER, '999,999,999,999') GANANCIALIDER,
		       (
		         SELECT lsop.num_pedi_obje_fina
		           FROM lec_lider_secci_objet_pedid lsop
		          WHERE lsop.cod_regi = regionLider
		            AND lsop.cod_zona = zonaLider
		            AND lsop.cod_secc = seccionLider
		            AND lsop.lpro_cod_pais = codigoPais
		            AND lsop.lpro_cod_prog = codigoPrograma
		            AND lsop.cam_obje(+) = campanaBono
               ) METAPEDIDOS,
		       (
		        SELECT lisr.num_pedi
		          FROM lec_lider_secci_resul lisr
		         WHERE lisr.pais_cod_pais = codigoPais
		           AND lisr.lpro_cod_prog = codigoPrograma
		           AND lisr.cod_regi = regionLider
		           AND lisr.cod_zona = zonaLider
		           AND lisr.cod_secc = seccionLider
		           AND lisr.cod_lide = codigoLider
		           AND lisr.cam_resu = campanaBono
               ) REALPEDIDOS,
		       (
		        SELECT lisr.num_pedi_cons
		          FROM lec_lider_secci_resul lisr
		         WHERE lisr.pais_cod_pais = codigoPais
		           AND lisr.lpro_cod_prog = codigoPrograma
		           AND lisr.cod_regi = regionLider
		           AND lisr.cod_zona = zonaLider
		           AND lisr.cod_secc = seccionLider
		           AND lisr.cod_lide = codigoLider
		           AND lisr.cam_resu = campanaBono
               ) PEDIDOSCONSEC,
		       (
		        SELECT lisr.num_pedi_ncon
		          FROM lec_lider_secci_resul lisr
		         WHERE lisr.pais_cod_pais = codigoPais
		           AND lisr.lpro_cod_prog = codigoPrograma
		           AND lisr.cod_regi = regionLider
		           AND lisr.cod_zona = zonaLider
		           AND lisr.cod_secc = seccionLider
		           AND lisr.cod_lide = codigoLider
		           AND lisr.cam_resu = campanaBono
               ) PEDIDOSNOCONSEC,
		       (
		         SELECT LSOB.VAL_OBJE_BONO
		           FROM LEC_LIDER_SECCI_OBJET_BONO LSOB
                  WHERE LSOB.PAIS_COD_PAIS = CODIGOPAIS
                    AND LSOB.LPRO_COD_PROG = CODIGOPROGRAMA
                    AND LSOB.COD_REGI = REGIONLIDER
                    AND LSOB.COD_ZONA = ZONALIDER
                    AND LSOB.COD_SECC = SECCIONLIDER
                    AND LSOB.CAM_OBJE = CAMPANABONO
		            AND LSOB.LTBO_COD_TIPO_BONO = '07'
		            AND LSOB.LNIV_COD_NIVE = ( SELECT LLNI.LNIV_COD_NIVE
		                                         FROM LEC_LIDER_NIVEL LLNI
                                                WHERE LLNI.LPRO_COD_PROG = CODIGOPROGRAMA
                                                  AND LLNI.COD_LIDE = CODIGOLIDER
		                                          AND LLNI.IND_TIPO_NIVE = 'R'
                                                  AND CAMPANABONO BETWEEN LLNI.CAM_INIC AND NVL(LLNI.CAM_FIN,CAMPANABONO) )
               ) META4DE4,
		       (
		         SELECT LRBO.VAL_RETE_SECC
		           FROM LEC_LIDER_SECCI_RESUL_BONO LRBO
                  WHERE LRBO.PAIS_COD_PAIS = CODIGOPAIS
                    AND LRBO.LPRO_COD_PROG = CODIGOPROGRAMA
                    AND LRBO.COD_REGI = REGIONLIDER
                    AND LRBO.COD_ZONA = ZONALIDER
                    AND LRBO.COD_SECC = SECCIONLIDER
                    AND LRBO.COD_LIDE = CODIGOLIDER
                    AND LRBO.CAM_RESU = CAMPANABONO
                    AND LRBO.LTBO_COD_TIPO_BONO = '05'
                ) REAL2DE2,
               (
                 SELECT LRBO.VAL_RETE_SECC
                   FROM LEC_LIDER_SECCI_RESUL_BONO LRBO
                  WHERE LRBO.PAIS_COD_PAIS = CODIGOPAIS
                    AND LRBO.LPRO_COD_PROG = CODIGOPROGRAMA
                    AND LRBO.COD_REGI = REGIONLIDER
                    AND LRBO.COD_ZONA = ZONALIDER
                    AND LRBO.COD_SECC = SECCIONLIDER
                    AND LRBO.COD_LIDE = CODIGOLIDER
                    AND LRBO.CAM_RESU = CAMPANABONO
		            AND LRBO.LTBO_COD_TIPO_BONO = '07'
                ) REAL4DE4,
               (
                 SELECT LSOB.VAL_OBJE_BONO
                   FROM LEC_LIDER_SECCI_OBJET_BONO LSOB
                  WHERE LSOB.PAIS_COD_PAIS = CODIGOPAIS
                    AND LSOB.LPRO_COD_PROG = CODIGOPROGRAMA
                    AND LSOB.COD_REGI = REGIONLIDER
                    AND LSOB.COD_ZONA = ZONALIDER
                    AND LSOB.COD_SECC = SECCIONLIDER
                    AND LSOB.CAM_OBJE = CAMPANABONO
                    AND LSOB.LTBO_COD_TIPO_BONO IN ('01','03')
                    AND LSOB.LNIV_COD_NIVE = ( SELECT LLNI.LNIV_COD_NIVE
                                                 FROM LEC_LIDER_NIVEL LLNI
                                                WHERE LLNI.LPRO_COD_PROG = CODIGOPROGRAMA
                                                  AND LLNI.COD_LIDE = CODIGOLIDER
                                                  AND LLNI.IND_TIPO_NIVE = 'R'
                                                  AND CAMPANABONO BETWEEN LLNI.CAM_INIC AND NVL(LLNI.CAM_FIN,CAMPANABONO) )
               ) METALANZESTRACUMPLI,
               (
                 SELECT LSOB.VAL_OBJE_BONO
                   FROM LEC_LIDER_SECCI_OBJET_BONO LSOB
                  WHERE LSOB.PAIS_COD_PAIS = CODIGOPAIS
                    AND LSOB.LPRO_COD_PROG = CODIGOPROGRAMA
                    AND LSOB.COD_REGI = REGIONLIDER
                    AND LSOB.COD_ZONA = ZONALIDER
                    AND LSOB.COD_SECC = SECCIONLIDER
                    AND LSOB.CAM_OBJE = CAMPANABONO
                    AND LSOB.LTBO_COD_TIPO_BONO IN ('02','04')
                    AND LSOB.LNIV_COD_NIVE = ( SELECT LLNI.LNIV_COD_NIVE
                                                 FROM LEC_LIDER_NIVEL LLNI
                                                WHERE LLNI.LPRO_COD_PROG = CODIGOPROGRAMA
                                                  AND LLNI.COD_LIDE = CODIGOLIDER
                                                  AND LLNI.IND_TIPO_NIVE = 'R'
                                                  AND CAMPANABONO BETWEEN LLNI.CAM_INIC AND NVL(LLNI.CAM_FIN,CAMPANABONO) )
               ) METALANZESTRASOBRE,
               (
                SELECT LEOB.COD_ESTA_OBJE || '-' || LEOB.DES_ESTA_OBJE
                  FROM LEC_LIDER_SECCI_RESUL_BONO LRBO,
                       LEC_ESTAD_OBJET LEOB
                 WHERE LRBO.LEOB_COD_ESTA_OBJE = LEOB.COD_ESTA_OBJE
                   AND LRBO.CAM_RESU = CAMPANABONO
                   AND LRBO.COD_LIDE = CODIGOLIDER
                   AND LRBO.LTBO_COD_TIPO_BONO IN ('01','02')
               ) RESULLANZAESTRA,
               (
                SELECT LTME.DES_TIPO_MEDI TIPOMEDI
                  FROM LEC_PROGR_BONO_LANZA LPBL,
                       LEC_TIPO_MEDIC LTME
                 WHERE LPBL.LTME_COD_TIPO_MEDI = LTME.COD_TIPO_MEDI
                   AND LPBL.PAIS_COD_PAIS = CODIGOPAIS
                   AND LPBL.LPRO_COD_PROG = CODIGOPROGRAMA
                   AND LPBL.LPBC_CAM_LANZ = CAMPANABONO
               ) TIPOMEDILANZAESTRA,
               (
		         SELECT lsob.val_obje_bono
		           FROM lec_lider_secci_objet_bono lsob
		          WHERE lsob.pais_cod_pais = codigoPais
		            AND lsob.lpro_cod_prog = codigoPrograma
		            AND lsob.cod_regi = regionLider
		            AND lsob.cod_zona = zonaLider
		            AND lsob.cod_secc = seccionLider
		            AND (lsob.ltbo_cod_tipo_bono = '01' OR lsob.ltbo_cod_tipo_bono = '03')
		            AND lsob.cam_obje = campanaBono
		            AND lsob.lniv_cod_nive = ( SELECT llni.lniv_cod_nive
		                                         FROM lec_lider_nivel llni
		                                        WHERE llni.lpro_cod_prog = codigoPrograma
		                                          AND llni.cod_lide = codigoLider
		                                          AND llni.ind_tipo_nive = 'R'
		                                          AND campanaBono BETWEEN llni.cam_inic AND NVL(llni.cam_fin,campanaBono) )
		       ) PORCPENETRPUP,
               TO_CHAR(GANANCIAPEDIDOS, '999,999,999,999') GANANCIAPEDIDOS,
               TO_CHAR(GANANCIACICLO, '999,999,999,999') GANANCIACICLO,
               TO_CHAR(GANANCIA2DE2, '999,999,999,999') GANANCIA2DE2,
               TO_CHAR(GANANCIALANZAM, '999,999,999,999') GANANCIALANZAM,
               TO_CHAR(GANANCIA4DE4, '999,999,999,999') GANANCIA4DE4,
               TO_CHAR(GANANCIANIVEL, '999,999,999,999') GANANCIANIVEL,
               DECODE(NVL(( SELECT LLSR.IND_PEDI_WEB
		               FROM LEC_LIDER_SECCI_RESUL LLSR
                             WHERE LLSR.PAIS_COD_PAIS = CODIGOPAIS
                               AND LLSR.LPRO_COD_PROG = CODIGOPROGRAMA
                               AND LLSR.COD_REGI = REGIONLIDER
                               AND LLSR.COD_ZONA = ZONALIDER
                               AND LLSR.COD_SECC = SECCIONLIDER
                               AND LLSR.CAM_RESU = CAMPANARECAUDO
                               AND LLSR.COD_LIDE = CODIGOLIDER),0),0,'NO',1,'SI') INDPEDIDOWEBLIDER,
		       (SELECT LTDE.DES_TIPO_DESE
		          FROM LEC_LIDER_DESEM LDET,
		               LEC_TIPO_DESEM LTDE
		         WHERE LDET.LTDE_COD_TIPO_DESE = LTDE.COD_TIPO_DESE
                          AND LDET.LPEC_CAM_EVAL      = CAMPANABONO
                          AND LDET.COD_LIDE           = CODIGOLIDER
                          AND LDET.IND_TIPO_DESE      = 'E' ) INDBAJODESEMPENO
		  FROM TEMP
         ORDER BY TEMP.CAMPANABONO DESC
		]]>	
	</select>
	
	
    <resultMap id="historialSociaEmpresariaResultMap"    class="java.util.HashMap">
		<result property="campanaResultado" 		column="cam_resu"/>
		<result property="codigoRegion" 			column="cod_regi"/>
		<result property="nombreRegion" 			column="nom_regi"/>
		<result property="codigoZona" 				column="cod_zona"/>
		<result property="nombreZona" 				column="nom_zona"/>
		<result property="codigoSeccion" 			column="cod_secc"/>
		<result property="nombreSeccion" 			column="nom_secc"/>
		<result property="nivel" 					column="niv_lide"/>
		<result property="productividadLider" 		column="prod_lide"/>
		<result property="indPedidowebLider" 		column="ind_web"/>
		<result property="indBajaAutomatica" 		column="ind_baja"/>
	</resultMap>   
	
	<select id="getHistorialSociaEmpresaria" parameterClass="java.util.Map" resultMap="historialSociaEmpresariaResultMap">
		<![CDATA[
			WITH TEMP AS (
			                SELECT LLSR.PAIS_COD_PAIS,
			                       LLSR.LPRO_COD_PROG,
			                       LLSR.COD_REGI,
			                       LLSR.COD_ZONA,
			                       LLSR.COD_SECC,
			                       LLSR.COD_LIDE,
			                       LLSR.CAM_RESU
			                  FROM LEC_LIDER_SECCI_RESUL_BONO LLSR
			                 WHERE LLSR.PAIS_COD_PAIS = #codigoPais#
			                   AND LLSR.LPRO_COD_PROG = #codigoPrograma#
			                   AND LLSR.COD_LIDE = #codigoConsultora#
			                 GROUP BY LLSR.PAIS_COD_PAIS,
			                          LLSR.LPRO_COD_PROG,
			                          LLSR.COD_REGI,
			                          LLSR.COD_ZONA,
			                          LLSR.COD_SECC,
			                          LLSR.COD_LIDE,
			                          LLSR.CAM_RESU
			             )
			SELECT TEMP.CAM_RESU CAM_RESU,
			       TEMP.COD_REGI COD_REGI,
			       UADM.DES_REGI NOM_REGI,
			       TEMP.COD_ZONA COD_ZONA,
			       UADM.DES_ZONA NOM_ZONA,
			       TEMP.COD_SECC COD_SECC,
			       UADM.DES_SECCI NOM_SECC,
			       ( SELECT LLNI.LNIV_COD_NIVE || ' - ' || LNIV.DES_NIVE
			           FROM LEC_LIDER_NIVEL LLNI,
			               LEC_NIVEL LNIV
			         WHERE LLNI.LNIV_COD_NIVE = LNIV.COD_NIVE
			            AND LLNI.LPRO_COD_PROG = TEMP.LPRO_COD_PROG
			            AND LLNI.COD_LIDE = TEMP.COD_LIDE
			            AND LLNI.IND_TIPO_NIVE = 'R'
			            AND TEMP.CAM_RESU BETWEEN LLNI.CAM_INIC AND NVL(LLNI.CAM_FIN,TEMP.CAM_RESU) ) NIV_LIDE,
			       ( SELECT LTDE.DES_TIPO_DESE
			           FROM LEC_LIDER_DESEM LDET,
			                LEC_TIPO_DESEM LTDE
			          WHERE LDET.LTDE_COD_TIPO_DESE = LTDE.COD_TIPO_DESE 
			            AND LDET.LPEC_CAM_EVAL = TEMP.CAM_RESU
			            AND LDET.COD_LIDE = TEMP.COD_LIDE 
			            AND LDET.IND_TIPO_DESE = 'C' ) PROD_LIDE,
			       CASE WHEN NVL(( SELECT LLSR.IND_PEDI_WEB
			                         FROM LEC_LIDER_SECCI_RESUL LLSR
			                        WHERE LLSR.PAIS_COD_PAIS = TEMP.PAIS_COD_PAIS
			                          AND LLSR.LPRO_COD_PROG = TEMP.LPRO_COD_PROG
			                          AND LLSR.COD_REGI = TEMP.COD_REGI
			                          AND LLSR.COD_ZONA = TEMP.COD_ZONA
			                          AND LLSR.COD_SECC = TEMP.COD_SECC
			                          AND LLSR.CAM_RESU = TEMP.CAM_RESU
			                          AND LLSR.COD_LIDE = TEMP.COD_LIDE),0) = 1 THEN 'SI' ELSE 'NO' END IND_WEB,
			       DECODE(( SELECT GERE.IND_DESV_AUTO
			            FROM ZON_HISTO_GEREN GERE,
			                 CRA_PERIO PERD,
			                 SEG_PERIO_CORPO PERI,
			                 CRA_PERIO PERD2,
			                 SEG_PERIO_CORPO PERI2
			           WHERE GERE.PERD_OID_PERI_DESD = PERD.OID_PERI
			             AND PERD.PERI_OID_PERI = PERI.OID_PERI
			             AND NVL(GERE.PERD_OID_PERI_HAST, GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#campanyaProceso#)) = PERD2.OID_PERI
			             AND PERD2.PERI_OID_PERI = PERI2.OID_PERI
			             AND GERE.COD_REGI IS NOT NULL
			             AND GERE.COD_ZONA IS NOT NULL
			             AND GERE.COD_SECC IS NOT NULL
			             AND PERI2.COD_PERI = TEMP.CAM_RESU
			             AND GERE.GERE = TEMP.COD_LIDE),NULL,'NO',0,'NO','SI') IND_BAJA
			  FROM TEMP,
			       (
			        SELECT PERI.COD_PERI COD_PERI_INIC,
			               PERI1.COD_PERI COD_PERI_FINA,
			               ZORG.COD_REGI,
			               ZORG.DES_REGI,
			               ZZON.COD_ZONA,
			               ZZON.DES_ZONA,
			               ZSCC.COD_SECC,
			               ZSCC.DES_SECCI
			          FROM ZON_SECCI ZSCC,
			               ZON_ZONA ZZON,
			               ZON_REGIO ZORG,
			               CRA_PERIO PERD,
			               SEG_PERIO_CORPO PERI,
			               CRA_PERIO PERD1,
			               SEG_PERIO_CORPO PERI1
			         WHERE ZSCC.ZZON_OID_ZONA = ZZON.OID_ZONA
			           AND ZZON.ZORG_OID_REGI = ZORG.OID_REGI
			           AND ZSCC.PERD_OID_PERI_INIC = PERD.OID_PERI
			           AND PERD.PERI_OID_PERI = PERI.OID_PERI
			           AND NVL(ZSCC.PERD_OID_PERI_FINA, GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#campanyaProceso#)) = PERD1.OID_PERI
			           AND PERD1.PERI_OID_PERI = PERI1.OID_PERI
			       ) UADM
			 WHERE TEMP.COD_REGI = UADM.COD_REGI
			   AND TEMP.COD_ZONA = UADM.COD_ZONA
			   AND TEMP.COD_SECC = UADM.COD_SECC
			 ORDER BY CAM_RESU DESC
		]]>
	</select>

	<!-- OBTIENE EL ESTATUS DEL CLIENTE -->
    <select id="getEstatusCliente" parameterClass="java.util.Map" resultClass="string">
		select case
		         when FC.ind_acti = 0 and FC.ind_canc = 0 then
		          'Inactiva'
		         when FC.ind_acti = 1 and FC.ind_canc = 0 then
		          'Activa'
		         when FC.ind_acti = 0 and FC.ind_canc = 1 then
		          'Cancelada'
		       end estatus
		  from FLX_CONSU_HABIL_FLEXI fc
		 where fc.cod_clie = #codigoCliente#
		   and fc.cod_peri_fact = #codigoPeriodo#
		   and fc.cod_pais = #codigoPais#
	</select>
	
	<resultMap id="fechaCampanaActivacionResult"	class="java.util.HashMap">
        <result property="fechaActivacion"			column="FEC_ACTI"/>      
    	<result property="campanaActivacion"		column="CAM_ACTI"/>
    </resultMap>
    
	<!-- OBTIENE LA FECHA Y CAMPAÑA DE ACTIVACION -->
	<select id="getFechaCampanaActivacionCliente" parameterClass="java.util.Map" resultMap="fechaCampanaActivacionResult">
			SELECT TO_CHAR(NVL(MAX(ACH.FEC_ACCI), ''),'DD/MM/YYYY') FEC_ACTI,
			       NVL(MAX(ACH.COD_PERI_FACT), '') CAM_ACTI
			  FROM FLX_AUDIT_CONSU_HABIL ACH
			 WHERE ACH.COD_ACCI = '02'
			   AND ACH.COD_CLIE = #codigoCliente#
			   AND ACH.COD_PAIS = #codigoPais#
			 GROUP BY ACH.COD_CLIE
	</select>
	
	<!-- OBTIENE LA FECHA DE CANCELACION -->
    <select id="getFechaCancelacionCliente" parameterClass="java.util.Map" resultClass="string">
		select to_char(max(a.fec_acci),'dd/mm/yyyy') fec_acci
		  from flx_audit_consu_habil a
		 where a.cod_clie = #codigoCliente#
		   and a.cod_acci = '01'
		   and a.cod_pais = #codigoPais#
	</select>
	
	<!-- OBTIENE EL MOTIVO DE CANCELACION -->
    <select id="getMotivoCancelacionCliente" parameterClass="java.util.Map" resultClass="string">
		select m.des_moti
		  from flx_audit_consu_habil a, flx_motiv_cance m
		 where a.cod_clie = #codigoCliente#
		   and a.cod_acci = '01'
		   and a.cod_moti = m.cod_moti
		   and a.cod_pais = #codigoPais#
		   and rownum = 1
	</select>
	
	<!-- OBTIENE EL PERIODO DE COMUNICACION -->
    <select id="getPeriodoComunicacionCliente" parameterClass="java.util.Map" resultClass="string">
		  SELECT MIN(CHF.COD_PERI_COMU)
            FROM FLX_CONSU_HABIL_FLEXI CHF
           WHERE CHF.COD_CLIE = #codigoCliente#
             AND CHF.COD_PAIS = #codigoPais#
	</select>
	
	<!-- OBTIENE LA FECHA DE COMUNICACION -->
    <select id="getFechaComunicacionCliente" parameterClass="java.util.Map" resultClass="string">
		    SELECT TO_CHAR(MIN(CA.FEC_PROG_FACT), 'dd/mm/yyyy')
			  FROM PED_TIPO_SOLIC_PAIS TSP,
			       PED_TIPO_SOLIC      TS,
			       PED_SOLIC_CABEC     CA,
			       CRA_PERIO           CRA,
			       SEG_PERIO_CORPO     SPC,
			       MAE_CLIEN           MC
			 WHERE CA.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS
			   AND TS.OID_TIPO_SOLI = TSP.TSOL_OID_TIPO_SOLI
			   AND CRA.OID_PERI = CA.PERD_OID_PERI
			   AND CRA.PERI_OID_PERI = SPC.OID_PERI
			   AND SPC.COD_PERI =
			       (SELECT MIN(CHF.COD_PERI_COMU)
			          FROM FLX_CONSU_HABIL_FLEXI CHF
			         WHERE CHF.COD_CLIE = #codigoCliente#)
			   AND MC.OID_CLIE = CA.CLIE_OID_CLIE
			   AND MC.COD_CLIE = #codigoCliente#
			   AND CA.GRPR_OID_GRUP_PROC = 5
			   AND TS.COD_TIPO_SOLI = 'SOC'
			   AND MC.PAIS_OID_PAIS = (select sp.oid_pais from seg_pais sp where sp.cod_pais=#codigoPais#)
	</select>
	
	<resultMap id="getPeriodoNumeroPedidoResultMap"    class="java.util.HashMap">
    	<result property="codigoPeriodo" 		column="codigo_periodo"/>		    
    	<result property="numeroPedido" 		column="val_nume_soli"/>		    		    
	</resultMap>
	<select id="getPeriodoNumeroPedido" parameterClass="java.util.Map" resultMap="getPeriodoNumeroPedidoResultMap">
		select gen_pkg_gener.gen_fn_devuelve_id_cra_perio3(perd_oid_peri) codigo_periodo, val_nume_soli
		  from ped_solic_cabec
		 where OID_SOLI_CABE = #oidSoliCabecera#
    </select>
	
    <select id="getSituacionFlexipago" parameterClass="map" resultClass="string">
        SELECT CASE (
		    SELECT 1 FROM FLX_CONSU_HABIL_FLEXI WHERE COD_PAIS = #codigoPais# AND COD_CLIE = #codigoCliente# AND IND_ACTI = 1 AND COD_PERI_FACT=#campanhaProceso#
		    UNION
		    SELECT 2 FROM FLX_CONSU_HABIL_FLEXI WHERE COD_PAIS = #codigoPais# AND COD_CLIE = #codigoCliente# AND IND_ACTI = 0 AND COD_PERI_FACT=#campanhaProceso#
            )   
        WHEN 1 THEN 'Inscrita'
        WHEN 2 THEN 'Invitada'
        ELSE 'No Invitada' END SIT_CLIE
        FROM DUAL		
    </select>

    <!-- OBTIENE EL oid del sub tipo del cliente -->
    <select id="getOidSubtipoCliente" parameterClass="java.util.Map" resultClass="string">
		select sbti_oid_subt_clie
		  from mae_clien_tipo_subti
		 where clie_oid_clie = gen_pkg_gener.gen_fn_devuelve_id_cliente(#codigoCliente#)
	</select>
	
    <!-- NSSiCC -->
	<select id="getAdicionalesCabeceraReclamoNSSiCC" parameterClass="string" resultMap="getAdicionalesCabeceraReclamoResultMap">
		SELECT DECODE (isc.usu_digi,
		               NULL, REPLACE (rcr.cod_usua_ingr, 'S_', ''),
		               isc.usu_digi
		              ) usu_digi,
		       DECODE (isc.fec_digi,
		               NULL, TO_CHAR (rcr.fec_ulti_actu, 'DD/MM/YYYY'),
		               TO_CHAR (isc.fec_digi, 'DD/MM/YYYY')
		              ) fec_digi,
		       REPLACE (rcr.cod_usua_ingr, 'S_', '') usu_apro,
		       TO_CHAR (rcr.fec_ulti_actu, 'DD/MM/YYYY') fec_apro,
		       DECODE (rcr.cod_usua_ingr,
		               'MIGRACION', 'Migracion',
		               DECODE (isc.ind_orig,
		                       'C', 'Callcenter',
		                       '1', 'OCR',
		                       '2', 'Digitacion',
		                       'M', 'Masivo',
		                       '', 'Eliminado'
		                      )
		              ) ori_cdr
		  FROM rec_cabec_recla rcr, int_solic_conso_poven_cabec isc
		 WHERE rcr.oid_cabe_recl = isc.oid_cabe_recl_refe(+)
		       AND rcr.oid_cabe_recl = #value#
	</select>
	
	<select id="getObtieAbonoPendi" parameterClass="java.util.Map" resultClass="string">
    	SELECT CCC_PKG_GENER.CCC_FN_OBTIE_ABONO_PEND(#oidCliente#) FROM DUAL
  	</select>
  	
  	 <select id="getTipoPersonaxOidCliente" parameterClass="java.util.Map" resultClass="string">
		 select val_i18n from GEN_I18N_SICC_COMUN  
		 where attr_enti = 'MAE_TIPO_PERSO' 
         and val_oid = (select TPES_OID_TIPO_PERS 
         				from MAE_CLIEN_DATOS_ADICI 
         				where clie_oid_clie=#oidCliente#)
	</select>
	
	 <select id="getOrigenIngresosxOidCliente" parameterClass="java.util.Map" resultClass="string">
		select val_i18n from GEN_I18N_SICC_COMUN  
		where attr_enti = 'MAE_ORIG_INGRE' 
       and val_oid = (select ORIN_OID_ORIG_INGR 
       from MAE_CLIEN_DATOS_ADICI 
       where clie_oid_clie=#oidCliente#)
	</select>
	
	<select id="getOrigenxCodCliente" parameterClass="java.util.Map" resultClass="string">
	<![CDATA[ 
    	select ind_cana_orig
		  from (select *
		          from Mae_Datos_Clien_Histo
		         where cod_clie = #codigoCliente#
		           and (ind_camb_zona in ('T','Z') or val_nomb_via_ante <> val_nomb_via_nuev or
		               val_obse_ante <> val_obse_nuev or
		               cod_terr_ante <> cod_terr_nuev or
		               cod_zona_ante <> cod_zona_nuev)
		         order by fec_crea desc)
		 where ROWNUM = 1
	 ]]>	
  	</select>
	
</sqlMap>        