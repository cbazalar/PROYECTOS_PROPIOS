<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="spusicc.ProcesoSTOContratoEjecutivaSQL">
   
      <!-- EJECUCION DE VALIDACIONES-->  
   <parameterMap id="executeValidacionParams" class="map" >
		<parameter property="tipoDocumento.codPais"            			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="validacionDocumento.codigoTipo"	        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="validacionDocumento.codValidacion"	    	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="validacionDocumento.codValidacionAnterior"	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="usuario.login"	        					jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="historico.numeroProceso"	        		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>  
	</parameterMap>
    
        <!-- 1.- Validación Pre impreso duplicado -->
    <procedure id="executeCEDValidacionPreImpresoDuplicado" parameterMap="executeValidacionParams">
		{call sto_pkg_proce_valid_ced.STO_PR_CED_PREIM_DUPLI(?,?,?,?,?,?)}
    </procedure>

    <!-- 2.- Validación Documento de identidad en blanco -->
    <procedure id="executeCEDValdacionDocumentoIdentidadBlanco" parameterMap="executeValidacionParams">
		{call sto_pkg_proce_valid_ced.STO_PR_CED_DOCUM_IDENT_BLANC(?,?,?,?,?,?)}
    </procedure>

    <!-- 3.- Validación Documento de identidad no existe -->
    <procedure id="executeCEDValdacionDocumentoIdentidadNoExiste" parameterMap="executeValidacionParams">
		{call sto_pkg_proce_valid_ced.STO_PR_CED_DOCUM_IDENT_NOEXI(?,?,?,?,?,?)}
    </procedure>

    <!-- 4.- Documento legal invalido -->
    <procedure id="executeCEDValidacionDocumentoLegal" parameterMap="executeValidacionParams">
		{call sto_pkg_proce_valid_ced.STO_PR_CED_DOCUM_LEGAL(?,?,?,?,?,?)}
    </procedure>
    
    <!-- 5.- Ejecutiva -->
    <procedure id="executeCEDValidacionEjecutiva" parameterMap="executeValidacionParams">
		{call sto_pkg_proce_valid_ced.STO_PR_CED_CONSU_EJECU(?,?,?,?,?,?)}
    </procedure>
    
    <!-- 6.- Ejecutiva -->
    <procedure id="executeCEDValidacionClienteIncobrable" parameterMap="executeValidacionParams">
		{call sto_pkg_proce_valid_ced.STO_PR_CED_CLIEN_INCOB(?,?,?,?,?,?)}
    </procedure>
    
    <!-- 7.- Ejecutiva -->
    <procedure id="executeCEDValidacionBloqueoCliente" parameterMap="executeValidacionParams">
		{call sto_pkg_proce_valid_ced.STO_PR_CED_BLOQU_CLIEN(?,?,?,?,?,?)}
    </procedure>
    
    <!-- ENVIO DE DOCUMENTO A SICC-->
    <parameterMap id="executeCEDEnvioSiccParams" class="map" >
		<parameter property="tipoDocumento.codPais"         jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="tipoDocumento.codTipoDocu"	   	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="usuario.login"	                jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="historico.numeroProceso"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/> 
	</parameterMap>

    
    <procedure id="executeCEDEnvioSicc"  parameterMap="executeCEDEnvioSiccParams" >
		{call sto_pkg_proce_valid_ced.STO_PR_CED_ENVIO_SICC(?,?,?,?)}
    </procedure>
 
    
  </sqlMap>
