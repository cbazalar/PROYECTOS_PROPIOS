<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="sisicc.GenericoSQL">

	<typeAlias alias="baseGenerico" type="biz.belcorp.ssicc.dao.sisicc.model.Base" />
	<typeAlias alias="baseGenericoOID" type="biz.belcorp.ssicc.dao.sisicc.model.BaseOID" />
	<typeAlias alias="periodoGenerico" type="biz.belcorp.ssicc.dao.sisicc.model.Periodo" />
	<typeAlias alias="actividadGenerico"
		type="biz.belcorp.ssicc.dao.sisicc.model.Actividad" />
	<typeAlias alias="accesocanalGenerico"
		type="biz.belcorp.ssicc.dao.sisicc.model.AccesoCanal" />
	<typeAlias alias="subaccesoGenerico"
		type="biz.belcorp.ssicc.dao.sisicc.model.Subacceso" />
	<typeAlias alias="consultoraSiCC" type="biz.belcorp.ssicc.dao.sisicc.model.Cliente" />
	<typeAlias alias="labelValueGenerico" type="biz.belcorp.ssicc.dao.model.LabelValue" />
	<typeAlias alias="bsubProceso"
		type="biz.belcorp.ssicc.dao.spusicc.ventas.model.SubProceso" />
	<typeAlias alias="parametroPais" type="biz.belcorp.ssicc.dao.model.ParametroPais" />
  
    <resultMap id="parametroPaisResult" class="parametroPais">
	    <result property="codigoPais" 					column="COD_PAIS"/>
	    <result property="codigoSistema" 				column="COD_SIST"/>
	    <result property="codigoParametro"				column="COD_PARA"/>
	    <result property="nombreParametro" 				column="NOM_PARA"/>   
	    <result property="valorParametro" 				column="VAL_PARA"/>
	    <result property="observacionParametro" 		column="OBS_PARA"/>
	    <result property="indicadorActivo" 				column="IND_ACTI"/>
    </resultMap>
  
	<resultMap id="consultoraSiCCResult" class="consultoraSiCC">
	    <result property="codigo" 					column="COD_CLIE"/>
	    <result property="apellidoPaterno" 			column="VAL_APE1"/>
	    <result property="apellidoMaterno"			column="VAL_APE2"/>
	    <result property="nombre" 					column="VAL_NOM1"/>   
    </resultMap>

	<resultMap id="productoSiCCResult" class="java.util.HashMap">
	    <result property="codigoPais" 				column="PAIS_OID_PAIS"/>
	    <result property="codigoSap" 				column="COD_SAP"/>
	    <result property="descripcionCorta"			column="DES_CORT"/>
    </resultMap>
	<resultMap id="productoSiCCResult2" class="java.util.HashMap">	   
	    <result property="codigoSap" 				column="COD_SAP"/>
	    <result property="descripcionCorta"			column="DES_CORT"/>
    </resultMap>
  
    <resultMap id="baseResult"          class="baseGenerico">
    	<result property="codigo" 		column="CODIGO" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
  
    <resultMap id="labelValueResult"    class="labelValueGenerico">
        <result property="value"       column="VALUE"     />
        <result property="label"       column="LABEL"/>
    </resultMap>
  
      <resultMap id="baseConcursoResult"    class="java.util.HashMap">
    	<result property="numeroConcurso" 	column="NUMERO_CONCURSO" />
    	<result property="descripcion" 	    column="DESCRIPCION"/>
		<result property="periodoDesde" 	column="DESDE" />
    	<result property="periodoHasta" 	column="HASTA"/>
    	<result property="oidParametroGeneral" 	column="OIDPARAMETROGENERAL"/>		
    </resultMap>
  
    <resultMap id="baseResultOID"       class="baseGenericoOID">
    	<result property="oid" 		    column="OID" 	/>		
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
	 
    <resultMap id="baseResultCodigo"       class="baseGenerico">
    	<result property="codigo" 		column="CODIGO" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
	 
    <resultMap id="periodoResult"        class="periodoGenerico">
    	<result property="codigoPais" 			column="CODPAI" />
    	<result property="codigoMarca" 			column="CODMAR" />
    	<result property="codigoCanal" 			column="CODCAN" />
    	<result property="codigoAcceso"			column="CODACC" />
    	<result property="codigoPeriodo"		column="CODPER" />
    	<result property="fechaInicioPeriodo"	column="FECINI" />
    	<result property="fechaFinPeriodo"		column="FECFIN" />
    </resultMap>
  
    <resultMap id="actividadResult" class="actividadGenerico">
        <result property="codigoPais" 		column="CODPAI" />
    	<result property="codigoMarca" 		column="CODMAR" />
    	<result property="codigoCanal" 		column="CODCAN" />
    	<result property="codigoActividad" 	column="CODACT" />
    	<result property="descripcion" 		column="DSC" />
    </resultMap>
  
    <resultMap id="accesoCanalResult" class="accesocanalGenerico">
        <result property="codigoCanal" 	column="CODCAN" />
        <result property="codigoAcceso" column="CODACC" />
        <result property="descripcion" 	column="DSC" 	/>
    </resultMap>
  
    <resultMap id="subAccesosResult" class="subaccesoGenerico">
        <result property="codigoAcceso" column="PARENT" 	/>
        <result property="codigo" 		column="CODIGO" 	/>
        <result property="descripcion"	column="DESCRIPCION"/>
    </resultMap>
  
	<resultMap id="controlFacturacionMapResult"    class="java.util.HashMap">
    	<result property="periodo" 	column="PERIODO" />
    	<result property="fecha" 	    column="FECHA"/>
    </resultMap>
  
    <resultMap id="cargobaseResult"    class="java.util.HashMap">
    	<result property="codigo" 	column="CODIGO" />
    	<result property="descripcion" 	    column="DESCRIPCION"/>
    </resultMap>
    
  
    <!-- OBTIENE LA LISTA DE ACTIVIDADES POR PAIS Y CANAL -->
    <select id="getListaActividadByMarcaCanal" parameterClass="java.util.Map"  resultMap="baseResultOID">
		SELECT  OID_ACTI AS OID,
				gen_i18n_sicc_pais.val_i18n AS DESCRIPCION
		FROM MAV_ACTIV,
			 gen_i18n_sicc_pais
		WHERE gen_i18n_sicc_pais.val_oid = MAV_ACTIV.Oid_Acti
			  AND attr_enti = 'MAV_ACTIV'		
			<isNotEmpty prepend="AND" property="codigoPais">
				  MAV_ACTIV.PAIS_OID_PAIS  = gen_pkg_gener.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoCanal">
				  MAV_ACTIV.CANA_OID_CANA = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoMarca">
				  MAV_ACTIV.MARC_OID_MARC = gen_pkg_gener.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#)
			</isNotEmpty>
 	   ORDER BY 2
    </select>

	 <!-- OBTIENE LA LISTA DE ACTVIDADES  POR PAIS Y CANAL -->
    <select id="getListaPeriodosByFechaActual" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT DISTINCT
			   SEG_PERIO_CORPO.COD_PERI AS CODIGO,
 		       SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION
		FROM  SEG_PAIS,
			  SEG_CANAL,
			  CRA_PERIO,
			  SEG_PERIO_CORPO
        WHERE SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS
        AND   SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA
        AND   SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI
		<isNotEmpty prepend="AND" property="codigoPais">
        	  SEG_PAIS.COD_PAIS  = #codigoPais#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoCanal">
     		  SEG_CANAL.COD_CANA = #codigoCanal#
		</isNotEmpty>
		AND ( TRUNC(SYSDATE) BETWEEN CRA_PERIO.FEC_INIC AND CRA_PERIO.FEC_FINA )		       
 	   ORDER BY 1
    </select>
    
    <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getDescripcionByProducto" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 
		MP.COD_SAP codigo, 
		IO.VAL_I18N descripcion 
		FROM MAE_PRODU MP,  GEN_I18N_SICC_PAIS IO
		WHERE MP.OID_PROD = IO.VAL_OID
		AND IO.ATTR_ENTI = 'MAE_PRODU'
		AND MP.COD_SAP = #producto#
    </select>

	<!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getProductoBySAP" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT PRODUCTO.OID_PROD FROM MAE_PRODU PRODUCTO WHERE PRODUCTO.COD_SAP=#codigoSAP#
    </select>

  <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getOIDProducto" parameterClass="java.util.Map" resultMap="baseResult">
    	SELECT MAE_PROD_SEQ.NEXTVAL codigo, MAE_PROD_SEQ.NEXTVAL descripcion FROM DUAL
    </select>

	<!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getOIDEstimado" parameterClass="java.util.Map" resultMap="baseResult">
	    select APE_ESPR_SEQ.nextval codigo, APE_ESPR_SEQ.nextval descripcion from dual 
    </select>


  <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getVersionByMapa" parameterClass="java.util.Map" resultMap="baseResult">
SELECT VAL_VERS CODIGO, VAL_VERS DESCRIPCION FROM APE_ASIGN_PRODU_ANAQU_CABEC CAB WHERE CAB.MCDC_OID_MAPA_CENT_DIST_CABE=
(SELECT MAPA.OID_MAPA_CENT_DIST_CABE FROM APE_MAPA_CENTR_DISTR_CABEC MAPA WHERE MAPA.NUM_CODI_MAPA=#mapa#)    

</select> 

  <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getVersionSinP" parameterClass="java.util.Map" resultMap="baseResult">
SELECT VAL_VERS CODIGO, VAL_VERS DESCRIPCION 
FROM APE_ASIGN_PRODU_ANAQU_CABEC CAB WHERE CAB.MCDC_OID_MAPA_CENT_DIST_CABE=
(SELECT MAPA.OID_MAPA_CENT_DIST_CABE FROM APE_MAPA_CENTR_DISTR_CABEC MAPA WHERE MAPA.NUM_CODI_MAPA=#mapa#)
   

</select>
  <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getVersionByMapaAnt" parameterClass="java.util.Map" resultMap="baseResult">
SELECT VAL_VERS CODIGO, VAL_VERS DESCRIPCION 
FROM APE_ASIGN_PRODU_ANAQU_CABEC CAB WHERE CAB.MCDC_OID_MAPA_CENT_DIST_CABE=
(SELECT MAPA.OID_MAPA_CENT_DIST_CABE FROM APE_MAPA_CENTR_DISTR_CABEC MAPA WHERE MAPA.NUM_CODI_MAPA=#mapa#)
AND CAB.PERD_OID_PERI = (SELECT PERIODO.OID_PERI FROM CRA_PERIO PERIODO WHERE PERIODO.VAL_NOMB_PERI LIKE #periodo#)
AND CAB.IND_ACTI_FACT='S'   

</select>

    <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getEstadosPedidos" parameterClass="java.util.Map" resultMap="baseResult">
SELECT
num_orde codigo,
val_esta_caja descripcion 
FROM 
APE_ESTAD_PEDID

</select>
	
    
    	<select id="getFacturacion" parameterClass="java.util.Map" resultMap="baseResult">
  	
  	
  	 SELECT   A.NUM_LOTE_FACT codigo , A.NUM_LOTE_FACT descripcion
    	FROM PED_SOLIC_CABEC A, PED_TIPO_SOLIC_PAIS B, PED_TIPO_SOLIC C
   		WHERE A.FEC_FACT = to_date(#fechaFacturacion#,'dd/mm/yyyy')
     		AND A.NUM_LOTE_FACT IS NOT NULL
     		AND <![CDATA[ A.NUM_LOTE_FACT <> 0  ]]>
     		AND A.IND_TS_NO_CONSO = 0
     		AND A.TSPA_OID_TIPO_SOLI_PAIS = B.OID_TIPO_SOLI_PAIS
     		AND B.TSOL_OID_TIPO_SOLI = C.OID_TIPO_SOLI
     		AND C.COD_TIPO_SOLI = 'C1'
			GROUP BY A.FEC_FACT, A.NUM_LOTE_FACT
			ORDER BY A.FEC_FACT, A.NUM_LOTE_FACT
  		
   		
   			
  	</select>
    <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getZonasByPais" parameterClass="java.util.Map" resultMap="baseResult">
   select z.cod_zona codigo, Z.DES_ZONA descripcion 
		from zon_zona z 
		where z.pais_oid_pais=
		(select p.oid_pais from seg_pais p where p.cod_pais=#codigoPais#)
	  ORDER BY 1 ASC  
    </select>
    
    <!-- OBTIENE LA LISTA DE centro de zona POR centro de distriucion -->
    <select id="getCentroDistribucionByPais" parameterClass="java.util.Map" resultMap="baseResult">

SELECT CENTRO.COD_CENT_DIST AS CODIGO, GEN.VAL_I18N AS DESCRIPCION
  FROM APP_CONFI_CENTR_DISTR CENTRO, GEN_I18N_SICC_PAIS GEN
 WHERE CENTRO.PAIS_OID_PAIS =
          (SELECT PAIS.OID_PAIS
             FROM SEG_PAIS PAIS
            WHERE PAIS.COD_PAIS = #codigoPais#
              AND PAIS.OID_PAIS = CENTRO.PAIS_OID_PAIS) AND GEN.ATTR_ENTI='APP_CONFI_CENTR_DISTR' AND CENTRO.OID_CONF_CENT_DIST=GEN.VAL_OID
	  ORDER BY 1 ASC  
    </select>
    
	<!-- OBTIENE LA LISTA DE PERIODOS POR PAIS MARCA Y CANAL -->
    <select id="getMapaZonasByCentro" parameterClass="java.util.Map" resultMap="baseResult">

SELECT COD_MAPA_ZONA CODIGO,  GEN.VAL_I18N DESCRIPCION FROM  APE_MAPA_ZONA_CABEC MAPA,GEN_I18N_SICC_PAIS GEN 
   WHERE MAPA.MCDC_OID_MAPA_CENT_DIST_CABE=
(SELECT CENTRO.OID_MAPA_CENT_DIST_CABE FROM  APE_MAPA_CENTR_DISTR_CABEC CENTRO WHERE 
CENTRO.NUM_CODI_MAPA=#centro#)
AND GEN.ATTR_ENTI='APE_MAPA_ZONA_CABEC' AND MAPA.OID_MAPA_ZONA_CABE=GEN.VAL_OID
		  ORDER BY 1 ASC  
    </select>
     
    <!-- OBTIENE LA LISTA DE Accesos por canal -->
    <select id="getAccesoByCanal" parameterClass="java.util.Map" resultMap="baseResult">
   		select cod_acce codigo, GEN.VAL_I18N DESCRIPCION from  seg_acces SA,GEN_I18N_SICC_COMUN GEN  where cana_oid_cana = 
( select c.oid_cana	from seg_canal c where c.cod_cana=#canal#)
		
AND GEN.ATTR_ENTI='SEG_ACCES' AND SA.OID_ACCE  =GEN.VAL_OID
	  ORDER BY 1 ASC  
    </select>
         
     <!-- OBTIENE LA LISTA DE Accesos por canal -->
    <select id="getSubaccesoByAcceso" parameterClass="java.util.Map" resultMap="baseResult">
   		SELECT S.COD_SBAC CODIGO, GEN.VAL_I18N DESCRIPCION  FROM  SEG_SUBAC S,GEN_I18N_SICC_COMUN GEN  WHERE S.ACCE_OID_ACCE = 
		(SELECT A.OID_ACCE FROM  SEG_ACCES A WHERE A.COD_ACCE=#acceso#  AND S.ACCE_OID_ACCE= A.OID_ACCE)
				
AND GEN.ATTR_ENTI='SEG_SUBAC' AND S.OID_SBAC   =GEN.VAL_OID	  ORDER BY 1 ASC  
    </select>
    
    <!-- OBTIENE LA LISTA MAPAS DE CENTRO DE DISTRIBUCION DEPENDIENDO DEL CENTRO DE DISTRIBUCION Y PAIS -->
    <select id="getMapaByCentroPais" parameterClass="java.util.Map" resultMap="baseResult">
   		SELECT NUM_CODI_MAPA CODIGO, GEN.VAL_I18N  DESCRIPCION
 		FROM  APE_MAPA_CENTR_DISTR_CABEC CAB , GEN_I18N_SICC_PAIS GEN 
 		WHERE CAB.CCDI_OID_CONF_CENT_DIST=
		(SELECT CENTRO.OID_CONF_CENT_DIST FROM  APP_CONFI_CENTR_DISTR CENTRO WHERE CENTRO.COD_CENT_DIST=#centro#) 
			
AND GEN.ATTR_ENTI='APE_MAPA_CENTR_DISTR_CABEC' AND CAB.OID_MAPA_CENT_DIST_CABE  =GEN.VAL_OID	
	  ORDER BY 1 ASC  
    </select>
        
    <!-- OBTIENE LA LISTA DE PERIODOS POR PAIS MARCA Y CANAL -->
    <select id="getRegion" parameterClass="java.util.Map" resultMap="baseResult">
SELECT 
COD_REGI CODIGO,
DES_REGI DESCRIPCION
FROM
ZON_REGIO
    </select>

    <!-- OBTIENE LA LISTA DE PERIODOS POR PAIS MARCA Y CANAL -->
    <select id="getTipoSol" parameterClass="java.util.Map" resultMap="baseResult">

SELECT DISTINCT SOL.COD_TIPO_SOLI CODIGO, GEN.VAL_I18N DESCRIPCION
FROM PED_TIPO_SOLIC_PAIS PAIS
INNER JOIN PED_TIPO_SOLIC SOL ON SOL.OID_TIPO_SOLI=PAIS.TSOL_OID_TIPO_SOLI
 AND PAIS.PAIS_OID_PAIS=(SELECT PA.OID_PAIS FROM  SEG_PAIS PA WHERE PA.COD_PAIS =#codigoPais#) 
INNER JOIN GEN_I18N_SICC_COMUN GEN ON GEN.VAL_OID= SOL.OID_TIPO_SOLI
AND GEN.ATTR_ENTI='PED_TIPO_SOLIC'
ORDER BY GEN.VAL_I18N
    </select>
    
    <!-- OBTIENE LA LISTA DE LOTES POR FACTURACION -->
    <select id="getNumeroLoteByFact" parameterClass="java.util.Map" resultMap="baseResult">
     
    </select>
    
    <!-- OBTIENE LA LISTA DE PERIODOS POR PAIS MARCA Y CANAL -->
    <select id="getLinea" parameterClass="java.util.Map" resultMap="baseResult">
   SELECT DISTINCT  LINEA.NUM_CODI_LINE AS CODIGO, GEN.VAL_I18N AS DESCRIPCION
  FROM  APE_LINEA_ARMAD LINEA, GEN_I18N_SICC_PAIS GEN
 WHERE LINEA.CCDI_OID_CONF_CENT_DIST =
            (SELECT CENTRO.OID_CONF_CENT_DIST
               FROM  APP_CONFI_CENTR_DISTR CENTRO
              WHERE CENTRO.OID_CONF_CENT_DIST = LINEA.CCDI_OID_CONF_CENT_DIST AND CENTRO.COD_CENT_DIST=#codigoCentro#)
	   		
AND GEN.ATTR_ENTI='APE_LINEA_ARMAD' AND linea.OID_LINE_ARMA    =GEN.VAL_OID
	  ORDER BY 1 ASC  
    </select>
    	
    <!-- OBTIENE LA LISTA DE PERIODOS POR PAIS MARCA Y CANAL -->
    <select id="getSublineaByLinea" parameterClass="java.util.Map" resultMap="baseResult">
     	   SELECT A.COD_SUBL_ARMA CODIGO, GEN.VAL_I18N AS DESCRIPCION
  FROM APE_SUBLI_ARMAD A,GEN_I18N_SICC_PAIS GEN
 WHERE A.LIAR_OID_LINE_ARMA = (SELECT B.OID_LINE_ARMA
                                 FROM APE_LINEA_ARMAD B
                                WHERE B.NUM_CODI_LINE = #codigoLinea#)	    		
AND GEN.ATTR_ENTI='APE_SUBLI_ARMAD' AND A.OID_SUBL_ARMA    =GEN.VAL_OID	 ORDER BY 1 ASC  
    </select>
	<select id="getPeriodoByFechaActual" parameterClass="java.util.Map"  resultClass="string">
		SELECT min (SEG_PERIO_CORPO.COD_PERI)
		FROM  SEG_PAIS,
			  CRA_PERIO,
			  SEG_PERIO_CORPO
        WHERE SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS
        AND   SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI
		<isNotEmpty prepend="AND" property="codigoPais">
        	  SEG_PAIS.COD_PAIS  = #codigoPais#
		</isNotEmpty>
		AND  to_char(SYSDATE, 'yyyymmdd')>=  to_char(CRA_PERIO.FEC_INIC ,'yyyymmdd')
		<![CDATA[
		AND to_char(SYSDATE, 'yyyymmdd') < = to_char(CRA_PERIO.FEC_FINA ,'yyyymmdd')
		  ]]>			
 	   ORDER BY 1
    </select>
	 <!-- OBTIENE LA RELACION DE USUARIOS QUE SE ENCUENTRAN EN REC_AUTOR -->
    <select id="getAutor" parameterClass="java.util.Map" resultMap="baseResult">	
		SELECT DISTINCT own_mare.principals.name as CODIGO  , 
						own_mare.principals.name  as DESCRIPCION
		FROM   REC_AUTOR,
			   own_mare.Users ,
			   own_mare.principals 
		WHERE  REC_AUTOR.User_Oid_User = own_mare.Users.iduser
			   AND own_mare.principals.idprincipal = own_mare.Users.iduser    
    </select>    
 <!-- OBTIENE LA LISTA DE PERIODOS POR PAIS Y CANAL -->
    <select id="getPeriodosByPaisCanal" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT DISTINCT
			   SEG_PERIO_CORPO.COD_PERI AS CODIGO,
 		       SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION
		FROM  SEG_PAIS,
			  SEG_CANAL,
			  CRA_PERIO,
			  SEG_PERIO_CORPO
        WHERE SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS
        AND   SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA
        AND   SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI
		<isNotEmpty prepend="AND" property="codigoPais">
        	  SEG_PAIS.COD_PAIS  = #codigoPais#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoCanal">
     		  SEG_CANAL.COD_CANA = #codigoCanal#
		</isNotEmpty>
 	   ORDER BY 1
    </select>
	
	<!-- OBTIENE LA LISTA DE PERIODOS POR PAIS Y STAMP De BAS_CTRL_FACT -->
	<select id="getListaPeriodosByBasCtrlFact" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT 	DISTINCT
			   	COD_PERI AS CODIGO,
 		       	COD_PERI AS DESCRIPCION
		FROM  	BAS_CTRL_FACT       
		WHERE 	COD_PAIS  = #codigoPais#
				<isNotEmpty prepend="AND" property="staCamp">
     		  		STA_CAMP = #staCamp#
				</isNotEmpty>
 	   ORDER BY 1
    </select>
    
    <!-- OBTIENE EL PERIODO POR DEFAULT PARA UN PAIS Y CANAL -->
    <select id="getPeriodoDefaultByPaisCanal" parameterClass="java.util.Map"  resultMap="baseResult">
	    SELECT DISTINCT
	           SEG_PERIO_CORPO.COD_PERI AS CODIGO,
	           SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION   
	    FROM   SEG_PAIS,
        	   SEG_CANAL,
           	   CRA_PERIO,
           	   SEG_PERIO_CORPO
        WHERE (    (SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS)
               AND (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
               AND (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
               <isNotEmpty prepend="AND" property="codigoPais">    (SEG_PAIS.COD_PAIS  = #codigoPais#)     </isNotEmpty>
    	   	   <isNotEmpty prepend="AND" property="codigoCanal">   (SEG_CANAL.COD_CANA = #codigoCanal#)    </isNotEmpty>
		       <![CDATA[
		       AND (CRA_PERIO.FEC_INIC <= TRUNC(SYSDATE) )
               AND (CRA_PERIO.FEC_FINA >= TRUNC(SYSDATE) )
               ]]>
		  )
    </select>
		
	<select id="getMarcaProdu" parameterClass="java.util.Map"  resultMap="baseResult">
	    SELECT COD_MARC_PROD AS CODIGO,
           DES_MARC_PROD AS DESCRIPCION
   	 FROM SEG_MARCA_PRODU
    </select>
	<select id="getCatalogoProductos" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT cod_cata AS CODIGO,
			   des_cata AS DESCRIPCION 
		FROM pre_catal
    </select>
	<select id="getOidCatalogoProductos" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT oid_cata AS CODIGO,
			   des_cata AS DESCRIPCION 
		FROM pre_catal
    </select>
	
	<!-- OBTIENE LA LISTA DE PERIODOS , LA FECHA INICIAL  POR PAIS MARCA Y CANAL -->	
	<select id="getFechaInicioPeriodoByPaisMarcaCanal" parameterClass="java.util.Map"  resultMap="baseResult">
	 SELECT  to_char(cra_perio.fec_inic, 'dd/mm/yyyy') AS CODIGO,
			  to_char(cra_perio.fec_inic,'dd/mm/yyyy') AS DESCRIPCION
	 FROM   cra_perio	
	 WHERE  cra_perio.Pais_Oid_Pais = gen_pkg_gener.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)
		    AND cra_perio.Marc_Oid_Marc = gen_pkg_gener.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#)
		    AND cra_perio.Cana_Oid_Cana =gen_pkg_gener.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#)
		    AND cra_perio.Oid_Peri = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO(#codigoPeriodo#, 
								gen_pkg_gener.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#), 
								gen_pkg_gener.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#))		   
    </select>
	
	<!-- OBTIENE LA LISTA DE PERIODOS , LA FECHA FINAL  POR PAIS MARCA Y CANAL -->	
	<select id="getFechaFinalPeriodoByPaisMarcaCanal" parameterClass="java.util.Map"  resultMap="baseResult">
	 SELECT to_char(cra_perio.fec_fina, 'dd/mm/yyyy') AS CODIGO,
			to_char(cra_perio.fec_fina,'dd/mm/yyyy') AS DESCRIPCION	
	 FROM   cra_perio
	 WHERE  cra_perio.Pais_Oid_Pais = gen_pkg_gener.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)
	 	    AND cra_perio.Marc_Oid_Marc = gen_pkg_gener.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#)
	 	    AND cra_perio.Cana_Oid_Cana =gen_pkg_gener.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#)
		    AND cra_perio.Oid_Peri = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO(#codigoPeriodo#,
								gen_pkg_gener.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#), 
								gen_pkg_gener.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#))
    </select>
       
    <!-- OBTIENE LA LISTA DE PERIODOS POR PAIS MARCA Y CANAL -->
    <select id="getPeriodosByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
	SELECT DISTINCT SEG_PERIO_CORPO.COD_PERI AS CODIGO,
	       SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION 	   	   	   
      FROM  CRA_PERIO,
	   		SEG_MARCA,
	       	SEG_CANAL,
	       	SEG_PAIS,
	       	SEG_PERIO_CORPO
	  WHERE ((SEG_PAIS.COD_PAIS  = #codigoPais#)
	  		<isNotEmpty prepend="AND" property="codigoMarca">
			   (SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoCanal">
			   (SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
      AND	(SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS)
	  AND   (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
      AND	(SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
      AND	(SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
      AND	(SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
            )
	  ORDER BY 1 ASC  
    </select>


    <!-- OBTIENE EL PERIODO POR PAIS MARCA Y CANAL CUANDO FECHA FIN < = FECHA DEL SISTEMA -->
    <select id="getPeriodosByPaisMarcaCanalOrderFechaFin" parameterClass="java.util.Map" resultMap="baseResult">
      SELECT SEG_PERIO_CORPO.COD_PERI AS CODIGO, 
	  		 SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION
	    FROM CRA_PERIO,
	   		 SEG_PAIS,
			 SEG_MARCA,
			 SEG_CANAL,
	         SEG_PERIO_CORPO
        WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
    	   	  <isNotEmpty prepend="AND" property="codigoMarca">
			    (SEG_MARCA.COD_MARC = #codigoMarca#)
			  </isNotEmpty>
		      <isNotEmpty prepend="AND" property="codigoCanal">
			    (SEG_CANAL.COD_CANA = #codigoCanal#)
			  </isNotEmpty>
    	AND  (SEG_PAIS.OID_PAIS  = CRA_PERIO.PAIS_OID_PAIS)
		AND  (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
		AND  (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
		AND  (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
		AND  (SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
	   	<![CDATA[
	    AND  ((TO_DATE( (TO_CHAR(SYSDATE,'MM/DD/YYYY')),'MM/DD/YYYY' )) >= CRA_PERIO.FEC_FINA)
	    ]]>
	    )
		ORDER BY 1 DESC  
    </select>
    
    <!-- OBTIENE EL PERIODO POR PAIS MARCA Y CANAL, USANDO UN RANGO DE AÑOS HACIA ATRAS Y HACIA ADELANTE -->
    <select id="getPeriodosByPaisMarcaCanalRangos" parameterClass="java.util.Map" resultMap="labelValueResult">
      SELECT SEG_PERIO_CORPO.COD_PERI AS VALUE, 
             SEG_PERIO_CORPO.COD_PERI AS LABEL
        FROM CRA_PERIO,
             SEG_PAIS,
             SEG_MARCA,
             SEG_CANAL,
             SEG_PERIO_CORPO
        WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
              <isNotEmpty prepend="AND" property="codigoMarca">
                (SEG_MARCA.COD_MARC = #codigoMarca#)
              </isNotEmpty>
              <isNotEmpty prepend="AND" property="codigoCanal">
                (SEG_CANAL.COD_CANA = #codigoCanal#)
              </isNotEmpty>
        AND  (SEG_PAIS.OID_PAIS  = CRA_PERIO.PAIS_OID_PAIS)
        AND  (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
        AND  (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
        AND  (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
        AND  (SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
        <![CDATA[
		AND  (TO_CHAR(SYSDATE, 'YYYY') - #rangoInicial# <= TO_CHAR(CRA_PERIO.FEC_FINA, 'YYYY'))
        AND  (TO_CHAR(SYSDATE, 'YYYY') + #rangoFinal# >= TO_CHAR(CRA_PERIO.FEC_INIC, 'YYYY') )
        ]]>
        )
        ORDER BY 1 DESC  
    </select>
    
    <!-- OBTIENE EL PERIODO POR DEFAULT POR PAIS MARCA Y CANAL -->
    <select id="getPeriodoDefaultByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
      SELECT SEG_PERIO_CORPO.COD_PERI AS CODIGO, 
	  		 SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION
	    FROM CRA_PERIO,
	   		 SEG_PAIS,
			 SEG_MARCA,
			 SEG_CANAL,
	         SEG_PERIO_CORPO
        WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
    	   	  <isNotEmpty prepend="AND" property="codigoMarca">
			    (SEG_MARCA.COD_MARC = #codigoMarca#)
			  </isNotEmpty>
		      <isNotEmpty prepend="AND" property="codigoCanal">
			    (SEG_CANAL.COD_CANA = #codigoCanal#)
			  </isNotEmpty>
    	AND  (SEG_PAIS.OID_PAIS  = CRA_PERIO.PAIS_OID_PAIS)
		AND  (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
		AND  (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
		AND  (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
		AND  (SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
	   	<![CDATA[
    	AND  ((TO_DATE( (TO_CHAR(SYSDATE,'MM/DD/YYYY')),'MM/DD/YYYY' )) >= CRA_PERIO.FEC_INIC)
	    AND  ((TO_DATE( (TO_CHAR(SYSDATE,'MM/DD/YYYY')),'MM/DD/YYYY' )) <= CRA_PERIO.FEC_FINA)
	    ]]>
	    )
		ORDER BY 1 ASC  
    </select>
 
    <!-- OBTIENE LA LISTA DE PERIODOS POR PAIS MARCA CANAL Y ACCESO -->
    <select id="getPeriodosByPaisMarcaCanalAcceso" parameterClass="java.util.Map" resultMap="baseResult">
	  SELECT DISTINCT SEG_PERIO_CORPO.COD_PERI AS CODIGO,
		   	 SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION		 	   	   	   
    	FROM CRA_PERIO,
			 SEG_PAIS,
	       	 SEG_MARCA,
	       	 SEG_CANAL,
	       	 SEG_ACCES,
	       	 SEG_PERIO_CORPO
		WHERE ((SEG_PAIS.COD_PAIS   = #codigoPais#)
	  	  	  <isNotEmpty prepend="AND" property="codigoMarca">
			    (SEG_MARCA.COD_MARC  = #codigoMarca#)
			  </isNotEmpty>
			  <isNotEmpty prepend="AND" property="codigoCanal">
			    (SEG_CANAL.COD_CANA  = #codigoCanal#)
			  </isNotEmpty>
			  <isNotEmpty prepend="AND" property="codigoAcceso">
			    (SEG_ACCES.COD_ACCE = #codigoAcceso#)
			  </isNotEmpty>
			  <isNotEmpty prepend="AND" property="codigoAcceso">
			    (SEG_ACCES.OID_ACCE = CRA_PERIO.ACCE_OID_ACCE)
			  </isNotEmpty>
		AND	  (SEG_PAIS.OID_PAIS  = CRA_PERIO.PAIS_OID_PAIS)
	    AND	  (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
	    AND	  (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
		AND	  (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
	    AND	  (SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
	          )
	 	ORDER BY 1 ASC  
    </select>

 <!-- OBTIENE EL GRUPO DE PROCESO -->
    <select id="getGrupoProceso2" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT  ped_grupo_proce.cod_grup_proc AS CODIGO,
				ped_grupo_proce.cod_grup_proc AS DESCRIPCION
		FROM ped_grupo_proce
	 	ORDER BY 1 ASC  
    </select>
 	
 	<!-- OBTIENE EL PERIODO POR DEFAULT POR PAIS MARCA CANAL Y ACCESO -->
    <select id="getPeriodoDefaultByPaisMarcaCanalAcceso" parameterClass="java.util.Map" resultMap="baseResult">
	  SELECT DISTINCT SEG_PERIO_CORPO.COD_PERI AS CODIGO,
		   	 SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION		 	   	   	   
    	FROM CRA_PERIO,
			 SEG_PAIS,
	         SEG_MARCA,
	         SEG_CANAL,
	         SEG_ACCES,
	         SEG_PERIO_CORPO
		WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
	  		  <isNotEmpty prepend="AND" property="codigoMarca">
			    (SEG_MARCA.COD_MARC = #codigoMarca#)
			  </isNotEmpty>
			  <isNotEmpty prepend="AND" property="codigoCanal">
			    (SEG_CANAL.COD_CANA = #codigoCanal#)
			  </isNotEmpty>
			  <isNotEmpty prepend="AND" property="codigoAcceso">
			    (SEG_ACCES.COD_ACCE = #codigoAcceso#)
			  </isNotEmpty>
			  <isNotEmpty prepend="AND" property="codigoAcceso">
			    (SEG_ACCES.OID_ACCE = CRA_PERIO.ACCE_OID_ACCE)
			  </isNotEmpty>
        AND	  (SEG_PAIS.OID_PAIS  = CRA_PERIO.PAIS_OID_PAIS)
        AND	  (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
        AND	  (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
	    AND	  (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
        AND	  (SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
   		<![CDATA[
   		AND   ((TO_DATE( (TO_CHAR(SYSDATE,'MM/DD/YYYY')),'MM/DD/YYYY' )) >= CRA_PERIO.FEC_INIC)
    	AND   ((TO_DATE( (TO_CHAR(SYSDATE,'MM/DD/YYYY')),'MM/DD/YYYY' )) <= CRA_PERIO.FEC_FINA)
     	]]>
	          )
	    ORDER BY 1 ASC  
    </select>

    
    <!-- OBTIENE LA RELACION DE CANALES DE VENTA -->
    <select id="getCanalesByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT  C.COD_CANA AS CODIGO, 
		        VAL_I18N AS DESCRIPCION
		FROM    GEN_I18N_SICC_COMUN P, 
		        SEG_CANAL C, 
		        SEG_IDIOM I  
		WHERE    P.VAL_OID = C.OID_CANA
		     AND P.IDIO_OID_IDIO = I.OID_IDIO
		     AND P.ATTR_ENTI = 'SEG_CANAL'
		     AND I.COD_ISO_IDIO = #value#
		ORDER BY 2
    </select>


    <!-- OBTIENE LA RELACION DE CANALES DE VENTA -->
    <select id="getMarcasById" parameterClass="string" resultClass="baseGenerico">
  		SELECT COD_MARC AS CODIGO, 
  		       DES_MARC AS DESCRIPCION
  	    FROM SEG_MARCA WHERE COD_MARC = #value#
    </select>


    <!-- OBTIENE LA RELACION DE CANALES DE VENTA -->
    <select id="getCanalesById" parameterClass="java.util.Map" resultClass="baseGenerico">
		SELECT  C.COD_CANA AS CODIGO, 
		        VAL_I18N AS DESCRIPCION
		FROM    GEN_I18N_SICC_COMUN P, 
		        SEG_CANAL C, 
		        SEG_IDIOM I  
		WHERE    P.VAL_OID = C.OID_CANA
		     AND P.IDIO_OID_IDIO = I.OID_IDIO
		     AND P.ATTR_ENTI = 'SEG_CANAL'
		     AND I.COD_ISO_IDIO = #codigoISO#
		     AND C.COD_CANA = #codigoCanal#
    </select>


    <!-- OBTIENE LA RELACION DE CANALES ROL DE VENTA POR CODIGO ISO -->
    <select id="getCanalesRolByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT OID_CLAS AS CODIGO,
	           VAL_I18N AS DESCRIPCION
	    FROM   MAE_CLASI,
               MAE_TIPO_CLIEN,
               MAE_SUBTI_CLIEN,
               MAE_TIPO_CLASI_CLIEN,
               GEN_I18N_SICC_COMUN,
               SEG_IDIOM,
	           BAS_IDIOM
		WHERE (    (MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE)
  		       AND (MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE)
  		       AND (MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS = MAE_CLASI.TCCL_OID_TIPO_CLAS)
 		       AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_COMUN.IDIO_OID_IDIO)
 		       AND (MAE_TIPO_CLIEN.COD_TIPO_CLIE  ='01')
			   AND (MAE_SUBTI_CLIEN.COD_SUBT_CLIE ='01')
			   AND (MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS='02')
			   AND (GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI')
			   AND (GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS)
			   AND (BAS_IDIOM.COD_ESIC= UPPER(#value#))
			   AND (BAS_IDIOM.COD_ESIC=SEG_IDIOM.COD_IDIO)
			   AND (GEN_I18N_SICC_COMUN.IDIO_OID_IDIO=SEG_IDIOM.OID_IDIO)
	           )
	    ORDER BY 2
    </select>


    <!-- OBTIENE LA RELACION DE ESTADOS ROL POR CODIGO ISO -->
    <select id="getEstadosRolByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT OID_CLAS AS CODIGO,
	       	   VAL_I18N AS DESCRIPCION
		FROM   MAE_CLASI,
    	       MAE_TIPO_CLIEN,
   	           MAE_SUBTI_CLIEN,
    		   MAE_TIPO_CLASI_CLIEN,
    	       GEN_I18N_SICC_COMUN,
    	       SEG_IDIOM,
		       BAS_IDIOM
		WHERE (    (MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE)
    	    AND (MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE)
   	        AND (MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS = MAE_CLASI.TCCL_OID_TIPO_CLAS)
   	     	AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_COMUN.IDIO_OID_IDIO)
   	        AND (MAE_TIPO_CLIEN.COD_TIPO_CLIE  ='01')
			AND (MAE_SUBTI_CLIEN.COD_SUBT_CLIE ='01')
			AND (MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS='04')
			AND (GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI')
			AND (GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS)
			AND (BAS_IDIOM.COD_ESIC=UPPER(#value#))
			AND (BAS_IDIOM.COD_ESIC=SEG_IDIOM.COD_IDIO)
			AND (GEN_I18N_SICC_COMUN.IDIO_OID_IDIO=SEG_IDIOM.OID_IDIO)
	        )
		ORDER BY 2
    </select>


   <!-- OBTIENE LA RELACION DE ACCESOS POR CODIGO ISO -->
    <select id="getAccesosByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT A.COD_ACCE AS CODIGO, 
		       VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       SEG_ACCES A, 
		       SEG_IDIOM I
		WHERE  P.VAL_OID = A.OID_ACCE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	   	   AND P.ATTR_ENTI = 'SEG_ACCES'
	       AND I.COD_ISO_IDIO = #value#
		ORDER BY 2
    </select>

    <select id="getOidAccesosByCodigoISO" parameterClass="string" resultMap="baseResultOID">
		SELECT A.OID_ACCE AS OID, 
		       VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       SEG_ACCES A, 
		       SEG_IDIOM I
		WHERE  P.VAL_OID = A.OID_ACCE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	   	   AND P.ATTR_ENTI = 'SEG_ACCES'
	       AND I.COD_ISO_IDIO = #value#
    </select>

    <!-- OBTIENE ACCESO POR ACCESO, CANAL Y CODIGO ISO -->
    <select id="getAccesosByCodigo" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 	SEG_ACCES.COD_ACCE AS CODIGO, 
				GEN_I18N_SICC_COMUN.VAL_I18N AS DESCRIPCION
	    FROM    SEG_CANAL,
	            SEG_ACCES,
	            GEN_I18N_SICC_COMUN,
	            SEG_IDIOM
	 	WHERE (    (GEN_I18N_SICC_COMUN.ATTR_ENTI = 'SEG_ACCES')
	           AND (SEG_IDIOM.COD_ISO_IDIO = #codigoISO#)
	           AND (SEG_ACCES.COD_ACCE  = #codigoAcceso#)
	           AND (SEG_CANAL.COD_CANA =  #codigoCanal#)
	           AND (SEG_CANAL.OID_CANA = SEG_ACCES.CANA_OID_CANA)
	           AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_COMUN.IDIO_OID_IDIO)
	           AND (GEN_I18N_SICC_COMUN.VAL_OID = SEG_ACCES.OID_ACCE)
	          )
    </select>

    <!-- OBTIENE LA RELACION DE ACCESOS POR CANAL Y CODIGO ISO -->
    <select id="getAccesosByCanalByCodigoISO" parameterClass="string" resultMap="accesoCanalResult">
		SELECT 	SEG_CANAL.COD_CANA AS CODCAN, 
	            SEG_ACCES.COD_ACCE AS CODACC, 
				GEN_I18N_SICC_COMUN.VAL_I18N AS DSC  
	    FROM    SEG_CANAL,
	            SEG_ACCES,
	            GEN_I18N_SICC_COMUN,
	            SEG_IDIOM
	 	WHERE (    (GEN_I18N_SICC_COMUN.ATTR_ENTI = 'SEG_ACCES')
	           AND (SEG_IDIOM.COD_ISO_IDIO = #value#)
	           AND (SEG_CANAL.OID_CANA = SEG_ACCES.CANA_OID_CANA)
	           AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_COMUN.IDIO_OID_IDIO)
	           AND (GEN_I18N_SICC_COMUN.VAL_OID = SEG_ACCES.OID_ACCE)
	          )
	   ORDER BY 2	
    </select>


	<!-- OBTIENE LA RELACION DE TODOS LOS ACCESOS POR CANAL Y CODIGO ISO -->
	<select id="getAccesosTodosByCanalByCodigoISO" parameterClass="string" resultMap="accesoCanalResult">
		SELECT 	DISTINCT SEG_ACCES.COD_ACCE AS CODACC, 
	            '' AS CODCAN, 
	            GEN_I18N_SICC_COMUN.VAL_I18N AS DSC  
	    FROM  SEG_CANAL,
	          SEG_ACCES,
	          GEN_I18N_SICC_COMUN,
	          SEG_IDIOM
		WHERE (  (GEN_I18N_SICC_COMUN.ATTR_ENTI = 'SEG_ACCES')
	         AND (SEG_IDIOM.COD_ISO_IDIO = #value#)
	         AND (SEG_CANAL.OID_CANA = SEG_ACCES.CANA_OID_CANA)
	         AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_COMUN.IDIO_OID_IDIO)
	         AND (GEN_I18N_SICC_COMUN.VAL_OID = SEG_ACCES.OID_ACCE)
	          )
	    ORDER BY 3
    </select>


	<!-- OBTIENE LA RELACION DE SUB ACCESOS POR CODIGO ISO -->
    <select id="getSubaccesosByCodigoISO" parameterClass="string" resultMap="subAccesosResult">
		SELECT  A.COD_ACCE AS PARENT, 
		        S.COD_SBAC AS CODIGO, 
	            VAL_I18N AS DESCRIPCION
		FROM    GEN_I18N_SICC_COMUN P, 
		        SEG_SUBAC S, 
		        SEG_ACCES A, 
		        SEG_IDIOM I 
		WHERE      A.OID_ACCE = S.ACCE_OID_ACCE 
	           AND P.VAL_OID = S.OID_SBAC
	           AND P.IDIO_OID_IDIO = I.OID_IDIO
	           AND P.ATTR_ENTI = 'SEG_SUBAC'
	           AND I.COD_ISO_IDIO = #value#
	    ORDER BY 3
	</select>

    <select id="getOidSubaccesosByOidAcceso" parameterClass="string" resultMap="baseResultOID">
		SELECT   
		        S.OID_SBAC AS OID, 
	            VAL_I18N AS DESCRIPCION
		FROM    GEN_I18N_SICC_COMUN P, 
		        SEG_SUBAC S, 
		        SEG_ACCES A, 
		        SEG_IDIOM I 
		WHERE      A.OID_ACCE = S.ACCE_OID_ACCE 
	           AND P.VAL_OID = S.OID_SBAC
	           AND P.IDIO_OID_IDIO = I.OID_IDIO
	           AND P.ATTR_ENTI = 'SEG_SUBAC'
	           AND A.OID_ACCE = #value#
	</select>

<!-- OBTIENE LA RELACION DE SUB ACCESOS POR CODIGO ISO -->
    <select id="getSubaccesosByCriteria" parameterClass="java.util.Map" resultMap="subAccesosResult">
		SELECT  A.COD_ACCE AS PARENT, 
		        S.COD_SBAC AS CODIGO, 
	            VAL_I18N AS DESCRIPCION
		FROM    GEN_I18N_SICC_COMUN P, 
		        SEG_SUBAC S, 
		        SEG_ACCES A, 
		        SEG_IDIOM I 
		WHERE      A.OID_ACCE = S.ACCE_OID_ACCE 
	           AND P.VAL_OID = S.OID_SBAC
	           AND P.IDIO_OID_IDIO = I.OID_IDIO
	           AND P.ATTR_ENTI = 'SEG_SUBAC'
	    	<isNotEmpty prepend="AND" property="codigoIdioma">
	           I.COD_ISO_IDIO = #codigoIdioma#
			</isNotEmpty>
	    	<isNotEmpty prepend="AND" property="codigoAcceso">
	           A.COD_ACCE  = #codigoAcceso#
			</isNotEmpty>
	    ORDER BY 3
	</select>

    <!-- OBTIENE SUBACCESO POR SUBACCESO, ACCESO, CANAL Y CODIGO ISO -->
    <select id="getSubaccesosByCodigo" parameterClass="java.util.Map" resultMap="baseResult">
        SELECT 	
		        SEG_SUBAC.COD_SBAC AS CODIGO, 
	            VAL_I18N AS DESCRIPCION
	    FROM    SEG_CANAL,
	            SEG_ACCES,
	            GEN_I18N_SICC_COMUN,
	            SEG_IDIOM,
	            SEG_SUBAC
	 	WHERE (    (GEN_I18N_SICC_COMUN.ATTR_ENTI = 'SEG_ACCES')
	           AND (SEG_IDIOM.COD_ISO_IDIO = #codigoISO#)
	           AND (SEG_ACCES.COD_ACCE  = #codigoAcceso#)
	           AND (SEG_CANAL.COD_CANA =  #codigoCanal#)
	           AND (SEG_SUBAC.COD_SBAC =  #codigoSubAcceso#)
	           AND (SEG_CANAL.OID_CANA = SEG_ACCES.CANA_OID_CANA)
	           AND (SEG_ACCES.OID_ACCE = SEG_SUBAC.ACCE_OID_ACCE)
	           AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_COMUN.IDIO_OID_IDIO)
	           AND (GEN_I18N_SICC_COMUN.VAL_OID = SEG_ACCES.OID_ACCE)
	          )
    </select>



	<!-- OBTIENE LA RELACION DE TIPOS DE CLIENTES POR CODIGO ISO -->
    <select id="getTiposClientesByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT C.COD_TIPO_CLIE AS CODIGO, 
		       VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       MAE_TIPO_CLIEN C, 
		       SEG_IDIOM I
		WHERE  P.VAL_OID = C.OID_TIPO_CLIE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	       AND P.ATTR_ENTI = 'MAE_TIPO_CLIEN'
	       AND I.COD_ISO_IDIO = #value#
	    ORDER BY 2
    </select>
    
    <!-- OBTIENE LA RELACION DE TIPOS DE CLIENTES POR CODIGO ISO -->
    <select id="getTiposClientesByCodigoISO01" parameterClass="string" resultMap="baseResult">
		SELECT C.COD_TIPO_CLIE AS CODIGO, 
		       C.COD_TIPO_CLIE || ' - ' || VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       MAE_TIPO_CLIEN C, 
		       SEG_IDIOM I
		WHERE  P.VAL_OID = C.OID_TIPO_CLIE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	       AND P.ATTR_ENTI = 'MAE_TIPO_CLIEN'
	       AND I.COD_ISO_IDIO = #value#
	    ORDER BY 2
    </select>
    
    <!-- OBTIENE LA DESCRPCION DE TIPOS DE CLIENTES POR CODIGO TIPO CLIENTE Y CODIGO DE IDIOMA -->
    <select id="getDescripcionTipoClienteByCodigoTipoClienteCodigoIdioma" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT 
			P.VAL_I18N 
		FROM 
			GEN_I18N_SICC_COMUN P,
			MAE_TIPO_CLIEN T,
			SEG_IDIOM I
		WHERE 
			P.VAL_OID=T.OID_TIPO_CLIE AND
			P.ATTR_ENTI = 'MAE_TIPO_CLIEN' AND
			P.IDIO_OID_IDIO = I.OID_IDIO AND
			T.COD_TIPO_CLIE= #codTipoCliente# AND
			I.COD_ISO_IDIO = #codIdioma#
    </select>
    
  <!-- OBTIENE LA RELACION DE TIPOS DE CLIENTES POR CODIGO ISO -->
    <select id="getTiposClientesByCodigoISOOID" parameterClass="string" resultMap="baseResultOID">
		SELECT OID_TIPO_CLIE AS OID, 
		       VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       MAE_TIPO_CLIEN C, 
		       SEG_IDIOM I
		WHERE  P.VAL_OID = C.OID_TIPO_CLIE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	       AND P.ATTR_ENTI = 'MAE_TIPO_CLIEN'
	       AND I.COD_ISO_IDIO = #value#
	    ORDER BY 2
    </select>  
    <select id="getSubTiposClientesByCriteria" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT T.COD_TIPO_CLIE, C.COD_SUBT_CLIE AS CODIGO, 
		       VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       MAE_SUBTI_CLIEN C, 
		       MAE_TIPO_CLIEN T,
		       SEG_IDIOM I
		WHERE  P.VAL_OID = C.OID_SUBT_CLIE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	       AND P.ATTR_ENTI = 'MAE_SUBTI_CLIEN'
	       AND T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE
	    <isNotEmpty prepend="AND" property="codigoPais">
	       I.COD_ISO_IDIO = #codigoPais#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="codigoTipoCliente">   
		   T.COD_TIPO_CLIE = #codigoTipoCliente#    
		</isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidTipoCliente">   
		   T.OID_TIPO_CLIE = #oidTipoCliente#    
		</isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidSubTipoCliente">   
		   C.OID_SUBT_CLIE = #oidSubTipoCliente#    
		</isNotEmpty>				
    	ORDER BY 2
    </select>

    <select id="getSubTiposClientesMultipleByCriteria" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT (T.COD_TIPO_CLIE || '-' || C.COD_SUBT_CLIE ) AS CODIGO, 
		       VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       MAE_SUBTI_CLIEN C, 
		       MAE_TIPO_CLIEN T,
		       SEG_IDIOM I
		WHERE  P.VAL_OID = C.OID_SUBT_CLIE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	       AND P.ATTR_ENTI = 'MAE_SUBTI_CLIEN'
	       AND T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE
	    <isNotEmpty prepend="AND" property="codigoPais">
	       I.COD_ISO_IDIO = #codigoPais#
	    </isNotEmpty>
		<iterate prepend="AND" property="codigoTipoClientes" open="(" close=")" conjunction="OR">
		   T.COD_TIPO_CLIE = #codigoTipoClientes[]#    
         </iterate>                                  
    	ORDER BY 2
    </select>
	<select id="getSubTiposClientesMultipleByCriteriaOID" parameterClass="java.util.Map" resultMap="baseResultOID">
		SELECT c.oid_subt_clie AS OID, 
		       VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       MAE_SUBTI_CLIEN C, 
		       MAE_TIPO_CLIEN T,
		       SEG_IDIOM I
		WHERE  P.VAL_OID = C.OID_SUBT_CLIE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	       AND P.ATTR_ENTI = 'MAE_SUBTI_CLIEN'
	       AND T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE
	    <isNotEmpty prepend="AND" property="codigoIdiomaISO">
	       I.COD_ISO_IDIO = #codigoIdiomaISO#
	    </isNotEmpty>
		<iterate prepend="AND" property="codigoTipoClientes" open="(" close=")" conjunction="OR">
		  OID_TIPO_CLIE = #codigoTipoClientes[]#    
         </iterate>                                  
    	ORDER BY 2
    </select>
    
    <select id="getSubTiposClientesMultipleByCriteriaCodigo" parameterClass="java.util.Map" resultMap="baseResultCodigo">
		SELECT c.COD_SUBT_CLIE AS CODIGO, 
		       c.COD_SUBT_CLIE|| ' - ' ||VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_COMUN P, 
		       MAE_SUBTI_CLIEN C, 
		       MAE_TIPO_CLIEN T,
		       SEG_IDIOM I
		WHERE  P.VAL_OID = C.OID_SUBT_CLIE
	       AND P.IDIO_OID_IDIO = I.OID_IDIO
	       AND P.ATTR_ENTI = 'MAE_SUBTI_CLIEN'
	       AND T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE
	    <isNotEmpty prepend="AND" property="codigoIdiomaISO">
	       I.COD_ISO_IDIO = #codigoIdiomaISO#
	    </isNotEmpty>
		<iterate prepend="AND" property="codTipclie" open="(" close=")" conjunction="OR">
		  COD_TIPO_CLIE = #codTipclie[]#    
         </iterate>                                
    	ORDER BY 2
    </select>
    
    <!-- OBTIENE DESCRIPCION SUBTIPOCLIENTE POR CODIGO TIPO CLIENTE, CODIGO SUBTIPO CLIENTE Y CODIGO IDIOMA-->
    <select id="getDescripcionSubTipoClienteByCriteria" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT 
			P.VAL_I18N 
		FROM 
			GEN_I18N_SICC_COMUN P,
			MAE_SUBTI_CLIEN C,
			MAE_TIPO_CLIEN T,
			SEG_IDIOM I
		WHERE 
			P.VAL_OID=C.OID_SUBT_CLIE AND
			T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE AND
			P.ATTR_ENTI = 'MAE_SUBTI_CLIEN' AND
			P.IDIO_OID_IDIO = I.OID_IDIO AND
			T.COD_TIPO_CLIE= #codTipoCliente# AND
			C.COD_SUBT_CLIE= #codSubTipoCliente# AND
			I.COD_ISO_IDIO = #codIdioma#
    </select>
    
	<!-- OBTIENE LA RELACION DE MARCAS REGISTRADAS-->
    <select id="getMarcas" resultMap="baseResult">
  		SELECT COD_MARC AS CODIGO, 
  		       DES_MARC AS DESCRIPCION
  	    FROM SEG_MARCA ORDER BY 2
    </select>


	<!-- OBTIENE LA RELACION DE ACTIVIDADES -->
    <select id="getActividades" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT A.COD_ACTI AS CODIGO, 
		       I.VAL_I18N AS DESCRIPCION
		FROM GEN_I18N_SICC_COMUN I,
	         CRA_ACTIV A, 
			 SEG_IDIOM ID, 
	         SEG_MARCA M    
		WHERE A.OID_ACTI = I.VAL_OID
	      AND I.IDIO_OID_IDIO = ID.OID_IDIO
	      AND M.OID_MARC = A.MARC_OID_MARC
	      AND I.ATTR_ENTI = 'CRA_ACTIV'
	      AND ID.COD_ISO_IDIO = #codigoIsoIdioma# 
	      AND M.COD_MARC =  #codigoMarca#   
    </select>


	<!-- OBTIENE LA RELACION DE ACTIVIDADES POR CÓDIGO ISO -->
    <select id="getActividadesByCodigoISO" parameterClass="java.lang.String" resultMap="actividadResult">
		SELECT   SEG_PAIS.COD_PAIS AS CODPAI, 
		         SEG_MARCA.COD_MARC AS CODMAR, 
		         SEG_CANAL.COD_CANA AS CODCAN,
	             CRA_ACTIV.COD_ACTI AS CODACT, 
		         GEN_I18N_SICC_COMUN.VAL_I18N AS DSC,
		         UPPER(GEN_I18N_SICC_COMUN.VAL_I18N) AS DSC2
	  	FROM GEN_I18N_SICC_COMUN,
	         CRA_ACTIV,
	         SEG_IDIOM,
	         SEG_MARCA,
	         SEG_CANAL,
	         SEG_PAIS
	 	WHERE (    (GEN_I18N_SICC_COMUN.ATTR_ENTI = 'CRA_ACTIV')
	    	     AND (SEG_IDIOM.COD_ISO_IDIO = #value#)
	       		 AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_COMUN.IDIO_OID_IDIO)
	       		 AND (SEG_MARCA.OID_MARC = CRA_ACTIV.MARC_OID_MARC)
	        	 AND (SEG_CANAL.OID_CANA = CRA_ACTIV.CANA_OID_CANA)
	             AND (CRA_ACTIV.OID_ACTI = GEN_I18N_SICC_COMUN.VAL_OID)
	        	 AND (SEG_PAIS.OID_PAIS = CRA_ACTIV.PAIS_OID_PAIS)
	          )
		ORDER BY 6,4, 2, 3, 1
    </select>


	<!-- OBTIENE LA RELACION DE SOCIEDADES POR PAIS -->
    <select id="getSociedadesByCodigoPais" parameterClass="string" resultMap="baseResult">
		SELECT SEG_SOCIE.COD_SOCI AS CODIGO, 
			   SEG_SOCIE.VAL_DENO AS DESCRIPCION
	      FROM SEG_PAIS, SEG_SOCIE
	      WHERE ((SEG_PAIS.COD_PAIS = #value#)
	      AND   (SEG_PAIS.OID_PAIS = SEG_SOCIE.PAIS_OID_PAIS)
	            )
	      ORDER BY 2
    </select>
    
	<!-- OBTIENE LA RELACION DE CUENTAS CORRIENTE POR PAIS -->
    <select id="getCuentasCorrientesByCodigoPais" parameterClass="string" resultMap="baseResult">
		SELECT COD_CC AS CODIGO,
			   DES_CC AS DESCRIPCION
		FROM CCC_CUENT_CORRI_BANCA, SEG_PAIS    
		WHERE ((SEG_PAIS.COD_PAIS = #value#)
		AND   (SEG_PAIS.OID_PAIS = CCC_CUENT_CORRI_BANCA.PAIS_OID_PAIS)
			  )
		ORDER BY 2 
    </select>
    
	<!-- OBTIENE LA RELACION DE CUENTAS CORRIENTE POR PAIS Y SOCIEDAD -->
    <select id="getCuentasCorrientesPorPaisSociedad" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 	COD_CC AS CODIGO,
				DES_CC AS DESCRIPCION 
		FROM CCC_CUENT_CORRI_BANCA, SEG_SOCIE, SEG_PAIS    
		WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
		<isNotEmpty prepend="AND" property="codigoSociedad">
			(SEG_SOCIE.COD_SOCI = #codigoSociedad#)
		</isNotEmpty>
		AND	  (SEG_SOCIE.OID_SOCI = CCC_CUENT_CORRI_BANCA.SOCI_OID_SOCI)
		AND   (SEG_PAIS.OID_PAIS = CCC_CUENT_CORRI_BANCA.PAIS_OID_PAIS)
			  )
		ORDER BY 2
    </select>
    
    
   	<!-- OBTIENE LA RELACION DE TIPOS TRANSACCIONES POR PAIS -->
    <select id="getTiposTransaccionesByCodigoPais" parameterClass="string" resultMap="baseResult">
		SELECT COD_TIPO_TRAN AS CODIGO,
			   COD_TIPO_TRAN AS DESCRIPCION
		FROM CCC_TIPO_TRANS, SEG_PAIS    
		WHERE ((SEG_PAIS.COD_PAIS = #value#)
		AND   (SEG_PAIS.OID_PAIS = CCC_TIPO_TRANS.PAIS_OID_PAIS)
			  )
    </select>
    
    
   	<!-- OBTIENE LA DESCRIPCION DE LA SOCIEDAD DE ACUERDO A UN PAIS Y SOCIEDAD SELECCIONADOS -->
    <select id="getSociedadesById" parameterClass="java.util.Map" resultClass="baseGenerico">
		SELECT SEG_SOCIE.COD_SOCI AS CODIGO, 
			   SEG_SOCIE.VAL_DENO AS DESCRIPCION
	      FROM SEG_PAIS, SEG_SOCIE
	      WHERE ((SEG_PAIS.OID_PAIS = SEG_SOCIE.PAIS_OID_PAIS)
		  AND	(SEG_PAIS.COD_PAIS = #codigoPais#)
		  AND	(SEG_SOCIE.COD_SOCI = #codigoSociedad#)
	            )
    </select>

    <!-- OBTIENE LA RELACION DE ALMACENES POR CODIGO ISO -->
    <select id="getAlmacenesByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT DISTINCT BEL_ALMAC.COD_ALMA AS CODIGO, 
	           GEN_I18N_SICC_PAIS.VAL_I18N AS DESCRIPCION
		FROM BEL_ALMAC, GEN_I18N_SICC_PAIS, SEG_IDIOM
	    WHERE (     (GEN_I18N_SICC_PAIS.ATTR_ENTI = 'BEL_ALMAC')
        		AND (SEG_IDIOM.COD_ISO_IDIO = #value#)
        		AND (BEL_ALMAC.OID_ALMA = GEN_I18N_SICC_PAIS.VAL_OID)
        		AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_PAIS.IDIO_OID_IDIO)
       		  ) ORDER BY 2
    </select>


    <!-- OBTIENE LA RELACION DE ALMACENES POR CODIGO ISO Y PAIS -->
    <select id="getAlmacenesByCodigoISOPais" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT BEL_ALMAC.COD_ALMA AS CODIGO,      
	           GEN_I18N_SICC_PAIS.VAL_I18N AS DESCRIPCION  
		FROM BEL_ALMAC, 
          	 GEN_I18N_SICC_PAIS, 
		  	 SEG_IDIOM,
		  	 SEG_PAIS  
		WHERE (     (GEN_I18N_SICC_PAIS.ATTR_ENTI = 'BEL_ALMAC')         
    		    AND (SEG_IDIOM.COD_ISO_IDIO = #codigoISO#)    
        		AND (BEL_ALMAC.OID_ALMA = GEN_I18N_SICC_PAIS.VAL_OID) 
		   		AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_PAIS.IDIO_OID_IDIO)
				AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				AND (SEG_PAIS.OID_PAIS = BEL_ALMAC.PAIS_OID_PAIS)
        	 ) 
		ORDER BY 2  
    </select>

    
    <!-- OBTIENE LA RELACION DE ALMACENES POR CODIGO ISO Y PAIS -->
    <select id="getAlmacenesById" parameterClass="java.util.Map" resultClass="baseGenerico">
		SELECT DISTINCT BEL_ALMAC.COD_ALMA AS CODIGO,      
	           GEN_I18N_SICC_PAIS.VAL_I18N AS DESCRIPCION  
		FROM BEL_ALMAC, 
          	 GEN_I18N_SICC_PAIS, 
		  	 SEG_IDIOM,
		  	 SEG_PAIS  
		WHERE (     (BEL_ALMAC.OID_ALMA = GEN_I18N_SICC_PAIS.VAL_OID) 
		   		AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_PAIS.IDIO_OID_IDIO)
				AND (SEG_PAIS.OID_PAIS = BEL_ALMAC.PAIS_OID_PAIS)
				AND (BEL_ALMAC.COD_ALMA = #codigoAlmacen#)
				AND (SEG_PAIS.COD_PAIS = #codigoPais#)       
    		    AND (SEG_IDIOM.COD_ISO_IDIO = #codigoISO#)    
        		AND (GEN_I18N_SICC_PAIS.ATTR_ENTI = 'BEL_ALMAC')
        	 )  
    </select>

  
 	<!-- OBTIENE LA RELACION DE ESTADO DE MERCADERIAS POR CODIGO ISO -->
    <select id="getEstadosMercaderiaByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT  DISTINCT BEL_ESTAD_MERCA.COD_ESTA AS CODIGO, 
	   			GEN_I18N_SICC_PAIS.VAL_I18N AS DESCRIPCION 
		FROM    GEN_I18N_SICC_PAIS,
                SEG_IDIOM,
                BEL_ESTAD_MERCA
		WHERE (     (GEN_I18N_SICC_PAIS.ATTR_ENTI = 'BEL_ESTAD_MERCA')
        		AND (SEG_IDIOM.COD_ISO_IDIO = #value#)
        		AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_PAIS.IDIO_OID_IDIO)
        		AND (BEL_ESTAD_MERCA.OID_ESTA_MERC = GEN_I18N_SICC_PAIS.VAL_OID)
       		  ) 
        ORDER BY 2
    </select>


	<!-- OBTIENE LA RELACION DE REGIONES POR PAIS MARCA Y CANAL -->
    <select id="getRegionesByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoMarca">
          	  		(SEG_MARCA.COD_MARC = #codigoMarca#)
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoCanal">
          	  		(SEG_CANAL.COD_CANA = #codigoCanal#)
    	  		</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        )
	    ORDER BY 2 ASC
    </select>
    
	<!-- OBTIENE LA RELACION DE REGIONES POR PAIS MARCA CANAL Y PERIODO -->
    <select id="getRegionesByPaisMarcaCanalPeriodo" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoMarca">
          	  		(SEG_MARCA.COD_MARC = #codigoMarca#)
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoCanal">
          	  		(SEG_CANAL.COD_CANA = #codigoCanal#)
    	  		</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (ZON_REGIO.OID_REGI NOT IN(
				 SELECT A.ZORG_OID_REGI
				 FROM FAC_CONTR_CIERR A
				 WHERE A.ZORG_OID_REGI IS NOT NULL
		  		<isNotEmpty prepend="AND" property="periodo">
          	  		(GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(A.PERD_OID_PERI) = #periodo#)
    	  		</isNotEmpty>
					)
				)
			)
	    ORDER BY 2 ASC
    </select>
    
	 <!-- OBTIENE LA RELACION DE SUB GERENCIAS POR PAIS MARCA Y CANAL -->
    <select id="getSubGerenciaByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_SUB_GEREN_VENTA.COD_SUBG_VENT AS CODIGO, 
		   	   UPPER(NVL(ZON_SUB_GEREN_VENTA.DES_SUBG_VENT, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_SUB_GEREN_VENTA
	 	WHERE (	(ZON_SUB_GEREN_VENTA.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoMarca">
          	  		(SEG_MARCA.COD_MARC = #codigoMarca#)
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoCanal">
          	  		(SEG_CANAL.COD_CANA = #codigoCanal#)
    	  		</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_SUB_GEREN_VENTA.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_SUB_GEREN_VENTA.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_SUB_GEREN_VENTA.CANA_OID_CANA)
	        )
	    ORDER BY 2 ASC
    </select>
    

   <select id="getRegionesByPaisActivasNoActivas" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	  		<isNotEmpty prepend="AND" property="codigoPais">
         	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
   	  		</isNotEmpty>
	        )
	    ORDER BY 2 ASC
    </select>

	
	<!-- OBTIENE LA RELACION DE REGIONES POR PERIODO BAS_CTRL_FACT -->
    <select id="getRegionesByPeriodoBasCtrlFact" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO,
				BAS_CTRL_FACT
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
			AND (BAS_CTRL_FACT.COD_PAIS=SEG_PAIS.COD_PAIS)
			AND (BAS_CTRL_FACT.COD_MARC=SEG_MARCA.COD_MARC)
			AND (BAS_CTRL_FACT.COD_CANA=SEG_CANAL.COD_CANA)
			AND (BAS_CTRL_FACT.COD_PERI = #codigoPeriodo#)
	        )
	    ORDER BY 2 ASC
    </select>

	<!-- OBTIENE LA RELACION DE REGIONES POR PERIODO INT_EVI_PERIO_REGIO -->
    <select id="getRegionesByPeriodoIntEviPerioRegio" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 	DISTINCT       
       			A.COD_REGI AS CODIGO, 
				UPPER(NVL(A.DES_REGI, ' ')) AS DESCRIPCION       
		FROM   	INT_EVI_PERIO_REGIO A
		WHERE (A.COD_PERI = #codigoPeriodo#)
				
	    ORDER BY 2 ASC
    </select>
	<!-- OBTIENE LA RELACION DE REGIONES POR PAIS  -->
    <select id="getRegionesByPais" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="indicadorTipoRegion">
          	  		(ZON_REGIO.TIP_REGI = '1') 
    	  		</isNotEmpty>

	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        )
	    ORDER BY 2 ASC
    </select>
<!-- OBTIENE LA RELACION DE REGIONES POR PAIS  -->
    <select id="getRegionesOIDByPais" parameterClass="java.util.Map" resultMap="baseResultOID">
		SELECT DISTINCT
			   ZON_REGIO.OID_REGI AS OID, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        )
	    ORDER BY 2 ASC
    </select>
  
	<!-- OBTIENE LA RELACION DE REGIONES POR PAIS Y CANAL -->
    <select id="getRegionesByPaisCanal" parameterClass="java.util.Map" resultMap="baseResult">
  		SELECT  DISTINCT ZON_REGIO.COD_REGI AS CODIGO, 
  	       		UPPER(NVL(ZON_REGIO.DES_REGI,' ')) AS DESCRIPCION,
		   		UPPER(NVL(ZON_REGIO.DES_REGI,'ZZ'))
	  	FROM 	SEG_PAIS,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE ( (ZON_REGIO.IND_ACTI = 1)
		  	    <isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoCanal">
          	  		(SEG_CANAL.COD_CANA = #codigoCanal#)
    	  		</isNotEmpty>
	        	AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        	AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	       	 )
		ORDER BY 3 ASC
    </select>
    
    
	<!-- OBTIENE LA RELACION DE REGIONES POR PAIS Y CANAL -->
    <select id="getRegionById" parameterClass="java.util.Map" resultClass="baseGenerico">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoMarca">
          	  		(SEG_MARCA.COD_MARC = #codigoMarca#)
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoCanal">
          	  		(SEG_CANAL.COD_CANA = #codigoCanal#)
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoRegion">
          	  		(ZON_REGIO.COD_REGI = #codigoRegion#)
    	  		</isNotEmpty>    	  		
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        )
	    ORDER BY 2 ASC
    </select>    

  
    <!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION -->
    <!-- modi efernandez -->
    <select id="getZonasByPaisCanalRegion" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.COD_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       ZON_REGIO
	 WHERE (  ( (ZON_ZONA.IND_ACTI = 1) OR (ZON_ZONA.IND_ACTI = 0 AND ZON_ZONA.IND_BORR = 0) )
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoRegion">
				(ZON_REGIO.COD_REGI = #codigoRegion#)
			</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>

     
    
   <select id="getZonasByPaisActivasNoActivas" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.COD_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       ZON_REGIO
	 WHERE (  (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoRegion">
				(ZON_REGIO.COD_REGI = #codigoRegion#)
			</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>

	<!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION -->
    <select id="getZonasByPeriodoBasCtrlFact" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.COD_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  	ZON_ZONA,
	       	SEG_PAIS,
	       	SEG_CANAL,
	       	ZON_REGIO,
			BAS_CTRL_FACT
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)			
			<isNotEmpty prepend="AND" property="codigoRegion">
				(ZON_REGIO.COD_REGI = #codigoRegion#)
			</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
			AND (BAS_CTRL_FACT.COD_PAIS=SEG_PAIS.COD_PAIS)
			AND (BAS_CTRL_FACT.COD_CANA=SEG_CANAL.COD_CANA)
			AND (BAS_CTRL_FACT.COD_PERI = #codigoPeriodo#)
	       )
	       ORDER BY 3
    </select>
	
	<!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION MULTIPLE -->
    <select id="getZonasByMultiplePeriodoBasCtrlFact" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  	ZON_ZONA,
	       	SEG_PAIS,
	       	SEG_CANAL,
	       	ZON_REGIO,
			BAS_CTRL_FACT
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)			
			<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
				(ZON_REGIO.COD_REGI = #codigoRegion[]#)      	 		
            </iterate>	
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
			AND (BAS_CTRL_FACT.COD_PAIS=SEG_PAIS.COD_PAIS)
			AND (BAS_CTRL_FACT.COD_CANA=SEG_CANAL.COD_CANA)
			AND (BAS_CTRL_FACT.COD_PERI = #codigoPeriodo#)
	       )
	       ORDER BY 3
    </select>

	<!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION  INT_EVI_PERIO_REGIO_ZONA-->
    <select id="getZonasByPeriodoIntEviPerioRegioZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 	DISTINCT       
       			A.COD_ZONA AS CODIGO, 
 	     		UPPER(NVL(A.DES_ZONA, ' ')) AS DESCRIPCION       
		FROM   	INT_EVI_PERIO_REGIO_ZONA A
		WHERE
			(A.COD_PERI = #codigoPeriodo#) 		
			<isNotEmpty prepend="AND" property="codigoRegion">
				(A.COD_REGI = #codigoRegion#)
			</isNotEmpty>	        			
        ORDER BY 2
    </select>
<!-- OBTIENE LA RELACION DE TERRITORIOS DEL PED_PERIO_ZONA_TERRI -->
    <select id="getTerritoriosByPeriodoRegioZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 	DISTINCT       
       			A.COD_TERR AS CODIGO, 
 	     		UPPER(NVL(A.DES_TERR, ' ')) AS DESCRIPCION       
		FROM   	PED_PERIO_ZONA_TERRI A
		WHERE
			(A.COD_PERI = #codigoPeriodo#) 		
			<isNotEmpty prepend="AND" property="codigoRegion">
				(A.COD_REGI = #codigoRegion#)
			</isNotEmpty>	        			
			<isNotEmpty prepend="AND" property="codigoZona">
				(A.COD_ZONA = #codigoZona#)
			</isNotEmpty>	        			

        ORDER BY 2
    </select>
    
<!-- OBTIENE LA RELACION DE ZONAS POR PAIS PERIODO Y REGION  INT_EVI_PERIO_REGIO_ZONA-->
    <select id="getZonasMultipleByPeriodoIntEviPerioRegioZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 	DISTINCT       
       			A.COD_ZONA AS CODIGO, 
 	     		UPPER(NVL(A.DES_ZONA, ' ')) AS DESCRIPCION       
		FROM   	INT_EVI_PERIO_REGIO_ZONA A
		WHERE
			(A.COD_PERI = #codigoPeriodo#) 		
			<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 		A.COD_REGI = #codigoRegion[]#
            </iterate>			      			
        ORDER BY 2
    </select>
	<!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION -->
    <select id="getZonasByPaisMarcaCanalRegion" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.COD_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_REGIO
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoRegion">
				(ZON_REGIO.COD_REGI = #codigoRegion#)
			</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>

    <!-- OBTIENE LA RELACION DE REGION POR PAIS CANAL Y SUB GERENCIA -->
    <!-- modi efernandez -->
    <select id="getRegionByPaisCanalSubGerencia" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_REGIO.COD_REGI, ' ') AS CODIGO, 	   
		    UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION,
		    NVL(ZON_REGIO.COD_REGI, 'ZZ') 
	 FROM  ZON_REGIO,
	       SEG_PAIS,
	       SEG_CANAL,
	       ZON_SUB_GEREN_VENTA
	 WHERE (  ( (ZON_REGIO.IND_ACTI = 1) OR (ZON_REGIO.IND_ACTI = 0 AND ZON_REGIO.IND_BORR = 0) )
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoSubGerencia">
				(ZON_SUB_GEREN_VENTA.COD_SUBG_VENT = #codigoSubGerencia#)
			</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_SUB_GEREN_VENTA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_SUB_GEREN_VENTA.PAIS_OID_PAIS)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (ZON_SUB_GEREN_VENTA.OID_SUBG_VENT = ZON_REGIO.ZSGV_OID_SUBG_VENT)
	       )
	       ORDER BY 3
    </select>
    
    
    <!-- OBTIENE LA RELACION DE REGIONES POR PAIS CANAL Y SUB GERENCIAS -->
    <select id="getRegionByPaisMarcaCanalSubGerencia" parameterClass="java.util.Map" resultMap="baseResult">
      SELECT NVL(ZON_REGIO.COD_REGI, ' ') AS CODIGO, 	   
		    NVL(ZON_REGIO.DES_REGI, ' ') AS DESCRIPCION,
		    NVL(ZON_REGIO.COD_REGI, 'ZZ') 
	 FROM  ZON_REGIO,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_SUB_GEREN_VENTA
	 WHERE (  (ZON_SUB_GEREN_VENTA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoSubGerencia">
				(ZON_SUB_GEREN_VENTA.COD_SUBG_VENT = #codigoSubGerencia#)
			</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_SUB_GEREN_VENTA.CANA_OID_CANA)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_SUB_GEREN_VENTA.PAIS_OID_PAIS)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_SUB_GEREN_VENTA.MARC_OID_MARC)	
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)           
	        AND (ZON_SUB_GEREN_VENTA.OID_SUBG_VENT = ZON_REGIO.ZSGV_OID_SUBG_VENT)
	       )
	       ORDER BY 2
    </select>
    
    
	
	<select id="getZonaByPaisZona" parameterClass="java.util.Map" resultMap="baseResultOID">
		SELECT ZON_ZONA.OID_ZONA AS OID, 	   
			   NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS
		 WHERE ZON_ZONA.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoZona">
					(ZON_ZONA.COD_ZONA = #codigoZona#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="descripcionZona">
					(ZON_ZONA.DES_ZONA LIKE #descripcionZona#)
				</isNotEmpty>
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	</select>

	<select id="getSeccionesByPaisMarcaCanalRegionZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT NVL(ZON_SECCI.COD_SECC, ' ') AS CODIGO, 	   
			   NVL(ZON_SECCI.DES_SECCI, ' ') AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoRegion">
					(ZON_REGIO.COD_REGI = #codigoRegion#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoZona">
					(ZON_ZONA.COD_ZONA = #codigoZona#)
				</isNotEmpty>
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)			
		       ORDER BY 2
	</select>
	
	
	<select id="getSeccionMultipleByPaisMarcaCanalRegionZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT NVL(ZON_SECCI.COD_SECC, ' ') AS CODIGO, 	   
			   NVL(ZON_SECCI.DES_SECCI, ' ') AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			ZON_REGIO.COD_REGI = #codigoRegion[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA = #codigoZona[]#
            	</iterate> 				
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)			
		       ORDER BY 1
	</select>
	
	<select id="getCompuestoSeccionMultipleByPaisMarcaCanalRegionZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 
			  (ZON_REGIO.OID_REGI || '-' ||ZON_ZONA.OID_ZONA|| '-' || ZON_SECCI.OID_SECC) AS CODIGO,
			   NVL(ZON_SECCI.DES_SECCI, ' ') AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			ZON_REGIO.COD_REGI = #codigoRegion[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA = #codigoZona[]#
            	</iterate> 				
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)			
		       ORDER BY 1
	</select>

	<select id="getCompuestoSeccionMultipleByPaisMarcaCanalRegionZona1" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 
			  (ZON_REGIO.OID_REGI || '-' ||ZON_ZONA.OID_ZONA|| '-' || ZON_SECCI.OID_SECC) AS CODIGO,
			   NVL(ZON_ZONA.COD_ZONA || ' ' ||ZON_SECCI.DES_SECCI, ' ') AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			ZON_REGIO.COD_REGI = #codigoRegion[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA = #codigoZona[]#
            	</iterate> 				
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)			
		       ORDER BY 1
	</select>
	
	<select id="getTerritoriosByPaisMarcaCanalRegionZonaSeccion" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT ZON_TERRI.COD_TERR AS CODIGO, 	   
			   ZON_TERRI.COD_TERR AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI,
			   ZON_TERRI,
			   ZON_TERRI_ADMIN
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoRegion">
					(ZON_REGIO.COD_REGI = #codigoRegion#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoZona">
					(ZON_ZONA.COD_ZONA = #codigoZona#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoSeccion">
					(ZON_SECCI.COD_SECC = #codigoSeccion#)
				</isNotEmpty>
				AND (SEG_PAIS.OID_PAIS = ZON_TERRI_ADMIN.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_TERRI_ADMIN.MARC_OID_MARC)
		        AND (SEG_CANAL.OID_CANA = ZON_TERRI_ADMIN.CANA_OID_CANA)
		        AND (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC)
		        AND (ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR)
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)		
		       ORDER BY 2
	</select>

    <!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION -->
    <select id="getZonaById" parameterClass="java.util.Map" resultClass="baseGenerico">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.COD_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       ZON_REGIO
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoRegion">
				(ZON_REGIO.COD_REGI = #codigoRegion#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoRegion">
				(ZON_ZONA.COD_ZONA = #codigoZona#)
			</isNotEmpty>			
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>



    <!-- token -->
 
    <!-- OBTIENE EL SALDO DE LA CUENTA DEL CLIENTE -->
    <select id="getSaldoCtaCteCliente" parameterClass="java.util.Map" resultClass="java.lang.Double">
		SELECT 	NVL(SUM(MCC.IMP_PEND), 0)
  	    FROM
			SEG_PAIS PAI,
    		CCC_PROCE PRO,
       		CCC_SUBPR SUB,
       		CCC_TIPO_ABONO_SUBPR TAS,
       		CCC_MARCA_TIPO_ABONO MTA,
       		CCC_MARCA_SITUA MSI,
       		CCC_MOVIM_CUENT_CORRI MCC,
       		MAE_CLIEN MCL
		WHERE   PAI.OID_PAIS = PRO.PAIS_OID_PAIS
        	AND PRO.OID_PROC = SUB.CCPR_OID_PROC
        	AND SUB.OID_SUBP = TAS.SUBP_OID_SUBP
       	    AND TAS.OID_TIPO_ABON_SUBP = MTA.TASP_OID_TIPO_ABON_SUBP
        	AND PAI.OID_PAIS = MSI.PAIS_OID_PAIS
        	AND MTA.MASI_OID_MARC_SALI = MSI.OID_MARC_SITU
        	AND MSI.OID_MARC_SITU = MCC.MASI_OID_MARC_SITU
        	AND PAI.OID_PAIS = MCL.PAIS_OID_PAIS
        	AND MCL.OID_CLIE = MCC.CLIE_OID_CLIE		
			AND PAI.COD_PAIS = #codigoPaisSiCC# 
			AND	PRO.COD_PROC = 'CON001'
			AND SUB.COD_SUBP= '1'
			AND MTA.IND_ENTR_SALI = 'S' 
			AND MCL.COD_CLIE = #codigoCliente# 
			<isNotEmpty prepend="AND" property="fechaDocumentoDesde">
				<![CDATA[    
					MCC.FEC_DOCU > TO_DATE(#fechaDocumentoDesde#, 'DD/MM/YYYY')
				]]>	
    		</isNotEmpty>
			<isNotEmpty prepend="AND" property="fechaDocumentoHasta">
				<![CDATA[    
					MCC.FEC_DOCU < TO_DATE(#fechaDocumentoHasta#, 'DD/MM/YYYY')
				]]>	
	    	</isNotEmpty>
			<isNotEmpty prepend="AND" property="fechaVencimientoDesde">
				<![CDATA[    
					MCC.FEC_VENC > TO_DATE(#fechaVencimientoDesde#, 'DD/MM/YYYY')
				]]>	
	    	</isNotEmpty>
			<isNotEmpty prepend="AND" property="fechaVencimientoHasta">
				<![CDATA[    
					MCC.FEC_VENC < TO_DATE(#fechaVencimientoHasta#, 'DD/MM/YYYY')
				]]>	
	    	</isNotEmpty>
			<![CDATA[    
				AND MCC.IMP_MOVI <> MCC.IMP_PAGA
			]]>	
    </select>

  
    <!-- OBTIENE EL DESCUENTO VARIOS-->
    <select id="getDescuentoVarios" parameterClass="java.util.Map" resultClass="java.lang.String">
     	<![CDATA[
     	SELECT BLOQUE1.OID 
     	  FROM
     	    (SELECT DTO_BASE_APLIC_CABEC.OID_CABE AS OID, 
     			    DTO_BASE_APLIC_CABEC.DCTO_OID_DESC AS ID
     	 	   FROM DTO_BASE_APLIC_DETAL,
     	      	    DTO_BASE_APLIC_CABEC,
					PRE_TIPO_OFERT,
     	       	    MAE_NEGOC,
     	       	    MAE_UNIDA_NEGOC,
     	       	    SEG_MARCA_PRODU
     	  	   WHERE ((PRE_TIPO_OFERT.COD_TIPO_OFER = #codigoTipoOferta#)
        	   AND	 (SEG_MARCA_PRODU.COD_MARC_PROD = #codigoMarcaProducto#)
        	   AND	 (MAE_NEGOC.COD_NEGO = #codigoNegocio#)
        	   AND	 (MAE_UNIDA_NEGOC.COD_UNID_NEGO = #codigoUnidadNegocio#)
        	   AND	 (DTO_BASE_APLIC_DETAL.IND_EXCL_TIPO_OFER = #exclusionTipoOferta#)
        	   AND	 (DTO_BASE_APLIC_DETAL.BACA_OID_CABE = DTO_BASE_APLIC_CABEC.OID_CABE)
			   AND	 (DTO_BASE_APLIC_DETAL.TOFE_OID_TIPO_OFER = PRE_TIPO_OFERT.OID_TIPO_OFER (+))
        	   AND	 (DTO_BASE_APLIC_DETAL.NEGO_OID_NEGO = MAE_NEGOC.OID_NEGO (+))
        	   AND	 (DTO_BASE_APLIC_DETAL.UNEG_OID_UNID_NEGO = MAE_UNIDA_NEGOC.OID_UNID_NEGO (+))
        	   AND	 (DTO_BASE_APLIC_DETAL.MAPR_OID_MARC_PROD = SEG_MARCA_PRODU.OID_MARC_PROD (+))
       		         )
     	    ) BLOQUE1,
     	   	
			(SELECT * 
     		   FROM
     		     (SELECT DTO_DESCU.OID_DESC AS ID,
        	 		     (SELECT SEG_PERIO_CORPO.COD_PERI
        			        FROM CRA_PERIO, 
						     	 SEG_PERIO_CORPO 
                        	WHERE DTO_DESCU.PERD_OID_PERI = CRA_PERIO.OID_PERI
							AND	  CRA_PERIO.PERI_OID_PERI = SEG_PERIO_CORPO.OID_PERI) AS INI,
        	 		     (SELECT SEG_PERIO_CORPO.COD_PERI
        			        FROM CRA_PERIO, 
						     	 SEG_PERIO_CORPO 
                            WHERE DTO_DESCU.PERD_OID_PERI_LIMI_FIN = CRA_PERIO.OID_PERI
							AND	  CRA_PERIO.PERI_OID_PERI = SEG_PERIO_CORPO.OID_PERI) AS FIN
     	 		    FROM DTO_DESCU
     	  		 ) DATA
     	    ) BLOQUE2,
     	    
			(SELECT DTO_DESCU_SUBTI_CLIEN.DCTO_OID_DESC AS ID
     	 	   FROM DTO_DESCU_SUBTI_CLIEN,
     	 		    MAE_SUBTI_CLIEN,
     			    MAE_TIPO_CLIEN
     		   WHERE ((MAE_SUBTI_CLIEN.COD_SUBT_CLIE = #codigoSubtipoCliente#)
     	       AND	 (MAE_TIPO_CLIEN.COD_TIPO_CLIE = #codigoTipoCliente#)
     	       AND	 (DTO_DESCU_SUBTI_CLIEN.SBTI_OID_SUBT_CLIE = MAE_SUBTI_CLIEN.OID_SUBT_CLIE)
     	       AND	 (MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE = MAE_TIPO_CLIEN.OID_TIPO_CLIE)
     	       		 )
     	    ) BLOQUE3
     	   
     	  WHERE BLOQUE1.ID = BLOQUE2.ID
     	  AND 	BLOQUE2.ID = BLOQUE3.ID
     	  AND 	BLOQUE2.INI < #codigoPeriodo#
     	  AND 	BLOQUE2.FIN > #codigoPeriodo# OR BLOQUE2.FIN IS NULL
     	  AND 	ROWNUM = 1  
	 	]]>	
    </select>


    <!-- OBTIENE EL DESCUENTO ESPECIFICO -->
    <select id="getDescuentoEspecifico" parameterClass="java.lang.Integer" resultClass="java.lang.String">
	   SELECT (CASE TABLA.NUMREG 
		         WHEN 1 THEN LPAD(TO_CHAR(TABLA.PORC), 2, ' ') 
				 ELSE 'C ' 
			   END) AS VAL 
		  FROM
		    (SELECT DTO_ESCLN.VAL_PORC_DESC AS PORC,
  	  		        (SELECT COUNT(*) 
			           FROM DTO_ESCLN
				       WHERE DTO_ESCLN.BACA_OID_CABE = #value#) AS NUMREG
	  		   FROM DTO_ESCLN
	  		   WHERE DTO_ESCLN.BACA_OID_CABE = #value#) TABLA
		  WHERE ROWNUM = 1
    </select>

	<!-- DETERMINAR SI UN CLIENTE PERTENECE A UNA MARCA DETERMINADA  -->
	<select id="getDeterminaClienteMarca" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT (CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END)
		    FROM MAE_CLIEN,
				 SEG_PAIS,
				 MAE_CLIEN_MARCA,
				 SEG_MARCA
			WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
			AND   (MAE_CLIEN.COD_CLIE = #codigoCliente#)
			AND   (SEG_PAIS.OID_PAIS = MAE_CLIEN.PAIS_OID_PAIS)
			AND   (MAE_CLIEN.OID_CLIE = MAE_CLIEN_MARCA.CLIE_OID_CLIE)
			AND   (SEG_MARCA.OID_MARC = MAE_CLIEN_MARCA.MARC_OID_MARC)
				  )
		]]>
	</select>
		

    <!-- OBTIENE UN VALOR NUMERICO MAYOR A 1 SI EXISTE LA ZONA INGRESADA PARA UN CLIENTE ESPECIFICO -->	
    <select id="getCountZonasByCriteria" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	 	<![CDATA[
		WITH TEMPORAL AS
		  (SELECT SEG_PAIS.OID_PAIS, SEG_MARCA.OID_MARC
		     FROM MAE_CLIEN,
			 	  SEG_PAIS,
				  MAE_CLIEN_MARCA,
				  SEG_MARCA
			 WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
			 AND   (MAE_CLIEN.COD_CLIE = #codigoCliente#)
			 AND   (SEG_PAIS.OID_PAIS = MAE_CLIEN.PAIS_OID_PAIS)
			 AND   (MAE_CLIEN.OID_CLIE = MAE_CLIEN_MARCA.CLIE_OID_CLIE)
			 AND   (SEG_MARCA.OID_MARC = MAE_CLIEN_MARCA.MARC_OID_MARC)
			 	   )
		  ) 	  
		
		SELECT (CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END)
		  FROM ZON_ZONA,
	       	   SEG_CANAL,
			   TEMPORAL
	 	  WHERE ((SEG_CANAL.COD_CANA = 'VD')
		  AND 	(ZON_ZONA.COD_ZONA = #codigoZona#)
		  AND	(ZON_ZONA.IND_ACTI = 1)
	      AND	(TEMPORAL.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		  AND	(TEMPORAL.OID_MARC = ZON_ZONA.MARC_OID_MARC)
		  AND	(SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        	)
		]]>
    </select>


    <!-- OBTIENE UN VALOR NUMERICO MAYOR A 1 SI  EL TERRITORIO INGRESADO PARA UN CLIENTE ESPECIFICO -->	
    <select id="getCountTerritoriosByCriteria" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	  <![CDATA[
	    WITH TEMPORAL AS
		  (SELECT SEG_PAIS.OID_PAIS, SEG_MARCA.OID_MARC, MAE_CLIEN.COD_CLIE
		     FROM MAE_CLIEN,
			 	  SEG_PAIS,
				  MAE_CLIEN_MARCA,
				  SEG_MARCA
			 WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
			 AND   (MAE_CLIEN.COD_CLIE = #codigoCliente#)
			 AND   (SEG_PAIS.OID_PAIS = MAE_CLIEN.PAIS_OID_PAIS)
			 AND   (MAE_CLIEN.OID_CLIE = MAE_CLIEN_MARCA.CLIE_OID_CLIE)
			 AND   (SEG_MARCA.OID_MARC = MAE_CLIEN_MARCA.MARC_OID_MARC)
			 	   )
		  ) 	  
		
		SELECT (CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END)
		  FROM ZON_TERRI_ADMIN,
	       	   SEG_CANAL,
			   TEMPORAL,
			   ZON_TERRI
	 	  WHERE ((SEG_CANAL.COD_CANA = 'VD')
		  AND 	(ZON_TERRI.COD_TERR = #codigoTerritorio#)
		  AND	(ZON_TERRI_ADMIN.IND_BORR = 0)
	      AND	(TEMPORAL.OID_PAIS = ZON_TERRI_ADMIN.PAIS_OID_PAIS)
		  AND	(TEMPORAL.OID_MARC = ZON_TERRI_ADMIN.MARC_OID_MARC)
		  AND	(SEG_CANAL.OID_CANA = ZON_TERRI_ADMIN.CANA_OID_CANA)
		  AND	(ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR)
	        	)
	  ]]>
    </select>


    <!-- OBTIENE UN VALOR NUMERICO MAYOR A 1 SI EL TERRITORIO INGRESADO CORRESPONDE CON LA ZONA -->	
    <select id="getCountTerritorioByZona" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	  <![CDATA[
	  SELECT (CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END)
	  	FROM ZON_TERRI_ADMIN,
	       	 ZON_TERRI,
	         ZON_SECCI,
	         ZON_ZONA
	 	WHERE ((ZON_TERRI.COD_TERR = #codigoTerritorio#)
	    AND   (ZON_ZONA.COD_ZONA = #codigoZona#)
	    AND   (ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR)
	    AND   (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC)
	    AND   (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)
	          )
	  ]]>
    </select>


    <!-- OBTIENE UN VALOR NUMERICO NUMERICO > 1 SI EL TERRITORIO INGRESADO ESTA EN EL DISTRITO DEL UBIGEO -->	
    <select id="getCountUbigeoByTerritorio" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	  <![CDATA[
	  SELECT (CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END)
	  	FROM ZON_TERRI, ZON_VALOR_ESTRU_GEOPO
	 	WHERE ((ZON_TERRI.COD_TERR = #codigoTerritorio#)
	    AND   (ZON_VALOR_ESTRU_GEOPO.ORDE_1 = #orden1#)
	    AND   (ZON_VALOR_ESTRU_GEOPO.ORDE_2 = #orden2#)
	    AND   (ZON_VALOR_ESTRU_GEOPO.ORDE_3 = #orden3#)
	    AND   (ZON_VALOR_ESTRU_GEOPO.OID_VALO_ESTR_GEOP = ZON_TERRI.VEPO_OID_VALO_ESTR_GEOP)
	    	  )
	  ]]>
    </select>


    <!-- OBTIENE EL INTERVALO DE FECHAS DE INICIO Y FIN DE UN PERIODO POR PAIS, MARCA Y CANAL -->	
	<select id="getIntervalosFechasPeriodoByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
	  SELECT DISTINCT
		     TO_CHAR(CRA_PERIO.FEC_INIC, 'DD/MM/YYYY') AS CODIGO,
		     TO_CHAR(CRA_PERIO.FEC_FINA, 'DD/MM/YYYY') AS DESCRIPCION
	  	FROM CRA_PERIO,
			 SEG_PAIS,
	       	 SEG_MARCA,
	         SEG_CANAL,
	       	 SEG_PERIO_CORPO
	 	WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  	  <isNotEmpty prepend="AND" property="codigoMarca">
          	     (SEG_MARCA.COD_MARC = #codigoMarca#)
    	  	  </isNotEmpty>
		  	  <isNotEmpty prepend="AND" property="codigoCanal">
          	     (SEG_CANAL.COD_CANA = #codigoCanal#)
    	  	  </isNotEmpty>
		  	  <isNotEmpty prepend="AND" property="codigoPeriodo">
          	     (SEG_PERIO_CORPO.COD_PERI = #codigoPeriodo#)
    	  	  </isNotEmpty>
        AND	  (SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS)
        AND	  (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
        AND	  (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
        AND	  (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
        AND	  (SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
              )
    </select>  


    <!-- OBTIENE LOS PERIODOS DE UN TIPO -->		
    <select id="getPeriodosByTipo" parameterClass="string" resultMap="baseResult">
    	<![CDATA[  
		SELECT OID_PERI AS CODIGO, COD_PERI AS DESCRIPCION
		  FROM   SEG_PERIO_CORPO 
		  WHERE TIPE_OID_TIPO_PERI = #value#
		  ORDER BY COD_PERI DESC
    	]]>	
    </select>

	
    <!-- OBTIENE LOS PERIODOS POR TIPO, PERIODO, MARCA Y CANAL -->		
    <select id="getPeriodosByTipoPMC" parameterClass="java.lang.String" resultMap="periodoResult">
    	<![CDATA[  
		SELECT 
		 	SEG_PAIS.COD_PAIS AS CODPAI,
		 	SEG_MARCA.COD_MARC AS CODMAR,
		 	SEG_CANAL.COD_CANA AS CODCAN,
		 	' ' AS CODACC,
		 	SEG_PERIO_CORPO.COD_PERI AS CODPER,	   	   	   
		 	' ' AS FECINI,
		 	' ' AS FECFIN
	  	FROM SEG_MARCA,
	         SEG_CANAL,
	         SEG_PAIS,
	         SEG_PERIO_CORPO,
	         CRA_PERIO
	 	WHERE (		(SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI = #value#)
	        	AND (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
	            AND (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
	            AND (SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS)
	        	AND (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
	          )
		 ORDER BY 1,2,3,4 DESC 
    	]]>	
    </select>

	  
    <!-- OBTIENE EL PERIODO INICIO DE UN RANGO -->
    <select id="getPeriodoInicio" parameterClass="string" resultClass="string">
      	SELECT PER_INIC FROM CRA_RANGO_PERIO WHERE COD_RAPE=#value#
    </select>


    <!-- OBTIENE EL PERIODO FIN DE UN RANGO -->
    <select id="getPeriodoFin"  parameterClass="string" resultClass="string">
      	SELECT PER_FINA FROM CRA_RANGO_PERIO WHERE COD_RAPE=#value#
    </select>

   
    <!-- OBTIENE LOS RANGOS DE PERIODOS -->
    <select id="getRangosPeriodo" resultMap="baseResult">
  	  SELECT COD_RAPE AS CODIGO, DES_RAPE AS DESCRIPCION
      FROM CRA_RANGO_PERIO ORDER BY 2
    </select> 

    <!-- OBTIENE LOS RANGOS DE PERIODOS -->
    <select id="getRangoPeriodoById" parameterClass="string" resultClass="baseGenerico">
		SELECT COD_RAPE AS CODIGO, DES_RAPE AS DESCRIPCION
		FROM CRA_RANGO_PERIO
		WHERE COD_RAPE = #value#
    </select> 
    

    <!-- OBTIENE UNA LISTA DE PERIODOS POR PAIS, CANAL Y COMPRENDIDOD ENTRE UN PERIODO MENOR Y UNO MAYOR -->
    <select id="getListaPeriodosInicial" parameterClass="java.util.Map"  resultMap="baseResult">
		<![CDATA[ 
    	SELECT  DISTINCT SEG_PERIO_CORPO.COD_PERI AS CODIGO ,
           		SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION,
           		SEG_PERIO_CORPO.OID_PERI
    	FROM    SEG_PAIS,
           		SEG_CANAL,
           		CRA_PERIO,
           		SEG_PERIO_CORPO
    	WHERE (     (SEG_PAIS.OID_PAIS = CRA_PERIO.PAIS_OID_PAIS)
           		AND (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
           		AND (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
           		AND (SEG_PAIS.COD_PAIS  = #codigoPais#)
	       		AND (SEG_CANAL.COD_CANA = #codigoCanal#)
		   		AND (SEG_PERIO_CORPO.COD_PERI<= #periodoMayor#)
		   		AND (SEG_PERIO_CORPO.COD_PERI>= #periodoMenor#)
       			)
    	ORDER BY 3
	 	]]>	
    </select>


    <!-- OBTIENE LA LISTA DE COMISIONES POR PERIODO -->
    <select id="getListaComisionesByPeriodo" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT DISTINCT COM_COMIS.COD_COMI AS CODIGO,    COM_COMIS.VAL_CONC AS DESCRIPCION
    	FROM COM_COMIS, SEG_PERIO_CORPO
    	WHERE (       (SEG_PERIO_CORPO.OID_PERI = COM_COMIS.PERD_OID_PERI)
              	      <isNotEmpty prepend="AND" property="codigoPeriodo">
          	                   (SEG_PERIO_CORPO.COD_PERI = #codigoPeriodo#)
    	  	          </isNotEmpty>
              )
   		ORDER BY 2
    </select>

   <!-- OBTIENE LA RELACION DE SUB GERENCIAS POR PAIS MARCA Y CANAL -->
    <select id="getSubGerenciasByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResultOID">
		SELECT DISTINCT
		 ZON_SUB_GEREN_VENTA.OID_SUBG_VENT AS OID,
		 UPPER(NVL(ZON_SUB_GEREN_VENTA.DES_SUBG_VENT, ' ')) AS DESCRIPCION 
		FROM   ZON_SUB_GEREN_VENTA,
    	       SEG_PAIS,
               SEG_MARCA,
               SEG_CANAL
		WHERE 
       		(       (SEG_PAIS.OID_PAIS   = ZON_SUB_GEREN_VENTA.PAIS_OID_PAIS)
        		AND (SEG_MARCA.OID_MARC  = ZON_SUB_GEREN_VENTA.MARC_OID_MARC)
        		AND (SEG_CANAL.OID_CANA  = ZON_SUB_GEREN_VENTA.CANA_OID_CANA)
				AND (SEG_PAIS.COD_PAIS   = #codigoPais#)
        		AND (SEG_MARCA.COD_MARC  = #codigoMarca#)
        		AND (SEG_CANAL.COD_CANA  = #codigoCanal#)
				<isNotEmpty prepend="AND" property="indicadorActivo">
					(ZON_SUB_GEREN_VENTA.IND_ACTI  =  #indicadorActivo#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="indicadorBorrado">
					(ZON_SUB_GEREN_VENTA.IND_BORR =#indicadorBorrado#)
				</isNotEmpty>
           )
		ORDER BY 2
    </select>
    
    
    <!-- OBTIENE LA RELACION DE SUB GERENCIAS POR PAIS MARCA Y CANAL -->
    <select id="getSubGerenciaxPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
		 ZON_SUB_GEREN_VENTA.COD_SUBG_VENT AS CODIGO,
		 UPPER(NVL(ZON_SUB_GEREN_VENTA.DES_SUBG_VENT, ' ')) AS DESCRIPCION 
		FROM   ZON_SUB_GEREN_VENTA,
    	       SEG_PAIS,
               SEG_MARCA,
               SEG_CANAL
		WHERE 
       		(       (SEG_PAIS.OID_PAIS   = ZON_SUB_GEREN_VENTA.PAIS_OID_PAIS)
        		AND (SEG_MARCA.OID_MARC  = ZON_SUB_GEREN_VENTA.MARC_OID_MARC)
        		AND (SEG_CANAL.OID_CANA  = ZON_SUB_GEREN_VENTA.CANA_OID_CANA)
				AND (SEG_PAIS.COD_PAIS   = #codigoPais#)
        		AND (SEG_MARCA.COD_MARC  = #codigoMarca#)
        		AND (SEG_CANAL.COD_CANA  = #codigoCanal#)
				<isNotEmpty prepend="AND" property="indicadorActivo">
					(ZON_SUB_GEREN_VENTA.IND_ACTI  =  #indicadorActivo#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="indicadorBorrado">
					(ZON_SUB_GEREN_VENTA.IND_BORR =#indicadorBorrado#)
				</isNotEmpty>
           )
		ORDER BY 2
    </select>
    
    <select id="getConsultorasByCriteria" parameterClass="java.util.Map" resultMap="consultoraSiCCResult">
       SELECT  MAE_CLIEN.COD_CLIE,
			   TRIM(MAE_CLIEN.VAL_APE1) as VAL_APE1,
		       TRIM(MAE_CLIEN.VAL_APE2) as VAL_APE2,
			   TRIM(MAE_CLIEN.VAL_NOM1) as VAL_NOM1
		  FROM MAE_CLIEN,
		  	   SEG_PAIS
		 WHERE SEG_PAIS.COD_PAIS = #codigoPais#
			   <isNotEmpty prepend="AND" property="codigo">
			      MAE_CLIEN.COD_CLIE LIKE #codigo#
			   </isNotEmpty>
			   <isNotEmpty prepend="AND" property="apellidoPaterno">
			      UPPER(MAE_CLIEN.VAL_APE1) LIKE UPPER(#apellidoPaterno#)
			   </isNotEmpty>
			   <isNotEmpty prepend="AND" property="apellidoMaterno">
			      UPPER(MAE_CLIEN.VAL_APE2) LIKE UPPER(#apellidoMaterno#)
			   </isNotEmpty>
			   <isNotEmpty prepend="AND" property="nombre">
			      UPPER(MAE_CLIEN.VAL_NOM1) LIKE UPPER(#nombre#)
			   </isNotEmpty>
          AND   MAE_CLIEN.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		  ORDER BY MAE_CLIEN.COD_CLIE
	</select>


	<select id="getProductosByCriteria" parameterClass="java.util.Map" resultMap="productoSiCCResult2">
         SELECT PRODU.COD_SAP AS COD_SAP , 
			    gen_i18n_sicc_pais.val_i18n AS DES_CORT			 
		   FROM MAE_PRODU PRODU,
				SEG_PAIS PAIS,
				gen_i18n_sicc_pais
		  WHERE PAIS.OID_PAIS = PRODU.PAIS_OID_PAIS
				AND gen_i18n_sicc_pais.VAL_OID = PRODU.oid_prod
				AND Attr_enti = 'MAE_PRODU'
				AND PAIS.COD_PAIS = #codigoPais#
			   <isNotEmpty prepend="AND" property="codigoSap">
			      PRODU.COD_SAP like UPPER(#codigoSap#||'%')
			   </isNotEmpty>
			   <isNotEmpty prepend="AND" property="descripcionCorta">
			      UPPER(gen_i18n_sicc_pais.val_i18n) LIKE UPPER(#descripcionCorta#||'%')
			   </isNotEmpty>
	</select>

	
	<select id="getTipoDocumentosByCodigoISO" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT MAE_TIPO_DOCUM.COD_TIPO_DOCU AS CODIGO,      
           GEN_I18N_SICC_PAIS.VAL_I18N AS DESCRIPCION  
		FROM MAE_TIPO_DOCUM, 
	         	 GEN_I18N_SICC_PAIS, 
		  	 SEG_IDIOM,
		  	 SEG_PAIS  
		WHERE (     (GEN_I18N_SICC_PAIS.ATTR_ENTI = 'MAE_TIPO_DOCUM')         
	   		    AND (SEG_IDIOM.COD_ISO_IDIO = #codigoIdioma#)    
	       		AND (MAE_TIPO_DOCUM.OID_TIPO_DOCU = GEN_I18N_SICC_PAIS.VAL_OID) 
		   		AND (SEG_IDIOM.OID_IDIO = GEN_I18N_SICC_PAIS.IDIO_OID_IDIO)
				AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				AND (SEG_PAIS.OID_PAIS = MAE_TIPO_DOCUM.PAIS_OID_PAIS)
	       	 ) 
		ORDER BY 2
	</select>
	
	<select id="getTipoComprobantesPago" parameterClass="string" resultMap="baseResult">
		SELECT DISTINCT COD_TIPO_DOCU AS CODIGO,      
           DES_TIPO_DOCU AS DESCRIPCION  
		FROM FAC_TIPO_DOCUM 
		ORDER BY 2 
	</select>

	<select id="getBancosByPais" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT COD_BANC AS CODIGO,
						DES_BANC AS DESCRIPCION
		FROM CCC_BANCO B, SEG_PAIS P
		WHERE B.PAIS_OID_PAIS = P.OID_PAIS
		AND P.COD_PAIS = #codigoPais#
	</select>

	<!-- OBTIENE LA RELACION DE CUENTAS CORRIENTE POR PAIS, BANCO Y SOCIEDAD -->
    <select id="getCuentasCorrientesByPaisBancoSociedad" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 	COD_CC AS CODIGO,
				DES_CC AS DESCRIPCION 
		FROM CCC_CUENT_CORRI_BANCA, SEG_SOCIE, CCC_SUCUR, CCC_BANCO, SEG_PAIS    
		WHERE (SEG_SOCIE.OID_SOCI = CCC_CUENT_CORRI_BANCA.SOCI_OID_SOCI)
		AND   (SEG_PAIS.OID_PAIS = CCC_CUENT_CORRI_BANCA.PAIS_OID_PAIS)
		AND	  (CCC_SUCUR.OID_SUCU = CCC_CUENT_CORRI_BANCA.SUCU_OID_SUCU)
		AND	  (CCC_BANCO.OID_BANC = CCC_SUCUR.CBAN_OID_BANC)
		<isNotEmpty prepend="AND" property="codigoPais">
			(SEG_PAIS.COD_PAIS = #codigoPais#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoSociedad">
			(SEG_SOCIE.COD_SOCI = #codigoSociedad#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoBanco">		
			(CCC_BANCO.COD_BANC = #codigoBanco#)
		</isNotEmpty>
		ORDER BY 2
    </select>

    <!-- OBTIENE LOS TIPOS DE INGRESO ( EXCEPTO MASIVO-RECLAMOS ) -->
    <select id="getTiposIngresoByCodigoISO" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT  TI.COD_TIPO_INGR AS CODIGO, 
            	VAL_I18N AS DESCRIPCION
		FROM    GEN_I18N_SICC_COMUN P, 
		        REC_TIPO_INGRE TI, 
		        SEG_IDIOM I 
		WHERE  P.VAL_OID = TI.OID_TIPO_INGR
	           AND P.IDIO_OID_IDIO = I.OID_IDIO
	           AND P.ATTR_ENTI = 'REC_TIPO_INGRE'
	    <isNotEmpty prepend="AND" property="codigoISO">
	       I.COD_ISO_IDIO = #codigoISO#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="codigoTipoIng">   
		   TI.COD_TIPO_INGR != #codigoTipoIng#    
		</isNotEmpty>
		ORDER BY 2  
    </select>

    <!-- OBTIENE LAS OPERACIONES ( RECLAMOS ) -->
    <select id="getOperacionesByCodigoPais" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT 
            	OP.COD_OPER AS CODIGO, 
            	OP.VAL_DESC_LARG AS DESCRIPCION
		FROM    REC_OPERA OP, SEG_PAIS PA
    	WHERE   OP.PAIS_OID_PAIS = PA.OID_PAIS 
	    <isNotEmpty prepend="AND" property="codigoPais">
				PA.COD_PAIS = #codigoPais#    
	    </isNotEmpty>
		ORDER BY 2      
	</select>

    <select id="getTiposRecepcionMICAyOCS" parameterClass="java.util.Map" resultMap="baseResult">
     select 
            t.cod_inte AS CODIGO, 
            t.des_inte AS DESCRIPCION
     from bas_inter t 
     where est_inte=1
       and (t.cod_inte = 'OCR-P1' or 
            t.cod_inte = 'EVI-P1' or
            t.cod_inte = 'OCR-P5' or
            t.cod_inte = 'OCR-P6')
	order by t.cod_inte
	</select>

	<select id="getTipoOrigenDatos" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT  COD_TIPO_ORIG_DATO AS CODIGO,
				DES_TIPO_ORIG_DATO AS DESCRIPCION
		FROM PER_TIPO_ORIGE_DATOS
	</select>

	<select id="getTipoOrigenDatosDescripcion" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT  COD_TIPO_ORIG_DATO AS CODIGO,
				DES_TIPO_ORIG_DATO AS DESCRIPCION
		FROM PER_TIPO_ORIGE_DATOS 
  	    WHERE
		  DES_TIPO_ORIG_DATO  = #descripcion#    
	</select>

	
	<select id="getTipoOrigenDatosRecaudosBancarios" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT  COD_TIPO_ORIG_DATO AS CODIGO,
				DES_TIPO_ORIG_DATO AS DESCRIPCION
		FROM PER_TIPO_ORIGE_DATOS
		WHERE COD_TIPO_ORIG_DATO IN (1,2)
	</select>
    
    <!-- OBTIENE LA LISTA DE TIPOS DE CIERRE PARA FACTURACION  -->	
	<select id="getTiposCierres"  resultMap="baseResult">
		SELECT DISTINCT OID_TIPO_CIER AS CODIGO,      
           COD_TIPO_CIER AS DESCRIPCION  
		FROM FAC_TIPOS_CIERR 
		ORDER BY 2
	</select>
	
	<!-- OBTIENE LA LISTA DE GRUPOS DE PROCESOS  -->	
	<select id="getGrupoProceso"  resultMap="baseResult">
		SELECT  COD_GRUP_PROC AS CODIGO,
				DES_GRUP_PROC AS DESCRIPCION
		FROM PED_GRUPO_PROCE
	</select>

    <!-- Verifica Id de Pais  -->	
    <select id="getDevuelveIdPais" parameterClass="string" resultClass="long">
        SELECT OID_PAIS
		FROM SEG_PAIS A
		WHERE
		   A.COD_PAIS= #value#
    </select>


    <!-- Verifica si existe Cuenta Corriente Bancaria  -->	
    <select id="getExisteCuentaCorrienteBancaria" parameterClass="java.util.Map" resultClass="int">
        SELECT count(1) 
		FROM CCC_CUENT_CORRI_BANCA A
		WHERE
           A.PAIS_OID_PAIS = #idPais# AND  
		   A.COD_CC= #codigoBancoSicc#
    </select>

    <!-- Verifica si existe Tipo de Transaccion Bancaria  -->	
    <select id="getExisteTipoTransaccionBancaria" parameterClass="java.util.Map" resultClass="int">
        SELECT count(1) 
		FROM CCC_TIPO_TRANS A
		WHERE
           A.PAIS_OID_PAIS = #idPais# AND  
		   A.COD_TIPO_TRAN= #tipoTransaccion#
    </select>

    <!-- Verifica si existe Consultora  -->	
    <select id="getExisteConsultora" parameterClass="java.util.Map" resultClass="int">
        SELECT count(1) 
		FROM MAE_CLIEN A
		WHERE
		   A.COD_CLIE= #codigoConsultora# AND
		   A.PAIS_OID_PAIS = #idPais# 
    </select>
    
    <select id="getExisteConsultoraByCodigoPais" parameterClass="java.util.Map" resultClass="int">
        SELECT count(1)
	    FROM MAE_CLIEN, SEG_PAIS
        WHERE 
        	    SEG_PAIS.OID_PAIS = MAE_CLIEN.PAIS_OID_PAIS
        	AND SEG_PAIS.COD_PAIS = #codigoPais#
        	AND MAE_CLIEN.COD_CLIE = #codigoCliente#
    </select>
    
    <select id="getCodigoSociedadbyCuentaCorrienteBancaria" parameterClass="java.util.Map" resultClass="string">
        SELECT B.COD_SOCI
		FROM CCC_CUENT_CORRI_BANCA A,
             SEG_SOCIE B
		WHERE
           A.PAIS_OID_PAIS = #idPais# AND  
		   A.COD_CC= #codigoBancoSicc# AND
           B.OID_SOCI = A.SOCI_OID_SOCI
    </select>

    <select id="getCodigoConsultorabyCodigoPlanilla" parameterClass="java.util.Map" resultClass="string">
		SELECT B.COD_CLIE
		FROM
		    MAE_CLIEN_DATOS_ADICI A,
		    MAE_CLIEN B
		WHERE 
		    TO_NUMBER(A.COD_EMPL) = #codigoPlanilla#  AND
		    B.OID_CLIE = A.CLIE_OID_CLIE 
    </select>
	
    <select id="getCodigoConsultorabyNumeroDocumento" parameterClass="java.util.Map" resultClass="string">	
		SELECT C.COD_CLIE
		FROM
			MAE_TIPO_DOCUM A,
			MAE_CLIEN_IDENT B,
			MAE_CLIEN C
		WHERE A.COD_TIPO_DOCU = #tipoDocumentoIdentidad#
		  AND B.NUM_DOCU_IDEN = SUBSTR(LPAD(TRIM(#numeroDocumentoIdentidad#),16,'0'),7,10)
		  AND A.OID_TIPO_DOCU = B.TDOC_OID_TIPO_DOCU
		  AND C.OID_CLIE = B.CLIE_OID_CLIE
		  AND ROWNUM = 1
    </select>

	<!-- Verifica si el periodo es valido -->	
    <select id="isPeriodoValido" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CRA_PERIO.VAL_ESTA
		  FROM CRA_PERIO, SEG_PERIO_CORPO
		 WHERE ((SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI) AND (SEG_PERIO_CORPO.COD_PERI = #value#))    
 	</select>

 <select id="getTiposOperaByOpera" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT REC_TIPOS_OPERA.VAL_TIPO_OPER AS CODIGO,
       	   REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS DESCRIPCION
	FROM   REC_TIPOS_OPERA, 
    	   REC_OPERA
	WHERE  REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
       	   AND REC_OPERA.COD_OPER =  #codigoOperacion#
		   AND REC_OPERA.PAIS_OID_PAIS = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)  

 </select>

 <select id="getTiposOperaMultipleByOpera" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS CODIGO,
       	   REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS DESCRIPCION
	FROM   REC_TIPOS_OPERA, 
    	   REC_OPERA
	WHERE  REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
			<iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER = #codigoOperacion[]#
            </iterate>        	 
		   AND REC_OPERA.PAIS_OID_PAIS = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)  

 </select>

 <select id="getListaEstadoReclamo" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT 	aa.cod_esta AS CODIGO, gen.val_i18n AS DESCRIPCION
  	FROM 	rec_estad_recla aa, gen_i18n_sicc_comun gen
 	WHERE 	(    (aa.oid_esta_recl = gen.val_oid)
    	    AND (gen.attr_enti = 'REC_ESTAD_RECLA')
       		)
 </select>
 <select id="getListaResultadoChequeo" parameterClass="java.util.Map" resultMap="baseResult">
 	SELECT   rec.cod_resu_cheq AS CODIGO, gen.val_i18n as  DESCRIPCION
		FROM rec_resul_chequ rec, gen_i18n_sicc_pais gen
	   WHERE (    (rec.oid_resu_cheq = gen.val_oid)
			  AND (rec.pais_oid_pais = gen_pkg_gener.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#))
			  AND (gen.attr_enti = 'REC_RESUL_CHEQU')
			 )
	ORDER BY gen.val_i18n ASC
 </select>

 <select id="getListaEstadoOperacion" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT aa.cod_esta AS CODIGO, gen.val_i18n  AS DESCRIPCION
  	FROM rec_estad_recla aa, gen_i18n_sicc_comun gen
 	WHERE (    (aa.oid_esta_recl = gen.val_oid)
        		AND (gen.attr_enti = 'REC_ESTAD_OPERA'))
 </select>

<select id="getMotivoDevolucionByPais" parameterClass="java.util.Map" resultMap="baseResult">
	SELECT  aa.cod_moti_devo AS CODIGO, 
			gen.val_i18n  AS DESCRIPCION
  	FROM REC_MOTIV_DEVOL aa, gen_i18n_sicc_pais gen
 	WHERE aa.oid_moti_devo = gen.val_oid
        AND gen.attr_enti = 'REC_MOTIV_DEVOL'
        and aa.Pais_Oid_Pais= GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)  
</select>      
   
<select id="getListaNegocio" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT mae_negoc.cod_nego as CODIGO, gen_i18n_sicc_pais.val_i18n as DESCRIPCION
  FROM mae_negoc,
       gen_i18n_sicc_pais,
       seg_pais,
       seg_idiom
 	WHERE (    (mae_negoc.oid_nego = gen_i18n_sicc_pais.val_oid)
        AND (seg_pais.oid_pais = mae_negoc.pais_oid_pais)
        AND (seg_idiom.oid_idio = gen_i18n_sicc_pais.idio_oid_idio)
        AND (seg_pais.cod_pais = #codigoPais#)
        AND (gen_i18n_sicc_pais.attr_enti = 'MAE_NEGOC'))
	ORDER BY gen_i18n_sicc_pais.val_i18n
 </select>

<select id="getListaUnidadNegocio" parameterClass="java.util.Map" resultMap="baseResult">
	SELECT mae_unida_negoc.cod_unid_nego as CODIGO, gen_i18n_sicc_pais.val_i18n as DESCRIPCION
  FROM mae_unida_negoc,
       gen_i18n_sicc_pais,
       seg_pais,
       seg_idiom
 WHERE (    (mae_unida_negoc.oid_unid_nego = gen_i18n_sicc_pais.val_oid)
        AND (seg_pais.oid_pais = mae_unida_negoc.pais_oid_pais)
        AND (seg_idiom.oid_idio = gen_i18n_sicc_pais.idio_oid_idio)
        AND (seg_pais.cod_pais = #codigoPais#)
        AND (gen_i18n_sicc_pais.attr_enti = 'MAE_UNIDA_NEGOC'))
ORDER BY gen_i18n_sicc_pais.val_i18n


 </select>


   <!-- OBTIENE LA RELACION DE TIPOS DE CLASIFICACION POR CODIGO ISO, TIPO DE CLIENTE Y SUBTIPO DE CLIENTE -->
    <select id="getTiposClasificacionesByCriteria" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT COD_TIPO_CLAS AS CODIGO, 
			   VAL_I18N AS DESCRIPCION
		FROM 	GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_TIPO_CLASI_CLIEN,
				MAE_TIPO_CLIEN,
				MAE_SUBTI_CLIEN
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
			   AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
			   AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_TIPO_CLASI_CLIEN'
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
	    <isNotEmpty prepend="AND" property="codigoTipoCliente">				
				 MAE_TIPO_CLIEN.COD_TIPO_CLIE = #codigoTipoCliente#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="codigoSubTipoCliente">				
				 MAE_SUBTI_CLIEN.COD_SUBT_CLIE = #codigoSubTipoCliente#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidTipoCliente">				
				 MAE_TIPO_CLIEN.OID_TIPO_CLIE = #oidTipoCliente#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidSubTipoCliente">				
				 MAE_SUBTI_CLIEN.OID_SUBT_CLIE = #oidSubTipoCliente#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidTipoClasificacion">				
				 MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS = #oidTipoClasificacion#
	    </isNotEmpty>	    	    				
			   AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
   	  ORDER BY 2
    </select>
       <!-- OBTIENE LA RELACION DE TIPOS DE CLASIFICACION POR CODIGO ISO, TIPO DE CLIENTE Y SUBTIPO DE CLIENTE MULTIPLE-->
    <select id="getTiposClasificacionesByCriteriaMultiple" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS||MAE_TIPO_CLIEN.COD_TIPO_CLIE||MAE_SUBTI_CLIEN.COD_SUBT_CLIE AS CODIGO, 
			   VAL_I18N AS DESCRIPCION
		FROM 	GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_TIPO_CLASI_CLIEN,
				MAE_TIPO_CLIEN,
				MAE_SUBTI_CLIEN
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
			   AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
			   AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_TIPO_CLASI_CLIEN'
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
				<isNotEmpty prepend="AND" property="codigoTipoCliente">				
				 MAE_TIPO_CLIEN.COD_TIPO_CLIE = #codigoTipoCliente#
	   			 </isNotEmpty>
				<iterate prepend="AND" property="codigoSubTipoCliente" open="(" close=")" conjunction="OR">
		   		COD_TIPO_CLIE || '-' || COD_SUBT_CLIE =  #codigoSubTipoCliente[]#    
         		</iterate>        
			   AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
   	  ORDER BY 2
    </select>
	   <!-- OBTIENE LA RELACION DE TIPOS DE CLASIFICACION POR CODIGO ISO, TIPO DE CLIENTE Y SUBTIPO DE CLIENTE MULTIPLE-->
    <select id="getTiposClasificacionesByCriteriaMultipleOID" parameterClass="java.util.Map" resultMap="baseResultOID">
		SELECT Oid_Tipo_Clas AS OID, 
			   VAL_I18N AS DESCRIPCION
		FROM 	GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_TIPO_CLASI_CLIEN,
				MAE_TIPO_CLIEN,
				MAE_SUBTI_CLIEN
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
			   AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
			   AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_TIPO_CLASI_CLIEN'
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
				<isNotEmpty prepend="AND" property="codigoTipoCliente">				
				 OID_TIPO_CLIE = #codigoTipoCliente#
	   			 </isNotEmpty>
				<iterate prepend="AND" property="codigoSubTipoCliente" open="(" close=")" conjunction="OR">
		   		OID_SUBT_CLIE =  #codigoSubTipoCliente[]#    
         		</iterate>        
         		
         		<isNotEmpty prepend="AND" property="indicadorTipoClasificacionPais">
         			MAE_TIPO_CLASI_CLIEN.IND_TIPO_CLAS_PAIS = #indicadorTipoClasificacionPais#
         		</isNotEmpty>
         		
			   AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
   	  ORDER BY 2
    </select>
    
       <!-- OBTIENE LA RELACION DE TIPOS DE CLASIFICACION POR CODIGO ISO, TIPO DE CLIENTE Y SUBTIPO DE CLIENTE MULTIPLE-->
    <select id="getTiposClasificacionesByCriteriaMultipleCodigo" parameterClass="java.util.Map" resultMap="baseResultCodigo">
		SELECT COD_TIPO_CLAS AS CODIGO, 
			   COD_TIPO_CLAS|| ' - ' ||VAL_I18N AS DESCRIPCION
		FROM 	GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_TIPO_CLASI_CLIEN,
				MAE_TIPO_CLIEN,
				MAE_SUBTI_CLIEN
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
			   AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
			   AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_TIPO_CLASI_CLIEN'
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
				<isNotEmpty prepend="AND" property="codigoTipoCliente">				
				 COD_TIPO_CLIE = #codigoTipoCliente#
	   			 </isNotEmpty>
				<iterate prepend="AND" property="codigoSubTipoCliente" open="(" close=")" conjunction="OR">
		   		 COD_SUBT_CLIE =  #codigoSubTipoCliente[]#    
         		</iterate>        
			   AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
   	  ORDER BY 2
    </select>
    
      <!-- OBTIENE DESCRIPCION DE TIPO DE CLASIFICACIONES POR CODIGO DE TIPO CLIENTE, CODIGO SUBTIPO CLIENTE, CODIGO TIPO CLASIFICACION Y CODIGO IDIOMA-->
    <select id="getDescripcionTipoClasificacionByCriteria" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT 
			P.VAL_I18N 
		FROM 
			GEN_I18N_SICC_COMUN P,
			MAE_SUBTI_CLIEN C,
			MAE_TIPO_CLIEN T,
			MAE_TIPO_CLASI_CLIEN CC,
			SEG_IDIOM I
		WHERE 
			P.VAL_OID=CC.OID_TIPO_CLAS AND
			T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE AND
			C.OID_SUBT_CLIE = CC.SBTI_OID_SUBT_CLIE AND
			P.ATTR_ENTI = 'MAE_TIPO_CLASI_CLIEN' AND
			P.IDIO_OID_IDIO = I.OID_IDIO AND
			T.COD_TIPO_CLIE= #codTipoCliente# AND
			C.COD_SUBT_CLIE= #codSubTipoCliente# AND
			CC.COD_TIPO_CLAS = #codTipoClasificacion# AND
			I.COD_ISO_IDIO = #codIdioma#
    </select>
    
	<select id="getClasificacionesByCriteriaMultiple" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT COD_TIPO_CLAS||COD_TIPO_CLIE||COD_SUBT_CLIE||COD_CLAS AS CODIGO, 
			   VAL_I18N AS DESCRIPCION
		FROM GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_CLASI,
				MAE_TIPO_CLASI_CLIEN,
				MAE_SUBTI_CLIEN,
				MAE_TIPO_CLIEN	 
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS
				AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
				AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI'
				AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
				AND MAE_CLASI.TCCL_OID_TIPO_CLAS = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS	  
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
				<isNotEmpty prepend="AND" property="codigoTipoCliente">				
				 MAE_TIPO_CLIEN.COD_TIPO_CLIE = #codigoTipoCliente#
	   			 </isNotEmpty>
	    		<iterate prepend="AND" property="codigoSubTipoCliente" open="(" close=")" conjunction="OR">
		   			COD_TIPO_CLIE || '-' || COD_SUBT_CLIE =  #codigoSubTipoCliente[]#    
         		</iterate>		
	    		<iterate prepend="AND" property="codigoTipoClasificacion" open="(" close=")" conjunction="OR">
		   			COD_TIPO_CLAS||COD_TIPO_CLIE||COD_SUBT_CLIE =  #codigoTipoClasificacion[]#    
         		</iterate> 
			    AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO# 
		  ORDER BY 2	  
    </select>
	<select id="getClasificacionesByCriteriaMultipleOID" parameterClass="java.util.Map" resultMap="baseResultOID">
		SELECT OID_CLAS AS OID, 
			   VAL_I18N AS DESCRIPCION
		FROM GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_CLASI,
				MAE_TIPO_CLASI_CLIEN,
				MAE_SUBTI_CLIEN,
				MAE_TIPO_CLIEN	 
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS
				AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
				AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI'
				AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
				AND MAE_CLASI.TCCL_OID_TIPO_CLAS = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS	  
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
				<isNotEmpty prepend="AND" property="codigoTipoCliente">				
					Oid_Tipo_Clie = #codigoTipoCliente#
	   			 </isNotEmpty>
	    		<iterate prepend="AND" property="codigoSubTipoCliente" open="(" close=")" conjunction="OR">
		   			OID_SUBT_CLIE =  #codigoSubTipoCliente[]#    
         		</iterate>		
	    		<iterate prepend="AND" property="codigoTipoClasificacion" open="(" close=")" conjunction="OR">
		   			OID_TIPO_CLAS =  #codigoTipoClasificacion[]#    
         		</iterate> 
			    AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO# 
		  ORDER BY 2	  
    </select>
    
    <select id="getClasificacionesByCriteriaMultipleCodigo" parameterClass="java.util.Map" resultMap="baseResultCodigo">
		SELECT COD_CLAS AS CODIGO, 
			   COD_CLAS|| ' - ' ||VAL_I18N AS DESCRIPCION
		FROM GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_CLASI,
				MAE_TIPO_CLASI_CLIEN,
				MAE_SUBTI_CLIEN,
				MAE_TIPO_CLIEN	 
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS
				AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
				AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI'
				AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
				AND MAE_CLASI.TCCL_OID_TIPO_CLAS = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS	  
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
				<isNotEmpty prepend="AND" property="codigoTipoCliente">				
					COD_TIPO_CLIE = #codigoTipoCliente#
	   			 </isNotEmpty>
	    		<iterate prepend="AND" property="codigoSubTipoCliente" open="(" close=")" conjunction="OR">
		   			COD_SUBT_CLIE =  #codigoSubTipoCliente[]#    
         		</iterate>		
	    		<iterate prepend="AND" property="codigoTipoClasificacion" open="(" close=")" conjunction="OR">
		   			COD_TIPO_CLAS =  #codigoTipoClasificacion[]#    
         		</iterate> 
			    AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO# 
		  ORDER BY 2	  
    </select>
    
    <!-- OBTIENE LA DESCRIPCION DE LA CLASIFICACION POR CODIGO TIPO CLIETE, CODIGO SUBTIPO CLLIENTE, CODIGO TIPO CLASIFICACION, CODIGO CLASIFICACION Y CODIGO IDIOMA--> 
    <select id="getClasificacionByCriteria" parameterClass="java.util.Map" resultClass="java.lang.String">
		 	SELECT 
				P.VAL_I18N 
			FROM 
				GEN_I18N_SICC_COMUN P,
				MAE_SUBTI_CLIEN STC,
				MAE_TIPO_CLIEN TC,
				MAE_TIPO_CLASI_CLIEN TCC,
				MAE_CLASI C,
				SEG_IDIOM I
			WHERE 
				P.VAL_OID=C.OID_CLAS AND
				TC.OID_TIPO_CLIE = STC.TICL_OID_TIPO_CLIE AND
				STC.OID_SUBT_CLIE = TCC.SBTI_OID_SUBT_CLIE AND
				TCC.OID_TIPO_CLAS = C.TCCL_OID_TIPO_CLAS AND
				P.ATTR_ENTI = 'MAE_CLASI' AND
				P.IDIO_OID_IDIO = I.OID_IDIO AND
				TC.COD_TIPO_CLIE= #codTipoCliente# AND
				STC.COD_SUBT_CLIE= #codSubTipoCliente# AND
				TCC.COD_TIPO_CLAS =  #codTipoClasificacion# AND
				C.COD_CLAS =  #codClasificacion# AND
				I.COD_ISO_IDIO = #codIdioma#
    </select>
    
	<!-- OBTIENE LA RELACION DE CLASIFICACIONES POR CODIGO ISO, TIPO DE CLASIFICACION, TIPO DE CLIENTE, SUB TIPO DE CLIENTE--> 
    <select id="getClasificacionesByCriteria" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT COD_CLAS AS CODIGO, 
			   VAL_I18N AS DESCRIPCION
		FROM GEN_I18N_SICC_COMUN,
				SEG_IDIOM ,
				MAE_CLASI,
				MAE_TIPO_CLASI_CLIEN,
				MAE_SUBTI_CLIEN,
				MAE_TIPO_CLIEN	 
		WHERE  GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS
				AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
				AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI'
				AND SEG_IDIOM.COD_ISO_IDIO = #codigoISO#
				AND MAE_CLASI.TCCL_OID_TIPO_CLAS = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS	  
				AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
				AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE
	    <isNotEmpty prepend="AND" property="codigoTipoClasificacion">	
				 MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS = #codigoTipoClasificacion#
		</isNotEmpty>		
	    <isNotEmpty prepend="AND" property="codigoTipoCliente">	
				 MAE_TIPO_CLIEN.COD_TIPO_CLIE = #codigoTipoCliente#
		</isNotEmpty>
	    <isNotEmpty prepend="AND" property="codigoSubTipoCliente">		
				 MAE_SUBTI_CLIEN.COD_SUBT_CLIE = #codigoSubTipoCliente#
		</isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidTipoClasificacion">	
				 MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS = #oidTipoClasificacion#
		</isNotEmpty>		
	    <isNotEmpty prepend="AND" property="oidTipoCliente">	
				 MAE_TIPO_CLIEN.OID_TIPO_CLIE = #oidTipoCliente#
		</isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidSubTipoCliente">		
				 MAE_SUBTI_CLIEN.OID_SUBT_CLIE = #oidSubTipoCliente#
		</isNotEmpty>
	    <isNotEmpty prepend="AND" property="oidClasificacion">		
				 MAE_CLASI.OID_CLAS = #oidClasificacion#
		</isNotEmpty>				
		  ORDER BY 2	  
    </select>


	<!-- OBTIENE DATOS DEL CONCURSO DE ACUERDO AL CONCURSO SELECCIONADO -->
    <select id="getDatosConcursosByNumeroConcurso" parameterClass="java.util.Map" resultMap="baseConcursoResult">
			SELECT 	INC_CONCU_PARAM_GENER.NUM_CONC AS NUMERO_CONCURSO,         
				INC_CONCU_PARAM_GENER.VAL_NOMB AS DESCRIPCION,  
				gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(INC_CONCU_PARAM_GENER.Perd_Oid_Peri_Desd) AS DESDE,        
				gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(INC_CONCU_PARAM_GENER.Perd_Oid_Peri_Hast)AS HASTA,
				INC_CONCU_PARAM_GENER.OID_PARA_GRAL AS OIDPARAMETROGENERAL
			FROM INC_CONCU_PARAM_GENER
			 WHERE   INC_CONCU_PARAM_GENER.num_conc = #numeroConcurso#
    </select>
	
	<!-- OBTIENE LA RELACION DE CONCURSOS CUYO RANGO DE DURACION INCLUYA AL PERIODO SELECCIONADO -->
    <select id="getConcursosByPaisMarcaCanalPeriodo" parameterClass="java.util.Map" resultMap="baseResult">
			SELECT DISTINCT  
				INC_CONCU_PARAM_GENER.NUM_CONC AS CODIGO,         
				INC_CONCU_PARAM_GENER.NUM_CONC AS DESCRIPCION,  
				PERI_DESDE.COD_PERI AS DESDE,        
				PERI_HASTA.COD_PERI AS HASTA 
			FROM CRA_PERIO CRA_DESDE,
			  	 CRA_PERIO CRA_HASTA,
			       SEG_PAIS,
			       SEG_PERIO_CORPO PERI_DESDE,
			       SEG_PERIO_CORPO PERI_HASTA,	   
			       SEG_CANAL,
			       SEG_MARCA,
			       INC_CONCU_PARAM_GENER,
			       INT_INC_CONCU_DUPLA
			 WHERE (   
					(PERI_DESDE.OID_PERI = CRA_DESDE.PERI_OID_PERI)		 
					AND (PERI_HASTA.OID_PERI = CRA_HASTA.PERI_OID_PERI)
			        AND (SEG_CANAL.OID_CANA = CRA_HASTA.CANA_OID_CANA) 
			        AND (SEG_MARCA.OID_MARC = CRA_HASTA.MARC_OID_MARC)
			        AND (SEG_PAIS.OID_PAIS = CRA_HASTA.PAIS_OID_PAIS)
					AND (SEG_CANAL.OID_CANA = CRA_DESDE.CANA_OID_CANA) 
			        AND (SEG_MARCA.OID_MARC = CRA_DESDE.MARC_OID_MARC)
			        AND (SEG_PAIS.OID_PAIS = CRA_DESDE.PAIS_OID_PAIS)
					AND (SEG_CANAL.OID_CANA = INC_CONCU_PARAM_GENER.CANA_OID_CANA) 
			        AND (SEG_MARCA.OID_MARC = INC_CONCU_PARAM_GENER.MARC_OID_MARC)
			        AND (SEG_PAIS.OID_PAIS = INC_CONCU_PARAM_GENER.PAIS_OID_PAIS)
					AND ( CRA_DESDE.OID_PERI = INC_CONCU_PARAM_GENER.PERD_OID_PERI_DESD )     
					AND ( CRA_HASTA.OID_PERI = INC_CONCU_PARAM_GENER.PERD_OID_PERI_HAST )  
					AND (INC_CONCU_PARAM_GENER.OID_PARA_GRAL = INT_INC_CONCU_DUPLA.COPA_OID_PARA_GRAL)
					AND (INT_INC_CONCU_DUPLA.IND_DUPL = 1)							
					AND (SEG_PAIS.COD_PAIS = #codigoPais#)
	   			<isNotEmpty prepend="AND" property="codigoMarca">
			    	(SEG_MARCA.COD_MARC = #codigoMarca#)
			  	</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoCanal">
				    (SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>	  
				<isNotEmpty prepend="AND" property="codigoPeriodo">
		  			( #codigoPeriodo# BETWEEN PERI_DESDE.COD_PERI AND PERI_HASTA.COD_PERI )
				</isNotEmpty>
			       )
			       order by INC_CONCU_PARAM_GENER.NUM_CONC
    </select>



	<!-- OBTIENE LA RELACION DE CONCURSOS CUYO RANGO DE DURACION INCLUYA AL PERIODO SELECCIONADO -->
    <select id="getConcursosByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
			SELECT   
				INC_CONCU_PARAM_GENER.NUM_CONC AS CODIGO,         
				INC_CONCU_PARAM_GENER.NUM_CONC || ' - '|| INC_CONCU_PARAM_GENER.VAL_NOMB AS DESCRIPCION,    
				PERI_DESDE.COD_PERI AS DESDE,        
				PERI_HASTA.COD_PERI AS HASTA 
					FROM 
			       SEG_PAIS,
			       SEG_CANAL,
			       SEG_MARCA,
					INC_CONCU_PARAM_GENER,
					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL, SEG_PERIO_CORPO.COD_PERI FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
			       INC_CONCU_PARAM_GENER			     
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_DESD=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_DESDE,

					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL,SEG_PERIO_CORPO.COD_PERI  FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
				        INC_CONCU_PARAM_GENER
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_HAST=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_HASTA
			 WHERE (   
			     (SEG_CANAL.OID_CANA = INC_CONCU_PARAM_GENER.CANA_OID_CANA)             
			        AND (SEG_MARCA.OID_MARC = INC_CONCU_PARAM_GENER.MARC_OID_MARC)
			        AND (SEG_PAIS.OID_PAIS = INC_CONCU_PARAM_GENER.PAIS_OID_PAIS)
					 AND (PERI_DESDE.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
					 AND (PERI_HASTA.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
					AND (SEG_PAIS.COD_PAIS = #codigoPais#)
	   			<isNotEmpty prepend="AND" property="codigoMarca">
			    	(SEG_MARCA.COD_MARC = #codigoMarca#)
			  	</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoCanal">
				    (SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>	  
				<isNotEmpty prepend="AND" property="codigoPeriodo">
		  			( #codigoPeriodo# BETWEEN PERI_DESDE.COD_PERI AND PERI_HASTA.COD_PERI )
				</isNotEmpty>
			       )
			       order by INC_CONCU_PARAM_GENER.NUM_CONC
    </select>



    <select id="getConcursosByPaisMarcaCanalDetalle" parameterClass="java.util.Map" resultMap="baseResult">
			SELECT   
				INC_CONCU_PARAM_GENER.NUM_CONC AS CODIGO,         
				INC_CONCU_PARAM_GENER.NUM_CONC || ' - '|| INC_CONCU_PARAM_GENER.VAL_NOMB AS DESCRIPCION,
				PERI_DESDE.COD_PERI AS DESDE,        
				PERI_HASTA.COD_PERI AS HASTA 
					FROM 
			       SEG_PAIS,
			       SEG_CANAL,
			       SEG_MARCA,
					INC_CONCU_PARAM_GENER,
					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL, SEG_PERIO_CORPO.COD_PERI FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
			       INC_CONCU_PARAM_GENER			     
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_DESD=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_DESDE,

					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL,SEG_PERIO_CORPO.COD_PERI  FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
				        INC_CONCU_PARAM_GENER
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_HAST=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_HASTA,
				    inc_versi_concu,INC_PARAM_GENER_PREMI
			 WHERE (   
			     (SEG_CANAL.OID_CANA = INC_CONCU_PARAM_GENER.CANA_OID_CANA)             
			        AND (SEG_MARCA.OID_MARC = INC_CONCU_PARAM_GENER.MARC_OID_MARC)
			        AND (SEG_PAIS.OID_PAIS = INC_CONCU_PARAM_GENER.PAIS_OID_PAIS)
					 AND (PERI_DESDE.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
					 AND (PERI_HASTA.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
 					 AND (inc_versi_concu.copa_oid_para_gral = INC_CONCU_PARAM_GENER.oid_para_gral)
					 AND (INC_PARAM_GENER_PREMI.COPA_OID_PARA_GRAL = INC_CONCU_PARAM_GENER.oid_para_gral)
					 AND (IND_ACTI = 1 )
					 AND (VICO_OID_VIGE_CONC = 1)					 
					AND (SEG_PAIS.COD_PAIS = #codigoPais#)
	   			<isNotEmpty prepend="AND" property="codigoMarca">
			    	(SEG_MARCA.COD_MARC = #codigoMarca#)
			  	</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoCanal">
				    (SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>	  
				<isNotEmpty prepend="AND" property="codigoPeriodo">
		  			( #codigoPeriodo# BETWEEN PERI_DESDE.COD_PERI AND PERI_HASTA.COD_PERI )
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="baseCalculo">
		  			( INC_CONCU_PARAM_GENER.BCAL_OID_BASE_CALC= #baseCalculo# )
				</isNotEmpty>
			       )
			       order by INC_CONCU_PARAM_GENER.NUM_CONC
    </select>

	<!-- OBTIENE LA RELACION DE TIPOS DE VINCULOS DE ACUERDO AL PAIS -->
    <select id="getTiposVinculosByPais" parameterClass="string" resultMap="baseResult">
		SELECT MAE_TIPO_VINCU.COD_TIPO_VINC AS CODIGO, 
		       GEN_I18N_SICC_PAIS.VAL_I18N AS DESCRIPCION
		FROM   GEN_I18N_SICC_PAIS, 
		       MAE_TIPO_VINCU, 
		       SEG_PAIS
		WHERE  GEN_I18N_SICC_PAIS.VAL_OID = MAE_TIPO_VINCU.OID_TIPO_VINC
	       AND MAE_TIPO_VINCU.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
	       AND GEN_I18N_SICC_PAIS.ATTR_ENTI = 'MAE_TIPO_VINCU'
	       AND SEG_PAIS.COD_PAIS = #value#
	    ORDER BY 2
    </select>
    
    <!-- OBTIENE LA RELACION DE COMPROBANTE DE MOVIMIENTOS BANCARIOS -->
    <select id="getComprobantesByPaisBancoCuentaCorriente" parameterClass="java.util.Map" resultMap="baseResult">
	    SELECT DISTINCT	M.NUM_LOTE AS CODIGO,
	   					M.NUM_LOTE AS DESCRIPCION
		FROM CCC_MOVIM_BANCA M, CCC_CUENT_CORRI_BANCA C,
			 CCC_BANCO B, CCC_SUCUR S, SEG_PAIS P
		WHERE M.PAIS_OID_PAIS = P.OID_PAIS
		AND	  M.CCBA_OID_CC_BANC = C.OID_CUEN_CORR_BANC
		AND	  C.SUCU_OID_SUCU = S.OID_SUCU
		AND	  S.CBAN_OID_BANC = B.OID_BANC
		AND	  P.COD_PAIS = #codigoPais#
		<isNotEmpty prepend="AND" property="codigoCuentaCorriente">
			C.COD_CC = #codigoCuentaCorriente#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoBanco">		
			B.COD_BANC = #codigoBanco#
		</isNotEmpty>
	</select>

	<!--  OBTIENE LA RELACION DE CONCURSOS DE LA TABLA INC_CONCU_PARAM -->
    <select id="getConcursos" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT NUM_CONC AS CODIGO, NUM_CONC AS DESCRIPCION 
		FROM INC_CONCU_PARAM_GENER 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="indicadorActivo">
				INC_CONCU_PARAM_GENER.IND_ACTI = #indicadorActivo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="indicadorDuplaCyzone">
				INC_CONCU_PARAM_GENER.IND_DUPL_CYZO = #indicadorDuplaCyzone#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoPais">
				INC_CONCU_PARAM_GENER.PAIS_OID_PAIS = gen_pkg_gener.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)
			</isNotEmpty>
		</dynamic>	
		ORDER BY 1 DESC
	</select>

	<!--  OBTIENE LA RELACION DE PLANTILLAS DE LA TABLA INC_PLANT_CONCU-->
    <select id="getPlantillasConcursos" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT OID_PLAN_CONC AS CODIGO, OID_PLAN_CONC AS DESCRIPCION 
		FROM INC_PLANT_CONCU
		ORDER BY 1 DESC
	</select>


	<select id="getZonasMultipleByPaisMarcaCanalRegion" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_REGIO
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>		
			<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 		ZON_REGIO.COD_REGI = #codigoRegion[]#
            </iterate>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>
    
	<select id="getZonasMultipleByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_REGIO
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>		
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>
    
	<select id="getTerritoriosMultipleByPaisMarcaCanalRegionZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT ZON_TERRI.COD_TERR AS CODIGO, 	   
			   ZON_TERRI.COD_TERR AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI,
			   ZON_TERRI,
			   ZON_TERRI_ADMIN
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			ZON_REGIO.COD_REGI = #codigoRegion[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA = #codigoZona[]#
            	</iterate> 						
				AND (SEG_PAIS.OID_PAIS = ZON_TERRI_ADMIN.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_TERRI_ADMIN.MARC_OID_MARC)
		        AND (SEG_CANAL.OID_CANA = ZON_TERRI_ADMIN.CANA_OID_CANA)
		        AND (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC)
		        AND (ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR)
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)		
		       ORDER BY 2
	</select>
	
	<!-- OBTIENE LA RELACION DE TERRITORIOS POR PAIS MARCA CANAL REGION ZONA SECCION -->
	<select id="getTerritoriosMultipleByPaisMarcaCanalRegionZonaSeccion" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT ZON_TERRI.COD_TERR AS CODIGO, 	   
			   ZON_TERRI.COD_TERR AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI,
			   ZON_TERRI,
			   ZON_TERRI_ADMIN
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			ZON_REGIO.COD_REGI = #codigoRegion[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA = #codigoZona[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoSeccion" open="(" close=")" conjunction="OR">
      	 			ZON_SECCI.COD_SECC = #codigoSeccion[]#
            	</iterate> 						
				AND (SEG_PAIS.OID_PAIS = ZON_TERRI_ADMIN.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_TERRI_ADMIN.MARC_OID_MARC)
		        AND (SEG_CANAL.OID_CANA = ZON_TERRI_ADMIN.CANA_OID_CANA)
		        AND (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC)
		        AND (ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR)
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)		
		       ORDER BY 2
	</select>
	<!-- OBTIENE LA RELACION DE REGIONES POR PAIS MARCA Y CANAL y SUBGERENCIA -->
    <select id="getRegionesByPaisSubGerencia" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
				<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoMarca">
          	  		(SEG_MARCA.COD_MARC = #codigoMarca#)
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoCanal">
          	  		(SEG_CANAL.COD_CANA = #codigoCanal#)
    	  		</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoSubGerencia">
          	  		(ZON_REGIO.Zsgv_Oid_Subg_Vent = gen_pkg_gener.GEN_FN_DEVUELVE_ID_SUB_GEREN (#codigoSubGerencia#))
    	  		</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        )
	    ORDER BY 2 ASC
    </select>
	
	<!-- OBTIENE LA RELACION DE REGIONES POR PAIS MARCA Y CANAL y SUBGERENCIA MULTIPLE -->
    <select id="getRegionesByPaisSubGerenciaMultiple" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
				<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoMarca">
          	  		(SEG_MARCA.COD_MARC = #codigoMarca#)
    	  		</isNotEmpty>
		  		<isNotEmpty prepend="AND" property="codigoCanal">
          	  		(SEG_CANAL.COD_CANA = #codigoCanal#)
    	  		</isNotEmpty>
				<iterate prepend="AND" property="subGerenciaList" open="(" close=")" conjunction="OR">
          	  		(ZON_REGIO.Zsgv_Oid_Subg_Vent = #subGerenciaList[]#)
				</iterate> 
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        )
	    ORDER BY 2 ASC
    </select>
    
	<!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL REGION y SUBGERENCIA -->
    <select id="getZonasMultipleByPaisMarcaCanalRegionSubGerencia" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.COD_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_REGIO
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 		ZON_REGIO.COD_REGI = #codigoRegion[]#
            </iterate> 
			<isNotEmpty prepend="AND" property="codigoSubGerencia">
				(ZON_REGIO.Zsgv_Oid_Subg_Vent = #codigoSubGerencia#)
    	  	</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>
	
	<!-- OBTIENE LA RELACION DE COMISIONES -->
    <select id="getComision" resultClass="baseGenerico">
  		SELECT COD_COMI AS CODIGO, 
  		       COD_COMI || ' - ' || VAL_CONC AS DESCRIPCION
  	    FROM COM_COMIS 
		WHERE 
		     OID_COMI = COM_PKG_REPOR.COM_FN_DEVUE_ULTI_OID_COMI(COD_COMI)
		ORDER BY COD_COMI	 
    </select>
   
    
    <!-- OBTIENE LA RELACION DE SUB PROCESO DE ACUERDO AL IOD DEL PROCESO SELECCIONADOL -->
    <select id="getSubProcesoByProceso" parameterClass="java.util.Map" resultClass="bsubProceso">
		    SELECT S.COD_SUBP AS codSubProceso,
                   S.DES_SUBP AS descripcion
            FROM CCC_SUBPR S, CCC_PROCE P
	 	    WHERE P.COD_PROC=#codProceso#
			AND P.OID_PROC=S.CCPR_OID_PROC
	        
    </select>
   
      <!-- OBTIENE LA RELACION DE CUPONES POR NIVEL -->
    <select id="getCuponesByNivel" parameterClass="java.util.Map" resultMap="baseResult">
	SELECT CUP_CUPON_NIVEL.COD_CUPON AS CODIGO,
		   CUP_CUPON_NIVEL.COD_CUPON AS DESCRIPCION
	FROM   CUP_CUPON_NIVEL 
	WHERE  CUP_CUPON_NIVEL.COD_PAIS = #codigoPais#
		   AND CUP_CUPON_NIVEL.COD_PROG = #codigoPrograma#
		   AND CUP_CUPON_NIVEL.COD_NIVEL = #codigoNivel#		
    </select> 
	<select id="getCuponesAsignadosByPrograma" parameterClass="java.util.Map" resultMap="baseResult">
	SELECT CUP_CUPON_NIVEL.COD_CUPON AS CODIGO,
		   CUP_CUPON_NIVEL.COD_CUPON AS DESCRIPCION
	FROM   CUP_CUPON_NIVEL 
	WHERE  CUP_CUPON_NIVEL.COD_PAIS = #codigoPais#
		   AND CUP_CUPON_NIVEL.COD_PROG = #codigoPrograma#		 
    </select>  
	<select id="getCuponesFaltantesPeriodoByNivel" parameterClass="java.util.Map" resultMap="baseResult">
      SELECT CUP_CUPON_NIVEL.COD_CUPON AS CODIGO,
		     CUP_CUPON_NIVEL.COD_CUPON AS DESCRIPCION
	   FROM  CUP_CUPON_NIVEL
	   where
			CUP_CUPON_NIVEL.COD_PAIS = #codigoPais#
    		AND CUP_CUPON_NIVEL.COD_PROG = #codigoPrograma#
     		AND CUP_CUPON_NIVEL.COD_NIVEL = #codigoNivel#
	  MINUS	
		SELECT CUP_EQUIV_MATR.COD_CUPON AS CODIGO,
 			 CUP_EQUIV_MATR.COD_CUPON AS DESCRIPCION
	   FROM CUP_EQUIV_MATR
	   where
			CUP_EQUIV_MATR.COD_PAIS = #codigoPais#
    		AND CUP_EQUIV_MATR.COD_PROG = #codigoPrograma#
    		AND CUP_EQUIV_MATR.COD_PERI = #codigoPeriodo#
     		AND CUP_EQUIV_MATR.COD_NIVEL = #codigoNivel#
 	</select>
		<select id="getCuponesPeriodoByNivel" parameterClass="java.util.Map" resultMap="baseResult">  
		SELECT CUP_EQUIV_MATR.COD_CUPON AS CODIGO,
 			 CUP_EQUIV_MATR.COD_CUPON AS DESCRIPCION
	   FROM CUP_EQUIV_MATR
	   where
			CUP_EQUIV_MATR.COD_PAIS = #codigoPais#
    		AND CUP_EQUIV_MATR.COD_PROG = #codigoPrograma#
    		AND CUP_EQUIV_MATR.COD_PERI = #codigoPeriodo#
     		AND CUP_EQUIV_MATR.COD_NIVEL = #codigoNivel#
 	</select>	
	<select id="getAniosCraPerio" parameterClass="java.util.Map" resultMap="baseResult">  
		SELECT DISTINCT VAL_ANIO AS CODIGO,
						VAL_ANIO AS DESCRIPCION
		FROM SEG_PERIO_CORPO
 	</select>		
	<select id="getOidMarcaByCodigoMarcaGenerico" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#) FROM DUAL
	</select>
		<select id="getOidCanalByCodigoCanalGenerico" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#) FROM DUAL
	</select>	

    <select id="getNivelesByConcurso" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT PNP.NUM_NIVE AS CODIGO, 
			   'Nivel ' || PNP.NUM_NIVE AS DESCRIPCION 
		 FROM  INC_CONCU_PARAM_GENER CPG,
			   INC_PARAM_GENER_PREMI PGP,
			   INC_PARAM_NIVEL_PREMI PNP
		 WHERE PGP.COPA_OID_PARA_GRAL = CPG.OID_PARA_GRAL     
			   AND PNP.PAGP_OID_PARA_GENE_PREM =  PGP.OID_PARA_GENE_PREM		   
               AND CPG.NUM_CONC = #numeroConcurso#
         ORDER BY 1 ASC
	</select>
    
    <select id="getNumeroRegionesCerradas" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	
		SELECT COUNT( DISTINCT(OID_REGI) )
		FROM FAC_CONTR_CIERR, FAC_TIPOS_CIERR,
 		 ZON_REGIO
		WHERE FAC_CONTR_CIERR.zorg_oid_regi IS NOT NULL
		  AND ZON_REGIO.OID_REGI= FAC_CONTR_CIERR.ZORG_OID_REGI
		  <iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
				(ZON_REGIO.COD_REGI = #codigoRegion[]#)      	 		
          </iterate>
		  AND FAC_CONTR_CIERR.PERD_OID_PERI 
            IN ( SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#) FROM DUAL )
		  AND FAC_CONTR_CIERR.TCIE_OID_TIPO_CIER = FAC_TIPOS_CIERR.OID_TIPO_CIER
		  AND FAC_TIPOS_CIERR.COD_TIPO_CIER = 'R'
	
	</select>
	<!-- OBTIENE LA RELACION DE TIPOS DE SOLICITUD PAIS -->
    <select id="getTiposSolicitudPais" parameterClass="string" resultMap="baseResult">
		SELECT P.OID_TIPO_SOLI_PAIS CODIGO, 
		   GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(P.OID_TIPO_SOLI_PAIS,'PED_TIPO_SOLIC_PAIS',#codigoISO#) DESCRIPCION
		FROM PED_TIPO_SOLIC_PAIS P
    </select>
	
    <!-- verifica si ya existe consultora en bd -->
	
    <select id="getConsultoraExistenteByCriteria" parameterClass="java.util.Map"  resultMap="baseResult">
	    SELECT PED_SOLIC_DIGIT_CABEC.COD_CLIE AS CODIGO,
		       PED_SOLIC_DIGIT_CABEC.COD_PAIS AS DESCRIPCION
	    FROM PED_SOLIC_DIGIT_CABEC
        WHERE 
			PED_SOLIC_DIGIT_CABEC.COD_PAIS = #codigoPais#
			<isNotEmpty prepend="AND" property="codigoPeriodo">
				PED_SOLIC_DIGIT_CABEC.COD_PERI = #codigoPeriodo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoConsultora">
				PED_SOLIC_DIGIT_CABEC.COD_CLIE = #codigoConsultora#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fechaFacturacion">
				TO_CHAR(PED_SOLIC_DIGIT_CABEC.FEC_SOLI, 'DD/MM/YYYY') = #fechaFacturacion#
			</isNotEmpty>
    </select>
	
	<!-- Extrae el numero de lote por defecto teniendo como parametro el codigo de pais -->
	<select id="getNumeroLoteByCriteria" parameterClass="java.util.Map"  resultMap="baseResult">
	    SELECT BAS_CONTR.NUM_LOTE AS CODIGO,
		       BAS_CONTR.PAIS_COD_PAIS AS DESCRIPCION
	    FROM BAS_CONTR
        WHERE 
			BAS_CONTR.PAIS_COD_PAIS = #codigoPais#
    </select>
	
    <select id="getPeriodosCorporativosPorTipo" parameterClass="string" resultMap="baseResult">
		SELECT   peco.cod_peri CODIGO, peco.cod_peri DESCRIPCION
		    FROM seg_perio_corpo peco, seg_tipo_perio tp
		   WHERE peco.tipe_oid_tipo_peri = tp.oid_tipo_peri
		         AND tp.cod_tipo_peri = #value#
		ORDER BY peco.cod_peri
    </select>
	
		<!-- OBTIENE LOS CODIGOS DE COMISION-->
	<select id="getListCodComision" parameterClass="string" resultMap="baseResult">
		SELECT COD_COMI AS CODIGO,
		       DES_COMI AS DESCRIPCION
		  FROM COM_DATOS_COMIS
      WHERE COD_PAIS = #value#
      ORDER BY 2 ASC
	</select>
	
	<select id="getZonasMultipleByPaisMarcaCanalRegionOid" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_REGIO
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>		
			<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 		ZON_REGIO.OID_REGI = #codigoRegion[]#
            </iterate>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>
<select id="getTiposOperaByOperaByReporte" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS CODIGO,
       	   REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS DESCRIPCION
	FROM   REC_TIPOS_OPERA, 
    	   REC_OPERA
	WHERE  REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
       	   AND REC_OPERA.COD_OPER =  #codigoOperacion#
		   AND REC_OPERA.PAIS_OID_PAIS = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)  
 </select>
 
  <!-- OBTIENE EL TIPO DE MOVIMIENTO -->
    <select id="getTipoMovimiento" parameterClass="java.util.Map" resultMap="baseResult">
	    SELECT OID_TIPO_MOVI AS CODIGO, 
	     CASE
	        WHEN OID_TIPO_MOVI  = '1' THEN 'Envia'
	        WHEN OID_TIPO_MOVI  = '2' THEN 'Devuelve'
	      ELSE 'OTRO'
	      END AS DESCRIPCION
		FROM REC_TIPO_MOVIM
	</select>

	  <select id="getEstado" parameterClass="java.util.Map" resultMap="baseResult"> 
		select R.COD_ESTA AS CODIGO ,G.VAL_I18N AS DESCRIPCION
		from rec_estad_recla r,
		GEN_I18N_SICC_COMUN G 
		WHERE VAL_OID = OID_ESTA_RECL 
		AND ATTR_ENTI = 'REC_ESTAD_RECLA'
	</select>	
	<select id="getTiposOperaByOperaDes" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT  REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS CODIGO,
       	   REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS DESCRIPCION
	FROM   REC_TIPOS_OPERA, 
    	   REC_OPERA
	WHERE  REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
       	   AND REC_OPERA.COD_OPER =  #codigoOperacion#
		   AND REC_OPERA.PAIS_OID_PAIS = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)  

 </select>


	<!-- OBTIENE DATOS DEL CONCURSO DE ACUERDO AL CONCURSO SELECCIONADO -->
    <select id="getConcursosVigentesByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT cpg.oid_para_gral as CODIGO, cpg.num_conc || ' - ' || cpg.val_nomb as DESCRIPCION
		  FROM INC_CONCU_PARAM_GENER cpg, INC_VERSI_CONCU ver, SEG_PAIS pai, SEG_MARCA mar, SEG_CANAL can
		 WHERE cpg.PAIS_OID_PAIS = pai.OID_PAIS
		   AND cpg.MARC_OID_MARC = mar.OID_MARC
		   AND cpg.CANA_OID_CANA = can.OID_CANA
		   AND cpg.OID_PARA_GRAL = ver.COPA_OID_PARA_GRAL
		   AND ( (cpg.IND_ACTI = 1 AND ver.VICO_OID_VIGE_CONC = 1) OR
                 (cpg.IND_ACTI = 0 AND ver.VICO_OID_VIGE_CONC = 6) 
               )
		   AND pai.COD_PAIS = #codigoPais#
		   AND mar.COD_MARC = #codigoMarca#
		   AND can.COD_CANA = #codigoCanal#
		ORDER BY 2    
    </select>
    
    <!-- OBTIENE CONCURSOS VIGENTES Y CERRADOS-->
    <select id="getConcursosVigentesCerradosByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
		select cpg.oid_para_gral as CODIGO,
		       cpg.num_conc || ' - ' || cpg.val_nomb as DESCRIPCION
		  from inc_concu_param_gener cpg,
		       inc_versi_concu       vc,
		       SEG_PAIS              pai,
		       SEG_MARCA             mar,
		       SEG_CANAL             can
		 where cpg.PAIS_OID_PAIS = pai.OID_PAIS
		   AND cpg.MARC_OID_MARC = mar.OID_MARC
		   AND cpg.CANA_OID_CANA = can.OID_CANA
		   AND cpg.oid_para_gral = vc.copa_oid_para_gral
		   and ((ind_acti = 1 and vc.vico_oid_vige_conc = 1) or
		       (ind_acti = 0 and vc.vico_oid_vige_conc = 6))
		   AND pai.COD_PAIS = #codigoPais#
		   AND mar.COD_MARC = #codigoMarca#
		   AND can.COD_CANA = #codigoCanal#
		   ORDER BY 2    
    </select>

	<select id="getTiposOperaByOperaDesList" parameterClass="java.util.Map" resultMap="baseResult">
		
	SELECT  REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS CODIGO,
       	   REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS DESCRIPCION
	FROM   REC_TIPOS_OPERA, 
    	   REC_OPERA
	WHERE  REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
			<iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER = #codigoOperacion[]#
      		</iterate>       	   
		   AND REC_OPERA.PAIS_OID_PAIS = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)  
	 </select>
    
	<!-- OBTIENE DATOS DEL CONCURSO DE ACUERDO AL CONCURSO SELECCIONADO -->
    <select id="getConcursos2ByPaisMarcaCanal" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT cpg.oid_para_gral as CODIGO, cpg.num_conc || ' - ' || cpg.val_nomb as DESCRIPCION
		  FROM INC_CONCU_PARAM_GENER cpg, INC_VERSI_CONCU ver, SEG_PAIS pai, SEG_MARCA mar, SEG_CANAL can
		 WHERE cpg.PAIS_OID_PAIS = pai.OID_PAIS
		   AND cpg.MARC_OID_MARC = mar.OID_MARC
		   AND cpg.CANA_OID_CANA = can.OID_CANA
		   AND cpg.OID_PARA_GRAL = ver.COPA_OID_PARA_GRAL
		   AND pai.COD_PAIS = #codigoPais#
		   AND mar.COD_MARC = #codigoMarca#
		   AND can.COD_CANA = #codigoCanal#
		ORDER BY 2    
    </select> 	  
        <select id="getTiposRecepcionMICAOCSWebDD" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT T.COD_INTE CODIGO,
       T.DES_INTE DESCRIPCION
	  FROM BAS_INTER T
	 WHERE EST_INTE = 1
	   AND T.COD_INTE IN ('EVI-P1', 'OCR-P9', 'OCR-P14')
	 ORDER BY T.COD_INTE
	</select>
	<select id="getTiposRecepcionMICAOCSDemandaWebDD" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT T.COD_INTE CODIGO,
       T.DES_INTE DESCRIPCION
	  FROM BAS_INTER T
	 WHERE EST_INTE = 1
	   AND T.COD_INTE IN ('EVI-P1', 'OCR-P11')
	 ORDER BY T.COD_INTE
	</select>
	<!-- OBTIENE LOS ESTADOS PARA EL REPORTE SALDOS POR CONSULTORA  -->
    <select id="getEstadoSaldoConsultora" parameterClass="java.util.Map" resultMap="baseResult">
    	SELECT MEC.OID_ESTA_CLIE AS CODIGO,
    		   GISC.VAL_I18N AS DESCRIPCION
    	FROM   MAE_ESTAT_CLIEN MEC,
    		   GEN_I18N_SICC_COMUN GISC
    	WHERE  MEC.OID_ESTA_CLIE = GISC.VAL_OID
    	  AND  GISC.ATTR_ENTI = 'MAE_ESTAT_CLIEN'
	    ORDER BY 2 ASC
    </select>
    
    <select id="getConcursosByPaisMarcaCanalDetallePremiosElec" parameterClass="java.util.Map" resultMap="baseResult">
    	select cpg.NUM_CONC AS CODIGO,         
				cpg.NUM_CONC || ' - '|| cpg.VAL_NOMB AS DESCRIPCION
		from inc_concu_param_gener cpg
		,inc_param_gener_premi pgp
		where cpg.ind_acti = 1
		and cpg.oid_para_gral = pgp.copa_oid_para_gral
		and pgp.ind_prem_elec = 1
		<isNotEmpty property="codigoMarca">
			and cpg.marc_oid_marc = gen_pkg_gener.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#)
		</isNotEmpty>
		
		<isNotEmpty property="codigoCanal">
			and cpg.cana_oid_cana = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#)
		</isNotEmpty>
		
		order by cpg.num_conc
    </select>

    <select id="getTiposInterfazSMS" parameterClass="java.util.Map" resultMap="baseResult">
     	SELECT 	T.COD_INTE CODIGO,
         		T.DES_INTE DESCRIPCION
	  	  FROM 	BAS_INTER T
	 	 WHERE 	EST_INTE = 1
	       AND 	T.COD_INTE IN ('SMS-P1', 'SMS-P2')
	 ORDER BY 	T.COD_INTE
	</select>
	
	<select id="getOidConcursoByNumConc" parameterClass="java.lang.String" resultClass="java.lang.String">
		select OID_PARA_GRAL from INC_CONCU_PARAM_GENER where NUM_CONC = #value# 
	</select>
	
	<select id="getOidConcursosList" parameterClass="java.util.Map" resultMap="baseResultOID">
		SELECT OID_PARA_GRAL OID , 
		       c.num_conc || '  ' || c.val_nomb DESCRIPCION
		FROM inc_concu_param_gener c, 
		     inc_param_gener_premi p,
		     inc_versi_concu v
	    WHERE c.oid_para_gral = p.copa_oid_para_gral
		AND p.tprm_oid_tipo_pion = 1
		AND c.OID_PARA_GRAL = v.COPA_OID_PARA_GRAL
		AND (c.ind_acti = 1 or v.VICO_OID_VIGE_CONC = 6)
		order by 1 desc
  	</select>
  	
  	<select id="getOidRegionByPaisMarcaCanal" parameterClass="java.util.Map" resultClass="java.lang.Integer">
  		select GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_REGION(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoRegion#) from dual
  	</select>
  	
  	<select id="getOidZonaByPaisMarcaCanalRegion" parameterClass="java.util.Map" resultClass="java.lang.Integer">
  		select GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoRegion#,#codigoZona#) from dual
  	</select>
  	
  	<select id="getOidSeccionByPaisMarcaCanalZona" parameterClass="java.util.Map" resultClass="java.lang.Integer">
  		select ZC.OID_SECC
		  from ZON_SECCI ZC
		 WHERE ZC.ZZON_OID_ZONA = #oidZona#
		   AND ZC.COD_SECC = #codigoSeccion#
  	</select>
  	
  	<select id="getRegionesByPaisLet" parameterClass="java.util.Map" resultMap="baseResult">
  		SELECT DISTINCT ZON_REGIO.COD_REGI AS CODIGO, 
               UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
		FROM   SEG_PAIS,
		       ZON_REGIO
		WHERE SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS 
		AND   SEG_PAIS.COD_PAIS = #codigoPais#
		ORDER BY 2 ASC
  	</select>
  	
  	<select id="getZonasByPaisRegionLet" parameterClass="java.util.Map" resultMap="baseResult">
  		SELECT NVL(ZON_ZONA.COD_ZONA,' ') AS CODIGO, 	   
		       NVL(ZON_ZONA.COD_ZONA,' ') AS DESCRIPCION
		FROM   ZON_ZONA,
		       SEG_PAIS,
		       ZON_REGIO
		WHERE (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		AND   (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		AND   (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
		AND   (ZON_REGIO.COD_REGI = #codigoRegion#)
		ORDER BY 1
  	</select>
  	
  	<!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION -->
    <select id="getDesZonasByPaisMarcaCanalRegion" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_REGIO
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoRegion">
				(ZON_REGIO.COD_REGI = #codigoRegion#)
			</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	       )
	       ORDER BY 3
    </select>
	
    <select id="getConcursosByPaisMarcaCanalAnhioTodos" parameterClass="java.util.Map" resultMap="baseResult">
			SELECT   
				INC_CONCU_PARAM_GENER.NUM_CONC AS CODIGO,         
				INC_CONCU_PARAM_GENER.NUM_CONC || ' - '|| INC_CONCU_PARAM_GENER.VAL_NOMB AS DESCRIPCION,
				PERI_DESDE.COD_PERI AS DESDE,        
				PERI_HASTA.COD_PERI AS HASTA 
					FROM 
			       SEG_PAIS,
			       SEG_CANAL,
			       SEG_MARCA,
					INC_CONCU_PARAM_GENER,
					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL, SEG_PERIO_CORPO.COD_PERI FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
			       INC_CONCU_PARAM_GENER			     
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_DESD=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_DESDE,

					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL,SEG_PERIO_CORPO.COD_PERI  FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
				        INC_CONCU_PARAM_GENER
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_HAST=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_HASTA,
				    inc_versi_concu,INC_PARAM_GENER_PREMI
			 WHERE (   
			     (SEG_CANAL.OID_CANA = INC_CONCU_PARAM_GENER.CANA_OID_CANA)             
			        AND (SEG_MARCA.OID_MARC = INC_CONCU_PARAM_GENER.MARC_OID_MARC)
			        AND (SEG_PAIS.OID_PAIS = INC_CONCU_PARAM_GENER.PAIS_OID_PAIS)
					AND (PERI_DESDE.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
					AND (PERI_HASTA.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
 					AND (inc_versi_concu.copa_oid_para_gral = INC_CONCU_PARAM_GENER.oid_para_gral)
					AND (INC_PARAM_GENER_PREMI.COPA_OID_PARA_GRAL = INC_CONCU_PARAM_GENER.oid_para_gral)
					AND (IND_ACTI IN (0,1))
  		 	    <![CDATA[
					AND (VICO_OID_VIGE_CONC <>4)
			 	]]>
					AND (SEG_PAIS.COD_PAIS = #codigoPais#)
					AND SUBSTR(PERI_DESDE.COD_PERI,1,4)= #anhio#
	   			<isNotEmpty prepend="AND" property="codigoMarca">
			    	(SEG_MARCA.COD_MARC = #codigoMarca#)
			  	</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoCanal">
				    (SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>	  
				<isNotEmpty prepend="AND" property="codigoPeriodo">
		  			( #codigoPeriodo# BETWEEN PERI_DESDE.COD_PERI AND PERI_HASTA.COD_PERI )
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="baseCalculo">
		  			( INC_CONCU_PARAM_GENER.BCAL_OID_BASE_CALC= #baseCalculo# )
				</isNotEmpty>
			       )
			       order by INC_CONCU_PARAM_GENER.NUM_CONC
    </select>
	
	<resultMap id="paramsDatosProcesoBatch" class="java.util.HashMap">
	    <result property="fechaFin" 				column="FEC_FIN"/>
	    <result property="codigoFinalizacion" 		column="VAL_CODI_FINA" javaType="java.lang.String"/>
	    <result property="mensajeFinalizacion"		column="VAL_MENS_FINA"/>
    </resultMap>
	
	<select id="getDatosProcesoBatchSICC" parameterClass="string" resultMap="paramsDatosProcesoBatch">
		SELECT TO_CHAR(FEC_FIN,'dd/MM/yyyy') FEC_FIN, 
		       VAL_CODI_FINA, 
		       VAL_MENS_FINA
		  FROM GEN_PROCE_BATCH
		 WHERE COD_PROC = #value# 
	</select>
	
	<select id="getParametrosPais" parameterClass="parametroPais" resultMap="parametroPaisResult">
		SELECT COD_PAIS,
		       COD_SIST,
		       COD_PARA,
		       NOM_PARA,
		       VAL_PARA,
		       OBS_PARA,
		       IND_ACTI
		  FROM BAS_PARAM_PAIS
		 WHERE 1=1 
		  <isNotEmpty  prepend="AND"  property="codigoPais">
		    COD_PAIS = NVL(#codigoPais#, COD_PAIS)
		    </isNotEmpty>
		 
		 <isNotEmpty prepend="AND" property="codigoSistema">
		   COD_SIST = #codigoSistema#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="codigoParametro">
		   COD_PARA = #codigoParametro#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="nombreParametro">
		   NOM_PARA = #nombreParametro#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="valorParametro">
		   VAL_PARA = #valorParametro#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="observacionParametro">
		   OBS_PARA = #observacionParametro#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="indicadorActivo">
		   IND_ACTI = #indicadorActivo#
		 </isNotEmpty>
	</select>
	
    <select id="getPeriodoFechaCampanyaActiva" resultMap="controlFacturacionMapResult">
		SELECT  
		COD_PERI AS PERIODO, 
		TO_CHAR(FEC_PROC, 'YYYYMMDD') AS FECHA
		FROM   BAS_CTRL_FACT
		WHERE  STA_CAMP  =  0
		AND IND_CAMP_ACT = 1 
    </select>
	
    <select id="getPeriodoFechaCampanyaActivaSF" parameterClass="java.util.Map" resultMap="controlFacturacionMapResult">
		<isEqual property="codigoConexionExterna" compareValue="FOX">
			 SELECT CAM_PROC AS PERIODO, TO_CHAR(FEC_PROC, 'dd/mm/yyyy') AS FECHA
			 FROM   ZON_DIREC_CNTRL_FACTU
			 WHERE  EST_CAMP  =  #estadoCampanha#
			        AND IND_CAMP_ACTI = #indicadorActiva#  
		            AND PAIS_COD_PAIS = #codigoPais#  
	 	</isEqual>
		       
		<isNotEqual property="codigoConexionExterna" compareValue="FOX">
			SELECT COD_PERI AS PERIODO, TO_CHAR(FEC_PROC, 'dd/mm/yyyy') AS FECHA
				FROM BAS_CTRL_FACT
				WHERE STA_CAMP  =  #estadoCampanha#
				AND IND_CAMP_ACT = #indicadorActiva#
				AND COD_PAIS = #codigoPais#
	 	</isNotEqual>
    </select>
    
    <select id="getCargoBaseById" parameterClass="java.util.Map" resultMap="cargobaseResult">
   		SELECT ztc.cod_tipo_carg as CODIGO, 
   			   ztc.cod_tipo_carg||'-'||ztc.des_tipo_carg as DESCRIPCION
		from zon_tipo_cargo ztc
		where ztc.cod_tipo_carg_base is null
		and ztc.est_regi = #estado#
		and ztc.cod_tipo_carg = #codigoCargo#
		order by cod_tipo_carg, des_tipo_carg asc
   </select>
    
	
    <select id="getPeriodoNSiguiente" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(#codigoPais#,#codigoPeriodo#,#numeroPeriodo#) FROM DUAL
   	</select>
	
   	<select id="getPeriodoByFecha" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_PERIO_FECHA2(#codigoPais#,#codigoMarca#,#codigoCanal#,#fecha#) FROM DUAL
   	</select>
	
   	<select id="getPeriodoByFechaFox" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_PERIO_FECFOX(#codigoPais#,#fecha#) FROM DUAL
   	</select>
	
    <select id="getTiposRecepcionXRX" parameterClass="java.util.Map" resultMap="baseResult">
     select 
            t.cod_inte AS CODIGO, 
            t.des_inte AS DESCRIPCION
     from bas_inter t 
     where est_inte=1
       and (t.cod_inte = #codigoInterfaz1# or 
            t.cod_inte = #codigoInterfaz2# )
	order by t.cod_inte
	</select>

	<select id="getSubTipoClienteMultipleByOidTipoCliente" parameterClass="java.util.Map" resultMap="baseResultOID">
		select c.oid_subt_clie as oid,b.val_i18n as descripcion
		from mae_subti_clien c,gen_i18n_sicc_comun b
		where c.oid_subt_clie=b.val_oid
		and b.attr_enti='MAE_SUBTI_CLIEN'
		<iterate prepend="AND" property="oidTipoCliente" open="(" close=")" conjunction="OR">
			c.ticl_oid_tipo_clie = #oidTipoCliente[]#
        </iterate>
	</select>
	
	<select id="getTipoClasificacionMultipleByOidSubTipoCliente" parameterClass="java.util.Map" resultMap="baseResultOID">
		select d.oid_tipo_clas as oid,b.val_i18n as descripcion
		from mae_tipo_clasi_clien d,gen_i18n_sicc_comun b
		where d.oid_tipo_clas = b.val_oid
		and b.attr_enti = 'MAE_TIPO_CLASI_CLIEN'
		<iterate prepend="AND" property="oidSubTipoCliente" open="(" close=")" conjunction="OR">
			d.sbti_oid_subt_clie = #oidSubTipoCliente[]#
        </iterate>
	</select>
	
	<select id="getClasificacionMultipleByOidTipoClasificacion" parameterClass="java.util.Map" resultMap="baseResultOID">
		select e.oid_clas as oid,b.val_i18n as descripcion
		from mae_clasi e,gen_i18n_sicc_comun b
		where e.oid_clas = b.val_oid
		and b.attr_enti = 'MAE_CLASI'
		<iterate prepend="AND" property="oidTipoClasificacion" open="(" close=")" conjunction="OR">
      	 	e.tccl_oid_tipo_clas = #oidTipoClasificacion[]#
        </iterate>
	</select>
	
	<select id="getRegionByZona" parameterClass="java.util.Map" resultMap="baseResult">
		 SELECT NVL(ZON_REGIO.COD_REGI, ' ') AS CODIGO, 	   
				    NVL(ZON_REGIO.DES_REGI, ' ') AS DESCRIPCION,
				    NVL(ZON_REGIO.COD_REGI, 'ZZ') 
			 FROM  ZON_ZONA,
			       SEG_PAIS,
			       SEG_CANAL,
			       SEG_MARCA,
			       ZON_REGIO
			 WHERE (  (ZON_ZONA.IND_ACTI = 1)
		              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
					<isNotEmpty prepend="AND" property="codigoMarca">
						(SEG_MARCA.COD_MARC = #codigoMarca#)
					</isNotEmpty>              
					<isNotEmpty prepend="AND" property="codigoCanal">
						(SEG_CANAL.COD_CANA = #codigoCanal#)
					</isNotEmpty>		
		     	<isNotEmpty prepend="AND" property="codigoZona">
						(ZON_ZONA.COD_ZONA = #codigoZona#)
					</isNotEmpty>			
			        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
			        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
			        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
			        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
			        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
			        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
			       )
			       ORDER BY 3
    </select>
    
    <!-- OBTIENE LA RELACION DE REGIONES DE PROGRAMA EJECUTIVAS-->
    <select id="getRegionesPEJ" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT NVL(C.COD_REGI, ' ') AS CODIGO,
		                NVL(C.COD_REGI, ' ')|| ' - ' ||UPPER(NVL(C.DES_REGI, ' ')) AS DESCRIPCION
		  FROM ZON_SECCI A, ZON_ZONA B, ZON_REGIO C
		 WHERE A.ZZON_OID_ZONA = B.OID_ZONA
		   AND B.ZORG_OID_REGI = C.OID_REGI
		   AND A.IND_ACTI = 1
		   AND A.IND_BORR = 0
		   AND B.IND_ACTI = 1
		   AND B.IND_BORR = 0
		   AND C.IND_ACTI = 1
		   AND C.IND_BORR = 0
		 ORDER BY CODIGO
    </select>
    
    <!-- OBTIENE LA RELACION DE ZONAS POR REGION DE PROGRAMA EJECUTIVAS-->
    <select id="getZonasRegionPEJ" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT NVL(B.COD_ZONA, ' ') AS CODIGO,
		                UPPER(NVL(B.DES_ZONA, ' ')) AS DESCRIPCION
		  FROM ZON_SECCI A, ZON_ZONA B, ZON_REGIO C
		 WHERE A.ZZON_OID_ZONA = B.OID_ZONA
		   AND B.ZORG_OID_REGI = C.OID_REGI
		   AND A.IND_ACTI = 1
		   AND A.IND_BORR = 0
		   AND B.IND_ACTI = 1
		   AND B.IND_BORR = 0
		   AND C.IND_ACTI = 1
		   AND C.IND_BORR = 0
			<isNotEmpty prepend="AND" property="codigoRegion">
		  (C.COD_REGI = #codigoRegion#)
			</isNotEmpty>
		
		<isNotEmpty property="oidPeriodo">
			AND b.cod_zona IN (
                       SELECT DISTINCT zzon.cod_zona
                         FROM ped_solic_cabec_acum2 sca2,
                              mae_clien_unida_admin cuad,
                              zon_terri_admin ztad,
                              zon_secci zscc,
                              zon_zona zzon
                        WHERE sca2.clie_oid_clie = cuad.clie_oid_clie
                          AND cuad.ztad_oid_terr_admi = ztad.oid_terr_admi
                          AND ztad.zscc_oid_secc = zscc.oid_secc
                          AND zscc.zzon_oid_zona = zzon.oid_zona
                          AND sca2.perd_oid_peri = #oidPeriodo#
                          AND #oidPeriodo# BETWEEN cuad.perd_oid_peri_ini AND NVL(cuad.perd_oid_peri_fin,#oidPeriodo#)
                     )

		</isNotEmpty>

		 ORDER BY CODIGO
    </select>
    
    <!-- OBTIENE LA RELACION DE SECCIONES POR ZONA DE PROGRAMA EJECUTIVAS-->
    <select id="getSeccionesZonaPEJ" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT NVL(A.COD_SECC, ' ') AS CODIGO,
		                UPPER(NVL(A.DES_SECCI, ' ')) AS DESCRIPCION
		  FROM ZON_SECCI A, ZON_ZONA B, ZON_REGIO C
		 WHERE A.ZZON_OID_ZONA = B.OID_ZONA
		   AND B.ZORG_OID_REGI = C.OID_REGI
		   AND A.IND_ACTI = 1
		   AND A.IND_BORR = 0
		   AND B.IND_ACTI = 1
		   AND B.IND_BORR = 0
		   AND C.IND_ACTI = 1
		   AND C.IND_BORR = 0
				<isNotEmpty prepend="AND" property="codigoZona">
		  (B.COD_ZONA = #codigoZona#)
				</isNotEmpty>
		 ORDER BY CODIGO
	</select>
	
	<select id="getSeccionesZonaPEJTodos" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT NVL(B.COD_ZONA, ' ')||'-'||NVL(A.COD_SECC, ' ') AS CODIGO,
		                UPPER(NVL(A.DES_SECCI, ' ')) AS DESCRIPCION
		  FROM ZON_SECCI A, ZON_ZONA B, ZON_REGIO C
		 WHERE A.ZZON_OID_ZONA = B.OID_ZONA
		   AND B.ZORG_OID_REGI = C.OID_REGI
		   AND A.IND_ACTI = 1
		   AND A.IND_BORR = 0
		   AND B.IND_ACTI = 1
		   AND B.IND_BORR = 0
		   AND C.IND_ACTI = 1
		   AND C.IND_BORR = 0
		<isNotEmpty prepend="AND" property="codigoZona">
		  (B.COD_ZONA = #codigoZona#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoRegion">
		  (C.COD_REGI = #codigoRegion#)
		</isNotEmpty>
		 ORDER BY CODIGO
	</select>
	
    <!-- OBTIENE LA RELACION DE REGIONES POR PAIS DE PROGRAMA EJECUTIVAS-->
    <select id="getRegionesByPaisPEJ" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZON_REGIO.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) AS DESCRIPCION
	  	FROM 	SEG_PAIS,
	       		SEG_MARCA,
	       		SEG_CANAL,
	       		ZON_REGIO,
	       		EJE_UNIDA_ADMIN
	 	WHERE (	(ZON_REGIO.IND_ACTI = 1)
		  		<isNotEmpty prepend="AND" property="codigoPais">
          	  		(SEG_PAIS.COD_PAIS = #codigoPais#) 
    	  		</isNotEmpty>
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (EJE_UNIDA_ADMIN.COD_REGI = ZON_REGIO.COD_REGI)
    		AND (EJE_UNIDA_ADMIN.IND_ACTI = 1)
	        )
	    ORDER BY 2 ASC
    </select>
    
    <!-- OBTIENE LA RELACION DE ZONAS POR PAIS CANAL Y REGION DE PROGRAMA EJECUTIVAS-->
    <select id="getZonasByPaisMarcaCanalRegionPEJ" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT NVL(ZON_ZONA.COD_ZONA, ' ') AS CODIGO, 	   
		    NVL(ZON_ZONA.COD_ZONA, ' ') AS DESCRIPCION,
		    NVL(ZON_ZONA.COD_ZONA, 'ZZ') 
	 FROM  ZON_ZONA,
	       SEG_PAIS,
	       SEG_CANAL,
	       SEG_MARCA,
	       ZON_REGIO,
	       EJE_UNIDA_ADMIN
	 WHERE (  (ZON_ZONA.IND_ACTI = 1)
              AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
			<isNotEmpty prepend="AND" property="codigoMarca">
				(SEG_MARCA.COD_MARC = #codigoMarca#)
			</isNotEmpty>              
			<isNotEmpty prepend="AND" property="codigoCanal">
				(SEG_CANAL.COD_CANA = #codigoCanal#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoRegion">
				(EJE_UNIDA_ADMIN.COD_REGI = #codigoRegion#)
			</isNotEmpty>
	        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
	        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
	        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
	        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
	        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
	        AND (ZON_REGIO.COD_REGI = EJE_UNIDA_ADMIN.COD_REGI)
        	AND (ZON_ZONA.COD_ZONA = EJE_UNIDA_ADMIN.COD_ZONA)
	       )
	       ORDER BY 3
    </select>
    
    <!-- OBTIENE LA RELACION DE SECCIONES POR PAIS CANAL REGION Y ZONA DE PROGRAMA EJECUTIVAS-->
    <select id="getSeccionesByPaisMarcaCanalRegionZonaPEJ" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT NVL(ZON_SECCI.COD_SECC, ' ') AS CODIGO, 	   
			   NVL(ZON_SECCI.DES_SECCI, ' ') AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI,
			   EJE_UNIDA_ADMIN
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoRegion">
					(ZON_REGIO.COD_REGI = #codigoRegion#)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoZona">
					(ZON_ZONA.COD_ZONA = #codigoZona#)
				</isNotEmpty>
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)	
		        AND (ZON_REGIO.COD_REGI = EJE_UNIDA_ADMIN.COD_REGI)
		        AND (ZON_ZONA.COD_ZONA = EJE_UNIDA_ADMIN.COD_ZONA)
		        AND (ZON_SECCI.COD_SECC = EJE_UNIDA_ADMIN.COD_SECC)		
		       ORDER BY 2
	</select>
	
	<select id="getSeccionMultiple2ByPaisMarcaCanalRegionZona" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT ZON_ZONA.COD_ZONA || '__' || ZON_SECCI.COD_SECC AS CODIGO, 	   
			   NVL(ZON_SECCI.DES_SECCI, ' ') AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			ZON_REGIO.COD_REGI = #codigoRegion[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA = #codigoZona[]#
            	</iterate> 				
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)			
		       ORDER BY 1
	</select>
	
	<select id="getTerritoriosMultiple2ByPaisMarcaCanalRegionZonaSeccion" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT ZON_TERRI.COD_TERR AS CODIGO, 	   
			   ZON_TERRI.COD_TERR AS DESCRIPCION 
		 FROM  ZON_ZONA,
		       SEG_PAIS,
		       SEG_CANAL,
		       SEG_MARCA,
		       ZON_REGIO,
			   ZON_SECCI,
			   ZON_TERRI,
			   ZON_TERRI_ADMIN
		 WHERE ZON_SECCI.IND_ACTI = 1
		        AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<isNotEmpty prepend="AND" property="codigoMarca">
					(SEG_MARCA.COD_MARC = #codigoMarca#)
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="codigoCanal">
					(SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>
				<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			ZON_REGIO.COD_REGI = #codigoRegion[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA = #codigoZona[]#
            	</iterate> 
				<iterate prepend="AND" property="codigoSeccion" open="(" close=")" conjunction="OR">
      	 			ZON_ZONA.COD_ZONA || '__' || ZON_SECCI.COD_SECC = #codigoSeccion[]#
            	</iterate> 						
				AND (SEG_PAIS.OID_PAIS = ZON_TERRI_ADMIN.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_TERRI_ADMIN.MARC_OID_MARC)
		        AND (SEG_CANAL.OID_CANA = ZON_TERRI_ADMIN.CANA_OID_CANA)
		        AND (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC)
		        AND (ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR)
		        AND (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		        AND (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		        AND (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		        AND (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		        AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)
		        AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA)		
		       ORDER BY 2
	</select>
	
	<select id="getConcursosFaltantesByPaisMarcaCanalDetalle" parameterClass="java.util.Map" resultMap="baseResult">
			SELECT   
				INC_CONCU_PARAM_GENER.NUM_CONC AS CODIGO,         
				INC_CONCU_PARAM_GENER.NUM_CONC || ' - '|| INC_CONCU_PARAM_GENER.VAL_NOMB || 
			        (SELECT ' - Faltantes Pendientes'
			           FROM INC_BOLSA_FALTA       bol
			          WHERE bol.COPA_OID_PARA_GENE = aux.COPA_OID_PARA_GENE
			            AND bol.FEC_SOLU is null
			            AND ROWNUM=1) AS DESCRIPCION,
				PERI_DESDE.COD_PERI AS DESDE,        
				PERI_HASTA.COD_PERI AS HASTA 
					FROM 
			       SEG_PAIS,
			       SEG_CANAL,
			       SEG_MARCA,
					INC_CONCU_PARAM_GENER,
					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL, SEG_PERIO_CORPO.COD_PERI FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
			       INC_CONCU_PARAM_GENER			     
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_DESD=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_DESDE,

					(SELECT INC_CONCU_PARAM_GENER.OID_PARA_GRAL,SEG_PERIO_CORPO.COD_PERI  FROM 
				        CRA_PERIO,SEG_PERIO_CORPO, 
				        INC_CONCU_PARAM_GENER
					WHERE
				        INC_CONCU_PARAM_GENER.PERD_OID_PERI_HAST=CRA_PERIO.OID_PERI AND
				        CRA_PERIO.PERI_OID_PERI=SEG_PERIO_CORPO.OID_PERI)PERI_HASTA,
				    INC_PARAM_GENER_PREMI,
				    (SELECT DISTINCT bol.COPA_OID_PARA_GENE
                       FROM INC_BOLSA_FALTA       bol) aux
			 WHERE (   
			     (aux.COPA_OID_PARA_GENE = INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
			     AND (SEG_CANAL.OID_CANA = INC_CONCU_PARAM_GENER.CANA_OID_CANA)             
			        AND (SEG_MARCA.OID_MARC = INC_CONCU_PARAM_GENER.MARC_OID_MARC)
			        AND (SEG_PAIS.OID_PAIS = INC_CONCU_PARAM_GENER.PAIS_OID_PAIS)
					 AND (PERI_DESDE.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
					 AND (PERI_HASTA.OID_PARA_GRAL=INC_CONCU_PARAM_GENER.OID_PARA_GRAL)
					 AND (INC_PARAM_GENER_PREMI.COPA_OID_PARA_GRAL = INC_CONCU_PARAM_GENER.oid_para_gral)
					AND (SEG_PAIS.COD_PAIS = #codigoPais#)
	   			<isNotEmpty prepend="AND" property="codigoMarca">
			    	(SEG_MARCA.COD_MARC = #codigoMarca#)
			  	</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoCanal">
				    (SEG_CANAL.COD_CANA = #codigoCanal#)
				</isNotEmpty>	  
				<isNotEmpty prepend="AND" property="codigoPeriodo">
		  			( #codigoPeriodo# BETWEEN PERI_DESDE.COD_PERI AND PERI_HASTA.COD_PERI )
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="baseCalculo">
		  			( INC_CONCU_PARAM_GENER.BCAL_OID_BASE_CALC= #baseCalculo# )
				</isNotEmpty>
			       )
			       order by INC_CONCU_PARAM_GENER.NUM_CONC
    </select>
	
     
	<!-- OBTIENE LOS ESTADOS DE CONSULTORA POR REPORTE  -->
    <select id="getEstadosConsultoraByReporte" parameterClass="java.util.Map" resultMap="baseResult">
    	SELECT MEC.OID_ESTA_CLIE AS CODIGO,
    		   GISC.VAL_I18N AS DESCRIPCION
    	FROM   MAE_ESTAT_CLIEN MEC,
    		   GEN_I18N_SICC_COMUN GISC
    	WHERE  MEC.OID_ESTA_CLIE = GISC.VAL_OID
    	  AND  GISC.ATTR_ENTI = 'MAE_ESTAT_CLIEN'
    	<isNotEmpty property="codigoReporte" prepend="AND">
    	  	<isEqual property="codigoReporte" compareValue="5">
    	  		MEC.OID_ESTA_CLIE NOT IN (1,5,7)
    	  	</isEqual>
    	  	<isEqual property="codigoReporte" compareValue="6">
    	  		MEC.OID_ESTA_CLIE IN (1,5,7)
    	  	</isEqual>
    	</isNotEmpty>
    </select>
    
	<!-- OBTIENE LA MAXIMA FECHA DE LA TABLA TEMPORAL IMP_TMP_FELEC_CABEC  -->
    <select id="getFechaFacturacion" resultClass="java.lang.String">
    	SELECT TO_CHAR(MAX(TO_DATE(FEC_FACT,'DD/MM/YYYY')),'DD/MM/YYYY') FROM IMP_TMP_FELEC_CABEC
    </select>
	
    <!-- OBTIENE LA LISTA DE CENTROS DE ACOPIO -->
	<select id="getListaCentrosDeAcopio" parameterClass="java.util.Map"  resultMap="baseResult">
		select COD_CENT_ACOP as CODIGO, 
			   NOM_CENT_ACOP as DESCRIPCION  
		from sto_centr_acopi
    </select>
    
    <!-- OBTIENE LA LISTA DE CIA DE TRANSPORTES -->
	<select id="getListaCiaDeTransportes" parameterClass="java.util.Map"  resultMap="baseResult">
		select COD_COMP_TRAN as CODIGO, 
			   NOM_COMP_TRAN as DESCRIPCION  
		from sto_centr_acopi
    </select>
    
    <!-- OBTIENE LA LISTA DE ESTADOS INCENTIVOS-->
	<select id="getListaEstadosIncentivos" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT gsc.val_oid as CODIGO,
			   gsc.val_i18n as DESCRIPCION
          FROM gen_i18n_sicc_comun gsc
         WHERE gsc.attr_enti = 'MAE_ESTAT_CLIEN'
    </select>
    
    <!-- OBTIENE LA LISTA DE CONCURSOS BANCO DE SUEÑOS-->
	<select id="getListaConcursosBancoSuenhos" parameterClass="java.util.Map"  resultMap="baseResult">
		select copa.num_conc AS CODIGO,         
				copa.num_conc || ' - '|| copa.val_nomb AS DESCRIPCION
		  from inc_concu_param_gener copa, inc_param_gener_premi pagp
		 where copa.oid_para_gral = pagp.copa_oid_para_gral
		   and copa.BCAL_OID_BASE_CALC = 4 
		   and pagp.tprm_oid_tipo_pion = 1
    </select>
    
    <!-- OBTIENE LA LISTA DE CONCURSOS PREMIOS RECHAZADAS-->
	<select id="getListaConcursosPremiosRechazadas" parameterClass="java.util.Map"  resultMap="baseResult">		
		select distinct copa.num_conc AS CODIGO,
			   copa.num_conc || ' - '|| copa.val_nomb AS DESCRIPCION
		  from inc_concu_param_gener copa,
		       inc_param_gener_premi pagp,
		       inc_param_nivel_premi panp
		where copa.oid_para_gral = pagp.copa_oid_para_gral
		and   pagp.oid_para_gene_prem = panp.pagp_oid_para_gene_prem
		and   panp.val_nive_sele =1
		and   copa.ind_acti=1	
    </select>

    <!-- OBTIENE LA LISTA DE CONCURSOS PROYECCION GANADORAS-->
	<select id="getListaConcursosProyecionGanadoras" parameterClass="java.util.Map"  resultMap="baseResult">
		select copa.num_conc AS CODIGO,         
				copa.num_conc || ' - '|| copa.val_nomb AS DESCRIPCION
		 from inc_concu_param_gener copa
			where  copa.ind_acti=1
    </select>
    
  <!-- OBTIENE LA LISTA DE SITUACION CUPONES DE PAGO-->
	<select id="getListaSituacionCuponesPago" parameterClass="java.util.Map"  resultMap="baseResult">
		select ccc.oid_situ_cupo as CODIGO, 
			   ccc.val_desc_situ_cupo as DESCRIPCION
  		from CCC_SITUA_CUPON ccc
    </select>
    
    <!-- OBTIENE LA LISTA DE ASIENTOS-->
	<select id="getListaAsientos" parameterClass="java.util.Map"  resultMap="baseResult">
		Select distinct cod_asie as CODIGO, 
                cod_asie as DESCRIPCION 
        from int_sapfi_conf
    </select>
    
    <!-- OBTIENE LISTA FORMA DE PAGO-->
	<select id="getListaFormaPago" parameterClass="java.util.Map"  resultMap="baseResult">
		select a.val_oid CODIGO, a.val_i18n DESCRIPCION
		  from gen_i18n_sicc_comun a, bel_forma_pago b
		 where a.attr_enti = 'BEL_FORMA_PAGO'
		   and a.val_oid = b.oid_form_pago
		   and b.pais_oid_pais = #oidPais#
    </select>
    
    
    <!-- OBTIENE LA RELACION DE REGIONES A CERRAR -->
    <select id="getRegionesACerrar" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT
			   ZR.COD_REGI AS CODIGO, 
		   	   UPPER(NVL(ZR.DES_REGI, ' ')) AS DESCRIPCION
	        from fac_contr_cierr cc,
                  FAC_TIPOS_CIERR tc,
                  cra_perio cp,
                  zon_regio zr,
                  BAS_CTRL_FACT X,
                  seg_perio_corpo a
            where cc.tcie_oid_tipo_cier = tc.oid_tipo_cier
              and tc.cod_tipo_cier = 'R'
              and cc.val_resu_proc = 'OK'   
              AND X.STA_CAMP = '0'
              AND X.IND_CAMP_ACT = '1'
              and zr.oid_regi = cc.zorg_oid_regi
              and cc.perd_oid_peri = cp.oid_peri
              
              AND a.cod_peri = X.COD_PERI
              AND a.oid_peri = CP.peri_oid_peri
              AND cc.fec_cier = X.FEC_PROC
            
	    ORDER BY ZR.COD_REGI
    </select>
      <!-- OBTIENE LA LISTA DE TIPO DE PAGOS LEC-->
	<select id="getListaPagosLec" parameterClass="java.util.Map"  resultMap="baseResult">
		Select distinct COD_TIPO_PAGO as CODIGO, 
                DES_TIPO_PAGO as DESCRIPCION 
        from LEC_TIPO_PAGO
    </select>
    <!-- OBTIENE LA LISTA DE TIPO DE ANULACION-->
    <select id="getTiposOperacionIngresoAnulaciones" parameterClass="java.util.Map" resultMap="baseResult">      
      	select cod_oper      as CODIGO,
      	       val_desc_larg as DESCRIPCION
	      from rec_opera a
		 where a.cod_oper in(select cod_oper_anul 
		                       from REC_PARAM_ANULA)
		 <isNotEmpty prepend="AND" property="varOperAnul">
		  		  COD_OPER = #varOperAnul#
	    </isNotEmpty>       
 	</select> 
 	
  <!-- OBTIENE LA RELACION DE TIPOS DE REEMPLAZO -->
    <select id="getTipoReemplazo" parameterClass="string" resultMap="baseResultOID">
		SELECT OID_TIPO_REEM AS OID, DES_TIPO_REEM AS DESCRIPCION
		    FROM PRE_TIPO_REEMP
		ORDER BY 2
    </select>  
    
	<select id="getTipoDocumentosPago" parameterClass="string" resultMap="baseResult">
		SELECT COD_HOMO AS CODIGO, DES_PROC AS DESCRIPCION
		    FROM IMP_FELEC_TIPO_PROCE_CABEC
		ORDER BY 2
	</select>  
	
    <select id="getPeriodoDefaultByPaisMarcaCanalFacturacion" parameterClass="java.util.Map" resultMap="baseResult">
      SELECT DISTINCT SEG_PERIO_CORPO.COD_PERI AS CODIGO, 
	  		 SEG_PERIO_CORPO.COD_PERI AS DESCRIPCION
	    FROM CRA_PERIO,
	   		 SEG_PAIS,
			 SEG_MARCA,
			 SEG_CANAL,
	         SEG_PERIO_CORPO,
	         BAS_CTRL_FACT
        WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
    	   	  <isNotEmpty prepend="AND" property="codigoMarca">
			    (SEG_MARCA.COD_MARC = #codigoMarca#)
			  </isNotEmpty>
		      <isNotEmpty prepend="AND" property="codigoCanal">
			    (SEG_CANAL.COD_CANA = #codigoCanal#)
			  </isNotEmpty>
    	AND  (SEG_PAIS.OID_PAIS  = CRA_PERIO.PAIS_OID_PAIS)
		AND  (SEG_MARCA.OID_MARC = CRA_PERIO.MARC_OID_MARC)
		AND  (SEG_CANAL.OID_CANA = CRA_PERIO.CANA_OID_CANA)
		AND  (SEG_PERIO_CORPO.OID_PERI = CRA_PERIO.PERI_OID_PERI)
		AND  (SEG_CANAL.TIPE_OID_TIPO_PERI = SEG_PERIO_CORPO.TIPE_OID_TIPO_PERI)
		
		AND  (BAS_CTRL_FACT.COD_PAIS = #codigoPais#)
        AND  (BAS_CTRL_FACT.STA_CAMP = '0')
        AND  (BAS_CTRL_FACT.IND_CAMP_ACT = '1')
     
	   	<![CDATA[
    	AND  (BAS_CTRL_FACT.FEC_PROC >= CRA_PERIO.FEC_INIC)
	    AND  (BAS_CTRL_FACT.FEC_PROC <= CRA_PERIO.FEC_FINA)
	    ]]>
	    )
		ORDER BY 1 ASC  
    </select>
	  
    
     <parameterMap id="paramExecuteAuditMenu" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoMenu"	        	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="url"         			    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="login"		    	    	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="ip"		             	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	
    <procedure id="executeAuditMenu" 	parameterMap="paramExecuteAuditMenu" >
		{call MEN_PR_ACTUA_AUDIT(?, ?, ?, ?, ?)}
    </procedure>
	
	<select id="getValidacionDentroRangoPeriodoVigente" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(1) from cra_perio where oid_peri=#oidPeriodoVigente# and to_date(#fechaDesde#, 'dd/mm/yyyy') between fec_inic and fec_fina
    </select>
    
    
    <parameterMap id="paramExecuteProcesoBloqueoEliminacionUsuarioMasiva" class="java.util.Map">
		<parameter property="codigoPais"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	
    <procedure id="executeProcesoBloqueoEliminacionUsuarioMasiva" 	parameterMap="paramExecuteProcesoBloqueoEliminacionUsuarioMasiva" >
		{call  SEG_PKG_PROCE.SEG_PR_PROCE_BLOQU_ELIMI_MASIV(?)}
    </procedure>
    
    <select id="getErrorProcesoBatchSICC" parameterClass="string" resultClass="java.lang.String">
		SELECT VAL_OBSE_PROC
		  FROM BAS_MONIT_SEGME
		 WHERE COD_PROC = #value# 
	</select>
	
</sqlMap>
