<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="sisicc.ReportesSQL">

	<typeAlias alias="reporteGEOReporteClientesErroneos" 		type="biz.belcorp.ssicc.dao.sisicc.model.InterfazGEOReporteClientesErroneos" />
	<typeAlias alias="reporteGEOReporteClientesPendientes" 		type="biz.belcorp.ssicc.dao.sisicc.model.InterfazGEOReporteClientesPendientes" />
	<typeAlias alias="reporteGISReporteDireccionConsultoras" 	type="biz.belcorp.ssicc.dao.sisicc.model.InterfazGISReporteDireccionConsultoras" />

	<typeAlias alias="reporteCALReporteConsultorasRecomendadas" type="biz.belcorp.ssicc.dao.sisicc.model.InterfazCALReporteConsultorasRecomendadas" />
	<typeAlias alias="baseBlob"									type="biz.belcorp.ssicc.dao.sisicc.model.BaseBlob" />
	
	<typeAlias alias="baseGenerico"                             type="biz.belcorp.ssicc.dao.sisicc.model.Base" />
	<typeAlias alias="baseOidGenerico"                          type="biz.belcorp.ssicc.dao.sisicc.model.BaseOID"/>
    <typeAlias alias="historicoReporte"                         type="biz.belcorp.ssicc.dao.sisicc.model.HistoricoReporte"/>
    

	<resultMap id="baseResult" class="baseGenerico">
		<result property="codigo" column="CODIGO" />
		<result property="descripcion" column="DESCRIPCION" />
	</resultMap>

    <resultMap id="baseOidResult"          class="baseOidGenerico">
    	<result property="oid" 		column="OID" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
    
    <resultMap id="consultorasRecomendadasSICCXLSHashResult" class="java.util.HashMap">
		<result property="CODFI" column="CODFI" />
		<result property="REGION" column="REGION" />
		<result property="ZONA" column="ZONA" />
		<result property="CODCLIE" column="CODCLIE" />
		<result property="TIPDOCU" column="TIPDOCU" />
		<result property="NUDOCU" column="NUDOCU" />
		<result property="NOM1" column="NOM1" />
		<result property="NOM2" column="NOM2" />
		<result property="PATERNO" column="PATERNO" />
		<result property="MATERNO" column="MATERNO" />
		<result property="DIRECCION" column="DIRECCION" />
		<result property="TELEFONO" column="TELEFONO" />
		<result property="CODRECO" column="CODRECO" />
		<result property="NOM1RE" column="NOM1RE" />
		<result property="NOM2RE" column="NOM2RE" />
		<result property="PATERNORE" column="PATERNORE" />
		<result property="MATERNORE" column="MATERNORE" />
		<result property="ZONARE" column="ZONARE" />
		<result property="TERRITORIO" column="TERRITORIO" />
		<result property="FECREG" column="FECREG" />
		<result property="ESTADO" column="ESTADO" />
		<result property="OBSERVACION" column="OBSERVACION" />
		<result property="USUARIO" column="USUARIO" />
		<result property="FECPROCESO" column="FECPROCESO" />
	</resultMap>

	<resultMap id="consultorasRecomendadasSICCXLSResult" class="reporteCALReporteConsultorasRecomendadas">
		<result property="codfi" column="CODFI" />
		<result property="region" column="REGION" />
		<result property="zona" column="ZONA" />
		<result property="codigoCliente" column="CODCLIE" />
		<result property="tipoDocumento" column="TIPDOCU" />
		<result property="numero" column="NUDOCU" />
		<result property="primerNombre" column="NOM1" />
		<result property="segundoNombre" column="NOM2" />
		<result property="apellidoPaterno" column="PATERNO" />
		<result property="apellidoMaterno" column="MATERNO" />
		<result property="direccion" column="DIRECCION" />
		<result property="telefono" column="TELEFONO" />
		<result property="codigo" column="CODRECO" />
		<result property="primerNombreRecomendada" column="NOM1RE" />
		<result property="segundoNombreRecomendada" column="NOM2RE" />
		<result property="apellidoPaternoRecomendada" column="PATERNORE" />
		<result property="apellidoMaternoRecomendada" column="MATERNORE" />
		<result property="zonaRecomendada" column="ZONARE" />
		<result property="territorioRecomendada" column="TERRITORIO" />
		<result property="fechaRegistro" column="FECREG" />
		<result property="estado" column="ESTADO" />
		<result property="observacion" column="OBSERVACION" />
		<result property="usuario" column="USUARIO" />
		<result property="fechaProceso" column="FECPROCESO" />
	</resultMap>

	<resultMap id="reporteClienteUAErrorResult" class="java.util.HashMap">
		<result property="PAIS_COD_PAIS" column="PAIS_COD_PAIS" />
		<result property="COD_CLIE" column="COD_CLIE" />
		<result property="NUM_DOIN" column="NUM_DOIN" />
		<result property="NOM_CLIE" column="NOM_CLIE" />
		<result property="APE_PATE" column="APE_PATE" />
		<result property="NOM_VIA" column="NOM_VIA" />
		<result property="NUM_PRIN" column="NUM_PRIN" />
		<result property="COD_UBIG" column="COD_UBIG" />
		<result property="DES_UBIG" column="DES_UBIG" />
		<result property="OBS_DIRE" column="OBS_DIRE" />
		<result property="VAL_ERR1" column="VAL_ERR1" />
		<result property="VAL_ERR2" column="VAL_ERR2" />
		<result property="VAL_ERR3" column="VAL_ERR3" />
		<result property="USU_DIGI" column="USU_DIGI" />
		<result property="FEC_DIGI" column="FEC_DIGI" />
		<result property="USU_MODI" column="USU_MODI" />
		<result property="FEC_MODI" column="FEC_MODI" />
		<result property="EST_CLIE" column="EST_CLIE" />
	</resultMap>

	<resultMap id="reporteClienteUAErrorXLSResult" class="reporteGEOReporteClientesErroneos">
		<result property="codigoPais" column="PAIS_COD_PAIS" />
		<result property="codigoCliente" column="COD_CLIE" />
		<result property="documentoIdentidad" column="NUM_DOIN" />
		<result property="nombre" column="NOM_CLIE" />
		<result property="apellidoPaterno" column="APE_PATE" />
		<result property="nombreVia" column="NOM_VIA" />
		<result property="numeroPrincipal" column="NUM_PRIN" />
		<result property="codigoUbigeo" column="COD_UBIG" />
		<result property="descripcionUbigeo" column="DES_UBIG" />
		<result property="observacionesDireccion" column="OBS_DIRE" />
		<result property="errorZona" column="VAL_ERR1" />
		<result property="errorTerritorio" column="VAL_ERR2" />
		<result property="errorZonaTerritorio" column="VAL_ERR3" />
		<result property="usuario" column="USU_MODI" />
		<result property="fechaActualizacion" column="FEC_MODI" />
	</resultMap>

	<resultMap id="clienteSICCPendienteResult" class="java.util.HashMap">
		<result property="CODCLI" column="CODCLI" />
		<result property="NOMCOM" column="NOMCOM" />
		<result property="TIPCLI" column="TIPCLI" />
		<result property="SBTCLI" column="SBTCLI" />
		<result property="NUMDOC" column="NUMDOC" />
		<result property="TIPDIR" column="TIPDIR" />
		<result property="DIRCOM" column="DIRCOM" />
		<result property="DESDPT" column="DESDPT" />
		<result property="DESPRO" column="DESPRO" />
		<result property="DESDIS" column="DESDIS" />
		<result property="DESCPO" column="DESCPO" />
		<result property="CODZON" column="CODZON" />
		<result property="CODTER" column="CODTER" />
		<result property="FECING" column="FECING" />
		<result property="STATUS" column="COD_ESTA_CLIE" />
	</resultMap>

	<resultMap id="clienteSICCPendienteXLSResult" class="reporteGEOReporteClientesPendientes">
		<result property="codigoCliente" column="CODCLI" />
		<result property="nombre" column="NOMCOM" />
		<result property="tipo" column="TIPCLI" />
		<result property="subTipo" column="SBTCLI" />
		<result property="documentoIdentidad" column="NUMDOC" />
		<result property="tipoDireccion" column="TIPDIR" />
		<result property="direccion" column="DIRCOM" />
		<result property="unidadGeografica" column="DESDPT" />
		<result property="zona" column="CODZON" />
		<result property="territorio" column="CODTER" />
		<result property="fechaIngreso" column="FECING" />
		<result property="status" column="COD_ESTA_CLIE" />
	</resultMap>

	<resultMap id="reporteCOMPagoLideresResult" class="java.util.HashMap">
		<result property="CODPLA" column="CODPLA" />
		<result property="NOMAPE" column="NOMAPE" />
		<result property="IMPORT" column="IMPORT" />
		<result property="NUMCUEN" column="NUMCUEN" />
		<result property="FECCAL" column="FECCAL" />
	</resultMap>

	<resultMap id="reporteCOMLideresNuevasResult" class="java.util.HashMap">
		<result property="CODCLIE" column="CODCLIE" />
		<result property="NOMAPE" column="NOMAPE" />
		<result property="FECING" column="FECING" />
		<result property="DNI" column="DNI" />
	</resultMap>

    <resultMap id="interfazGISReporteDireccionConsultorasResult" class="reporteGISReporteDireccionConsultoras">
		<result property="codigoPais" column="CODPAI" />
		<result property="codigoMarca" column="CODMAR" />
		<result property="codigoCanal" column="CODCAN" />
		<result property="codigoZona" column="CODZON" />
		<result property="codigoSeccion" column="CODSEC" />
		<result property="codigoTerritorio" column="CODTER" />
		<result property="errorUbicacion" column="ERRUBI" />
		<result property="codigoCliente" column="CODCLI" />
		<result property="apellidoPaterno" column="APEPAT" />
		<result property="apellidoMaterno" column="APEMAT" />
		<result property="nombre" column="NOM" />
		<result property="campanyaPrimerPedido" column="CAMPPE" />
		<result property="estatus" column="EST" />
		<result property="codigoTipoVia" column="CODTVI" />
		<result property="descripcionTipoVia" column="DESTVI" />
		<result property="nombreVia" column="NOMVIA" />
		<result property="numeroPuerta" column="NUMPUE" />
		<result property="interior" column="INTE" />
		<result property="manzana" column="MAN" />
		<result property="lote" column="LOT" />
		<result property="kilometro" column="KIL" />
		<result property="ubigeo" column="UBIGEO" />
		<result property="departamento" column="DEP" />
		<result property="provincia" column="PRO" />
		<result property="distrito" column="DIS" />
		<result property="codigoTipoCentroPoblado" column="CODTCP" />
		<result property="tipoCentroPoblado" column="TIPCPO" />
		<result property="centroPoblado" column="CENPOB" />
		<result property="telefono" column="TEL" />
	</resultMap>

	<resultMap id="parametrosReportesGeneralResult" class="java.util.HashMap">
		<result property="directorioTemporal" column="DIR_TEMP" />
		<result property="directorioRepositorio" column="DIR_REPO" />
	</resultMap>

	<resultMap id="parametrosReportesResult" class="java.util.HashMap">
		<result property="directorioRepositorio" column="VAL_RUTA_GRAB" />
		<result property="prefijoArchivo" column="VAL_PREF_ARCH" />
		<result property="correoOrigen" column="EMA_ORIG" />
		<result property="correoCC" column="EMA_COPI" />
		<result property="subject" column="VAL_SUBJ" />
		<result property="enviarCorreo" column="IND_EMAI" />
		<result property="bodyTxt" column="NOM_BODY_TXT" />
		<result property="bodyHtml" column="NOM_BODY_HTML" />
		<result property="nivelEnvioCorreoCC" column="NIV_ENVI_COPI" />
		<result property="correoDefault" column="EMA_DEFA" />
		<result property="indEmailRegional" column="IND_EMAI_REGI" />
		<result property="enviarFTP"			  column="IND_FTP"/>
		<result property="servidorFTP" 			  column="VAL_SERV_FTP"/>
		<result property="puertoFTP"       		  column="VAL_PUER_FTP"/>
		<result property="usuarioFTP"       	  column="VAL_USUA_FTP"/>
		<result property="claveFTP"       		  column="VAL_CLAV_FTP"/>
		<result property="rutaFTP"       		  column="VAL_RUTA_FTP"/>
	</resultMap>


	<resultMap id="parametrosLogReportesResult" class="java.util.HashMap">
		<result property="nombreReporte" column="NOM_REPO" />
		<result property="descripcionLog" column="DES_LOG" />
		<result property="indicadorLog" column="IND_ERRO" />
		<result property="valorFiltro" column="VAL_FILT" />
	</resultMap>


	<resultMap id="consultorasRecomendadasSICCPDFResult" class="java.util.HashMap">
		<result property="CODCLIE" column="CODCLIE" />
		<result property="TIPDOCU" column="TIPDOCU" />
		<result property="NUDOCU" column="NUDOCU" />
		<result property="NOMBRE" column="NOMBRE" />
		<result property="PATERNO" column="PATERNO" />
		<result property="MATERNO" column="MATERNO" />
		<result property="DIRECCION" column="DIRECCION" />
		<result property="TELEFONO" column="TELEFONO" />
		<result property="CODRECO" column="CODRECO" />
		<result property="NOMRECO" column="NOMRECO" />
		<result property="TERRIRECO" column="TERRIRECO" />
		<result property="FECREG" column="FECREG" />
		<result property="ESTADO" column="ESTADO" />
		<result property="OBSERVACION" column="OBSERVACION" />
	</resultMap>

	<!-- REPORTE - PER - LISTA GENERICA -->
	<resultMap id="reportePERListaGenerica" class="java.util.HashMap">
		<result property="CARGOS_FACTURACION" column="CARGOS_FACTURACION" />
		<result property="CARGOS_DIRECTOS" column="CARGOS_DIRECTOS" />
		<result property="NOTAS_DE_CREDITO" column="NOTAS_DE_CREDITO" />
		<result property="ABONOS_DIRECTOS" column="ABONOS_DIRECTOS" />
		<result property="ABONOS_COBRANZA" column="ABONOS_COBRANZA" />
		<result property="ACUM_ANTERIOR" column="ACUM_ANTERIOR" />
		<result property="ACUM_ANTERIOR_ABONOS" column="ACUM_ANTERIOR_ABONOS" />
	</resultMap>



	<!-- REPORTE - PER - LISTA CONTROL POR CLIENTE -->
	<resultMap id="reportePERListaControlCliente" class="java.util.HashMap">
		<result property="FEC_COMP_PER" column="FEC_COMP_PER" />
		<result property="SER_NUM_COMP_PER" column="SER_NUM_COMP_PER" />
		<result property="TIP_DOC_CLI" column="TIP_DOC_CLI" />
		<result property="NUM_DOC_CLI" column="NUM_DOC_CLI" />
		<result property="NOM_CONS" column="NOM_CONS" />
		<result property="TIP_DOC_PGO" column="TIP_DOC_PGO" />
		<result property="SER_NUM_DOC_PGO" column="SER_NUM_DOC_PGO" />
		<result property="IMP_PER" column="IMP_PER" />
		<result property="DEBE" column="DEBE" />
		<result property="SALDO" column="SALDO" />
		<result property="PERCEP" column="PERCEP" />
		<result property="HABER" column="HABER" />
		<result property="SOCIEDAD" column="SOCIEDAD" />
		<result property="SOC_RUC" column="SOC_RUC" />
	</resultMap>

	<!-- REPORTE - PER - LIBRO PERCEPCIONES CONSOLIDADO -->
	<resultMap id="reportePERLibroPercepciones" class="java.util.HashMap">
		<result property="COD_ACCE" column="COD_ACCE" />
		<result property="COD_SBAC" column="COD_SBAC" />
		<result property="COD_CLIE" column="COD_CLIE" />
		<result property="TIP_DOID" column="TIP_DOID" />
		<result property="NUM_DOID" column="NUM_DOID" />
		<result property="NOM_CONS" column="NOM_CONS" />
		<result property="VENTAS" column="VENTAS" />
		<result property="PERCEPCION" column="PERCEPCION" />
		<result property="COBRADO" column="COBRADO" />
		<result property="SOCIEDAD" column="SOCIEDAD" />
		<result property="SOC_RUC" column="SOC_RUC" />
		<result property="NUM_DOLE" column="NUM_DOLE" />
	</resultMap>



	<resultMap id="reportePERListaCargoAbono" class="java.util.HashMap">
		<result property="PAIS" column="PAIS" />
		<result property="SOCIEDAD" column="SOCIEDAD" />
		<result property="FECHA_DOCUMENTO" column="FECHA_DOCUMENTO" />
		<result property="NUMERO_LOTE" column="NUMERO_LOTE" />
		<result property="IMPORTE" column="SUMA" />
	</resultMap>

	<resultMap id="reportePERListaAbonosPorCobranza" class="java.util.HashMap">
		<result property="CODIGO_CTA_CTE" column="CODIGO_CTA_CTE" />
		<result property="DESCRIPCION_CTA_CTE" column="DESCRIPCION_CTA_CTE" />
		<result property="FECHA_PAGO" column="FECHA_PAGO" />
		<result property="IMPORTE_PAGO" column="IMPORTE_PAGO" />
		<result property="FECHA_PAGO_BANCO" column="FECHA_PAGO_BANCO" />
		<result property="IMPORTE" column="IMPORTE" />
	</resultMap>

	<resultMap id="reportePERAntiguedadDeudasMeses" class="java.util.HashMap">
		<result property="ANHO" column="ANHO" />
		<result property="MES" column="MES" />
		<result property="IMP_MOVI" column="IMP_MOVI" />
		<result property="IMP_PEND" column="IMP_PEND" />
		<result property="POR_PEND" column="POR_PEND" />
	</resultMap>

	<resultMap id="reportePERAntiguedadDeudasPeriodo" class="java.util.HashMap">
		<result property="CAMPANHA" column="CAMPANHA" />
		<result property="IMP_MOVI" column="IMP_MOVI" />
		<result property="IMP_PEND" column="IMP_PEND" />
		<result property="POR_PEND" column="POR_PEND" />
	</resultMap>

	<resultMap id="reportePERConsolidadoCobranzasByCtasCtes" class="java.util.HashMap">
		<result property="DIARIO" column="DIARIO" />
		<result property="CTASCTES" column="CTASCTES" />
		<result property="IMPORTESUMA" column="IMPORTESUMA" />
	</resultMap>

	<resultMap id="reportePERConsolidadoCobranzasByBancos" class="java.util.HashMap">
		<result property="DIARIO" column="DIARIO" />
		<result property="BANCOS" column="BANCOS" />
		<result property="IMPORTESUMA" column="IMPORTESUMA" />
	</resultMap>

	<resultMap id="reportePERLiquidacionCobranza" class="java.util.HashMap">
		<result property="DES_BANC" column="DES_BANC" />
		<result property="DES_CC" column="DES_CC" />
		<result property="NUM_LOTE" column="NUM_LOTE" />
		<result property="COD_CONS" column="COD_CONS" />
		<result property="NUM_FACT_BOLE" column="NUM_FACT_BOLE" />
		<result property="NUM_CUPO" column="NUM_CUPO" />
		<result property="NUM_CONS_TRAN" column="NUM_CONS_TRAN" />
		<result property="FEC_PAGO" column="FEC_PAGO" />
		<result property="VAL_APE1" column="VAL_APE1" />
		<result property="VAL_APE2" column="VAL_APE2" />
		<result property="NOM_CONS" column="NOM_CONS" />
		<result property="IMP_CALC" column="IMP_CALC" />
	</resultMap>

	<resultMap id="reportePERBaseRecuperacionCampanhasPais" class="java.util.HashMap">
		<result property="COD_PERI" column="COD_PERI" />
		<result property="CARGO_FACTU" column="CARGO_FACTU" />
		<result property="CARGO_DIREC" column="CARGO_DIREC" />
		<result property="TOTAL_CARGO" column="TOTAL_CARGO" />
		<result property="ABONO_DIREC" column="ABONO_DIREC" />
		<result property="PERCE_ABONO_DIREC" column="PERCE_ABONO_DIREC" />
		<result property="NOTA_CREDI" column="NOTA_CREDI" />
		<result property="INCOB" column="INCOB" />
		<result property="TOTAL_ABONO" column="TOTAL_ABONO" />
		<result property="NETO" column="NETO" />
		<result property="SALDO_PEND" column="SALDO_PEND" />
		<result property="COBRO_21" column="COBRO_21" />
		<result property="COBRO_31" column="COBRO_31" />
		<result property="COBRO_42" column="COBRO_42" />
		<result property="COBRO_63" column="COBRO_63" />
		<result property="COBRO_84" column="COBRO_84" />
		<result property="COBRO_126" column="COBRO_126" />
		<result property="COBRO_189" column="COBRO_189" />
		<result property="COBRO_999" column="COBRO_999" />
		<result property="CARGO_PAGO_FRACC" column="CARGO_PAGO_FRACC" />
		<result property="ABONO_PAGO_FRACC" column="ABONO_PAGO_FRACC" />
	</resultMap>

	<resultMap id="reportePERBaseRecuperacionCampanhasRegion" class="java.util.HashMap">
		<result property="COD_PERI" column="COD_PERI" />
		<result property="COD_REGI" column="COD_REGI" />
		<result property="DES_REGI" column="DES_REGI" />
		<result property="GERENTE" column="GERENTE" />
		<result property="CARGO_FACTU" column="CARGO_FACTU" />
		<result property="CARGO_DIREC" column="CARGO_DIREC" />
		<result property="TOTAL_CARGO" column="TOTAL_CARGO" />
		<result property="ABONO_DIREC" column="ABONO_DIREC" />
		<result property="PERCE_ABONO_DIREC" column="PERCE_ABONO_DIREC" />
		<result property="NOTA_CREDI" column="NOTA_CREDI" />
		<result property="INCOB" column="INCOB" />
		<result property="TOTAL_ABONO" column="TOTAL_ABONO" />
		<result property="NETO" column="NETO" />
		<result property="SALDO_PEND" column="SALDO_PEND" />
		<result property="COBRO_21" column="COBRO_21" />
		<result property="COBRO_31" column="COBRO_31" />
		<result property="COBRO_42" column="COBRO_42" />
		<result property="COBRO_63" column="COBRO_63" />
		<result property="COBRO_84" column="COBRO_84" />
		<result property="COBRO_126" column="COBRO_126" />
		<result property="COBRO_189" column="COBRO_189" />
		<result property="COBRO_999" column="COBRO_999" />
		<result property="CARGO_PAGO_FRACC" column="CARGO_PAGO_FRACC" />
		<result property="ABONO_PAGO_FRACC" column="ABONO_PAGO_FRACC" />
	</resultMap>

	<resultMap id="reportePERBaseRecuperacionCampanhasZona" class="java.util.HashMap">
		<result property="COD_PERI" column="COD_PERI" />
		<result property="COD_ZONA" column="COD_ZONA" />
		<result property="DES_ZONA" column="DES_ZONA" />
		<result property="GERENTE" column="GERENTE" />
		<result property="CARGO_FACTU" column="CARGO_FACTU" />
		<result property="CARGO_DIREC" column="CARGO_DIREC" />
		<result property="TOTAL_CARGO" column="TOTAL_CARGO" />
		<result property="ABONO_DIREC" column="ABONO_DIREC" />
		<result property="PERCE_ABONO_DIREC" column="PERCE_ABONO_DIREC" />
		<result property="NOTA_CREDI" column="NOTA_CREDI" />
		<result property="INCOB" column="INCOB" />
		<result property="TOTAL_ABONO" column="TOTAL_ABONO" />
		<result property="NETO" column="NETO" />
		<result property="SALDO_PEND" column="SALDO_PEND" />
		<result property="COBRO_21" column="COBRO_21" />
		<result property="COBRO_31" column="COBRO_31" />
		<result property="COBRO_42" column="COBRO_42" />
		<result property="COBRO_63" column="COBRO_63" />
		<result property="COBRO_84" column="COBRO_84" />
		<result property="COBRO_126" column="COBRO_126" />
		<result property="COBRO_189" column="COBRO_189" />
		<result property="COBRO_999" column="COBRO_999" />
		<result property="CARGO_PAGO_FRACC" column="CARGO_PAGO_FRACC" />
		<result property="ABONO_PAGO_FRACC" column="ABONO_PAGO_FRACC" />
	</resultMap>

	<resultMap id="resultFacturasPendientesSeccionDetalle" class="java.util.HashMap">
		<result property="COD_ZONA" column="COD_ZONA" />
		<result property="COD_SECC" column="COD_SECC" />
		<result property="COD_TERR" column="COD_TERR" />
		<result property="COD_LIDE" column="COD_LIDE" />
		<result property="NOM_LIDE" column="NOM_LIDE" />
		<result property="COD_CLIE" column="COD_CLIE" />
		<result property="NOM_CLIE" column="NOM_CLIE" />
		<result property="CAM_INGR" column="CAM_INGR" />
		<result property="FEC_FACT" column="FEC_FACT" />
		<result property="NUM_FACT" column="NUM_FACT" />
		<result property="NUM_FAC1" column="NUM_FAC1" />
		<result property="NUM_FAC2" column="NUM_FAC2" />
		<result property="NUM_FAC3" column="NUM_FAC3" />
		<result property="PAG_DIF1" column="PAG_DIF1" />
		<result property="PAG_DIF2" column="PAG_DIF2" />
		<result property="PAG_DIF3" column="PAG_DIF3" />
		<result property="PAG_DIF4" column="PAG_DIF4" />
		<result property="PAG_DIFE" column="PAG_DIFE" />
		<result property="PER_REL1" column="PER_REL1" />
		<result property="PER_REL2" column="PER_REL2" />
		<result property="PER_REL3" column="PER_REL3" />
		<result property="PER_REL4" column="PER_REL4" />
		<result property="PER_REL5" column="PER_REL5" />
		<result property="PER_RELA" column="PER_RELA" />
		<result property="SAL_PEN1" column="SAL_PEN1" />
		<result property="SAL_PEN2" column="SAL_PEN2" />
		<result property="SAL_PEN3" column="SAL_PEN3" />
		<result property="SAL_PEN4" column="SAL_PEN4" />
		<result property="SAL_PEND" column="SAL_PEND" />
		<result property="TOTAL_DEUDORAS" column="TOTAL_DEUDORAS" />
		<result property="TOTAL_DEUDA" column="TOTAL_DEUDA" />
		<result property="TOTAL_DEUD1" column="TOTAL_DEUD1" />
		<result property="TOTAL_DEUD2" column="TOTAL_DEUD2" />
		<result property="TOTAL_DEUD3" column="TOTAL_DEUD3" />
		<result property="PED_RESP" column="PED_RESP" />
		<result property="DEUDORAS" column="DEUDORAS" />
		<result property="DEUDORA1" column="DEUDORA1" />
		<result property="DEUDORA2" column="DEUDORA2" />
		<result property="DEUDORA3" column="DEUDORA3" />
		<result property="PORC_DEUDORAS" column="PORC_DEUDORAS" />
		<result property="PORC_DEUDORA1" column="PORC_DEUDORA1" />
		<result property="PORC_DEUDORA2" column="PORC_DEUDORA2" />
		<result property="PORC_DEUDORA3" column="PORC_DEUDORA3" />
		<result property="PORC_RESP" column="PORC_RESP" />
	</resultMap>


	<resultMap id="resultMicaRecepcionPedidosZona" class="java.util.HashMap">
		<result property="COD_REGI" column="COD_REGI" />
		<result property="DES_REGI" column="DES_REGI" />
		<result property="COD_ZONA" column="COD_ZONA" />
		<result property="DES_ZONA" column="DES_ZONA" />
		<result property="NUM_PEDI_ANTE" column="NUM_PEDI_ANTE" />
		<result property="NUM_PEDI_ESTI" column="NUM_PEDI_ESTI" />
		<result property="NUM_PEDI_REAL_CAB" column="NUM_PEDI_REAL_CAB" />
		<result property="NUM_PRIM_PEDI_CAB" column="NUM_PRIM_PEDI_CAB" />
		<result property="NUM_PEDI_RECH_CAB" column="NUM_PEDI_RECH_CAB" />
		<result property="NUM_PEDI_RECA_CAB" column="NUM_PEDI_RECA_CAB" />
		<result property="TOT_FACT_REGU_CAB" column="TOT_FACT_REGU_CAB" />
		<result property="TOT_FACT_BOLS_CAB" column="TOT_FACT_BOLS_CAB" />
		<result property="VAL_PORC_RECE_CAB" column="VAL_PORC_RECE_CAB" />
		<result property="VAL_DIFE_REAL_ESTI" column="VAL_DIFE_REAL_ESTI" />
		<result property="FEC_RECE" column="FEC_RECE" />
		<result property="GER_ZONA" column="GER_ZONA" />
		<result property="NUM_PEDI_REAL_DET" column="NUM_PEDI_REAL_DET" />
		<result property="VAL_PORC_ENVI" column="VAL_PORC_ENVI" />
		<result property="VAL_PORC_RECE_DET" column="VAL_PORC_RECE_DET" />
		<result property="NUM_PEDI_RECA_DET" column="NUM_PEDI_RECA_DET" />
		<result property="TOT_FACT_REGU_DET" column="TOT_FACT_REGU_DET" />
		<result property="TOT_FACT_BOLS_DET" column="TOT_FACT_BOLS_DET" />
		<result property="NUM_PRIM_PEDI_DET" column="NUM_PRIM_PEDI_DET" />
		<result property="NUM_PEDI_RECH_DET" column="NUM_PEDI_RECH_DET" />
	</resultMap>

	<resultMap id="resultMicaRecepcionPedidosRegion" class="java.util.HashMap">
		<result property="COD_REGI" column="COD_REGI" />
		<result property="DES_REGI" column="DES_REGI" />
		<result property="NUM_PEDI_ANTE" column="NUM_PEDI_ANTE" />
		<result property="NUM_PEDI_ESTI" column="NUM_PEDI_ESTI" />
		<result property="NUM_PEDI_REAL_CAB" column="NUM_PEDI_REAL_CAB" />
		<result property="NUM_PRIM_PEDI_CAB" column="NUM_PRIM_PEDI_CAB" />
		<result property="NUM_PEDI_RECH_CAB" column="NUM_PEDI_RECH_CAB" />
		<result property="NUM_PEDI_RECA_CAB" column="NUM_PEDI_RECA_CAB" />
		<result property="TOT_FACT_REGU_CAB" column="TOT_FACT_REGU_CAB" />
		<result property="TOT_FACT_BOLS_CAB" column="TOT_FACT_BOLS_CAB" />
		<result property="VAL_PORC_RECE_CAB" column="VAL_PORC_RECE_CAB" />
		<result property="VAL_DIFE_REAL_ESTI" column="VAL_DIFE_REAL_ESTI" />
		<result property="FEC_RECE" column="FEC_RECE" />
		<result property="NUM_PEDI_REAL_DET" column="NUM_PEDI_REAL_DET" />
		<result property="VAL_PORC_ENVI" column="VAL_PORC_ENVI" />
		<result property="NUM_PEDI_RECA_DET" column="NUM_PEDI_RECA_DET" />
		<result property="TOT_FACT_REGU_DET" column="TOT_FACT_REGU_DET" />
		<result property="TOT_FACT_BOLS_DET" column="TOT_FACT_BOLS_DET" />
		<result property="VAL_PORC_RECE_DET" column="VAL_PORC_RECE_DET" />
		<result property="NUM_PRIM_PEDI_DET" column="NUM_PRIM_PEDI_DET" />
		<result property="NUM_PEDI_RECH_DET" column="NUM_PEDI_RECH_DET" />
	</resultMap>

	<resultMap id="resultMicaRecepcionPedidosZonaDet" class="java.util.HashMap">
		<result property="COD_REGI" column="COD_REGI" />
		<result property="DES_REGI" column="DES_REGI" />
		<result property="COD_ZONA" column="COD_ZONA" />
		<result property="DES_ZONA" column="DES_ZONA" />
		<result property="NUM_PEDI_ANTE" column="NUM_PEDI_ANTE" />
		<result property="NUM_PEDI_ESTI" column="NUM_PEDI_ESTI" />
		<result property="NUM_PEDI_REAL_CAB" column="NUM_PEDI_REAL_CAB" />
		<result property="NUM_PRIM_PEDI_CAB" column="NUM_PRIM_PEDI_CAB" />
		<result property="NUM_PEDI_RECH_CAB" column="NUM_PEDI_RECH_CAB" />
		<result property="NUM_PEDI_RECA_CAB" column="NUM_PEDI_RECA_CAB" />
		<result property="TOT_FACT_REGU_CAB" column="TOT_FACT_REGU_CAB" />
		<result property="TOT_FACT_BOLS_CAB" column="TOT_FACT_BOLS_CAB" />
		<result property="VAL_PORC_RECE_CAB" column="VAL_PORC_RECE_CAB" />
		<result property="VAL_DIFE_REAL_ESTI" column="VAL_DIFE_REAL_ESTI" />
		<result property="FEC_RECE" column="FEC_RECE" />
		<result property="NUM_LOTE" column="NUM_LOTE" />
		<result property="GER_ZONA" column="GER_ZONA" />
		<result property="NUM_PEDI_REAL_DET" column="NUM_PEDI_REAL_DET" />
		<result property="VAL_PORC_ENVI" column="VAL_PORC_ENVI" />
		<result property="VAL_PORC_RECE_DET" column="VAL_PORC_RECE_DET" />
		<result property="NUM_PEDI_RECA_DET" column="NUM_PEDI_RECA_DET" />
		<result property="TOT_FACT_REGU_DET" column="TOT_FACT_REGU_DET" />
		<result property="TOT_FACT_BOLS_DET" column="TOT_FACT_BOLS_DET" />
		<result property="NUM_PRIM_PEDI_DET" column="NUM_PRIM_PEDI_DET" />
		<result property="NUM_PEDI_RECH_DET" column="NUM_PEDI_RECH_DET" />
	</resultMap>

	<resultMap id="baseResult" class="baseGenerico">
		<result property="codigo" column="CODIGO" />
		<result property="descripcion" column="DESCRIPCION" />
	</resultMap>

	<resultMap id="resulCabeceraReporteSAC" class="java.util.HashMap">
		<result property="pedidosTotales" column="PEDIDOSTOT" />
		<result property="unidadesTotales" column="UNIDADESTOT" />
		<result property="monto" column="MONTO" />
	</resultMap>

	<!-- REPORTE- GEO - CLIENTES CON ZONAS Y TERRITORIOS ERRADOS (PDF) -->
    <select id="getClientesUAErrorByCriteria" parameterClass="java.util.Map" resultMap="reporteClienteUAErrorResult">
		SELECT PAIS_COD_PAIS,
		COD_CLIE,
		NUM_DOIN,
		NOM_CLIE,
		APE_PATE,
		NOM_VIA,
		NUM_PRIN,
		COD_UBIG,
		DES_UBIG,
		OBS_DIRE,
		VAL_ERR1,
		VAL_ERR2,
		VAL_ERR3,
		USU_DIGI,
		FEC_DIGI,
		USU_MODI,
		FEC_MODI,
		EST_CLIE
		FROM INT_GEO_CLIEN_UNADM_ERRAD
		WHERE PAIS_COD_PAIS = #codigoPais#
         AND   FEC_DIGI BETWEEN TO_DATE(#fechaDesde#, 'DD/MM/YYYY') AND TO_DATE(#fechaHasta#, 'DD/MM/YYYY') + 1
		ORDER BY COD_CLIE ASC
	</select>


	<!-- REPORTE - GEO - CLIENTES CON ZONAS Y TERRITORIOS ERRADOS (XLS) -->
    <select id="getReporteGEOClientesErroneosXLS" parameterClass="java.util.Map" resultMap="reporteClienteUAErrorXLSResult">
		SELECT PAIS_COD_PAIS,
		COD_CLIE,
		NUM_DOIN,
		NOM_CLIE,
		APE_PATE,
		NOM_VIA,
		NUM_PRIN,
		COD_UBIG,
		DES_UBIG,
		OBS_DIRE,
		VAL_ERR1,
		VAL_ERR2,
		VAL_ERR3,
		USU_DIGI,
		FEC_DIGI,
		USU_MODI,
		FEC_MODI,
		EST_CLIE
		FROM INT_GEO_CLIEN_UNADM_ERRAD
		WHERE PAIS_COD_PAIS = #codigoPais#
         AND   FEC_DIGI BETWEEN TO_DATE(#fechaDesde#, 'DD/MM/YYYY') AND TO_DATE(#fechaHasta#, 'DD/MM/YYYY') + 1
		ORDER BY COD_CLIE ASC
	</select>


	<!-- REPORTE - GEO - CLIENTES PENDIENTES DE ACTUALIZAR UA (PDF) -->
    <select id="getClientesPendientesActualizarUA" parameterClass="java.util.Map" resultMap="clienteSICCPendienteResult">
		SELECT DISTINCT
		MAE_CLIEN.COD_CLIE AS CODCLI,

		NVL(MAE_CLIEN.VAL_APE1, ' ') || ' ' || NVL(MAE_CLIEN.VAL_APE2, ' ') || ' ' ||
			   NVL(MAE_CLIEN.VAL_NOM1, ' ') || ' ' || NVL(MAE_CLIEN.VAL_NOM2, ' ') AS NOMCOM, 

		MAE_TIPO_CLIEN.COD_TIPO_CLIE AS TIPCLI,

		MAE_SUBTI_CLIEN.COD_SUBT_CLIE AS SBTCLI,

		(SELECT NVL(MAE_CLIEN_IDENT.NUM_DOCU_IDEN, ' ')
		FROM MAE_CLIEN_IDENT
		WHERE MAE_CLIEN_IDENT.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE
		AND MAE_CLIEN_IDENT.VAL_IDEN_DOCU_PRIN = 1
		AND ROWNUM = 1) AS NUMDOC,

		MAE_CLIEN_DIREC.TIDC_OID_TIPO_DIRE AS TIPDIR,

		MAE_CLIEN_DIREC.TIVI_OID_TIPO_VIA || ' ' || MAE_CLIEN_DIREC.VAL_NOMB_VIA || ' ' ||
		MAE_CLIEN_DIREC.NUM_PPAL AS DIRCOM,

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
		AND ZONA.ORDE_2 IS NULL
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DESDPT,

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DESPRO,

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DESDIS,

		MAE_CLIEN_DIREC.COD_UNID_GEOG,

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
    		      AND 	ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,19,6)))
		AND ZONA.ORDE_5 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DESCPO,

		(SELECT ZON_ZONA.COD_ZONA
		FROM MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,
		ZON_SECCI,
		ZON_ZONA
		WHERE ((MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1)
    		      AND 	(ZON_TERRI_ADMIN.OID_TERR_ADMI = MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI)
		AND (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC)
		AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA))
		AND ROWNUM = 1) AS CODZON,

		(SELECT ZON_TERRI.COD_TERR
		FROM MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,
		ZON_TERRI
		WHERE ((MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1)
    		      AND 	(ZON_TERRI_ADMIN.OID_TERR_ADMI = MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI)
		AND (ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR))
		AND ROWNUM = 1) AS CODTER,

		MAE_CLIEN.FEC_INGR AS FECING,
		MAE_ESTAT_CLIEN.COD_ESTA_CLIE as COD_ESTA_CLIE

		FROM MAE_CLIEN_DATOS_ADICI,
		MAE_CLIEN,
		SEG_PAIS,
		MAE_CLIEN_DIREC,
		MAE_CLIEN_TIPO_SUBTI,
		MAE_TIPO_CLIEN,
		MAE_SUBTI_CLIEN,
		INT_GEO_CLIEN_TISUB,
		MAE_ESTAT_CLIEN
		WHERE ((MAE_CLIEN_DATOS_ADICI.IND_ACTI = 1)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
    	 <![CDATA[
    	 AND   (MAE_CLIEN_DIREC.FEC_ULTI_ACTU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))	
    	 ]]>
    	 <![CDATA[
    	 AND   (MAE_CLIEN_DIREC.FEC_ULTI_ACTU < TO_DATE(#fechaHasta#,'DD/MM/YYYY') + 1)
    	 ]]>
    	 AND   ((MAE_CLIEN_DIREC.IND_CTRL_INTE_GEOR IS NULL) OR (MAE_CLIEN_DIREC.IND_CTRL_INTE_GEOR = 'E'))
		AND (MAE_CLIEN_DIREC.IND_DIRE_PPAL = 1)
		AND MAE_CLIEN_DIREC.IND_ELIM = 0
		 AND    MAE_ESTAT_CLIEN.OID_ESTA_CLIE = MAE_CLIEN_DATOS_ADICI.ESTA_OID_ESTA_CLIE
		AND (MAE_SUBTI_CLIEN.COD_SUBT_CLIE = INT_GEO_CLIEN_TISUB.COD_SUBT_CLIE)
		AND (MAE_TIPO_CLIEN.COD_TIPO_CLIE = INT_GEO_CLIEN_TISUB.COD_TIPO_CLIE)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_DATOS_ADICI.CLIE_OID_CLIE)
		AND (SEG_PAIS.OID_PAIS = MAE_CLIEN.PAIS_OID_PAIS)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_DIREC.CLIE_OID_CLIE)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_TIPO_SUBTI.CLIE_OID_CLIE)
         AND   (MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_CLIEN_TIPO_SUBTI.TICL_OID_TIPO_CLIE)
		AND (MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE)
         AND   (MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_CLIEN_TIPO_SUBTI.SBTI_OID_SUBT_CLIE)
		)

		ORDER BY CODCLI ASC
	</select>


	<!-- REPORTE - GEO - CLIENTES PENDIENTES DE ACTUALIZAR UA (XLS) -->
    <select id="getClientesPendientesActualizarXLSUA" parameterClass="java.util.Map" resultMap="clienteSICCPendienteXLSResult">
		SELECT DISTINCT
		MAE_CLIEN.COD_CLIE AS CODCLI,

		NVL(MAE_CLIEN.VAL_APE1, ' ') || ' ' || NVL(MAE_CLIEN.VAL_APE2, ' ') || ' ' ||
			   NVL(MAE_CLIEN.VAL_NOM1, ' ') || ' ' || NVL(MAE_CLIEN.VAL_NOM2, ' ') AS NOMCOM, 

		MAE_TIPO_CLIEN.COD_TIPO_CLIE AS TIPCLI,

		MAE_SUBTI_CLIEN.COD_SUBT_CLIE AS SBTCLI,

		(SELECT NVL(MAE_CLIEN_IDENT.NUM_DOCU_IDEN, ' ')
		FROM MAE_CLIEN_IDENT
		WHERE MAE_CLIEN_IDENT.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE
		AND MAE_CLIEN_IDENT.VAL_IDEN_DOCU_PRIN = 1
		AND ROWNUM = 1) AS NUMDOC,

		MAE_CLIEN_DIREC.TIDC_OID_TIPO_DIRE AS TIPDIR,

		MAE_CLIEN_DIREC.TIVI_OID_TIPO_VIA || ' ' || MAE_CLIEN_DIREC.VAL_NOMB_VIA || ' ' ||
		MAE_CLIEN_DIREC.NUM_PPAL AS DIRCOM,

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
		AND ZONA.ORDE_2 IS NULL
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) || ' ' ||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) || ' ' ||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) || ' ' ||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
    		      AND 	ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,19,6)))
		AND ZONA.ORDE_5 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DESDPT,

		(SELECT DISTINCT ZON_ZONA.COD_ZONA
		FROM MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,
		ZON_SECCI,
		ZON_ZONA
		WHERE ((MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1)
    		      AND 	(ZON_TERRI_ADMIN.OID_TERR_ADMI = MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI)
		AND (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC)
		AND (ZON_ZONA.OID_ZONA = ZON_SECCI.ZZON_OID_ZONA))
		AND ROWNUM = 1) AS CODZON,

		(SELECT DISTINCT ZON_TERRI.COD_TERR
		FROM MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,
		ZON_TERRI
		WHERE ((MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1)
    		      AND 	(ZON_TERRI_ADMIN.OID_TERR_ADMI = MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI)
		AND (ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR))
		AND ROWNUM = 1) AS CODTER,

		TO_CHAR(MAE_CLIEN.FEC_INGR,'DD/MM/YYYY') AS FECING,
		MAE_ESTAT_CLIEN.COD_ESTA_CLIE as COD_ESTA_CLIE

		FROM MAE_CLIEN_DATOS_ADICI,
		MAE_CLIEN,
		SEG_PAIS,
		MAE_CLIEN_DIREC,
		MAE_CLIEN_TIPO_SUBTI,
		MAE_TIPO_CLIEN,
		MAE_SUBTI_CLIEN,
		INT_GEO_CLIEN_TISUB,
		MAE_ESTAT_CLIEN
		WHERE ((MAE_CLIEN_DATOS_ADICI.IND_ACTI = 1)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
    	 <![CDATA[
    	 AND   (MAE_CLIEN_DIREC.FEC_ULTI_ACTU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))	
    	 ]]>
    	 <![CDATA[
    	 AND   (MAE_CLIEN_DIREC.FEC_ULTI_ACTU < TO_DATE(#fechaHasta#,'DD/MM/YYYY') + 1)
    	 ]]>
    	 AND   ((MAE_CLIEN_DIREC.IND_CTRL_INTE_GEOR IS NULL) OR (MAE_CLIEN_DIREC.IND_CTRL_INTE_GEOR = 'E'))
		AND (MAE_CLIEN_DIREC.IND_DIRE_PPAL = 1)
		AND MAE_CLIEN_DIREC.IND_ELIM = 0
		 AND    MAE_ESTAT_CLIEN.OID_ESTA_CLIE = MAE_CLIEN_DATOS_ADICI.ESTA_OID_ESTA_CLIE
		AND (MAE_SUBTI_CLIEN.COD_SUBT_CLIE = INT_GEO_CLIEN_TISUB.COD_SUBT_CLIE)
		AND (MAE_TIPO_CLIEN.COD_TIPO_CLIE = INT_GEO_CLIEN_TISUB.COD_TIPO_CLIE)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_DATOS_ADICI.CLIE_OID_CLIE)
		AND (SEG_PAIS.OID_PAIS = MAE_CLIEN.PAIS_OID_PAIS)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_DIREC.CLIE_OID_CLIE)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_TIPO_SUBTI.CLIE_OID_CLIE)
         AND   (MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_CLIEN_TIPO_SUBTI.TICL_OID_TIPO_CLIE)
		AND (MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE)
         AND   (MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_CLIEN_TIPO_SUBTI.SBTI_OID_SUBT_CLIE)
		)
		ORDER BY CODCLI ASC
	</select>


	<!-- REPORTE - GIS - DIRECCION CONSULTORAS (XLS) -->
    <select id="getReporteGISReporteDireccionConsultoras" parameterClass="java.util.Map" resultMap="interfazGISReporteDireccionConsultorasResult">
		SELECT
		RPAD(SEG_PAIS.COD_PAIS, 3, ' ') AS CODPAI,
		RPAD(SEG_MARCA.COD_MARC, 3, ' ') AS CODMAR,
		RPAD(SEG_CANAL.COD_CANA, 3, ' ') AS CODCAN,
		RPAD(ZON_ZONA.COD_ZONA, 4, ' ') AS CODZON,
		ZON_SECCI.COD_SECC AS CODSEC,
		LPAD(ZON_TERRI.COD_TERR, 6, '0') AS CODTER,
		MAE_CLIEN_DIREC.IND_CTRL_INTE_GEOR AS ERRUBI,
		RPAD(MAE_CLIEN.COD_CLIE, 15, ' ') AS CODCLI,
		RPAD(MAE_CLIEN.VAL_APE1, 15, ' ') AS APEPAT,
		RPAD(NVL(MAE_CLIEN.VAL_APE2, ' ')||' '||NVL(MAE_CLIEN.VAL_APEL_CASA, ' '), 50, ' ') AS APEMAT,
    		   RPAD(NVL(MAE_CLIEN.VAL_NOM1, ' ')||' '||NVL(MAE_CLIEN.VAL_NOM2, ' '), 50, ' ') AS NOM,
		RPAD(NVL(CRA_PERIO.VAL_NOMB_PERI, ' '), 40, ' ') AS CAMPPE,
		RPAD(MAE_ESTAT_CLIEN.COD_ESTA_CLIE, 2, ' ') AS EST,
		RPAD(SEG_TIPO_VIA.COD_TIPO_VIA, 2, ' ') AS CODTVI,
		RPAD(SEG_TIPO_VIA.DES_ABRV_TIPO_VIA, 10, ' ') AS DESTVI,
		RPAD(MAE_CLIEN_DIREC.VAL_NOMB_VIA, 60, ' ') AS NOMVIA,
		RPAD(MAE_CLIEN_DIREC.NUM_PPAL, 6, ' ') AS NUMPUE,
		RPAD(MAE_CLIEN_DIREC.VAL_INTE, 3, ' ') AS INTE,
		RPAD(MAE_CLIEN_DIREC.VAL_MANZ, 3, ' ') AS MAN,
		RPAD(MAE_CLIEN_DIREC.VAL_LOTE, 3, ' ') AS LOT,
		RPAD(MAE_CLIEN_DIREC.VAL_KM, 3, ' ') AS KIL,
		RPAD(MAE_CLIEN_DIREC.COD_UNID_GEOG, 54, ' ') AS UBIGEO,

		(SELECT RPAD(NVL(ZONA.DES_GEOG, ' '), 40, ' ')
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
		AND ZONA.ORDE_2 IS NULL
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DEP,

		(SELECT RPAD(NVL(ZONA.DES_GEOG, ' '), 40, ' ')
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		    AND ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS PRO,

		(SELECT RPAD(NVL(ZONA.DES_GEOG, ' '), 40, ' ')
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
    		    AND ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		    AND ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DIS,

		(SELECT RPAD(NVL(ZON_SUBES_GEOPO.COD_SUBE, 0), 2, ' ')
		FROM ZON_VALOR_ESTRU_GEOPO ZONA,
		ZON_SUBES_GEOPO
		WHERE ZONA.ORDE_1 = TRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6))
		AND ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		    AND ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
    		    AND ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,19,6)))
		AND ZONA.ORDE_5 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZONA.SGEO_OID_SUBE_GEOP = ZON_SUBES_GEOPO.OID_SUBE_GEOP
		AND ROWNUM = 1) AS CODTCP,

		RPAD((SELECT GEN_I18N_SICC_PAIS.VAL_I18N
		FROM ZON_VALOR_ESTRU_GEOPO ZONA,
		ZON_SUBES_GEOPO,
		GEN_I18N_SICC_PAIS,
		SEG_IDIOM
		WHERE ZONA.ORDE_1 = TRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6))
		AND ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		   		   AND 	 ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
    		   		   AND 	 ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,19,6)))
		AND ZONA.ORDE_5 IS NULL
		AND ROWNUM = 1
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZONA.SGEO_OID_SUBE_GEOP = ZON_SUBES_GEOPO.OID_SUBE_GEOP
		AND GEN_I18N_SICC_PAIS.VAL_OID = ZON_SUBES_GEOPO.OID_SUBE_GEOP
		AND GEN_I18N_SICC_PAIS.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
		AND GEN_I18N_SICC_PAIS.ATTR_ENTI ='ZON_SUBES_GEOPO'
		AND SEG_IDIOM.COD_IDIO = UPPER(#codigoIdioma#)
		),40,' ') AS TIPCPO,

		(SELECT RPAD(ZONA.DES_GEOG, 40, ' ')
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = TRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6))
		AND ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
    		    AND ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
    		    AND ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,19,6)))
		AND ZONA.ORDE_5 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS CENPOB,

		RPAD((CASE MAE_TIPO_COMUN.COD_TIPO_COMU
		WHEN 'TF' THEN MAE_CLIEN_COMUN.VAL_TEXT_COMU
		WHEN 'TM' THEN MAE_CLIEN_COMUN.VAL_TEXT_COMU
		WHEN 'TT' THEN MAE_CLIEN_COMUN.VAL_TEXT_COMU
		ELSE ''
		END), 100, ' ') AS TEL
		FROM MAE_CLIEN,
		SEG_PAIS,
		MAE_CLIEN_TIPO_SUBTI,
		MAE_TIPO_CLIEN,
		MAE_CLIEN_DIREC,
		MAE_CLIEN_DATOS_ADICI,
		MAE_ESTAT_CLIEN,
		MAE_CLIEN_COMUN,
		MAE_TIPO_COMUN,
		MAE_CLIEN_PRIME_CONTA,
		SEG_TIPO_VIA,
		MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_TERRI,
		ZON_ZONA,
		ZON_REGIO,
		CRA_PERIO
		WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
		AND (SEG_MARCA.COD_MARC = #codigoMarca#)
		AND (SEG_CANAL.COD_CANA = #codigoCanal#)
		AND (MAE_TIPO_CLIEN.COD_TIPO_CLIE = #codigoTipoCliente#)
		AND (ZON_REGIO.COD_REGI = #codigoRegion#)
		AND (ZON_REGIO.IND_ACTI = 1)
		AND (ZON_ZONA.IND_ACTI = 1)
		AND (ZON_SECCI.IND_ACTI = 1)
		AND (ZON_TERRI.IND_BORR = 0)
		AND (MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1)
		AND (MAE_CLIEN_DIREC.IND_DIRE_PPAL = 1)
		AND MAE_CLIEN_DIREC.IND_ELIM = 0
		AND (MAE_CLIEN.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (MAE_CLIEN_TIPO_SUBTI.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		 AND   (MAE_CLIEN_TIPO_SUBTI.TICL_OID_TIPO_CLIE = MAE_TIPO_CLIEN.OID_TIPO_CLIE)
		AND (MAE_CLIEN_DIREC.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_DATOS_ADICI.CLIE_OID_CLIE (+)= MAE_CLIEN.OID_CLIE)
		 AND   (MAE_CLIEN_DATOS_ADICI.ESTA_OID_ESTA_CLIE = MAE_ESTAT_CLIEN.OID_ESTA_CLIE (+))
		AND (MAE_CLIEN_COMUN.CLIE_OID_CLIE (+)= MAE_CLIEN.OID_CLIE)
		 AND   (MAE_CLIEN_COMUN.TICM_OID_TIPO_COMU = MAE_TIPO_COMUN.OID_TIPO_COMU (+))
		AND (MAE_CLIEN_PRIME_CONTA.CLIE_OID_CLIE (+)= MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_PRIME_CONTA.PERD_OID_PERI = CRA_PERIO.OID_PERI (+))
		AND (MAE_CLIEN_DIREC.TIVI_OID_TIPO_VIA = SEG_TIPO_VIA.OID_TIPO_VIA (+))
		AND (MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		 AND   (MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI)
		AND (ZON_TERRI_ADMIN.MARC_OID_MARC = SEG_MARCA.OID_MARC)
		AND (ZON_TERRI_ADMIN.CANA_OID_CANA = SEG_CANAL.OID_CANA)
		AND (ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC)
		AND (ZON_TERRI_ADMIN.TERR_OID_TERR = ZON_TERRI.OID_TERR)
		AND (ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA)
		AND (ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI)
		)
		ORDER BY CODPAI, CODMAR, CODCAN,CODCLI, CODZON, CODSEC, CODTER
	</select>


	<!-- REPORTE - CAL - CONSULTORAS RECOMENDADAS (PDF) -->
    <select id="getReporteConsultorasRecomendadasPDF" parameterClass="java.util.Map" resultMap="consultorasRecomendadasSICCPDFResult">
		SELECT CABECERA.CODCLIE,
		CABECERA.TIPDOCU,
		CABECERA.NUDOCU,
		CABECERA.NOMBRE,
		CABECERA.PATERNO,
		CABECERA.MATERNO,
		CABECERA.DIRECCION,
		CABECERA.TELEFONO,
		MAE_CLIEN.COD_CLIE AS CODRECO,
		MAE_CLIEN.VAL_NOM1 || MAE_CLIEN.VAL_APE1 || MAE_CLIEN.VAL_APE2 AS NOMRECO,
		ZON_ZONA.COD_ZONA || '-' || ZON_TERRI.COD_TERR AS TERRIRECO,
		CABECERA.FECREG,
		CABECERA.ESTADO,
		CABECERA.OBSERVACION
		FROM
		(SELECT MAE_CLIEN.COD_CLIE AS CODCLIE,
		MAE_TIPO_DOCUM.VAL_SIGL AS TIPDOCU,
		MAE_CLIEN_IDENT.NUM_DOCU_IDEN AS NUDOCU,
		MAE_CLIEN.VAL_NOM1 AS NOMBRE,
		MAE_CLIEN.VAL_APE1 AS PATERNO,
		MAE_CLIEN.VAL_APE2 AS MATERNO,

		SEG_TIPO_VIA.DES_ABRV_TIPO_VIA ||' '||
		MAE_CLIEN_DIREC.VAL_NOMB_VIA ||' '||
		MAE_CLIEN_DIREC.NUM_PPAL ||' '||
		MAE_CLIEN_DIREC.VAL_OBSE ||' '||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
		AND ZONA.ORDE_2 IS NULL
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) ||','||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
        		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) ||','||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
        		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
        		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) ||','||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
        		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
        		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
        		      AND 	ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,19,6)))
		AND ZONA.ORDE_5 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DIRECCION,

		MAE_CLIEN_COMUN.VAL_TEXT_COMU AS TELEFONO,
		MAE_CLIEN.FEC_INGR AS FECREG,

		(SELECT GEN_I18N_SICC_COMUN.VAL_I18N
		FROM GEN_I18N_SICC_COMUN,
		SEG_IDIOM
		WHERE ((GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS)
		AND (GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO)
		AND (GEN_I18N_SICC_COMUN.ATTR_ENTI ='MAE_CLASI')
		AND (SEG_IDIOM.COD_IDIO = UPPER(#codigoIdioma#))
		)
		) AS ESTADO,

		MAE_CLIEN_OBSER.VAL_TEXT AS OBSERVACION,
		MAE_CLIEN_VINCU.CLIE_OID_CLIE_VNTE,
		MAE_CLIEN_VINCU.CLIE_OID_CLIE_VNDO

		FROM MAE_CLIEN MAE_CLIEN,
		SEG_PAIS,
		MAE_CLIEN_TIPO_SUBTI,
		MAE_TIPO_CLIEN,
		MAE_SUBTI_CLIEN,
		MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,
		SEG_CANAL,
		SEG_MARCA,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		ZON_SUB_GEREN_VENTA,
		MAE_CLIEN_CLASI,
		MAE_TIPO_CLASI_CLIEN,
		MAE_CLASI,
		MAE_CLIEN_IDENT,
		MAE_TIPO_DOCUM,
		MAE_CLIEN_DIREC,
		SEG_TIPO_VIA,
		MAE_CLIEN_COMUN,
		MAE_TIPO_COMUN,
		MAE_CLIEN_OBSER,
		MAE_CLIEN_VINCU,
		MAE_TIPO_VINCU
		WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
		AND (SEG_MARCA.COD_MARC = #codigoMarca#)
		AND (SEG_CANAL.COD_CANA = #codigoCanal#)
     		 <![CDATA[
     		 AND   (MAE_CLIEN.FEC_INGR >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
     		 ]]>
     		 <![CDATA[
     		 AND   (MAE_CLIEN.FEC_INGR <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
     		 ]]>
		<isNotEmpty prepend="AND" property="codigoSubGerencia">
			(ZON_SUB_GEREN_VENTA.COD_SUBG_VENT = #codigoSubGerencia#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoRegion">
			(ZON_REGIO.COD_REGI = #codigoRegion#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			(ZON_ZONA.COD_ZONA = #codigoZona#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoCanalRol">
			(MAE_CLASI.COD_CLAS = #codigoCanalRol#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoEstadoRol">
			(MAE_CLASI.COD_CLAS = #codigoEstadoRol#)
		</isNotEmpty>
		AND (MAE_TIPO_CLIEN.COD_TIPO_CLIE ='01')
		AND (MAE_SUBTI_CLIEN.COD_SUBT_CLIE ='01')
		AND (MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS = '02')
		AND (MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS = '04')
		AND (MAE_TIPO_COMUN.COD_TIPO_COMU = 'TF')
		AND (MAE_CLIEN_COMUN.IND_COMU_PPAL = 1)
		AND (MAE_CLIEN_VINCU.IND_VINC_PPAL = 1)
		AND MAE_CLIEN_DIREC.IND_DIRE_PPAL = 1
		AND MAE_CLIEN_DIREC.IND_ELIM = 0
		AND (MAE_TIPO_VINCU.COD_TIPO_VINC = '03')
		AND (MAE_CLIEN.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_TIPO_SUBTI.CLIE_OID_CLIE)
    		 AND   (MAE_CLIEN_TIPO_SUBTI.TICL_OID_TIPO_CLIE = MAE_TIPO_CLIEN.OID_TIPO_CLIE)
    		 AND   (MAE_CLIEN_TIPO_SUBTI.SBTI_OID_SUBT_CLIE = MAE_SUBTI_CLIEN.OID_SUBT_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
    		 AND   (MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI)
		AND (ZON_TERRI_ADMIN.MARC_OID_MARC = SEG_MARCA.OID_MARC)
		AND (ZON_TERRI_ADMIN.CANA_OID_CANA = SEG_CANAL.OID_CANA)
		AND (ZON_TERRI_ADMIN.TERR_OID_TERR = ZON_TERRI.OID_TERR)
		AND (ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC)
		AND (ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA)
		AND (ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI)
		AND (ZON_REGIO.ZSGV_OID_SUBG_VENT = ZON_SUB_GEREN_VENTA.OID_SUBG_VENT)
    		 AND   (MAE_CLIEN_CLASI.CTSU_OID_CLIE_TIPO_SUBT = MAE_CLIEN_TIPO_SUBTI.OID_CLIE_TIPO_SUBT)
    		 AND   (MAE_CLIEN_CLASI.TCCL_OID_TIPO_CLASI = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS)
		AND (MAE_CLIEN_CLASI.CLAS_OID_CLAS = MAE_CLASI.OID_CLAS)
		AND (MAE_CLASI.TCCL_OID_TIPO_CLAS = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS)
		AND (MAE_CLIEN_IDENT.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_IDENT.TDOC_OID_TIPO_DOCU = MAE_TIPO_DOCUM.OID_TIPO_DOCU)
		AND (MAE_CLIEN_DIREC.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_DIREC.TIVI_OID_TIPO_VIA = SEG_TIPO_VIA.OID_TIPO_VIA)
		AND (MAE_CLIEN_COMUN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_COMUN.TICM_OID_TIPO_COMU = MAE_TIPO_COMUN.OID_TIPO_COMU)
		AND (MAE_CLIEN_OBSER.CLIE_OID_CLIE (+)= MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_VINCU.CLIE_OID_CLIE_VNDO (+)= MAE_CLIEN.OID_CLIE)
    		 AND   (MAE_CLIEN_VINCU.TIVC_OID_TIPO_VINC = MAE_TIPO_VINCU.OID_TIPO_VINC (+))
		)
		) CABECERA, MAE_CLIEN, MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,ZON_TERRI,
		ZON_SECCI, ZON_ZONA
		WHERE (CABECERA.CLIE_OID_CLIE_VNTE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = CABECERA.CLIE_OID_CLIE_VNTE)
    		 AND   (MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI)
		AND (ZON_TERRI_ADMIN.TERR_OID_TERR = ZON_TERRI.OID_TERR)
		AND (ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC)
		AND (ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA)
		ORDER BY CODCLIE
	</select>


	<!-- REPORTE - CAL - CONSULTORAS RECOMENDADAS (XLS) -->
    <select id="getReporteConsultorasRecomendadasXLS" parameterClass="java.util.Map" resultMap="consultorasRecomendadasSICCXLSResult">
		SELECT CABECERA.CODFI,
		CABECERA.REGION,
		CABECERA.ZONA,
		CABECERA.CODCLIE,
		CABECERA.TIPDOCU,
		CABECERA.NUDOCU,
		CABECERA.NOM1,
		CABECERA.NOM2,
		CABECERA.PATERNO,
		CABECERA.MATERNO,
		CABECERA.DIRECCION,
		CABECERA.TELEFONO,
		MAE_CLIEN.COD_CLIE AS CODRECO,
		MAE_CLIEN.VAL_NOM1 AS NOM1RE,
		MAE_CLIEN.VAL_NOM2 AS NOM2RE,
		MAE_CLIEN.VAL_APE1 AS PATERNORE,
		MAE_CLIEN.VAL_APE2 AS MATERNORE,
		ZON_ZONA.COD_ZONA AS ZONARE,
		ZON_TERRI.COD_TERR AS TERRITORIO,
		CABECERA.FECREG,
		CABECERA.ESTADO,
		CABECERA.OBSERVACION,
		CABECERA.USUARIO,
		CABECERA.FEPROCESO
		FROM
		(SELECT 'REP-CAL-009' AS CODFI,
		ZON_REGIO.COD_REGI AS REGION,
		ZON_ZONA.COD_ZONA AS ZONA,
		MAE_CLIEN.COD_CLIE AS CODCLIE,
		MAE_TIPO_DOCUM.VAL_SIGL AS TIPDOCU,
		MAE_CLIEN_IDENT.NUM_DOCU_IDEN AS NUDOCU,
		MAE_CLIEN.VAL_NOM1 AS NOM1,
		MAE_CLIEN.VAL_NOM2 AS NOM2,
		MAE_CLIEN.VAL_APE1 AS PATERNO,
		MAE_CLIEN.VAL_APE2 AS MATERNO,

		SEG_TIPO_VIA.DES_ABRV_TIPO_VIA || ' ' || MAE_CLIEN_DIREC.VAL_NOMB_VIA || ' ' ||
		MAE_CLIEN_DIREC.NUM_PPAL || ' ' || MAE_CLIEN_DIREC.VAL_OBSE || ' ' ||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
		AND ZONA.ORDE_2 IS NULL
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) ||','||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
        		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
		AND ZONA.ORDE_3 IS NULL
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) ||','||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
        		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
        		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
		AND ZONA.ORDE_4 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) ||','||

		(SELECT ZONA.DES_GEOG
		FROM ZON_VALOR_ESTRU_GEOPO ZONA
		WHERE ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,1,6)))
        		      AND 	ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,7,6)))
        		      AND 	ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,13,6)))
        		      AND 	ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(MAE_CLIEN_DIREC.COD_UNID_GEOG,19,6)))
		AND ZONA.ORDE_5 IS NULL
		AND ZONA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ROWNUM = 1) AS DIRECCION,

		MAE_CLIEN_COMUN.VAL_TEXT_COMU AS TELEFONO,
		MAE_CLIEN.FEC_INGR AS FECREG,

		(SELECT GEN_I18N_SICC_COMUN.VAL_I18N
		FROM GEN_I18N_SICC_COMUN,
		SEG_IDIOM
		WHERE ((GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS)
		AND (GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO)
		AND (GEN_I18N_SICC_COMUN.ATTR_ENTI ='MAE_CLASI')
		AND (SEG_IDIOM.COD_IDIO = UPPER(#codigoIdioma#))
		)
		) AS ESTADO,

		MAE_CLIEN_OBSER.VAL_TEXT AS OBSERVACION,
		#usuario# AS USUARIO,
		TO_CHAR(SYSDATE,'DD/MM/YYYY') AS FEPROCESO,
		MAE_CLIEN_VINCU.CLIE_OID_CLIE_VNTE,
		MAE_CLIEN_VINCU.CLIE_OID_CLIE_VNDO

		FROM MAE_CLIEN MAE_CLIEN,
		SEG_PAIS,
		MAE_CLIEN_TIPO_SUBTI,
		MAE_TIPO_CLIEN,
		MAE_SUBTI_CLIEN,
		MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,
		SEG_CANAL,
		SEG_MARCA,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		ZON_SUB_GEREN_VENTA,
		MAE_CLIEN_CLASI,
		MAE_TIPO_CLASI_CLIEN,
		MAE_CLASI,
		MAE_CLIEN_IDENT,
		MAE_TIPO_DOCUM,
		MAE_CLIEN_DIREC,
		SEG_TIPO_VIA,
		MAE_CLIEN_COMUN,
		MAE_TIPO_COMUN,
		MAE_CLIEN_OBSER,
		MAE_CLIEN_VINCU,
		MAE_TIPO_VINCU
		WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
		AND (SEG_MARCA.COD_MARC = #codigoMarca#)
		AND (SEG_CANAL.COD_CANA = #codigoCanal#)
     		 <![CDATA[
     		 AND   (MAE_CLIEN.FEC_INGR >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
     		 ]]>
     		 <![CDATA[
     		 AND   (MAE_CLIEN.FEC_INGR <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
     		 ]]>
		<isNotEmpty prepend="AND" property="codigoSubGerencia">
			(ZON_SUB_GEREN_VENTA.COD_SUBG_VENT = #codigoSubGerencia#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoRegion">
			(ZON_REGIO.COD_REGI = #codigoRegion#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			(ZON_ZONA.COD_ZONA = #codigoZona#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoCanalRol">
			(MAE_CLASI.COD_CLAS = #codigoCanalRol#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoEstadoRol">
			(MAE_CLASI.COD_CLAS = #codigoEstadoRol#)
		</isNotEmpty>
		AND (MAE_TIPO_CLIEN.COD_TIPO_CLIE ='01')
		AND (MAE_SUBTI_CLIEN.COD_SUBT_CLIE ='01')
		AND (MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS = '02')
		AND (MAE_TIPO_CLASI_CLIEN.COD_TIPO_CLAS = '04')
		AND (MAE_TIPO_COMUN.COD_TIPO_COMU = 'TF')
		AND (MAE_CLIEN_COMUN.IND_COMU_PPAL = 1)
		AND (MAE_CLIEN_VINCU.IND_VINC_PPAL = 1)
		AND MAE_CLIEN_DIREC.IND_DIRE_PPAL = 1
		AND MAE_CLIEN_DIREC.IND_ELIM = 0
		AND (MAE_TIPO_VINCU.COD_TIPO_VINC = '03')
		AND (MAE_CLIEN.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_TIPO_SUBTI.CLIE_OID_CLIE)
    		 AND   (MAE_CLIEN_TIPO_SUBTI.TICL_OID_TIPO_CLIE = MAE_TIPO_CLIEN.OID_TIPO_CLIE)
    		 AND   (MAE_CLIEN_TIPO_SUBTI.SBTI_OID_SUBT_CLIE = MAE_SUBTI_CLIEN.OID_SUBT_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
    		 AND   (MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI)
		AND (ZON_TERRI_ADMIN.MARC_OID_MARC = SEG_MARCA.OID_MARC)
		AND (ZON_TERRI_ADMIN.CANA_OID_CANA = SEG_CANAL.OID_CANA)
		AND (ZON_TERRI_ADMIN.TERR_OID_TERR = ZON_TERRI.OID_TERR)
		AND (ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC)
		AND (ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA)
		AND (ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI)
		AND (ZON_REGIO.ZSGV_OID_SUBG_VENT = ZON_SUB_GEREN_VENTA.OID_SUBG_VENT)
    		 AND   (MAE_CLIEN_CLASI.CTSU_OID_CLIE_TIPO_SUBT = MAE_CLIEN_TIPO_SUBTI.OID_CLIE_TIPO_SUBT)
    		 AND   (MAE_CLIEN_CLASI.TCCL_OID_TIPO_CLASI = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS)
		AND (MAE_CLIEN_CLASI.CLAS_OID_CLAS = MAE_CLASI.OID_CLAS)
		AND (MAE_CLASI.TCCL_OID_TIPO_CLAS = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS)
		AND (MAE_CLIEN_IDENT.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_IDENT.TDOC_OID_TIPO_DOCU = MAE_TIPO_DOCUM.OID_TIPO_DOCU)
		AND (MAE_CLIEN_DIREC.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_DIREC.TIVI_OID_TIPO_VIA = SEG_TIPO_VIA.OID_TIPO_VIA)
		AND (MAE_CLIEN_COMUN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_COMUN.TICM_OID_TIPO_COMU = MAE_TIPO_COMUN.OID_TIPO_COMU)
		AND (MAE_CLIEN_OBSER.CLIE_OID_CLIE (+)= MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_VINCU.CLIE_OID_CLIE_VNDO (+)= MAE_CLIEN.OID_CLIE)
    		 AND   (MAE_CLIEN_VINCU.TIVC_OID_TIPO_VINC = MAE_TIPO_VINCU.OID_TIPO_VINC (+))
		)
		) CABECERA, MAE_CLIEN, MAE_CLIEN_UNIDA_ADMIN,
		ZON_TERRI_ADMIN,ZON_TERRI,
		ZON_SECCI, ZON_ZONA
		WHERE (CABECERA.CLIE_OID_CLIE_VNTE = MAE_CLIEN.OID_CLIE)
		AND (MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = CABECERA.CLIE_OID_CLIE_VNTE)
    		 AND   (MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI)
		AND (ZON_TERRI_ADMIN.TERR_OID_TERR = ZON_TERRI.OID_TERR)
		AND (ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC)
		AND (ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA)
		ORDER BY CODCLIE
	</select>


	<!-- REPORTE - COM - PAGO LIDERES (PDF) -->
    <select id="getReporteCOMPagoLideres" parameterClass="java.util.Map" resultMap="reporteCOMPagoLideresResult">
		SELECT MAE_CLIEN_LIDER.COD_PLAN AS CODPLA,
		MAE_CLIEN_LIDER.NUM_LIAH AS NUMCUEN,
		COM_COMIS_CALCU.IMP_COMI AS IMPORT,
		TO_CHAR(COM_COMIS_CALCU.FEC_CALC,'DD/MM/YYYY') AS FECCAL,
		MAE_CLIEN.VAL_NOM1 || ' ' || MAE_CLIEN.VAL_NOM2 || ' ' ||
		MAE_CLIEN.VAL_APE1 || ' ' || MAE_CLIEN.VAL_APE2 AS NOMAPE
		FROM COM_COMIS_CALCU,
		SEG_PAIS,
		CRA_PERIO,
		SEG_PERIO_CORPO,
		MAE_CLIEN,
		COM_COMIS,
		MAE_CLIEN_LIDER
		WHERE ((SEG_PAIS.COD_PAIS = #codigoPais#)
		AND (SEG_PERIO_CORPO.COD_PERI = #codigoPeriodo#)
		AND (COM_COMIS.COD_COMI = #codigoComision#)
		AND (COM_COMIS_CALCU.PERD_OID_PERI = CRA_PERIO.OID_PERI)
		AND (CRA_PERIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CRA_PERIO.PERI_OID_PERI = SEG_PERIO_CORPO.OID_PERI)
		AND (COM_COMIS_CALCU.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE)
		AND (COM_COMIS_CALCU.COMI_OID_COMI = COM_COMIS.OID_COMI)
		AND (SEG_PAIS.COD_PAIS = MAE_CLIEN_LIDER.PAIS_COD_PAIS)
		AND (MAE_CLIEN.COD_CLIE = MAE_CLIEN_LIDER.COD_CLID)
		AND (MAE_CLIEN.COD_CLIE NOT IN (SELECT MAE_CLIEN_LIDER_BLOQU.COD_CLIB
		FROM MAE_CLIEN_LIDER_BLOQU
		WHERE (<![CDATA[  
   	  	  									           (#codigoPeriodo# >= MAE_CLIEN_LIDER_BLOQU.PER_INIC)
   	  	  									     AND   (#codigoPeriodo# <= MAE_CLIEN_LIDER_BLOQU.PER_FINA OR 
												        MAE_CLIEN_LIDER_BLOQU.PER_FINA IS NULL) 
   	     	  								  		   ]]>
		)
		)
		)
		)
		ORDER BY CODPLA, NUMCUEN, IMPORT
	</select>


	<!-- REPORTE - COM - LIDERES NUEVAS (PDF) -->
    <select id="getReporteCOMLideresNuevas" parameterClass="java.util.Map" resultMap="reporteCOMLideresNuevasResult">
		SELECT MAE_CLIEN_LIDER.COD_CLID AS CODCLIE,
		MAE_CLIEN.VAL_NOM1 || ' ' ||
		MAE_CLIEN.VAL_NOM2 || ' ' ||
		MAE_CLIEN.VAL_APE1 || ' ' ||
		MAE_CLIEN.VAL_APE2 AS NOMAPE,
		TO_CHAR(MAE_CLIEN.FEC_INGR,'DD/MM/YYYY') AS FECING,
		MAE_CLIEN_LIDER.NUM_DNI AS DNI
		FROM SEG_PAIS,
		MAE_CLIEN,
		MAE_CLIEN_LIDER
		WHERE ( (SEG_PAIS.OID_PAIS = MAE_CLIEN.PAIS_OID_PAIS)
		AND (MAE_CLIEN.COD_CLIE = MAE_CLIEN_LIDER.COD_CLID)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
		AND (MAE_CLIEN_LIDER.PER_INGR = #codigoPeriodo#)
		)
	</select>


	<!-- REPORTE - PER - RESUMEN CUENTAS CORRIENTES (PDF) -->
    <select id="getReportePERListaGenerica" parameterClass="java.util.Map" resultMap="reportePERListaGenerica">
		SELECT abs(NVL(CARGOS_FACTURACION,0)) AS CARGOS_FACTURACION,
		abs(NVL(CARGOS_DIRECTOS,0)) AS CARGOS_DIRECTOS,
		abs(NVL(NOTAS_DE_CREDITO,0)) AS NOTAS_DE_CREDITO,
		abs(NVL(ABONOS_DIRECTOS,0)) AS ABONOS_DIRECTOS,
		abs(NVL(ABONOS_COBRANZA,0)) AS ABONOS_COBRANZA,
		abs(NVL(ACUM_ANTERIOR,0)) AS ACUM_ANTERIOR,
		abs(NVL(ACUM_ANTERIOR_ABONOS,0)) AS ACUM_ANTERIOR_ABONOS
		FROM (
		SELECT
		(WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
			AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<![CDATA[ 			
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				]]>
		AND SEG_SOCIE.COD_SOCI=#codigoSociedad#
		)
		SELECT
		SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		WHERE (TEMPORAL.IMP > 0)
		AND	  (TEMPORAL.COD_PROC = 'CCC001')
		GROUP BY TEMPORAL.COD_PAIS
		) AS "CARGOS_FACTURACION" ,
		(WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
				AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<![CDATA[ 
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				]]>
		AND SEG_SOCIE.COD_SOCI=#codigoSociedad#
		)
		SELECT SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		WHERE (TEMPORAL.IMP > 0)
		AND	  (TEMPORAL.COD_PROC = 'CCC003')
		AND (TEMPORAL.COD_SUBP = 4)
		GROUP BY TEMPORAL.COD_PAIS
		) AS "CARGOS_DIRECTOS"
		,
		(
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
			AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<![CDATA[
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				]]>
		AND SEG_SOCIE.COD_SOCI=#codigoSociedad#
		)
		SELECT
		SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		<![CDATA[
		WHERE (TEMPORAL.IMP < 0)
		]]>
		AND	  (((TEMPORAL.COD_PROC = 'CCC001' OR TEMPORAL.COD_PROC = 'CCCI01') AND (TEMPORAL.COD_SUBP = 1))
		OR	  ((TEMPORAL.COD_PROC = 'CCCD01') AND (TEMPORAL.COD_SUBP = 1))
		OR	  ((TEMPORAL.COD_PROC = 'CCCG01') AND (TEMPORAL.COD_SUBP = 1))
		OR	  ((TEMPORAL.COD_PROC = 'CCCN01') AND (TEMPORAL.COD_SUBP = 1)))
		GROUP BY TEMPORAL.COD_PAIS
		) as "NOTAS_DE_CREDITO",
		(
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
				AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<![CDATA[
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				]]>
		AND SEG_SOCIE.COD_SOCI=#codigoSociedad#
		)
		SELECT
		SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		<![CDATA[
		  WHERE (TEMPORAL.IMP < 0)
		  ]]>
		AND ((TEMPORAL.COD_PROC = 'CCC003') AND (TEMPORAL.COD_SUBP = 4))
		GROUP BY TEMPORAL.COD_PAIS
		) AS "ABONOS_DIRECTOS"
		,(
		SELECT
		SUM(CCC_DETAL_CARGO_ABONO_DIREC.IMP) AS IMPORTE
		FROM CCC_MOVIM_BANCA,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_CUENT_CORRI_BANCA,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_MOVIM_BANCA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_MOVIM_BANCA.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
		  AND	(CCC_MOVIM_BANCA.CCBA_OID_CC_BANC = CCC_CUENT_CORRI_BANCA.OID_CUEN_CORR_BANC)
		  AND	(CCC_DETAL_CARGO_ABONO_DIREC.CMBA_OID_MOVI_BANC = CCC_MOVIM_BANCA.OID_MOVI_BANC)
		  AND	(CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
		  <![CDATA[
      	AND	(CCC_MOVIM_BANCA.FEC_PAGO BETWEEN TO_DATE(#fechaDesde#,'DD/MM/YYYY') AND TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.FEC_MOVI >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.FEC_MOVI <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
		]]>
		AND SEG_SOCIE.COD_SOCI=#codigoSociedad#
		) AS "ABONOS_COBRANZA",
		(
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
									AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
									AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
									 <![CDATA[
									AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
									AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
									]]>
		AND SEG_SOCIE.COD_SOCI=#codigoSociedad#
		)
		SELECT SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		WHERE (TEMPORAL.IMP > 0)
		AND
		(
		(TEMPORAL.COD_PROC = 'CCC003') OR (TEMPORAL.COD_PROC = 'CCC001')
		)
		AND (TEMPORAL.COD_SUBP = 4)
		GROUP BY TEMPORAL.COD_PAIS
		)AS ACUM_ANTERIOR,
		(
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
									AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
									AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
									 <![CDATA[ 
									AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
									AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
									]]>
		AND SEG_SOCIE.COD_SOCI=#codigoSociedad#
		)
		SELECT SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
							<![CDATA[
							WHERE (TEMPORAL.IMP < 0) 
							]]>
		AND
		(
		(TEMPORAL.COD_PROC = 'CCC003') OR (TEMPORAL.COD_PROC = 'CCC001')
		)
		AND (TEMPORAL.COD_SUBP = 4)
		GROUP BY TEMPORAL.COD_PAIS
		) AS ACUM_ANTERIOR_ABONOS
		FROM DUAL ) X
		WHERE
		CARGOS_FACTURACION>0
		OR CARGOS_DIRECTOS>0
		OR NOTAS_DE_CREDITO>0
		OR ABONOS_DIRECTOS>0
		OR ABONOS_COBRANZA>0
		OR ACUM_ANTERIOR>0
		OR ACUM_ANTERIOR_ABONOS>0
	</select>

	<!-- REPORTE - PER - REGISTRO POR CONTROL DE CLIENTE (PDF) -->
    <select id="getReportePERListaControlCliente" parameterClass="java.util.Map" resultMap="reportePERListaControlCliente">
		SELECT PER.FEC_COPE AS FEC_COMP_PER,
		PER.SER_COPE || PER.NUM_COPE AS SER_NUM_COMP_PER,
		PER.TIP_DOID AS TIP_DOC_CLI,
		PER.NUM_DOID AS NUM_DOC_CLI,
		VAL_NOM1||' '||VAL_NOM2||' '||VAL_APE1||' '||VAL_APE2 AS NOM_CONS,
		PER.TIP_DOLE AS TIP_DOC_PGO,
		PER.SER_DOLE || PER.NUM_DOLE AS SER_NUM_DOC_PGO,
		PER.MON_TODL AS IMP_PER,
		0 AS PERCEP,
		PER.MON_TODL AS DEBE,
		0 AS HABER,
		PER.MON_TODL AS SALDO,
		SOCI.VAL_DENO as SOCIEDAD,
		SOCI.VAL_IDEN_FISC AS SOC_RUC ,
		PER.COR_PECO
		FROM PER_PERCE_CONSO PER,
		MAE_CLIEN CLI,
		SEG_PAIS PAIS,
		SEG_SOCIE SOCI
		WHERE
		PER.PAIS_COD_PAIS = #codigoPais# AND
		PER.PAIS_COD_PAIS = PAIS.COD_PAIS AND
		CLI.PAIS_OID_PAIS = PAIS.OID_PAIS AND
		CLI.COD_CLIE = PER.COD_CLIE AND
		PER.MON_PERC = 0
 	   		 <![CDATA[ 
					  AND (PER.FEC_DOLE >= TO_DATE (#fechaDesde#,'dd/MM/yyyy'))
 	  				  AND (PER.FEC_DOLE <= TO_DATE (#fechaHasta#,'dd/MM/yyyy'))
 	  		]]>
		AND SOCI.COD_SOCI = PER.COD_SOCI
		UNION

		SELECT PER.FEC_COPE AS FEC_COMP_PER,
		PER.SER_COPE || PER.NUM_COPE AS SER_NUM_COMP_PER,
		PER.TIP_DOID AS TIP_DOC_CLI,
		PER.NUM_DOID AS NUM_DOC_CLI,
		VAL_NOM1||' '||VAL_NOM2||' '||VAL_APE1||' '||VAL_APE2 AS NOM_CONS,
		PER.TIP_DOLE AS TIP_DOC_PGO,
		PER.SER_DOLE || PER.NUM_DOLE AS SER_NUM_DOC_PGO,
		0 AS IMP_PER,
		PER.MON_PERC AS PERCEP,
		0 AS DEBE,
		PER.MON_PAGO AS HABER,
					   GEN_FN_CALC_SALDO_CONTCLIE(PER.SER_DOLE || PER.NUM_DOLE,PER.SER_COPE ||PER.NUM_COPE,#codigoPais#,PER.COR_PECO) AS SALDO,
		SOCI.VAL_DENO as SOCIEDAD,
		SOCI.VAL_IDEN_FISC AS SOC_RUC ,
		PER.COR_PECO
		FROM PER_PERCE_CONSO PER,
		MAE_CLIEN CLI,
		SEG_PAIS PAIS,
		SEG_SOCIE SOCI
		WHERE
		PER.PAIS_COD_PAIS = #codigoPais# AND
		PER.PAIS_COD_PAIS = PAIS.COD_PAIS AND
		CLI.PAIS_OID_PAIS = PAIS.OID_PAIS AND
		CLI.COD_CLIE = PER.COD_CLIE AND
		PER.MON_PERC > 0
 	   		 <![CDATA[ 
					  AND (PER.FEC_DOLE >= TO_DATE (#fechaDesde#,'dd/MM/yyyy'))
 	  				  AND (PER.FEC_DOLE <= TO_DATE (#fechaHasta#,'dd/MM/yyyy'))
 	  		]]>
		AND SOCI.COD_SOCI = PER.COD_SOCI
		ORDER BY
		TIP_DOC_CLI,
		NUM_DOC_CLI,
		SER_NUM_DOC_PGO,
		SER_NUM_COMP_PER,
		COR_PECO
	</select>


	<!-- REPORTE - PER - REGISTRO LIBRO PERCEPCIONES (PDF) -->
    <select id="getReportePERLibroPercepciones" parameterClass="java.util.Map" resultMap="reportePERLibroPercepciones">
		SELECT PER.COD_ACCE AS COD_ACCE,
		PER.COD_SBAC AS COD_SBAC,
		PER.COD_CLIE AS COD_CLIE,
		PER.TIP_DOID AS TIP_DOID,
		PER.NUM_DOID AS NUM_DOID,
		CLI.VAL_NOM1||' '||CLI.VAL_NOM2||' '||CLI.VAL_APE1||' '||CLI.VAL_APE2 AS NOM_CONS,
		PER.MON_TODL AS VENTAS,
		SUM(PER.MON_PERC) AS PERCEPCION,
		SUM(PER.MON_PAGO) AS COBRADO,
		SOCI.VAL_DENO as SOCIEDAD,
		SOCI.VAL_IDEN_FISC AS SOC_RUC,
		PER.NUM_DOLE as NUM_DOLE
		FROM PER_PERCE_CONSO PER,
		MAE_CLIEN CLI,
		SEG_PAIS PAIS,
		SEG_SOCIE SOCI
			WHERE PER.PAIS_COD_PAIS = #codigoPais#
		AND PER.PAIS_COD_PAIS = PAIS.COD_PAIS
		AND CLI.PAIS_OID_PAIS = PAIS.OID_PAIS
		AND CLI.COD_CLIE = PER.COD_CLIE
		AND SOCI.COD_SOCI = PER.COD_SOCI   
		    <![CDATA[
			AND   (PER.FEC_DOLE >= TO_DATE (#fechaDesde#,'dd/MM/yyyy'))
  			AND   (PER.FEC_DOLE <= TO_DATE (#fechaHasta#,'dd/MM/yyyy'))
  			]]>

		GROUP BY PER.COD_ACCE,
		PER.COD_SBAC,
		PER.COD_CLIE,
		PER.TIP_DOID,
		PER.NUM_DOID,
		CLI.VAL_NOM1||' '||CLI.VAL_NOM2||' '||CLI.VAL_APE1||' '||CLI.VAL_APE2 ,
		SOCI.VAL_DENO,
		SOCI.VAL_IDEN_FISC,
		PER.NUM_DOLE,
		PER.SER_DOLE,
		PER.MON_TODL
		ORDER BY PER.COD_ACCE,
		PER.COD_SBAC,
		PER.COD_CLIE,
		PER.SER_DOLE,
		PER.NUM_DOLE
	</select>


	<!-- REPORTE - PER - RESUMEN DE CUENTA CORRIENTE - CARGOS FACTURACION (PDF)
-->
    <select id="getReportePERListaCargosFacturacion" parameterClass="java.util.Map" resultMap="reportePERListaCargoAbono">
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		SEG_SOCIE.COD_SOCI,
		CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU,
		CCC_CABEC_CARGA_ABONO_DIREC.VAL_NUME_LOTE_CONT,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
			AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
	   		 <![CDATA[
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				AND   SEG_SOCIE.COD_SOCI=#codigoSociedad#
			]]>
		)
		SELECT TEMPORAL.COD_PAIS AS PAIS,
		TEMPORAL.COD_SOCI AS SOCIEDAD,
		TEMPORAL.FEC_DOCU AS FECHA_DOCUMENTO,
		TEMPORAL.VAL_NUME_LOTE_CONT AS NUMERO_LOTE,
		SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		<![CDATA[
		WHERE (TEMPORAL.IMP > 0)
		]]>
		AND (TEMPORAL.COD_PROC = 'CCC001')
		GROUP BY TEMPORAL.COD_PAIS,
		TEMPORAL.COD_SOCI,
		TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
		ORDER BY TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
	</select>


	<!-- REPORTE - PER - RESUMEN DE CUENTA CORRIENTE - CARGOS DIRECTOS (PDF)
-->	
	<select id="getReportePERListaCargosDirectos" parameterClass="java.util.Map" resultMap="reportePERListaCargoAbono">
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		SEG_SOCIE.COD_SOCI,
		CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU,
		CCC_CABEC_CARGA_ABONO_DIREC.VAL_NUME_LOTE_CONT,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
				AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<![CDATA[
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				AND   SEG_SOCIE.COD_SOCI=#codigoSociedad#
				]]>
		)
		SELECT TEMPORAL.COD_PAIS AS PAIS,
		TEMPORAL.COD_SOCI AS SOCIEDAD,
		TEMPORAL.FEC_DOCU AS FECHA_DOCUMENTO,
		TEMPORAL.VAL_NUME_LOTE_CONT AS NUMERO_LOTE,
		SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		<![CDATA[
		WHERE (TEMPORAL.IMP > 0)
		]]>
		AND (TEMPORAL.COD_PROC = 'CCC003')
		AND (TEMPORAL.COD_SUBP = 4)
		GROUP BY TEMPORAL.COD_PAIS,
		TEMPORAL.COD_SOCI,
		TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
		ORDER BY TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
	</select>


	<!-- REPORTE - PER - RESUMEN DE CUENTA CORRIENTE - ABONOS NOTA CREDITO (PDF)
-->
	<select id="getReportePERListaAbonosPorNotaCredito" parameterClass="java.util.Map" resultMap="reportePERListaCargoAbono">
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		SEG_SOCIE.COD_SOCI,
		CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU,
		CCC_CABEC_CARGA_ABONO_DIREC.VAL_NUME_LOTE_CONT,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
			AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
			<![CDATA[
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				AND   SEG_SOCIE.COD_SOCI=#codigoSociedad#
			]]>
		)
		SELECT TEMPORAL.COD_PAIS AS PAIS,
		TEMPORAL.COD_SOCI AS SOCIEDAD,
		TEMPORAL.FEC_DOCU AS FECHA_DOCUMENTO,
		TEMPORAL.VAL_NUME_LOTE_CONT AS NUMERO_LOTE,
		abs(SUM(TEMPORAL.IMP)) AS SUMA
		FROM TEMPORAL
		<![CDATA[
		WHERE (TEMPORAL.IMP < 0)
		]]>
		AND	  (((TEMPORAL.COD_PROC = 'CCC001' OR TEMPORAL.COD_PROC = 'CCCI01') AND (TEMPORAL.COD_SUBP = 1))
		OR	  ((TEMPORAL.COD_PROC = 'CCCD01') AND (TEMPORAL.COD_SUBP = 1))
		OR	  ((TEMPORAL.COD_PROC = 'CCCG01') AND (TEMPORAL.COD_SUBP = 1))
		OR	  ((TEMPORAL.COD_PROC = 'CCCN01') AND (TEMPORAL.COD_SUBP = 1)))
		GROUP BY TEMPORAL.COD_PAIS,
		TEMPORAL.COD_SOCI,
		TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
		ORDER BY TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
	</select>


	<!-- REPORTE - PER - RESUMEN DE CUENTA CORRIENTE - ABONOS DIRECTOS (PDF)
-->
	<select id="getReportePERListaAbonosDirectos" parameterClass="java.util.Map" resultMap="reportePERListaCargoAbono">
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		SEG_SOCIE.COD_SOCI,
		CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU,
		CCC_CABEC_CARGA_ABONO_DIREC.VAL_NUME_LOTE_CONT,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
				AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<![CDATA[
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				AND   SEG_SOCIE.COD_SOCI=#codigoSociedad#
				]]>
		)
		SELECT TEMPORAL.COD_PAIS AS PAIS,
		TEMPORAL.COD_SOCI AS SOCIEDAD,
		TEMPORAL.FEC_DOCU AS FECHA_DOCUMENTO,
		TEMPORAL.VAL_NUME_LOTE_CONT AS NUMERO_LOTE,
		abs(SUM(TEMPORAL.IMP)) AS SUMA
		FROM TEMPORAL
		  <![CDATA[
		  WHERE (TEMPORAL.IMP < 0)
		  ]]>
		AND ((TEMPORAL.COD_PROC = 'CCC003') AND (TEMPORAL.COD_SUBP = 4))
		GROUP BY TEMPORAL.COD_PAIS,
		TEMPORAL.COD_SOCI,
		TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
		ORDER BY TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
	</select>


	<!-- REPORTE - PER - RESUMEN DE CUENTA CORRIENTE - ABONOS DIRECTOS PERCEPCIONES (PDF)
-->
	<select id="getReportePERListaAbonosDirectosPercepciones" parameterClass="java.util.Map" resultMap="reportePERListaCargoAbono">
		WITH TEMPORAL AS
		(SELECT SEG_PAIS.COD_PAIS,
		SEG_SOCIE.COD_SOCI,
		CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU,
		CCC_CABEC_CARGA_ABONO_DIREC.VAL_NUME_LOTE_CONT,
		CCC_DETAL_CARGO_ABONO_DIREC.IMP,
		CCC_SUBPR.COD_SUBP,
		CCC_PROCE.COD_PROC
		FROM CCC_CABEC_CARGA_ABONO_DIREC,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_CABEC_CARGA_ABONO_DIREC.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_CABEC_CARGA_ABONO_DIREC.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG)
				AND	  (CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
				<![CDATA[
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
				AND	  (CCC_CABEC_CARGA_ABONO_DIREC.FEC_DOCU <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
				AND   SEG_SOCIE.COD_SOCI=#codigoSociedad#
				]]>
		)
		SELECT TEMPORAL.COD_PAIS AS PAIS,
		TEMPORAL.COD_SOCI AS SOCIEDAD,
		TEMPORAL.FEC_DOCU AS FECHA_DOCUMENTO,
		TEMPORAL.VAL_NUME_LOTE_CONT AS NUMERO_LOTE,
		SUM(TEMPORAL.IMP) AS SUMA
		FROM TEMPORAL
		  <![CDATA[
		  WHERE (TEMPORAL.IMP > 0)
		  ]]>
		AND ((TEMPORAL.COD_PROC = 'CCCP03') AND (TEMPORAL.COD_SUBP = 1))
		GROUP BY TEMPORAL.COD_PAIS,
		TEMPORAL.COD_SOCI,
		TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
		ORDER BY TEMPORAL.FEC_DOCU,
		TEMPORAL.VAL_NUME_LOTE_CONT
	</select>


    <!-- REPORTE - PER - RESUMEN DE CUENTA CORRIENTE - ABONOS COBRANZA (PDF)
-->
	<select id="getReportePERListaAbonosPorCobranza" parameterClass="java.util.Map" resultMap="reportePERListaAbonosPorCobranza">
		SELECT CCC_CUENT_CORRI_BANCA.COD_CC_BANC AS CODIGO_CTA_CTE,
		CCC_CUENT_CORRI_BANCA.DES_CC AS DESCRIPCION_CTA_CTE,
		CCC_MOVIM_BANCA.FEC_PAGO AS FECHA_PAGO,
		SUM(CCC_MOVIM_BANCA.IMP_PAGO) AS IMPORTE_PAGO,
		CCC_DETAL_CARGO_ABONO_DIREC.FEC_PAGO_BANC AS FECHA_PAGO_BANCO,
		SUM(CCC_DETAL_CARGO_ABONO_DIREC.IMP) AS IMPORTE
		FROM CCC_MOVIM_BANCA,
		SEG_PAIS,
		SEG_SOCIE,
		CCC_CUENT_CORRI_BANCA,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_TIPO_ABONO_SUBPR,
		CCC_SUBPR,
		CCC_PROCE
		WHERE (CCC_MOVIM_BANCA.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS)
		AND (CCC_MOVIM_BANCA.SOCI_OID_SOCI = SEG_SOCIE.OID_SOCI)
		  AND	(CCC_MOVIM_BANCA.CCBA_OID_CC_BANC = CCC_CUENT_CORRI_BANCA.OID_CUEN_CORR_BANC)
		  AND	(CCC_DETAL_CARGO_ABONO_DIREC.CMBA_OID_MOVI_BANC = CCC_MOVIM_BANCA.OID_MOVI_BANC)
		  AND	(CCC_DETAL_CARGO_ABONO_DIREC.TASP_OID_TIPO_ABON_SUBP = CCC_TIPO_ABONO_SUBPR.OID_TIPO_ABON_SUBP)
		AND (CCC_TIPO_ABONO_SUBPR.SUBP_OID_SUBP = CCC_SUBPR.OID_SUBP)
		AND (CCC_SUBPR.CCPR_OID_PROC = CCC_PROCE.OID_PROC)
		AND (SEG_PAIS.COD_PAIS = #codigoPais#)
		  AND	(CCC_MOVIM_BANCA.FEC_PAGO BETWEEN TO_DATE(#fechaDesde#,'DD/MM/YYYY') AND TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
			<![CDATA[
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.FEC_MOVI >= TO_DATE(#fechaDesde#,'DD/MM/YYYY'))
			AND	  (CCC_DETAL_CARGO_ABONO_DIREC.FEC_MOVI <= TO_DATE(#fechaHasta#,'DD/MM/YYYY'))
			AND   SEG_SOCIE.COD_SOCI=#codigoSociedad#
			]]>
		GROUP BY CCC_CUENT_CORRI_BANCA.COD_CC_BANC,
		CCC_CUENT_CORRI_BANCA.DES_CC,
		CCC_MOVIM_BANCA.FEC_PAGO,
		CCC_DETAL_CARGO_ABONO_DIREC.FEC_PAGO_BANC
		ORDER BY CCC_MOVIM_BANCA.FEC_PAGO
	</select>


	<!-- REPORTE - PER - ANTIGUEDAD DE DEUDAS - MESES HACE DOS ANYOS (PDF)
-->
	<select id="getReportePERAntiguedadDeudasXMesesHaceDosAnhos" parameterClass="java.util.Map" resultMap="reportePERAntiguedadDeudasMeses">
		SELECT T.ANHO, T.MES, NVL(IMP_MOVI, 0) IMP_MOVI, NVL(IMP_PEND,0) IMP_PEND, NVL(POR_PEND,0) POR_PEND FROM
		<![CDATA[
		(SELECT TO_NUMBER(#anhoActual#)-2 ANHO, ROWNUM AS MES FROM CCC_MOVIM_CUENT_CORRI WHERE ROWNUM <= 12) T,
		]]>
	 	(SELECT EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS ANHO,
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS MES,
		ABS(SUM(IMP_MOVI)) AS IMP_MOVI,
		ABS(SUM(IMP_PEND)) AS IMP_PEND,
		ROUND(ABS(SUM(IMP_PEND) * 100) / ABS(SUM(IMP_MOVI)),2) AS POR_PEND
		FROM CCC_MOVIM_CUENT_CORRI,
		ZON_TERRI_ADMIN,
		SEG_PAIS,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_CABEC_CARGA_ABONO_DIREC,
		CCC_PROCE
			  WHERE CCC_MOVIM_CUENT_CORRI.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_REGIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZON_REGIO.MARC_OID_MARC = SEG_MARCA.OID_MARC
		AND ZON_REGIO.CANA_OID_CANA = SEG_CANAL.OID_CANA
			  AND	CCC_DETAL_CARGO_ABONO_DIREC.MVCC_OID_MOVI_CC = CCC_MOVIM_CUENT_CORRI.OID_MOVI_CC
			  AND	CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG
		AND CCC_CABEC_CARGA_ABONO_DIREC.CCPR_OID_PROC = CCC_PROCE.OID_PROC
		AND SEG_PAIS.COD_PAIS = #codigoPais#
		AND SEG_MARCA.COD_MARC = #codigoMarca#
		AND SEG_CANAL.COD_CANA = #codigoCanal#
		<isNotEmpty prepend="AND" property="codigoSeccion">
			ZON_SECCI.COD_SECC = #codigoSeccion#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			ZON_ZONA.COD_ZONA = #codigoZona#
		</isNotEmpty>
		AND ZON_REGIO.COD_REGI = #codigoRegion#
			  AND	(CCC_PROCE.COD_PROC NOT LIKE 'CCCP%' OR CCC_PROCE.COD_PROC NOT LIKE 'TESP%')
			  AND	EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) = TO_NUMBER(#anhoActual#)-2
		GROUP BY EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI),
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI)) U
		WHERE T.MES = U.MES (+)
		ORDER BY 1,2
	</select>


	<!-- REPORTE - PER - ANTIGUEDAD DE DEUDAS - MESES HACE UN ANYO (PDF) -->
	<select id="getReportePERAntiguedadDeudasXMesesHaceUnAnho" parameterClass="java.util.Map" resultMap="reportePERAntiguedadDeudasMeses">
		SELECT T.ANHO, T.MES, NVL(IMP_MOVI, 0) IMP_MOVI, NVL(IMP_PEND,0) IMP_PEND, NVL(POR_PEND,0) POR_PEND FROM
		<![CDATA[
		(SELECT TO_NUMBER(#anhoActual#)-1 ANHO, ROWNUM AS MES FROM CCC_MOVIM_CUENT_CORRI WHERE ROWNUM <= 12) T,
		]]>
	 	(SELECT EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS ANHO,
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS MES,
		ABS(SUM(IMP_MOVI)) AS IMP_MOVI,
		ABS(SUM(IMP_PEND)) AS IMP_PEND,
		ROUND(ABS(SUM(IMP_PEND) * 100) / ABS(SUM(IMP_MOVI)),2) AS POR_PEND
		FROM CCC_MOVIM_CUENT_CORRI,
		ZON_TERRI_ADMIN,
		SEG_PAIS,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_CABEC_CARGA_ABONO_DIREC,
		CCC_PROCE
			  WHERE CCC_MOVIM_CUENT_CORRI.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_REGIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZON_REGIO.MARC_OID_MARC = SEG_MARCA.OID_MARC
		AND ZON_REGIO.CANA_OID_CANA = SEG_CANAL.OID_CANA
			  AND	CCC_DETAL_CARGO_ABONO_DIREC.MVCC_OID_MOVI_CC = CCC_MOVIM_CUENT_CORRI.OID_MOVI_CC
			  AND	CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG
		AND CCC_CABEC_CARGA_ABONO_DIREC.CCPR_OID_PROC = CCC_PROCE.OID_PROC
		AND SEG_PAIS.COD_PAIS = #codigoPais#
		AND SEG_MARCA.COD_MARC = #codigoMarca#
		AND SEG_CANAL.COD_CANA = #codigoCanal#
		<isNotEmpty prepend="AND" property="codigoSeccion">
			ZON_SECCI.COD_SECC = #codigoSeccion#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			ZON_ZONA.COD_ZONA = #codigoZona#
		</isNotEmpty>
		AND ZON_REGIO.COD_REGI = #codigoRegion#
			  AND	(CCC_PROCE.COD_PROC NOT LIKE 'CCCP%' OR CCC_PROCE.COD_PROC NOT LIKE 'TESP%')
			  AND	EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) = TO_NUMBER(#anhoActual#)-1
		GROUP BY EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI),
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI)) U
		WHERE T.MES = U.MES (+)
		ORDER BY 1,2
	</select>


	<!-- REPORTE - PER - CHEQUERA SI HAY DATOS EN ANTIGUEDAD DEUDA -->
	<select id="getReportePERAntiguedadDeudasChequearDatos" parameterClass="java.util.Map" resultMap="reportePERAntiguedadDeudasMeses">
		SELECT EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS ANHO,
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS MES,
		ABS(SUM(IMP_MOVI)) AS IMP_MOVI,
		ABS(SUM(IMP_PEND)) AS IMP_PEND,
		ROUND(ABS(SUM(IMP_PEND) * 100) / ABS(SUM(IMP_MOVI)),2) AS POR_PEND
		FROM CCC_MOVIM_CUENT_CORRI,
		ZON_TERRI_ADMIN,
		SEG_PAIS,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_CABEC_CARGA_ABONO_DIREC,
		CCC_PROCE
					  WHERE CCC_MOVIM_CUENT_CORRI.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_REGIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZON_REGIO.MARC_OID_MARC = SEG_MARCA.OID_MARC
		AND ZON_REGIO.CANA_OID_CANA = SEG_CANAL.OID_CANA
					  AND	CCC_DETAL_CARGO_ABONO_DIREC.MVCC_OID_MOVI_CC = CCC_MOVIM_CUENT_CORRI.OID_MOVI_CC
					  AND	CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG
		AND CCC_CABEC_CARGA_ABONO_DIREC.CCPR_OID_PROC = CCC_PROCE.OID_PROC
		AND SEG_PAIS.COD_PAIS = #codigoPais#
		AND SEG_MARCA.COD_MARC = #codigoMarca#
		AND SEG_CANAL.COD_CANA = #codigoCanal#
		<isNotEmpty prepend="AND" property="codigoSeccion">
			ZON_SECCI.COD_SECC = #codigoSeccion#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			ZON_ZONA.COD_ZONA = #codigoZona#
		</isNotEmpty>
		AND ZON_REGIO.COD_REGI = #codigoRegion#
					  AND	(CCC_PROCE.COD_PROC NOT LIKE 'CCCP%' OR CCC_PROCE.COD_PROC NOT LIKE 'TESP%')
					  AND	EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) = #anhoActual#
				<![CDATA[
					 AND ROWNUM<2
			    ]]>
		GROUP BY EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI),
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI)
	</select>





	<!-- REPORTE - PER - ANTIGUEDAD DE DEUDAS - MESES ACTUAL (PDF) -->
	<select id="getReportePERAntiguedadDeudasXMesesActual" parameterClass="java.util.Map" resultMap="reportePERAntiguedadDeudasMeses">
		SELECT T.ANHO, T.MES, NVL(IMP_MOVI, 0) IMP_MOVI, NVL(IMP_PEND,0) IMP_PEND, NVL(POR_PEND,0) POR_PEND FROM
		<![CDATA[
		(SELECT TO_NUMBER(#anhoActual#) ANHO, ROWNUM AS MES FROM CCC_MOVIM_CUENT_CORRI WHERE ROWNUM <= 12) T,
		]]>
	 	(SELECT EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS ANHO,
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) AS MES,
		ABS(SUM(IMP_MOVI)) AS IMP_MOVI,
		ABS(SUM(IMP_PEND)) AS IMP_PEND,
		ROUND(ABS(SUM(IMP_PEND) * 100) / ABS(SUM(IMP_MOVI)),2) AS POR_PEND
		FROM CCC_MOVIM_CUENT_CORRI,
		ZON_TERRI_ADMIN,
		SEG_PAIS,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_CABEC_CARGA_ABONO_DIREC,
		CCC_PROCE
			  WHERE CCC_MOVIM_CUENT_CORRI.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_REGIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZON_REGIO.MARC_OID_MARC = SEG_MARCA.OID_MARC
		AND ZON_REGIO.CANA_OID_CANA = SEG_CANAL.OID_CANA
			  AND	CCC_DETAL_CARGO_ABONO_DIREC.MVCC_OID_MOVI_CC = CCC_MOVIM_CUENT_CORRI.OID_MOVI_CC
			  AND	CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG
		AND CCC_CABEC_CARGA_ABONO_DIREC.CCPR_OID_PROC = CCC_PROCE.OID_PROC
		AND SEG_PAIS.COD_PAIS = #codigoPais#
		AND SEG_MARCA.COD_MARC = #codigoMarca#
		AND SEG_CANAL.COD_CANA = #codigoCanal#
		<isNotEmpty prepend="AND" property="codigoSeccion">
			ZON_SECCI.COD_SECC = #codigoSeccion#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			ZON_ZONA.COD_ZONA = #codigoZona#
		</isNotEmpty>
		AND ZON_REGIO.COD_REGI = #codigoRegion#
			  AND	(CCC_PROCE.COD_PROC NOT LIKE 'CCCP%' OR CCC_PROCE.COD_PROC NOT LIKE 'TESP%')
			  AND	EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI) = TO_NUMBER(#anhoActual#)
		GROUP BY EXTRACT (YEAR FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI),
		EXTRACT (MONTH FROM CCC_MOVIM_CUENT_CORRI.FEC_ULTI_MOVI)) U
		WHERE T.MES = U.MES (+)
		ORDER BY 1,2
	</select>


	<!-- REPORTE - PER - ANTIGUEDAD DE DEUDAS - PERIODOS HACE DOS ANYOS (PDF) -->
	<select id="getReportePERAntiguedadDeudasXPeriodoHaceDosAnhos" parameterClass="java.util.Map" resultMap="reportePERAntiguedadDeudasPeriodo">
	  	SELECT PERIODO AS CAMPANHA, NVL(IMP_MOVI, 0) IMP_MOVI, NVL(IMP_PEND,0) IMP_PEND, NVL(POR_PEND,0) POR_PEND FROM
	  	<![CDATA[
		(SELECT ((TO_NUMBER(#anhoActual#)-2)*100)+ROWNUM AS PERIODO FROM CCC_MOVIM_CUENT_CORRI WHERE ROWNUM <= 18) T,
		]]>
		( SELECT TO_NUMBER(SEG_PERIO_CORPO.COD_PERI) CAMPANHA,
		ABS(SUM(IMP_MOVI)) AS IMP_MOVI,
		ABS(SUM(IMP_PEND)) AS IMP_PEND,
			   ROUND(ABS(SUM(IMP_PEND) * 100) / DECODE(ABS(SUM(IMP_MOVI)),0,1,ABS(SUM(IMP_MOVI))),2) AS POR_PEND
		FROM CCC_MOVIM_CUENT_CORRI,
		ZON_TERRI_ADMIN,
		SEG_PAIS,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_CABEC_CARGA_ABONO_DIREC,
		CCC_PROCE,
		CRA_PERIO,
		SEG_PERIO_CORPO
			  WHERE CCC_MOVIM_CUENT_CORRI.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_REGIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZON_REGIO.MARC_OID_MARC = SEG_MARCA.OID_MARC
		AND ZON_REGIO.CANA_OID_CANA = SEG_CANAL.OID_CANA
			  AND	CCC_DETAL_CARGO_ABONO_DIREC.MVCC_OID_MOVI_CC = CCC_MOVIM_CUENT_CORRI.OID_MOVI_CC
			  AND	CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG
		AND CCC_CABEC_CARGA_ABONO_DIREC.CCPR_OID_PROC = CCC_PROCE.OID_PROC
		AND CCC_MOVIM_CUENT_CORRI.PERD_OID_PERI = CRA_PERIO.OID_PERI
		AND CRA_PERIO.PERI_OID_PERI = SEG_PERIO_CORPO.OID_PERI
		AND SEG_PAIS.COD_PAIS = #codigoPais#
		AND SEG_MARCA.COD_MARC = #codigoMarca#
		AND SEG_CANAL.COD_CANA = #codigoCanal#
		<isNotEmpty prepend="AND" property="codigoSeccion">
			ZON_SECCI.COD_SECC = #codigoSeccion#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			ZON_ZONA.COD_ZONA = #codigoZona#
		</isNotEmpty>
		AND ZON_REGIO.COD_REGI = #codigoRegion#
			  AND	(CCC_PROCE.COD_PROC NOT LIKE 'CCCP%' OR CCC_PROCE.COD_PROC NOT LIKE 'TESP%') 
			  AND	SUBSTR(SEG_PERIO_CORPO.COD_PERI,1,4) = TO_CHAR(TO_NUMBER(#anhoActual#)-2)
		GROUP BY SEG_PERIO_CORPO.COD_PERI) U
		WHERE T.PERIODO = U.CAMPANHA (+)
		ORDER BY 1
	</select>


	<!-- REPORTE - PER - ANTIGUEDAD DE DEUDAS - PERIODOS HACE UN ANYO (PDF) -->
  	<select id="getReportePERAntiguedadDeudasXPeriodoHaceUnAnho" parameterClass="java.util.Map" resultMap="reportePERAntiguedadDeudasPeriodo">
	  	SELECT PERIODO AS CAMPANHA, NVL(IMP_MOVI, 0) IMP_MOVI, NVL(IMP_PEND,0) IMP_PEND, NVL(POR_PEND,0) POR_PEND FROM
	  	<![CDATA[
		(SELECT ((TO_NUMBER(#anhoActual#)-1)*100)+ROWNUM AS PERIODO FROM CCC_MOVIM_CUENT_CORRI WHERE ROWNUM <= 18) T,
		]]>
		( SELECT TO_NUMBER(SEG_PERIO_CORPO.COD_PERI) CAMPANHA,
		ABS(SUM(IMP_MOVI)) AS IMP_MOVI,
		ABS(SUM(IMP_PEND)) AS IMP_PEND,
			   ROUND(ABS(SUM(IMP_PEND) * 100) / DECODE(ABS(SUM(IMP_MOVI)),0,1,ABS(SUM(IMP_MOVI))),2) AS POR_PEND
		FROM CCC_MOVIM_CUENT_CORRI,
		ZON_TERRI_ADMIN,
		SEG_PAIS,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_CABEC_CARGA_ABONO_DIREC,
		CCC_PROCE,
		CRA_PERIO,
		SEG_PERIO_CORPO
			  WHERE CCC_MOVIM_CUENT_CORRI.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_REGIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZON_REGIO.MARC_OID_MARC = SEG_MARCA.OID_MARC
		AND ZON_REGIO.CANA_OID_CANA = SEG_CANAL.OID_CANA
			  AND	CCC_DETAL_CARGO_ABONO_DIREC.MVCC_OID_MOVI_CC = CCC_MOVIM_CUENT_CORRI.OID_MOVI_CC
			  AND	CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG
		AND CCC_CABEC_CARGA_ABONO_DIREC.CCPR_OID_PROC = CCC_PROCE.OID_PROC
		AND CCC_MOVIM_CUENT_CORRI.PERD_OID_PERI = CRA_PERIO.OID_PERI
		AND CRA_PERIO.PERI_OID_PERI = SEG_PERIO_CORPO.OID_PERI
		AND SEG_PAIS.COD_PAIS = #codigoPais#
		AND SEG_MARCA.COD_MARC = #codigoMarca#
		AND SEG_CANAL.COD_CANA = #codigoCanal#
		<isNotEmpty prepend="AND" property="codigoSeccion">
			ZON_SECCI.COD_SECC = #codigoSeccion#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			ZON_ZONA.COD_ZONA = #codigoZona#
		</isNotEmpty>
		AND ZON_REGIO.COD_REGI = #codigoRegion#
			  AND	(CCC_PROCE.COD_PROC NOT LIKE 'CCCP%' OR CCC_PROCE.COD_PROC NOT LIKE 'TESP%') 
			  AND	SUBSTR(SEG_PERIO_CORPO.COD_PERI,1,4) = TO_CHAR(TO_NUMBER(#anhoActual#)-1)
		GROUP BY SEG_PERIO_CORPO.COD_PERI) U
		WHERE T.PERIODO = U.CAMPANHA (+)
		ORDER BY 1
	</select>


	<!-- REPORTE - PER - ANTIGUEDAD DE DEUDAS - PERIODOS ACTUAL (PDF) -->
  	<select id="getReportePERAntiguedadDeudasXPeriodoActual" parameterClass="java.util.Map" resultMap="reportePERAntiguedadDeudasPeriodo">
	  	SELECT PERIODO AS CAMPANHA, NVL(IMP_MOVI, 0) IMP_MOVI, NVL(IMP_PEND,0) IMP_PEND, NVL(POR_PEND,0) POR_PEND FROM
	  	<![CDATA[
		(SELECT (TO_NUMBER(#anhoActual#)*100)+ROWNUM AS PERIODO FROM CCC_MOVIM_CUENT_CORRI WHERE ROWNUM <= 18) T,
		]]>
		( SELECT TO_NUMBER(SEG_PERIO_CORPO.COD_PERI) CAMPANHA,
		ABS(SUM(IMP_MOVI)) AS IMP_MOVI,
		ABS(SUM(IMP_PEND)) AS IMP_PEND,
			   ROUND(ABS(SUM(IMP_PEND) * 100) / DECODE(ABS(SUM(IMP_MOVI)),0,1,ABS(SUM(IMP_MOVI))),2) AS POR_PEND
		FROM CCC_MOVIM_CUENT_CORRI,
		ZON_TERRI_ADMIN,
		SEG_PAIS,
		SEG_MARCA,
		SEG_CANAL,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO,
		CCC_DETAL_CARGO_ABONO_DIREC,
		CCC_CABEC_CARGA_ABONO_DIREC,
		CCC_PROCE,
		CRA_PERIO,
		SEG_PERIO_CORPO
			  WHERE CCC_MOVIM_CUENT_CORRI.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_REGIO.PAIS_OID_PAIS = SEG_PAIS.OID_PAIS
		AND ZON_REGIO.MARC_OID_MARC = SEG_MARCA.OID_MARC
		AND ZON_REGIO.CANA_OID_CANA = SEG_CANAL.OID_CANA
			  AND	CCC_DETAL_CARGO_ABONO_DIREC.MVCC_OID_MOVI_CC = CCC_MOVIM_CUENT_CORRI.OID_MOVI_CC
			  AND	CCC_CABEC_CARGA_ABONO_DIREC.OID_CABE_CARG = CCC_DETAL_CARGO_ABONO_DIREC.CCAD_OID_CABE_CARG
		AND CCC_CABEC_CARGA_ABONO_DIREC.CCPR_OID_PROC = CCC_PROCE.OID_PROC
		AND CCC_MOVIM_CUENT_CORRI.PERD_OID_PERI = CRA_PERIO.OID_PERI
		AND CRA_PERIO.PERI_OID_PERI = SEG_PERIO_CORPO.OID_PERI
		AND SEG_PAIS.COD_PAIS = #codigoPais#
		AND SEG_MARCA.COD_MARC = #codigoMarca#
		AND SEG_CANAL.COD_CANA = #codigoCanal#
		<isNotEmpty prepend="AND" property="codigoSeccion">
			ZON_SECCI.COD_SECC = #codigoSeccion#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			ZON_ZONA.COD_ZONA = #codigoZona#
		</isNotEmpty>
		AND ZON_REGIO.COD_REGI = #codigoRegion#
			  AND	(CCC_PROCE.COD_PROC NOT LIKE 'CCCP%' OR CCC_PROCE.COD_PROC NOT LIKE 'TESP%') 
		AND SUBSTR(SEG_PERIO_CORPO.COD_PERI,1,4) = #anhoActual#
		GROUP BY SEG_PERIO_CORPO.COD_PERI) U
		WHERE T.PERIODO = U.CAMPANHA (+)
		ORDER BY 1
	</select>





	<select id="getReportePERLiquidacionCobranza" parameterClass="java.util.Map" resultMap="reportePERLiquidacionCobranza">
		SELECT E.DES_BANC, D.DES_CC, A.NUM_LOTE, A.COD_CONS, A.NUM_FACT_BOLE, A.NUM_CUPO,
			   A.NUM_CONS_TRAN, A.FEC_PAGO, NVL(B.VAL_APE1, ' ') VAL_APE1, NVL(B.VAL_APE2, ' ') VAL_APE2, NVL(B.VAL_NOM1||' '||B.VAL_NOM2, ' ') NOM_CONS,
		SUM(H.IMP+A.IMP_PAGO) IMP_CALC
		FROM  CCC_MOVIM_BANCA A, MAE_CLIEN B, SEG_PAIS C,
		CCC_CUENT_CORRI_BANCA D, CCC_BANCO E, CCC_SUCUR F,
		CCC_CABEC_CARGA_ABONO_DIREC G, CCC_DETAL_CARGO_ABONO_DIREC H,
		CCC_PROCE I, CCC_SUBPR J
		WHERE A.PAIS_OID_PAIS = C.OID_PAIS
		AND A.COD_CONS = B.COD_CLIE
		AND   A.PAIS_OID_PAIS = B.PAIS_OID_PAIS
		AND	  A.CCBA_OID_CC_BANC = D.OID_CUEN_CORR_BANC
		AND E.OID_BANC = F.CBAN_OID_BANC
		AND	  F.OID_SUCU = D.SUCU_OID_SUCU
		AND	  D.OID_CUEN_CORR_BANC = G.CCBA_OID_CUEN_CORR_BANC (+)
		AND G.OID_CABE_CARG = H.CCAD_OID_CABE_CARG
		AND	  G.CCPR_OID_PROC = I.OID_PROC
		AND I.OID_PROC = J.CCPR_OID_PROC
		AND A.COD_CONS IS NOT NULL
		AND A.COD_IDEN_PROC = 'P'
		AND C.COD_PAIS = #codigoPais#
		GROUP BY E.DES_BANC, D.DES_CC, A.NUM_LOTE, A.COD_CONS, A.NUM_FACT_BOLE, A.NUM_CUPO,
		A.NUM_CONS_TRAN, A.FEC_PAGO, B.VAL_APE1, B.VAL_APE2, B.VAL_NOM1, B.VAL_NOM2
	</select>




	<parameterMap id="parametrosFacturas" class="map">
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoMarca" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoCanal" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoRegion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoZona" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSeccion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoTerritorio" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
	</parameterMap>


	<procedure id="generaFacturasPendientesSeccion" parameterMap="parametrosFacturas">
		{call PER_PR_FACTU_PENDI_SECCI(?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>



	<select id="getReporteEVIMicaRecepcionPedidosZona" parameterClass="java.util.Map" resultMap="resultMicaRecepcionPedidosZona">
		SELECT
		CAB.COD_REGI,
		CAB.DES_REGI,
		CAB.COD_ZONA,
		CAB.DES_ZONA,
		CAB.NUM_PEDI_ANTE,
		CAB.NUM_PEDI_ESTI,
		CAB.NUM_PEDI_REAL AS NUM_PEDI_REAL_CAB,
		CAB.NUM_PRIM_PEDI AS NUM_PRIM_PEDI_CAB,
		CAB.NUM_PEDI_RECH as NUM_PEDI_RECH_CAB,
		CAB.VAL_PORC_RECE as VAL_PORC_RECE_CAB,
		CAB.NUM_PEDI_RECA AS NUM_PEDI_RECA_CAB,
		CAB.TOT_FACT_REGU AS TOT_FACT_REGU_CAB,
		CAB.TOT_FACT_BOLS AS TOT_FACT_BOLS_CAB,
		CAB.VAL_DIFE_REAL_ESTI,
		DET.FEC_RECE,
		DET.NUM_LOTE,
		DET.NUM_PEDI_REAL as NUM_PEDI_REAL_DET,
		'' as GER_ZONA,
			DECODE (NUM_PEDI_ESTI, 0, 0, NULL, 0 ,  CAB.NUM_PEDI_REAL/NUM_PEDI_ESTI	) AS VAL_PORC_ENVI,
		DET.NUM_PEDI_RECA AS NUM_PEDI_RECA_DET,
		DET.TOT_FACT_REGU AS TOT_FACT_REGU_DET,
		DET.TOT_FACT_BOLS AS TOT_FACT_BOLS_DET,
		DET.VAL_PORC_RECE as VAL_PORC_RECE_DET,
		DET.NUM_PRIM_PEDI AS NUM_PRIM_PEDI_DET,
		DET.NUM_PEDI_RECH as NUM_PEDI_RECH_DET
		FROM
		INT_EVI_PERIO_REGIO_ZONA_FECHA DET,
		INT_EVI_PERIO_REGIO_ZONA CAB
		WHERE
		CAB.COD_REGI = DET.COD_REGI
		AND CAB.COD_ZONA = DET.COD_ZONA
		AND CAB.COD_PERI = DET.COD_PERI
		AND CAB.COD_PERI = #codigoPeriodo#
		<isNotEmpty prepend="AND" property="codigoRegion">
			CAB.COD_REGI = #codigoRegion#
		</isNotEmpty>
		ORDER BY COD_REGI, COD_ZONA, FEC_RECE
	</select>

	<select id="getReporteEVIMicaRecepcionPedidosRegion" parameterClass="java.util.Map" resultMap="resultMicaRecepcionPedidosRegion">
		SELECT
		CAB.COD_REGI,
		CAB.DES_REGI,
		CAB.NUM_PEDI_ANTE,
		CAB.NUM_PEDI_ESTI,
		CAB.NUM_PEDI_REAL AS NUM_PEDI_REAL_CAB,
		CAB.NUM_PRIM_PEDI AS NUM_PRIM_PEDI_CAB,
		CAB.NUM_PEDI_RECH AS NUM_PEDI_RECH_CAB,
		CAB.VAL_PORC_RECE AS VAL_PORC_RECE_CAB,
		CAB.NUM_PEDI_RECA AS NUM_PEDI_RECA_CAB,
		CAB.TOT_FACT_REGU AS TOT_FACT_REGU_CAB,
		CAB.TOT_FACT_BOLS AS TOT_FACT_BOLS_CAB,
		CAB.VAL_DIFE_REAL_ESTI,
		DET.FEC_RECE,
		DET.NUM_LOTE,
		DET.NUM_PEDI_REAL AS NUM_PEDI_REAL_DET,
			DECODE (NUM_PEDI_ESTI, 0, 0, NULL, 0 ,  CAB.NUM_PEDI_REAL/NUM_PEDI_ESTI	) AS VAL_PORC_ENVI,
		DET.NUM_PEDI_RECA AS NUM_PEDI_RECA_DET,
		DET.TOT_FACT_REGU AS TOT_FACT_REGU_DET,
		DET.TOT_FACT_BOLS AS TOT_FACT_BOLS_DET,
		DET.VAL_PORC_RECE AS VAL_PORC_RECE_DET,
		DET.NUM_PRIM_PEDI AS NUM_PRIM_PEDI_DET,
		DET.NUM_PEDI_RECH AS NUM_PEDI_RECH_DET
		FROM
		INT_EVI_PERIO_REGIO CAB,
		INT_EVI_PERIO_REGIO_FECHA DET
		WHERE
		CAB.COD_REGI = DET.COD_REGI
		AND CAB.COD_PERI = DET.COD_PERI
		AND CAB.COD_PERI = #codigoPeriodo#
		<isNotEmpty prepend="AND" property="codigoRegion">
			CAB.COD_REGI = #codigoRegion#
		</isNotEmpty>
		ORDER BY COD_REGI,FEC_RECE
	</select>

	<select id="getConsultaEVIMicaRecepcionPedidosZona" parameterClass="java.util.Map" resultMap="resultMicaRecepcionPedidosZona">
		SELECT DATZ.COD_REGI,
		DATZ.DES_REGI,
		DATZ.COD_ZONA,
		DATZ.DES_ZONA,
		DATZ.NUM_PEDI_ANTE,
		DATZ.NUM_PEDI_ESTI,
		DATZ.NUM_PEDI_REAL NUM_PEDI_REAL_CAB,
		DATZ.NUM_PRIM_PEDI NUM_PRIM_PEDI_CAB,
		DATZ.NUM_PEDI_RECH NUM_PEDI_RECH_CAB,
		DATZ.VAL_PORC_RECE VAL_PORC_RECE_CAB,
		DATZ.NUM_PEDI_RECA NUM_PEDI_RECA_CAB,
		DATZ.TOT_FACT_REGU TOT_FACT_REGU_CAB,
		DATZ.TOT_FACT_BOLS TOT_FACT_BOLS_CAB,
		DATZ.VAL_DIFE_REAL_ESTI,
		DATZ.FEC_RECE,
		  	   gen_pkg_gener.PER_FN_RECUP_RESPO_UNIAD(#codigoPais#,#codigoMarca#,#codigoCanal#, DATZ.COD_REGI, DATZ.COD_ZONA,NULL,'N') AS GER_ZONA,
		  	   DECODE (DATZ.NUM_PEDI_ESTI, 0, 0, NULL, 0 ,round(100*(DATZ.NUM_PEDI_REAL_DET/DATZ.NUM_PEDI_ESTI),2)) AS VAL_PORC_ENVI,
		DATZ.NUM_PEDI_REAL_DET,
		DATZ.NUM_PEDI_RECA_DET,
		DATZ.TOT_FACT_REGU_DET,
		DATZ.TOT_FACT_BOLS_DET,
		DATZ.VAL_PORC_RECE_DET,
		DATZ.NUM_PRIM_PEDI_DET,
		DATZ.NUM_PEDI_RECH_DET
		FROM (
		SELECT
		CAB.COD_REGI,
		CAB.DES_REGI,
		CAB.COD_ZONA,
		CAB.DES_ZONA,
		CAB.NUM_PEDI_ANTE,
		CAB.NUM_PEDI_ESTI,
		CAB.NUM_PEDI_REAL,
		CAB.NUM_PRIM_PEDI,
		CAB.NUM_PEDI_RECH,
		CAB.VAL_PORC_RECE,
		CAB.NUM_PEDI_RECA,
		CAB.TOT_FACT_REGU,
		CAB.TOT_FACT_BOLS,
		CAB.VAL_DIFE_REAL_ESTI,
		DET.FEC_RECE,
		SUM(DET.NUM_PEDI_REAL) AS NUM_PEDI_REAL_DET,
		SUM(DET.NUM_PEDI_RECA) AS NUM_PEDI_RECA_DET,
		SUM(DET.TOT_FACT_REGU) AS TOT_FACT_REGU_DET,
		SUM(DET.TOT_FACT_BOLS) AS TOT_FACT_BOLS_DET,
		SUM(DET.VAL_PORC_RECE) AS VAL_PORC_RECE_DET,
		SUM(DET.NUM_PRIM_PEDI) AS NUM_PRIM_PEDI_DET,
		SUM(DET.NUM_PEDI_RECH) AS NUM_PEDI_RECH_DET
		FROM
		INT_EVI_PERIO_REGIO_ZONA_FECHA DET,
		INT_EVI_PERIO_REGIO_ZONA CAB
		WHERE
		CAB.COD_REGI = DET.COD_REGI
		AND CAB.COD_ZONA = DET.COD_ZONA
		AND CAB.COD_PERI = DET.COD_PERI
		AND CAB.COD_PERI = #codigoPeriodo#
				<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			CAB.COD_REGI = #regionList[]#
		</iterate>
				<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			CAB.COD_ZONA = #zonaList[]#
		</iterate>
		<isNotEmpty prepend="AND" property="fechaRecepcion">
			DET.FEC_RECE =to_date(#fechaRecepcion#, 'dd/mm/yyyy')
		</isNotEmpty>

		GROUP BY CAB.COD_REGI,
		CAB.DES_REGI,
		CAB.COD_ZONA,
		CAB.DES_ZONA,
		CAB.NUM_PEDI_ANTE,
		CAB.NUM_PEDI_ESTI,
		CAB.NUM_PEDI_REAL,
		CAB.NUM_PRIM_PEDI,
		CAB.NUM_PEDI_RECH,
		CAB.VAL_PORC_RECE,
		CAB.NUM_PEDI_RECA,
		CAB.TOT_FACT_REGU,
		CAB.TOT_FACT_BOLS,
		CAB.VAL_DIFE_REAL_ESTI,
		DET.FEC_RECE
		) DATZ
		ORDER BY DATZ.COD_REGI, DATZ.COD_ZONA, DATZ.FEC_RECE
	</select>

	<select id="getConsultaEVIMicaRecepcionPedidosRegion" parameterClass="java.util.Map" resultMap="resultMicaRecepcionPedidosRegion">
		SELECT DATR.COD_REGI,
		DATR.DES_REGI,
		DATR.NUM_PEDI_ANTE,
		DATR.NUM_PEDI_ESTI,
		DATR.NUM_PEDI_REAL NUM_PEDI_REAL_CAB,
		DATR.NUM_PRIM_PEDI NUM_PRIM_PEDI_CAB,
		DATR.NUM_PEDI_RECH NUM_PEDI_RECH_CAB,
		DATR.VAL_PORC_RECE VAL_PORC_RECE_CAB,
		DATR.NUM_PEDI_RECA NUM_PEDI_RECA_CAB,
		DATR.TOT_FACT_REGU TOT_FACT_REGU_CAB,
		DATR.TOT_FACT_BOLS TOT_FACT_BOLS_CAB,
		DATR.VAL_DIFE_REAL_ESTI,
		DATR.FEC_RECE,
		DATR.NUM_PEDI_REAL_DET,
		DECODE(DATR.NUM_PEDI_ESTI,0,0,NULL,0,ROUND(100 * (DATR.NUM_PEDI_REAL / DATR.NUM_PEDI_ESTI),2)) AS VAL_PORC_ENVI,
		DATR.NUM_PEDI_RECA_DET,
		DATR.TOT_FACT_REGU_DET,
		DATR.TOT_FACT_BOLS_DET,
		DATR.VAL_PORC_RECE_DET,
		DATR.NUM_PRIM_PEDI_DET,
		DATR.NUM_PEDI_RECH_DET
		FROM (SELECT CAB.COD_REGI,
		CAB.DES_REGI,
		CAB.NUM_PEDI_ANTE,
		CAB.NUM_PEDI_ESTI,
		CAB.NUM_PEDI_REAL,
		CAB.NUM_PRIM_PEDI,
		CAB.NUM_PEDI_RECH,
		CAB.VAL_PORC_RECE,
		CAB.NUM_PEDI_RECA,
		CAB.TOT_FACT_REGU,
		CAB.TOT_FACT_BOLS,
		CAB.VAL_DIFE_REAL_ESTI,
		DET.FEC_RECE,
		SUM(DET.NUM_PEDI_REAL) AS NUM_PEDI_REAL_DET,
		SUM(DET.NUM_PEDI_RECA) AS NUM_PEDI_RECA_DET,
		SUM(DET.TOT_FACT_REGU) AS TOT_FACT_REGU_DET,
		SUM(DET.TOT_FACT_BOLS) AS TOT_FACT_BOLS_DET,
		SUM(DET.VAL_PORC_RECE) AS VAL_PORC_RECE_DET,
		SUM(DET.NUM_PRIM_PEDI) AS NUM_PRIM_PEDI_DET,
		SUM(DET.NUM_PEDI_RECH) AS NUM_PEDI_RECH_DET
		FROM INT_EVI_PERIO_REGIO CAB,
		INT_EVI_PERIO_REGIO_FECHA DET
		WHERE CAB.COD_REGI = DET.COD_REGI
		AND CAB.COD_PERI = DET.COD_PERI
		AND CAB.COD_PERI = #codigoPeriodo#
           <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			CAB.COD_REGI = #regionList[]#
		</iterate>
		<isNotEmpty prepend="AND" property="fechaRecepcion">
			DET.FEC_RECE =to_date(#fechaRecepcion#, 'dd/mm/yyyy')
		</isNotEmpty>
		GROUP BY CAB.COD_REGI,
		CAB.DES_REGI,
		CAB.NUM_PEDI_ANTE,
		CAB.NUM_PEDI_ESTI,
		CAB.NUM_PEDI_REAL,
		CAB.NUM_PRIM_PEDI,
		CAB.NUM_PEDI_RECH,
		CAB.VAL_PORC_RECE,
		CAB.NUM_PEDI_RECA,
		CAB.TOT_FACT_REGU,
		CAB.TOT_FACT_BOLS,
		CAB.VAL_DIFE_REAL_ESTI,
		DET.FEC_RECE) DATR
		ORDER BY DATR.COD_REGI,
		DATR.FEC_RECE
	</select>

	<select id="getConsultaEVIMicaRecepcionPedidosZonaDet" parameterClass="java.util.Map" resultMap="resultMicaRecepcionPedidosZonaDet">
		SELECT
		CAB.COD_REGI,
		CAB.DES_REGI,
		CAB.COD_ZONA,
		CAB.DES_ZONA,
		CAB.NUM_PEDI_ANTE,
		CAB.NUM_PEDI_ESTI,
		CAB.NUM_PEDI_REAL AS NUM_PEDI_REAL_CAB,
		CAB.NUM_PRIM_PEDI AS NUM_PRIM_PEDI_CAB,
		CAB.NUM_PEDI_RECH as NUM_PEDI_RECH_CAB,
		CAB.VAL_PORC_RECE as VAL_PORC_RECE_CAB,
		CAB.NUM_PEDI_RECA AS NUM_PEDI_RECA_CAB,
		CAB.TOT_FACT_REGU AS TOT_FACT_REGU_CAB,
		CAB.TOT_FACT_BOLS AS TOT_FACT_BOLS_CAB,
		CAB.VAL_DIFE_REAL_ESTI,
		DET.FEC_RECE,
		DET.NUM_LOTE,
			gen_pkg_gener.PER_FN_RECUP_RESPO_UNIAD(#codigoPais#,#codigoMarca#,#codigoCanal#, cab.cod_regi, cab.cod_zona,NULL,'N') AS GER_ZONA,
			DECODE (NUM_PEDI_ESTI, 0, 0, NULL, 0 ,round(100*(DET.NUM_PEDI_REAL/NUM_PEDI_ESTI),2)) AS VAL_PORC_ENVI,
		DET.NUM_PEDI_REAL as NUM_PEDI_REAL_DET,
		DET.NUM_PEDI_RECA AS NUM_PEDI_RECA_DET,
		DET.TOT_FACT_REGU AS TOT_FACT_REGU_DET,
		DET.TOT_FACT_BOLS AS TOT_FACT_BOLS_DET,
		DET.VAL_PORC_RECE as VAL_PORC_RECE_DET,
		DET.NUM_PRIM_PEDI AS NUM_PRIM_PEDI_DET,
		DET.NUM_PEDI_RECH as NUM_PEDI_RECH_DET
		FROM
		INT_EVI_PERIO_REGIO_ZONA_FECHA DET,
		INT_EVI_PERIO_REGIO_ZONA CAB
		WHERE
		CAB.COD_REGI = DET.COD_REGI
		AND CAB.COD_ZONA = DET.COD_ZONA
		AND CAB.COD_PERI = DET.COD_PERI
		AND CAB.COD_PERI = #codigoPeriodo#
		<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			CAB.COD_REGI = #regionList[]#
		</iterate>
		<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			CAB.COD_ZONA = #zonaList[]#
		</iterate>
		<isNotEmpty prepend="AND" property="fechaRecepcion">
			DET.FEC_RECE =to_date(#fechaRecepcion#, 'dd/mm/yyyy')
		</isNotEmpty>

		ORDER BY COD_REGI, COD_ZONA, FEC_RECE
	</select>

	<delete id="deleteReporteINCProyeccionPremiosConcursos">
		TRUNCATE TABLE INC_REPOR_PROY_CONC
	</delete>
	<delete id="deleteReporteINCProyeccionPremios">
		TRUNCATE TABLE INC_REPOR_PROY_PREM
	</delete>
	<insert id="insertReporteINCProyeccionPremiosConcursosTodosNiveles" parameterClass = "java.util.Map">
		INSERT INTO INC_REPOR_PROY_CONC
		(PERI_DESD,
		PERI_HAST,
		PERD_OID_PERI_DESD,
		PERD_OID_PERI_HAST,
		VAL_NOMB,
		IND_PREM_ACUM_NIVE,
		VAL_HAST_NIVE,
		NUM_NIVE,
		PUNT_NIVE,
		VAL_NIVE_SELE,
		OID_PARA_NIVE_PREM,
		NUM_CONC,
		OID_PARA_GRAL
		)
	SELECT  GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(CPG.PERD_OID_PERI_DESD)AS PERI_DESD,
			GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(CPG.PERD_OID_PERI_HAST)AS PERI_HAST,
		CPG.PERD_OID_PERI_DESD,
		CPG.PERD_OID_PERI_HAST,
		CPG.VAL_NOMB,
		PGP.IND_PREM_ACUM_NIVE,
		PGP.VAL_HAST_NIVE,
		PNP.NUM_NIVE,
		DECODE(PNP.NUM_CANT_FIJA_PUNT,0,PNP.NUM_CANT_INIC_PUNT,NULL, PNP.NUM_CANT_INIC_PUNT ,PNP.NUM_CANT_FIJA_PUNT) AS PUNT_NIVE,
		PNP.VAL_NIVE_SELE,
		PNP.OID_PARA_NIVE_PREM,
		CPG.NUM_CONC,
		CPG.OID_PARA_GRAL
		FROM INC_CONCU_PARAM_GENER CPG,
		INC_PARAM_GENER_PREMI PGP,
		INC_PARAM_NIVEL_PREMI PNP
		WHERE PGP.COPA_OID_PARA_GRAL = CPG.OID_PARA_GRAL
		AND PNP.PAGP_OID_PARA_GENE_PREM = PGP.OID_PARA_GENE_PREM
		<isNotEmpty prepend="AND" property="numeroConcurso">
			CPG.Num_Conc =#numeroConcurso#
		</isNotEmpty>
	</insert>
		<insert id="insertReporteINCProyeccionPremiosConcursos" parameterClass = "java.util.Map">
		INSERT INTO INC_REPOR_PROY_CONC
		(PERI_DESD,
		PERI_HAST,
		PERD_OID_PERI_DESD,
		PERD_OID_PERI_HAST,
		VAL_NOMB,
		IND_PREM_ACUM_NIVE,
		VAL_HAST_NIVE,
		NUM_NIVE,
		PUNT_NIVE,
		VAL_NIVE_SELE,
		OID_PARA_NIVE_PREM,
		NUM_CONC,
		OID_PARA_GRAL
		)
	SELECT  GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(CPG.PERD_OID_PERI_DESD)AS PERI_DESD,
			GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(CPG.PERD_OID_PERI_HAST)AS PERI_HAST,
		CPG.PERD_OID_PERI_DESD,
		CPG.PERD_OID_PERI_HAST,
		CPG.VAL_NOMB,
		PGP.IND_PREM_ACUM_NIVE,
		PGP.VAL_HAST_NIVE,
		PNP.NUM_NIVE,
		DECODE(PNP.NUM_CANT_FIJA_PUNT,0,PNP.NUM_CANT_INIC_PUNT,NULL, PNP.NUM_CANT_INIC_PUNT ,PNP.NUM_CANT_FIJA_PUNT) AS PUNT_NIVE,
		PNP.VAL_NIVE_SELE,
		PNP.OID_PARA_NIVE_PREM,
		CPG.NUM_CONC,
		CPG.OID_PARA_GRAL
		FROM INC_CONCU_PARAM_GENER CPG,
		INC_PARAM_GENER_PREMI PGP,
		INC_PARAM_NIVEL_PREMI PNP
		WHERE PGP.COPA_OID_PARA_GRAL = CPG.OID_PARA_GRAL
		AND PNP.PAGP_OID_PARA_GENE_PREM = PGP.OID_PARA_GENE_PREM
		<isNotEmpty prepend="AND" property="numeroConcurso">
			CPG.Num_Conc =#numeroConcurso#
		</isNotEmpty>
			<iterate prepend="AND" property="nivelConcursoList" open="(" close=")" conjunction="OR">
			PNP.Num_Nive = #nivelConcursoList[]#
		</iterate>
	</insert>
	<delete id="deleteReporteINCProyeccionPremiosClientes">
		TRUNCATE TABLE INC_REPOR_PROY_CLIEN
	</delete>
	<insert id="insertReporteINCProyeccionPremiosClientes" parameterClass = "java.util.Map">
		INSERT INTO INC_REPOR_PROY_CLIEN
		( CLIE_OID_CLIE,
		COPA_OID_PARA_GRAL,
		COD_SUB_GEREN_VENT,
		DES_SUB_GEREN_VENT,
		COD_REGI,
		DES_REGI,
		COD_ZONA,
		DES_ZONA,
		NUM_NIVE,
		PUNT_CLIE
		)
		SELECT CUA.Clie_Oid_Clie,
		#oidParametroGeneral# AS COPA_OID_PARA_GRAL,
			 gen_pkg_gener.GEN_FN_DEVUELVE_COD_SUB_GEREN(R.Zsgv_Oid_Subg_Vent) AS COD_SUB_GEREN_VENT,
			 gen_pkg_gener.GEN_FN_DEVUELVE_DES_SUB_GEREN(R.Zsgv_Oid_Subg_Vent) AS DES_SUB_GEREN_VENT,
		R.COD_REGI,
		R.DES_REGI,
		Z.COD_ZONA,
		Z.DES_ZONA,
			 INC_PKG_REPOR_INCEN.INC_FN_OBTIE_NIVEL_CLIEN(CUA.CLIE_OID_CLIE,#oidParametroGeneral# ) AS NUM_NIVE,
			 INC_PKG_REPOR_INCEN.INC_FN_OBTIE_PUNTA_CLIEN(CUA.CLIE_OID_CLIE,#oidParametroGeneral# ) AS PUNT_CLIE       
		FROM MAE_CLIEN_UNIDA_ADMIN CUA,
		ZON_TERRI_ADMIN TA,
		ZON_SECCI S,
		ZON_ZONA Z,
		ZON_REGIO R
		WHERE CUA.ZTAD_OID_TERR_ADMI = TA.OID_TERR_ADMI
		AND TA.ZSCC_OID_SECC = S.OID_SECC
		AND S.ZZON_OID_ZONA = Z.OID_ZONA
		AND Z.ZORG_OID_REGI = R.OID_REGI
		AND EXISTS ( SELECT * FROM INC_CUENT_CORRI_PUNTO CCP
		WHERE CCP.COPA_OID_PARA_GRAL = #oidParametroGeneral#
		AND CCP.CLIE_OID_CLIE = CUA.CLIE_OID_CLIE )
		AND CUA.ZTAD_OID_TERR_ADMI = TA.OID_TERR_ADMI
		AND CUA.IND_ACTI = 1
			 AND 1 = INC_PKG_REPOR_INCEN.INC_FN_OBTIE_PUNMI_CLIEN(CUA.CLIE_OID_CLIE, #oidParametroGeneral#)	
			 <iterate prepend="AND" property="nivelConcursoList" open="(" close=")" conjunction="OR">
      	 		INC_PKG_REPOR_INCEN.INC_FN_OBTIE_NIVEL_CLIEN(CUA.CLIE_OID_CLIE,#oidParametroGeneral# )  = #nivelConcursoList[]#										
		</iterate>
			 <iterate prepend="AND" property="subGerenciaList" open="(" close=")" conjunction="OR">
			R.Zsgv_Oid_Subg_Vent = #subGerenciaList[]#
		</iterate>
			 <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			R.COD_REGI = #regionList[]#
		</iterate>
			 <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			Z.COD_ZONA = #zonaList[]#
		</iterate>
	</insert>
	<delete id="deleteReporteRECListadoRecEstatus">
		TRUNCATE TABLE REC_REPOR_RECLA
	</delete>

	<delete id="deleteReporte" parameterClass="java.util.Map">
		delete REC_REPOR_RECLA where NUM_SECU = #nextValue#
	</delete>

	<select id="getSecuenciaNextValue" resultClass="string">
		SELECT SEQ_REPOR_RECLA.NEXTVAL FROM DUAL
	</select>
	<insert id="insertReporteRECListadoRecEstatus" parameterClass="java.util.Map">
		INSERT INTO REC_REPOR_RECLA
		(NUM_SECU,
		DES_REGI,
		DES_ZONA,
		NUM_RECL,
		COD_CLIE,
		NOM_CLIE,
		ESTAD_RECLA,
		COD_OPER,
		VAL_TIPO_OPER,
		VAL_DES_LARG,
		PERI_RECL,
		COD_USUA_INGR,
		OID_LINE_OPER_RECLA,
		OID_CABE_RECL,
		OID_OPER_RECL,
		ESTAD_OPERA,
		VAL_CODI_VENT,
		COD_SAP,
		DESC_PROD,
		IMP_ABON,
		NUM_UNID_RECL,
		DESC_DEVO
		)

		SELECT #nextValue#,
			gen_pkg_gener.GEN_FN_CLIEN_DATOS(MAE_CLIEN.COD_CLIE,'DES_REGI') DES_REGI,
 			gen_pkg_gener.GEN_FN_CLIEN_DATOS(MAE_CLIEN.COD_CLIE,'DES_ZONA') DES_ZONA,
		REC_CABEC_RECLA.NUM_RECL,
		MAE_CLIEN.COD_CLIE,
		gen_pkg_gener.GEN_FN_CLIEN_DATOS(MAE_CLIEN.COD_CLIE,'NOM_CLIE') NOM_CLIE,
       		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_CABEC_RECLA.ESRE_OID_ESTA_RECL,'REC_ESTAD_RECLA','es') as ESTAD_RECLA,
		REC_OPERA.COD_OPER,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		REC_OPERA.VAL_DESC_LARG,
       		gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(REC_CABEC_RECLA.PERD_OID_PERI_RECL) PERI_RECL,
		REC_CABEC_RECLA.COD_USUA_INGR,
		REC_LINEA_OPERA_RECLA.Oid_Line_Oper_Recl,
		REC_CABEC_RECLA.OID_CABE_RECL,
		REC_OPERA_RECLA.OID_OPER_RECL,
       		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_OPERA_RECLA.ESOP_OID_ESTA_OPER,'REC_ESTAD_OPERA','es') AS ESTAD_OPERA  ,           		
		( SELECT PRE_OFERT_DETAL.VAL_CODI_VENT
		FROM PRE_MATRI_FACTU,
		PRE_MATRI_FACTU_CABEC,
		PRE_OFERT,
		PRE_OFERT_DETAL
		WHERE PRE_MATRI_FACTU.OFDE_OID_DETA_OFER = PRE_OFERT_DETAL.OID_DETA_OFER
					AND REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT = PRE_MATRI_FACTU.OID_MATR_FACT 
		AND PRE_MATRI_FACTU.MFCA_OID_CABE = PRE_MATRI_FACTU_CABEC.OID_CABE
		AND PRE_OFERT.MFCA_OID_CABE = PRE_MATRI_FACTU_CABEC.OID_CABE
					AND PRE_OFERT_DETAL.OFER_OID_OFER = PRE_OFERT.OID_OFER  ) AS VAL_CODI_VENT,
			OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(REC_LINEA_OPERA_RECLA.PROD_OID_PROD) AS COD_SAP ,
       		OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(REC_LINEA_OPERA_RECLA.PROD_OID_PROD) AS DESC_PROD,
		NVL(REC_LINEA_OPERA_RECLA.IMP_ABON,0),
		NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0),
	   		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_LINEA_OPERA_RECLA.MODV_OID_MOTI_DEVO,'REC_MOTIV_RECHA_DESBL','es') DESC_DEVO
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA,
		MAE_CLIEN
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL
		AND MAE_CLIEN.OID_CLIE = REC_CABEC_RECLA.CLIE_OID_CLIE
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =2
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
	   		<iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
			REC_OPERA.COD_OPER =#codigoOperacion[]#
		</iterate>
  			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
			REC_OPERA.COD_OPER || '-' || REC_TIPOS_OPERA.VAL_TIPO_OPER = #tipoOperacionList[]#
		</iterate>
			<iterate prepend="AND" property="estadoReclamoList" open="(" close=")" conjunction="OR">
			REC_CABEC_RECLA.ESRE_OID_ESTA_RECL = (SELECT ab.oid_esta_recl
			FROM rec_estad_recla ab
			WHERE ab.cod_esta = #estadoReclamoList[]#)
		</iterate>
        	<iterate prepend="AND" property="estadoOperacionList" open="(" close=")" conjunction="OR">
			REC_OPERA_RECLA.ESOP_OID_ESTA_OPER = (SELECT aa.oid_esta_oper
			FROM rec_estad_opera aa
			WHERE aa.cod_esta_oper = #estadoOperacionList[]#)
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoReferenciaInicial#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL >=gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroInicial#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoReferenciaFinal#)
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroFinal#)
        	]]>
		</isNotEmpty>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
					  <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
						<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
						<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
		AND ZON_ZONA.IND_ACTI = 1
		AND ZON_ZONA.IND_BORR = 0
		AND ZON_SECCI.IND_ACTI = 1
		AND ZON_SECCI.IND_BORR = 0
		AND ZON_TERRI_ADMIN.IND_BORR = 0
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
	</insert>

	<insert id="insertReporteRECNoAtendidosBajoStock" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_RECLA
		(NUM_SECU,
		DES_REGI,
		DES_ZONA,
		NUM_RECL,
		COD_CLIE,
		NOM_CLIE,
		ESTAD_RECLA,
		COD_OPER,
		VAL_TIPO_OPER,
		VAL_DES_LARG,
		PERI_RECL,
		COD_USUA_INGR,
		OID_LINE_OPER_RECLA,
		OID_CABE_RECL,
		OID_OPER_RECL,
		ESTAD_OPERA,
		VAL_CODI_VENT,
		COD_SAP,
		DESC_PROD,
		NUM_UNID_RECL,
		DESC_DEVO,
		UNID_RECL,
		UNID_ATEN,
		UNID_FALT,
		PROD_OID_PROD,
		DOC_REFE,
		VAL_PREC
		)
		SELECT #nextValue#,
		gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(REC_CABEC_RECLA.CLIE_OID_CLIE,'DES_REGI') DES_REGI,
        gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(REC_CABEC_RECLA.CLIE_OID_CLIE,'DES_ZONA') DES_ZONA,
		REC_CABEC_RECLA.NUM_RECL,
		gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(REC_CABEC_RECLA.CLIE_OID_CLIE) AS COD_CLIE,
        gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(REC_CABEC_RECLA.CLIE_OID_CLIE,'NOM_CLIE') NOM_CLIE,
       		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_CABEC_RECLA.ESRE_OID_ESTA_RECL,'REC_ESTAD_RECLA','es') as ESTAD_RECLA,
        REC_PKG_REPOR.REC_FN_OPERA_DATOS(REC_TIPOS_OPERA.ROPE_OID_OPER ,'COD_OPER') AS COD_OPER,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		REC_PKG_REPOR.REC_FN_OPERA_DATOS(REC_TIPOS_OPERA.ROPE_OID_OPER ,'DES_OPER') AS DES_OPER,
       		gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(REC_CABEC_RECLA.PERD_OID_PERI_RECL) PERI_RECL,
		REC_CABEC_RECLA.COD_USUA_INGR,
		REC_LINEA_OPERA_RECLA.Oid_Line_Oper_Recl,
		REC_CABEC_RECLA.OID_CABE_RECL,
		REC_OPERA_RECLA.OID_OPER_RECL,
       		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_OPERA_RECLA.ESOP_OID_ESTA_OPER,'REC_ESTAD_OPERA','es') AS ESTAD_OPERA  ,    
        REC_PKG_REPOR.REC_FN_OBTIE_CODI_VENTA(REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT) AS VAL_CODI_VENT,
       		OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(REC_LINEA_OPERA_RECLA.PROD_OID_PROD) AS COD_SAP ,
       		OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(REC_LINEA_OPERA_RECLA.PROD_OID_PROD) AS DESC_PROD,
		NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0),
	   		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_LINEA_OPERA_RECLA.MODV_OID_MOTI_DEVO,'REC_MOTIV_RECHA_DESBL','es') DESC_DEVO,
	    REC_PKG_REPOR.REC_FN_OBTIE_UNID_RECL_PROD(REC_LINEA_OPERA_RECLA.PROD_OID_PROD, REC_OPERA_RECLA.OID_OPER_RECL, 1) as unid_recl,			
          	REC_PKG_REPOR.REC_FN_OBTIE_UNID_ATE(rec_linea_opera_recla.tspa_oid_tipo_soli_pais, rec_opera_recla.oid_oper_recl, rec_linea_opera_recla.prod_oid_prod) AS UNID_ATEN,
			REC_PKG_REPOR.REC_FN_OBTIE_UNID_FAL(rec_linea_opera_recla.tspa_oid_tipo_soli_pais, rec_opera_recla.oid_oper_recl, rec_linea_opera_recla.prod_oid_prod) AS UNID_FALT ,
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
        REC_PKG_REPOR.REC_FN_OBTIE_DOCU_REFE(REC_CABEC_RECLA.SOCA_OID_SOLI_CABE) AS DOC_REFE,
        REC_PKG_REPOR.REC_FN_OBTIE_PRECIO(REC_LINEA_OPERA_RECLA.SOPO_OID_SOLI_POSI)AS PRECIO
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =1
		AND REC_OPERA.OID_OPER = REC_TIPOS_OPERA.ROPE_OID_OPER
			AND REC_PKG_REPOR.REC_FN_OBTIE_UNID_FAL(rec_linea_opera_recla.tspa_oid_tipo_soli_pais, rec_opera_recla.oid_oper_recl, rec_linea_opera_recla.prod_oid_prod) > 0		
		<isNotEmpty prepend="AND" property="oidPeriodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidPeriodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidPeriodoReferenciaFinal">
		 	<![CDATA[
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidPeriodoRegistroFinal">
		 	<![CDATA[
			REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>
		<iterate prepend="AND" property="operacionList" open="(" close=")" conjunction="OR">
			REC_OPERA.COD_OPER = #operacionList[]#
		</iterate>
		<isNotEmpty prepend="AND" property="oidConsultora">
			REC_CABEC_RECLA.CLIE_OID_CLIE =#oidConsultora#
		</isNotEmpty>
		<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
				REC_OPERA.COD_OPER	|| '-' || REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
					  <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
						<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
						<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		UNION
		SELECT #nextValue#,
       gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(sc.clie_oid_clie,'DES_REGI') DES_REGI,         
       gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(sc.clie_oid_clie,'DES_ZONA') DES_ZONA,          
		0 as num_recl,
		gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(sc.clie_oid_clie) AS COD_CLIE,
       gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(sc.clie_oid_clie,'NOM_CLIE') NOM_CLIE,          
		'' as ESTAD_RECLA,
		op.cod_oper,
		tiop.val_tipo_oper,
		op.VAL_DESC_LARG AS DES_OPER,
		gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(sc.PERD_OID_PERI) PERI_RECL,
		sc.val_usua as COD_USUA_INGR,
		0 as Oid_Line_Oper_Recl,
		0 as OID_CABE_RECL,
		0 as OID_OPER_RECL,
		'' AS ESTAD_OPERA,
		'' AS VAL_CODI_VENT,
       ocr_solic_pedidos.GEN_FN_CODSAP_PROD(PED_SOLIC_POSIC.Prod_Oid_Prod) AS cod_sap,
       ocr_solic_pedidos.GEN_FN_DESC_PROD(PED_SOLIC_POSIC.Prod_Oid_Prod) AS des_prod,
		0 as NUM_UNID_RECL,
		'' as DESC_DEVO,
		PED_SOLIC_POSIC.NUM_UNID_DEMA as unid_recl,
		PED_SOLIC_POSIC.NUM_UNID_ATEN AS UNID_ATEN,
		(PED_SOLIC_POSIC.NUM_UNID_DEMA - PED_SOLIC_POSIC.NUM_UNID_ATEN) AS UNID_FALT ,
		PED_SOLIC_POSIC.Prod_Oid_Prod,
		(select cons.val_nume_soli
		from ped_solic_cabec cons
		where cons.oid_soli_cabe = sc.soca_oid_soli_cabe) AS DOC_REFE,
       REC_PKG_REPOR.REC_FN_OBTIE_PRECIO(PED_SOLIC_POSIC.OID_SOLI_POSI)AS PRECIO     
		FROM ped_solic_cabec sc,
		rec_opera op,
		rec_tipos_opera tiop,
		ped_grupo_proce ped,
		PED_SOLIC_POSIC,
		PED_ESTAD_SOLIC EST
		WHERE SC.ESSO_OID_ESTA_SOLI = EST.OID_ESTA_SOLI
		AND EST.COD_ESTA_SOLI IN ('VA','LI')
		AND (ped.oid_grup_proc = sc.grpr_oid_grup_proc)
		AND ped_solic_posic.Soca_Oid_Soli_Cabe= sc.oid_soli_cabe
		and tiop.val_tipo_oper = '01'
		AND TIOP.ROPE_OID_OPER = OP.OID_OPER
		AND OP.TSPA_OID_SOLI_CON_STOC = sc.tspa_oid_tipo_soli_pais
		AND (sc.MODU_OID_MODU = 1 and sc.tspa_oid_tipo_soli_pais in (
		SELECT int_pkg_recla.gen_fn_devue_oid_tipo_solpa(z.TIP_SOLI)
		FROM REP_REC_PARAM_ATENC z
		) )
		and (PED_SOLIC_POSIC.NUM_UNID_DEMA - PED_SOLIC_POSIC.NUM_UNID_ATEN) > 0
		<isNotEmpty prepend="AND" property="oidPeriodoReferenciaInicial">
			sc.perd_oid_peri >= #oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidPeriodoRegistroInicial">
			sc.perd_oid_peri >= #oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidPeriodoReferenciaFinal">                                                                                                                         
        <![CDATA[
          sc.perd_oid_peri <= #oidPeriodoReferenciaFinal#
        ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidPeriodoRegistroFinal">                                                                                                                           
        <![CDATA[
          sc.perd_oid_peri <= #oidPeriodoRegistroFinal#
        ]]>
		</isNotEmpty>
    <iterate prepend="AND" property="operacionList" open="(" close=")" conjunction="OR">
			OP.COD_OPER = #operacionList[]#
		</iterate>
		<isNotEmpty prepend="AND" property="oidConsultora">
			sc.CLIE_OID_CLIE = #oidConsultora#
		</isNotEmpty>
    <iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
			OP.COD_OPER || '-' || tiop.VAL_TIPO_OPER = #tipoOperacionList[]#
		</iterate>
		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE PED_SOLIC_POSIC.Prod_Oid_Prod=MAE_PRODU.OID_PROD
                       <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
                       <iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
                       <iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =sc.TERR_OID_TERR
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
    			<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
    			<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
    			<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
	</insert>

	<insert id="insertReporteRECEstadisticaRecDetallado" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_RECLA
		(
		NUM_SECU,
		DES_REGI,
		DES_ZONA,
		NUM_RECL,
		COD_CLIE,
		NOM_CLIE,
		ESTAD_RECLA,
		COD_OPER,
		VAL_TIPO_OPER,
		VAL_DES_LARG,
		PERI_RECL,
		PERI_REFE,
		COD_USUA_INGR,
		OID_LINE_OPER_RECLA,
		OID_CABE_RECL,
		OID_OPER_RECL,
		ESTAD_OPERA,
		COD_SAP,
		DESC_PROD,
		IMP_ABON,
		NUM_UNID_RECL,
		DESC_DEVO,
		UNID_ENVI,
		MONT_ENVI,
		PROD_OID_PROD,
		FE_REGI,
		SOPO_OID_SOLI_POSI,
		VAL_CODI_VENT,
		NUM_UNID_DEMA,
		VAL_PREC_FACT_TOTA_LOCA,
		COD_MOTI_DEVO_REAL,
		DES_MOTI_DEVO_REAL,
		DES_CLAS,
		COD_SECC,
		VAL_PREC_NETO_TOTA_LOCA,
		<isEqual property="tipoPeriodo" compareValue="2"> 
			PERI_DMSAC, 
		</isEqual>
		NRO_BOLE_RECO,
		EST_BOLE_RECO,
		RES_BOLE_RECO,
		NO1_BOLE_RECO,
		NO2_BOLE_RECO
		)
		SELECT #nextValue#,
				gen_pkg_gener.GEN_FN_CLIEN_DATOS(MAE_CLIEN.COD_CLIE,'DES_REGI') DES_REGI,
				gen_pkg_gener.GEN_FN_CLIEN_DATOS(MAE_CLIEN.COD_CLIE,'DES_ZONA') DES_ZONA,
		REC_CABEC_RECLA.NUM_RECL,
		MAE_CLIEN.COD_CLIE,
		gen_pkg_gener.GEN_FN_CLIEN_DATOS(MAE_CLIEN.COD_CLIE,'NOM_CLIE') NOM_CLIE,
				gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_CABEC_RECLA.ESRE_OID_ESTA_RECL,'REC_ESTAD_RECLA','es') as ESTAD_RECLA,
		REC_OPERA.COD_OPER,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		REC_OPERA.VAL_DESC_LARG,
				gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(REC_CABEC_RECLA.PERD_OID_PERI_RECL) PERI_RECL,
     			gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE) PERI_REFE,
		REC_CABEC_RECLA.COD_USUA_INGR,
		REC_LINEA_OPERA_RECLA.Oid_Line_Oper_Recl,
		REC_CABEC_RECLA.OID_CABE_RECL,
		REC_OPERA_RECLA.OID_OPER_RECL,
				gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_OPERA_RECLA.ESOP_OID_ESTA_OPER,'REC_ESTAD_OPERA','es') AS ESTAD_OPERA  ,				
				OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(REC_LINEA_OPERA_RECLA.PROD_OID_PROD) AS COD_SAP ,
				OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(REC_LINEA_OPERA_RECLA.PROD_OID_PROD) AS DESC_PROD,
		NVL(REC_LINEA_OPERA_RECLA.IMP_ABON,0) ,
		NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0) ,
				gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(REC_LINEA_OPERA_RECLA.MODV_OID_MOTI_DEVO,'REC_MOTIV_DEVOL','es') DESC_DEVO,
		NVL((select sum(A.NUM_UNID_RECL)
		from REC_LINEA_OPERA_RECLA A
		where A.Opre_Oid_Oper_Recl= REC_OPERA_RECLA.OID_OPER_RECL
		AND A.Prod_Oid_Prod = REC_LINEA_OPERA_RECLA.PROD_OID_PROD
		AND A.TIMO_OID_TIPO_MOVI = 1),0) as unid_ENVI,
		NVL((select sum(A.IMP_CARG)
		from REC_LINEA_OPERA_RECLA A
		where A.Opre_Oid_Oper_Recl= REC_OPERA_RECLA.OID_OPER_RECL
		AND A.Prod_Oid_Prod = REC_LINEA_OPERA_RECLA.PROD_OID_PROD
		AND A.TIMO_OID_TIPO_MOVI = 1),0) as MONT_ENVI ,
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.FEC_INGR ,
		REC_LINEA_OPERA_RECLA.SOPO_OID_SOLI_POSI,
		( SELECT PRE_OFERT_DETAL.VAL_CODI_VENT
		FROM PRE_MATRI_FACTU,
		PRE_MATRI_FACTU_CABEC,
		PRE_OFERT,
		PRE_OFERT_DETAL
		WHERE PRE_MATRI_FACTU.OFDE_OID_DETA_OFER = PRE_OFERT_DETAL.OID_DETA_OFER
					AND REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT = PRE_MATRI_FACTU.OID_MATR_FACT 
		AND PRE_MATRI_FACTU.MFCA_OID_CABE = PRE_MATRI_FACTU_CABEC.OID_CABE
		AND PRE_OFERT.MFCA_OID_CABE = PRE_MATRI_FACTU_CABEC.OID_CABE
					AND PRE_OFERT_DETAL.OFER_OID_OFER = PRE_OFERT.OID_OFER  ) AS VAL_CODI_VENT,
		nvl(( select abs(num_unid_aten)
		from ped_solic_posic
		where oid_soli_posi = REC_LINEA_OPERA_RECLA.SOPO_OID_SOLI_POSI
		),0) as Num_Unid_Dema,
		nvl((select decode(val_prec_cata_unit_loca,0,0,abs(val_prec_fact_tota_loca))
		from ped_solic_posic
		where oid_soli_posi = REC_LINEA_OPERA_RECLA.SOPO_OID_SOLI_POSI
		),0) as Val_Prec_Fact_Tota_Loca,
		REC_LINEA_OPERA_RECLA.COD_MOTI_REAL COD_MOTI_DEVO_REAL,
		( SELECT gen.val_i18n FROM
		gen_i18n_sicc_pais gen,
		seg_idiom idi,
		rec_motiv_devol base
		WHERE gen.idio_oid_idio = idi.oid_idio
		AND base.oid_moti_devo = gen.val_oid
		AND idi.cod_iso_idio = 'es'
		AND gen.attr_enti = 'REC_MOTIV_DEVOL'
                	and base.cod_moti_devo = REC_LINEA_OPERA_RECLA.COD_MOTI_REAL ) DES_MOTI_DEVO_REAL,
                MAE_PKG_REPOR.MAE_FN_DEVUE_CLASI_CLIEN(#codigoPais#, MAE_CLIEN.OID_CLIE) DES_CLAS,
                gen_pkg_gener.GEN_FN_CLIEN_DATOS(MAE_CLIEN.COD_CLIE,'COD_SECC') COD_SECC,
                
               (nvl((select abs(val_prec_neto_unit_loca)
               from ped_solic_posic
               where oid_soli_posi = REC_LINEA_OPERA_RECLA.SOPO_OID_SOLI_POSI), 0) * NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL, 0)) 
               as VAL_PREC_NETO_TOTA_LOCA, 
				<isEqual property="tipoPeriodo" compareValue="2"> 
					gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(REC_CABEC_RECLA.PERD_OID_PERI_REGI) AS PERI_DMSAC, 
				</isEqual>
	
		CB.cod_cabe_bore NRO_BOLE_RECO,
        INT_PKG_RECLA.gen_fn_devue_deest_borec( CB.ESBO_OID_ESTA_BOR1)  EST_BOLE_RECO,
        INT_PKG_RECLA.gen_fn_devue_deest_borec( CB.ESBO_OID_ESTA_BOR2)  RES_BOLE_RECO,
        ( SELECT RB.DES_MOTN_RECO_BORE FROM int_rec_motno_recoj_borec RB
        WHERE RB.OID_MOTN_RECO_BORE = CB.MORE_OID_MOTN_RECO_BORE )  NO1_BOLE_RECO,
        ( SELECT RB.DES_MOTN_RECO_BORE FROM int_rec_motno_recoj_borec RB
        WHERE RB.OID_MOTN_RECO_BORE = CB.MORE_OID_MOTN_RECO_BOR2 )  NO2_BOLE_RECO
				
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA,
		MAE_CLIEN,
		
		int_rec_linea_borec lb, 
		int_rec_cabec_borec cb 
		
	   WHERE  REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND MAE_CLIEN.OID_CLIE = REC_CABEC_RECLA.CLIE_OID_CLIE
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =2
     					and REC_LINEA_OPERA_RECLA.OID_LINE_OPER_RECL = lb.LOR_OID_LINE_OPER_RECL(+)
		and lb.COD_CABE_BORE = cb.COD_CABE_BORE(+)
		
		<iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
			REC_OPERA.COD_OPER = #codigoOperacion[]#
		</iterate>
		<isNotEmpty prepend="AND" property="codigoConsultora">
			MAE_CLIEN.COD_CLIE =#codigoConsultora#
		</isNotEmpty>
				<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
			REC_OPERA.COD_OPER || '-' || REC_TIPOS_OPERA.VAL_TIPO_OPER = #tipoOperacionList[]#
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
					REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoReferenciaInicial#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
					REC_OPERA_RECLA.PERD_OID_PERI_RECL >=gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroInicial#)
		</isNotEmpty>
				<isNotEmpty prepend="AND" property="periodoRegistroDMSACInicial">
					REC_CABEC_RECLA.PERD_OID_PERI_REGI >=gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroDMSACInicial#)
				</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
				<![CDATA[
					REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoReferenciaFinal#)
				]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
				<![CDATA[
					REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroFinal#)
				]]>
		</isNotEmpty>
				<isNotEmpty prepend="AND" property="periodoRegistroDMSACFinal">
					<![CDATA[
						REC_CABEC_RECLA.PERD_OID_PERI_REGI <= gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroDMSACFinal#)
						]]>
					</isNotEmpty>
		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
						  <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
							<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
							<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
								<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
								<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
								<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
			<isNotEmpty prepend="AND" property="fechaInicial">
				<![CDATA[
				REC_CABEC_RECLA.FEC_INGR >= TO_DATE(#fechaInicial#, 'DD/MM/YYYY')
				]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fechaFinal">
				<![CDATA[
				REC_CABEC_RECLA.FEC_INGR <= TO_DATE(#fechaFinal#, 'DD/MM/YYYY')
				]]>
			</isNotEmpty>
	</insert>


	<delete id="deleteReporteRECOperacionesUnidadAdm">
		TRUNCATE TABLE REC_REPOR_OPERA_UNIDA_ADMIN
	</delete>
	<insert id="insertReporteRECOperacionesUnidadAdmDevuelve" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(
		NUM_SECU,
		COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		DES_REGI,
		DES_ZONA,
		ZZON_OID_ZONA,
		NUM_GUIA ,
		NUM_UNID_RECL ,
		IMP_ABON,
		VAL_TIPO_PEDI,
		SOCA_OID_SOLI_CABE)
		SELECT #nextValue#,
		REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL ,
		</isEmpty>
            int_pkg_recla.GEN_FN_DESC_REGIO_TERRI_INAC( REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI, #codigoPais#, 'I'),
		    int_pkg_recla.GEN_FN_DESC_ZONA_TERRI_INAC( REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI, #codigoPais#, 'I'),
			int_pkg_recla.GEN_FN_OID_ZONA_TERRI_INAC(ztad_oid_terr_admi, #codigoPais#, 'I'),
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		SUM(NVL(REC_LINEA_OPERA_RECLA.IMP_ABON,0)) as IMP_ABON,
		NULL,
		MIN(REC_CABEC_RECLA.SOCA_OID_SOLI_CABE)
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       		
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
  			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
							<iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
							<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
							<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
	</insert>
<insert id="insertReporteRECOperacionesUnidadAdmEnvia" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(NUM_SECU,
		COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		DES_REGI,
		DES_ZONA,
		ZZON_OID_ZONA,
		NUM_GUIA ,
		NUM_UNID_RECL ,
		IMP_ABON,
		VAL_TIPO_PEDI,
		SOCA_OID_SOLI_CABE)
		SELECT #nextValue#,
		REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
			int_pkg_recla.GEN_FN_DESC_REGIO_TERRI_INAC( REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI, #codigoPais#, 'I'),
		    int_pkg_recla.GEN_FN_DESC_ZONA_TERRI_INAC( REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI, #codigoPais#, 'I'),	
			int_pkg_recla.GEN_FN_OID_ZONA_TERRI_INAC(ztad_oid_terr_admi, #codigoPais#, 'I'),
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		SUM(NVL(REC_LINEA_OPERA_RECLA.IMP_CARG,0)) as IMP_ABON,
		NULL,
		MIN(REC_CABEC_RECLA.SOCA_OID_SOLI_CABE)
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       		
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
				REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
				REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
				REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
				REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
						<iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
						<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
						<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL ,
		</isEmpty>
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
	</insert>
	<insert id="insertReporteRECListadoReclamosDevuelve" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(COD_CLIE,
		DES_REGI ,
		DES_ZONA ,
		DES_SECC,
		NOM_CLIE,
		NUM_RECL ,
		FE_REGI,
		PERD_OID_PERI ,
		PERD_OID_PERI_RECL ,
		PROD_OID_PROD ,
		ZTAD_OID_TERR_ADMI,
		NUM_UNID_DEMA,
		VAL_PREC_FACT_TOTA_LOCA,
		NUM_GUIA,
		NUM_UNID_RECL ,
		IMP_ABON)
	SELECT 	gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(REC_CABEC_RECLA.CLIE_OID_CLIE),
			Int_Pkg_Recla.GEN_FN_DESC_REGIO_TERRI_INAC(REC_CABEC_RECLA.Ztad_Oid_Terr_Admi, #codigoPais# , '') DES_REGI,
			Int_Pkg_Recla.GEN_FN_DESC_ZONA_TERRI_INAC(REC_CABEC_RECLA.Ztad_Oid_Terr_Admi, #codigoPais# , '') DES_ZONA,	
		ZON_SECCI.DES_SECCI,
			gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(REC_CABEC_RECLA.CLIE_OID_CLIE,'NOM_CLIE') NOM_CLIE,
		REC_CABEC_RECLA.NUM_RECL,
		REC_CABEC_RECLA.FEC_INGR,
		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		REC_CABEC_RECLA.PERD_OID_PERI_RECL,
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
		PED_SOLIC_CABEC.NUM_UNID_ATEN_TOTA,
		PED_SOLIC_CABEC.VAL_TOTA_PAGA_LOCA,
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		sum (NVL(REC_LINEA_OPERA_RECLA.IMP_ABON,0)) as IMP_ABON
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA,
		PED_SOLIC_CABEC,
		ZON_TERRI_ADMIN,
		ZON_SECCI
		WHERE REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       	
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND PED_SOLIC_CABEC.OID_SOLI_CABE=REC_CABEC_RECLA.SOCA_OID_SOLI_CABE
		<isNotEmpty prepend="AND" property="oidConsultora">
			REC_CABEC_RECLA.CLIE_OID_CLIE =#oidConsultora#
		</isNotEmpty>
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>
		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
						<iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
						<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
						<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_CABEC_RECLA.CLIE_OID_CLIE,
		REC_CABEC_RECLA.NUM_RECL,
		REC_CABEC_RECLA.FEC_INGR,
		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		REC_CABEC_RECLA.PERD_OID_PERI_RECL,
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
		ZON_SECCI.DES_SECCI,
		PED_SOLIC_CABEC.NUM_UNID_ATEN_TOTA,
		PED_SOLIC_CABEC.VAL_TOTA_PAGA_LOCA
	</insert>

	<insert id="insertReporteRECListadoReclamosEnvia" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(COD_CLIE,
		DES_REGI ,
		DES_ZONA ,
		DES_SECC,
		NOM_CLIE,
		NUM_RECL ,
		FE_REGI,
		PERD_OID_PERI ,
		PERD_OID_PERI_RECL ,
		PROD_OID_PROD ,
		ZTAD_OID_TERR_ADMI,
		NUM_UNID_DEMA,
		VAL_PREC_FACT_TOTA_LOCA,
		NUM_GUIA,
		NUM_UNID_RECL ,
		IMP_ABON)
	SELECT 	gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(REC_CABEC_RECLA.CLIE_OID_CLIE),
			Int_Pkg_Recla.GEN_FN_DESC_REGIO_TERRI_INAC(REC_CABEC_RECLA.Ztad_Oid_Terr_Admi, #codigoPais# , '') DES_REGI,
			Int_Pkg_Recla.GEN_FN_DESC_ZONA_TERRI_INAC(REC_CABEC_RECLA.Ztad_Oid_Terr_Admi, #codigoPais# , '') DES_ZONA,
		ZON_SECCI.DES_SECCI,
			gen_pkg_gener.GEN_FN_CLIEN_DATOS_OID(REC_CABEC_RECLA.CLIE_OID_CLIE,'NOM_CLIE') NOM_CLIE,
		REC_CABEC_RECLA.NUM_RECL,
		REC_CABEC_RECLA.FEC_INGR,
		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		REC_CABEC_RECLA.PERD_OID_PERI_RECL,
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
		PED_SOLIC_CABEC.NUM_UNID_ATEN_TOTA,
		PED_SOLIC_CABEC.VAL_TOTA_PAGA_LOCA,
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		sum (NVL(REC_LINEA_OPERA_RECLA.IMP_CARG ,0)) as IMP_ABON
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA,
		PED_SOLIC_CABEC,
		ZON_TERRI_ADMIN,
		ZON_SECCI
		WHERE REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
			AND REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       	
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND PED_SOLIC_CABEC.OID_SOLI_CABE=REC_CABEC_RECLA.SOCA_OID_SOLI_CABE
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		<isNotEmpty prepend="AND" property="oidConsultora">
			REC_CABEC_RECLA.CLIE_OID_CLIE = #oidConsultora#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>
		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
						<iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
						<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
						<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_CABEC_RECLA.CLIE_OID_CLIE,
		REC_CABEC_RECLA.NUM_RECL,
		REC_CABEC_RECLA.FEC_INGR,
		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		REC_CABEC_RECLA.PERD_OID_PERI_RECL,
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
		ZON_SECCI.DES_SECCI,
		PED_SOLIC_CABEC.NUM_UNID_ATEN_TOTA,
		PED_SOLIC_CABEC.VAL_TOTA_PAGA_LOCA

	</insert>

	<parameterMap id="paramRECProductoMasReclamados" class="java.util.Map">
		<parameter property="oidPeriodoInicial"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidPeriodoFinal"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="secuencial"            jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="executeReporteRECProductoMasReclamados" parameterMap="paramRECProductoMasReclamados">
		{call REC_PKG_REPOR.REC_PR_UPDAT_UNID_FACT_MASRE(?,?,?)}
	</procedure>
	<parameterMap id="paramReporteRECOperacionesUnidadAdm" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteRECOperacionesUnidadAdm" parameterMap="paramReporteRECOperacionesUnidadAdm">
		{call REC_PKG_REPOR.REC_PR_UPDAT_UNID_FACT_UNIDA(?)}
	</procedure>
	<procedure id="executeReporteRECMotivosDevolucion">
		{call REC_PKG_REPOR.REC_PR_UPDAT_UNID_FACT_MOTIV}
	</procedure>
	<procedure id="executeReporteRECEstadisticaRecDetallado">
		{call REC_PKG_REPOR.REC_PR_UPDAT_UNID_FACT}
	</procedure>

	<insert id="insertReporteRECReclamosMotDevolucionDevuelve" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		PROD_OID_PROD ,
		DES_MOTV_DEVO,
		MODV_OID_MOTI_DEVO,
		NUM_GUIA ,
		NUM_UNID_RECL ,
		IMP_ABON)
		SELECT REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL ,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(rec_linea_opera_recla.modv_oid_moti_devo,'REC_MOTIV_DEVOL','es'),
		rec_linea_opera_recla.modv_oid_moti_devo,
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		sum (NVL(REC_LINEA_OPERA_RECLA.IMP_ABON,0)) as IMP_ABON
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       		
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		AND (EXISTS (SELECT *
		FROM REC_MOTIV_DEVOL
              			  WHERE REC_MOTIV_DEVOL.OID_MOTI_DEVO=REC_LINEA_OPERA_RECLA.modv_oid_moti_devo
              		 		<iterate prepend="AND" property="motivoDevolucionList" open="(" close=")" conjunction="OR">
			REC_MOTIV_DEVOL.COD_MOTI_DEVO = #motivoDevolucionList[]#
		</iterate>
		)
		OR (
		REC_LINEA_OPERA_RECLA.modv_oid_moti_devo IS NULL
		)
		)
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
					   <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
						<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
						<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL ,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_LINEA_OPERA_RECLA.MODV_OID_MOTI_DEVO
	</insert>
<insert id="insertReporteRECReclamosMotDevolucionEnvia" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		PROD_OID_PROD ,
		DES_MOTV_DEVO,
		MODV_OID_MOTI_DEVO,
		NUM_GUIA ,
		NUM_UNID_RECL ,
		IMP_ABON)
		SELECT REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL ,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(rec_linea_opera_recla.modv_oid_moti_devo,'REC_MOTIV_DEVOL','es'),
		rec_linea_opera_recla.modv_oid_moti_devo,
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		sum (NVL(REC_LINEA_OPERA_RECLA.IMP_CARG,0)) as IMP_ABON
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       		
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		AND (EXISTS (SELECT *
		FROM REC_MOTIV_DEVOL
						 WHERE REC_MOTIV_DEVOL.OID_MOTI_DEVO=REC_LINEA_OPERA_RECLA.modv_oid_moti_devo
  						<iterate prepend="AND" property="motivoDevolucionList" open="(" close=")" conjunction="OR">
			REC_MOTIV_DEVOL.COD_MOTI_DEVO = #motivoDevolucionList[]#
		</iterate>
		)
		OR (
		REC_LINEA_OPERA_RECLA.modv_oid_moti_devo IS NULL
		)
		)
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
					   <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
						<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
						<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL ,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_LINEA_OPERA_RECLA.MODV_OID_MOTI_DEVO
	</insert>
<insert id="insertReporteRECProductosMasReclamadosDevuelve" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		PROD_OID_PROD ,
		ZTAD_OID_TERR_ADMI,
		VAL_CODI_VENT,
		NUM_GUIA ,
		NUM_UNID_RECL ,
		IMP_ABON)
		SELECT REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
		OCR_SOLIC_PEDIDOS.GEN_FN_COD_VENTA(REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT),
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		sum (NVL(REC_LINEA_OPERA_RECLA.IMP_ABON,0)) as IMP_ABON
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       		
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
							  <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
								<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
								<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI ,
		REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT
	</insert>
<insert id="insertReporteRECProductosMasReclamadosEnvia" parameterClass="java.util.Map">

		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		(COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		PROD_OID_PROD ,
		ZTAD_OID_TERR_ADMI,
		VAL_CODI_VENT,
		NUM_GUIA ,
		NUM_UNID_RECL ,
		IMP_ABON)
		SELECT REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
		OCR_SOLIC_PEDIDOS.GEN_FN_COD_VENTA(REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT),
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
		sum (NVL(REC_LINEA_OPERA_RECLA.IMP_CARG,0)) as IMP_ABON
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
	WHERE  	REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL       		
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
			<iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
      	 		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#										
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
			 	REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
		 	<![CDATA[
        		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
		 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        	]]>
		</isNotEmpty>

		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
							  <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
								<iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
								<iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
							<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
							<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
							<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI ,
		REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT
	</insert>

	<delete id="deleteReporteRECProductosMasReclamados">
		TRUNCATE TABLE REC_REPOR_PRODU_MASRE
	</delete>
	<insert id="insertReporteRECProductosMasReclamados" parameterClass="java.util.Map">	
		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN(
		COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		PROD_OID_PROD ,
		ZTAD_OID_TERR_ADMI,
		VAL_CODI_VENT,
		NUM_GUIA ,
		NUM_UNID_RECL ,
		IMP_ABON,
	COD_CABE_BORE,
    ESBO_OID_ESTA_BOR1,
    ESBO_OID_ESTA_BOR2,
    NUM_RECO,
    MON_EXIT,
    MON_NEXI,
    MON_DISC,
    MON_GEST)
		SELECT REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
           DECODE(REC_LINEA_OPERA_RECLA.COPA_OID_PARA_GRAL,NULL,GEN_FN_COD_VENTA.VAL_CODI_VENT, GEN_FN_COD_VENTA_FICT_RECLA.COD_VENT_FICT ),      
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
           sum (DECODE(REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI ,1,REC_LINEA_OPERA_RECLA.IMP_CARG,REC_LINEA_OPERA_RECLA.IMP_ABON)) as IMP_ABON,
    CB.cod_cabe_bore ,
    CB.ESBO_OID_ESTA_BOR1 ,
    CB.ESBO_OID_ESTA_BOR2 ,
    CB.NUM_RECO,
    case when CB.ESBO_OID_ESTA_BOR1= 4 AND CB.ESBO_OID_ESTA_BOR2 = 5 
         THEN sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) ELSE 0 END
          AS EXITOSAS,
    case when CB.ESBO_OID_ESTA_BOR1= 4 AND CB.ESBO_OID_ESTA_BOR2 = 6 
         THEN sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) ELSE 0 END 
          AS NO_EXITOSAS,
    case when CB.ESBO_OID_ESTA_BOR1= 4 AND CB.ESBO_OID_ESTA_BOR2 = 7 
         THEN sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) ELSE 0 END 
          AS DISCREPANTES,
    <![CDATA[
    case when CB.ESBO_OID_ESTA_BOR1 <> 4
    ]]>
         THEN sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) ELSE 0 END 
          AS EN_GESTION
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		(
		SELECT OFDET.VAL_CODI_VENT, MAFAC.OID_MATR_FACT
		FROM PRE_OFERT_DETAL OFDET, PRE_MATRI_FACTU MAFAC
		WHERE OFDET.OID_DETA_OFER = MAFAC.OFDE_OID_DETA_OFER
		)GEN_FN_COD_VENTA,
          (SELECT I.COD_VENT_FICT, I.LOPA_OID_LOTE_PREM_ARTI,I.PROD_OID_PROD,P.PANP_OID_PARA_NIVE_PREM,C.OID_PARA_GRAL
		FROM INC_ARTIC_LOTE I,
		INC_LOTE_PREMI_ARTIC L,
		INC_PREMI_ARTIC P,
		INC_PARAM_NIVEL_PREMI N,
		INC_PARAM_GENER_PREMI G,
		INC_CONCU_PARAM_GENER C
		WHERE I.LOPA_OID_LOTE_PREM_ARTI = L.OID_LOTE_PREM_ARTI
		AND L.PRAR_OID_PREM_ARTI = P.OID_PREM_ARTI
		AND P.PANP_OID_PARA_NIVE_PREM = N.OID_PARA_NIVE_PREM
		AND N.PAGP_OID_PARA_GENE_PREM = G.OID_PARA_GENE_PREM
		AND G.COPA_OID_PARA_GRAL = C.OID_PARA_GRAL
		) GEN_FN_COD_VENTA_FICT_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA,
    int_rec_linea_borec lb, 
    int_rec_cabec_borec cb 
    WHERE  REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL               
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =#tipoMovimiento#
      <iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
           REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#                                        
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
           REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=#oidPeriodoReferenciaInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL >=#oidPeriodoRegistroInicial#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
			 	<![CDATA[
       	 		REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= #oidPeriodoReferenciaFinal#
       			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
			 	<![CDATA[
		 		REC_OPERA_RECLA.PERD_OID_PERI_RECL <=  #oidPeriodoRegistroFinal#
        		]]>
		</isNotEmpty>
      AND  GEN_FN_COD_VENTA.OID_MATR_FACT(+)                      = REC_LINEA_OPERA_RECLA.MAFA_OID_MATR_FACT 
      AND  GEN_FN_COD_VENTA_FICT_RECLA.LOPA_OID_LOTE_PREM_ARTI(+) = REC_LINEA_OPERA_RECLA.LOPA_OID_LOTE_PREM_ARTI 
      AND  GEN_FN_COD_VENTA_FICT_RECLA.PROD_OID_PROD(+)           = REC_LINEA_OPERA_RECLA.PROD_OID_PROD 
      AND  GEN_FN_COD_VENTA_FICT_RECLA.PANP_OID_PARA_NIVE_PREM(+) = REC_LINEA_OPERA_RECLA.PANP_OID_PARA_NIVE_PREM 
      AND  GEN_FN_COD_VENTA_FICT_RECLA.OID_PARA_GRAL(+)           = REC_LINEA_OPERA_RECLA.COPA_OID_PARA_GRAL                
		AND EXISTS (SELECT MAE_PRODU.OID_PROD
		FROM MAE_PRODU
		WHERE REC_LINEA_OPERA_RECLA.PROD_OID_PROD=MAE_PRODU.OID_PROD
                   <iterate prepend="AND" property="marcaList" open="(" close=")" conjunction="OR">
			MAE_PRODU.MAPR_OID_MARC_PROD = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA_PRODU(#marcaList[]#)
		</iterate>
                   <iterate prepend="AND" property="negocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.NEGO_OID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_NEGOCIO(#negocioList[]#)
		</iterate>
                   <iterate prepend="AND" property="unidadNegocioList" open="(" close=")" conjunction="OR">
			MAE_PRODU.UNEG_OID_UNID_NEGO = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_UNID_NEGO(#unidadNegocioList[]#)
		</iterate>
		)
		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
                    <iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZON_TERRI.COD_TERR = #territorioList[]#
		</iterate>
                    <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
                    <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
	and REC_LINEA_OPERA_RECLA.OID_LINE_OPER_RECL = lb.LOR_OID_LINE_OPER_RECL(+)
    and lb.COD_CABE_BORE = cb.COD_CABE_BORE(+)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_LINEA_OPERA_RECLA.PROD_OID_PROD,
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI ,
                 DECODE(REC_LINEA_OPERA_RECLA.COPA_OID_PARA_GRAL,NULL,GEN_FN_COD_VENTA.VAL_CODI_VENT, GEN_FN_COD_VENTA_FICT_RECLA.COD_VENT_FICT ),
    CB.cod_cabe_bore ,
    CB.ESBO_OID_ESTA_BOR1 ,
    CB.ESBO_OID_ESTA_BOR2 ,
    CB.NUM_RECO
	</insert>

	<parameterMap id="paramFacturaPendienteSeccion" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="tipoPresentacion"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSeccion"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoTerritorio"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeFacturaPendienteSeccion" parameterMap="paramFacturaPendienteSeccion">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_FACTU_PENDI(?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramCuadreSAPFI" class="java.util.Map">
		<parameter property="fechaProcDesde"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaProcHasta"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
	</parameterMap>

	<procedure id="executeCuadreSAPFI" parameterMap="paramCuadreSAPFI">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_CUADR_SAPFI(?, ?)}
	</procedure>

	<parameterMap id="paramControlAsistencia" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="seleccion"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidProceso"             	jdbcType="VARCHAR" javaType="java.math.BigDecimal"  mode="IN"/>
	</parameterMap>

	<procedure id="executeControlAsistencia" parameterMap="paramControlAsistencia">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_CONTR_ASIST(?, ?, ?, ?, ?, ?, ? ,?)}
    </procedure>

    
    <parameterMap id="paramControlAsistenciaTriunfadoras" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidProceso"             	jdbcType="VARCHAR" javaType="java.math.BigDecimal"  mode="IN"/>
    </parameterMap>

    <procedure id="executeControlAsistenciaTriunfadoras" parameterMap="paramControlAsistenciaTriunfadoras" >
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_CONTR_ASIST_TRIUN(?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramEstadoCtaCteVendedora" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSeccion"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoTerritorio"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="seleccion"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeEstadoCtaCteVendedora" parameterMap="paramEstadoCtaCteVendedora">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_ESTAD_CUENT_CORRI(?, ?, ?, ?, ?, ?, ?, ?, ? )}
	</procedure>

	<parameterMap id="paramDetalleCtaCte" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSeccion"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoTerritorio"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeDetalleCtaCte" parameterMap="paramDetalleCtaCte">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_DETAL_CUENT_CORRI(?, ?, ?, ?, ?, ?, ? )}
	</procedure>


	<parameterMap id="paramFacturaPendienteCampana" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="montoMinimo"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSeccion"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoTerritorio"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeFacturaPendienteCampana" parameterMap="paramFacturaPendienteCampana">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_FACTU_PENDE_CAMPA(?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>


	<parameterMap id="paramBaseRecuperacionCampana" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="periodoDesde"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="periodoHasta"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSubgerencia"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoVista"         		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeBaseRecuperacionCampana" parameterMap="paramBaseRecuperacionCampana">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_BASE_RECU_CAMPA(?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	<parameterMap id="paramProyeccionPremios" class="java.util.Map">
		<parameter property="codigoPais"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteINCProyeccionPremios" parameterMap="paramProyeccionPremios">
		{call INC_PKG_REPOR_INCEN.INC_PR_GEN_PROY_PREM_CONCU (?)}
	</procedure>


	<parameterMap id="paramVenConsolidado" class="java.util.Map">
		<parameter property="codigoPais"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaDesde"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaHasta"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeReporteVentasConsolidado" parameterMap="paramVenConsolidado">
		{call VEN_PKG_REPOR_RUNIC.VEN_PR_CARGA_VENTA_CONSO(?, ?, ?)}
	</procedure>


	<parameterMap id="paramVenConsolidadoLbel" class="java.util.Map">
		<parameter property="codigoPaisLbel"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaDesde"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaHasta"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    <procedure id="executeReporteVentasConsolidadoLbel" parameterMap="paramVenConsolidadoLbel" >
		{call VEN_PKG_REPOR_RUNIC_LBEL.VEN_PR_CARGA_VENTA_CONSO(?, ?, ?)}
	</procedure>

	<parameterMap id="paramVentaVariable" class="java.util.Map">
		<parameter property="codigoPais"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
  	    <parameter property="codigoSociedad"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoAlmacen"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoPresentacion"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoRangoPeriodo"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoAnio"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodoFinal"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoReporte"       	   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeVentaVariable" parameterMap="paramVentaVariable">
		{call VEN_PKG_REPOR.VEN_PR_OBTIE_VENTA_VARIA(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )}
	</procedure>


	<select id="getParametrosReporteGeneral" parameterClass="java.util.Map" resultMap="parametrosReportesGeneralResult">
		SELECT
		A.DIR_TEMP,
		A.DIR_REPO
		FROM BAS_REPOR_PARAM_GENER A
	</select>


	<select id="getParametrosReporte" parameterClass="java.util.Map" resultMap="parametrosReportesResult">
		SELECT
		A.VAL_RUTA_GRAB,
		A.VAL_PREF_ARCH,
		A.EMA_ORIG,
		A.EMA_COPI,
		A.VAL_SUBJ,
		A.IND_EMAI,
		A.NOM_BODY_TXT,
		A.NOM_BODY_HTML,
		A.NIV_ENVI_COPI,
		A.EMA_DEFA,
			A.IND_EMAI_REGI,
			A.IND_FTP,
			A.VAL_SERV_FTP,
			A.VAL_PUER_FTP,
			A.VAL_USUA_FTP,
			A.VAL_CLAV_FTP,
			A.VAL_RUTA_FTP
		FROM BAS_REPOR_PARAM A
		WHERE A.PAIS_COD_PAIS = #codigoPais#
		AND A.NOM_REPO = #nombreReporte#
		AND A.EST_REGI = '1'
	</select>

	<delete id="deleteLogReporteDisco" parameterClass="java.util.Map">
		DELETE FROM BAS_TMP_REPOR_LOG A
		WHERE A.COD_USUA = #usuarioLogin#
		 <isNotEmpty prepend="AND" property="nombreReporte">
		     A.NOM_REPO = #nombreReporte#
		 </isNotEmpty>
	</delete>

    <select id="getLogReporteDisco" parameterClass="java.util.Map" resultMap="parametrosLogReportesResult">
		SELECT
		A.NOM_REPO,
		A.DES_LOG,
		A.IND_ERRO,
		A.VAL_FILT
		FROM BAS_TMP_REPOR_LOG A
		WHERE A.COD_USUA = #usuarioLogin#
		<isNotEmpty prepend="AND" property="nombreReporte">
		     A.NOM_REPO = #nombreReporte#
		 </isNotEmpty>
		ORDER BY A.VAL_FILT
	</select>

	<insert id="insertLogReporteDisco" parameterClass="java.util.Map">
		INSERT INTO BAS_TMP_REPOR_LOG(COD_USUA, NOM_REPO, DES_LOG, IND_ERRO, VAL_FILT)
		VALUES(#usuarioLogin#, #nombreReporte#, #descripcionLog#, #indicadorLog#, #valorFiltro#)
	</insert>

	<select id="getOidPaisByCodigoPais" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#) FROM DUAL
	</select>
	<select id="getOidPeriodoByCodigoPeriodo" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#) FROM DUAL
	</select>

	<select id="getOidConcursoByNumConcurso" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PARA_GRAL(#numeroConcurso#) FROM DUAL
	</select>
	<select id="getOidTotalVentaByCodigoPeriodo" parameterClass="java.util.Map" resultClass="string">
		select sum(x.IMP_VENT_NETA_ESTA) from INT_FUENT_VENTA_REAL_VACUM x where perd_oid_peri=#oidPeriodo#
	</select>

	<select id="getOidTotalPedidosByCodigoPeriodo" parameterClass="java.util.Map" resultClass="string">
		select sum(x.NUM_PEDI) from INT_FUENT_VENTA_REAL_VACUM x where perd_oid_peri=#oidPeriodo#
	</select>

	<select id="getOidPeriodoByCodigoPeriodoAnterior" parameterClass="java.util.Map" resultClass="string">
		SELECT
		gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2( PER_PKG_REPOR_PERCE.PER_FN_OBTIE_PERIO
		(seg_perio_corpo.cod_peri, peri.pais_oid_pais, peri.marc_oid_marc, peri.cana_oid_cana, -1))
		FROM cra_perio peri,
		seg_perio_corpo
     where peri.oid_peri = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#)
		AND peri.peri_oid_peri=seg_perio_corpo.oid_peri
	</select>
	<select id="getDesPeriodoByCodigoPeriodoAnterior" parameterClass="java.util.Map" resultClass="string">
		SELECT PER_PKG_REPOR_PERCE.PER_FN_OBTIE_PERIO
		(seg_perio_corpo.cod_peri, peri.pais_oid_pais, peri.marc_oid_marc, peri.cana_oid_cana, -1)
		FROM cra_perio peri,
		seg_perio_corpo
     where peri.oid_peri = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#)
		AND peri.peri_oid_peri=seg_perio_corpo.oid_peri

	</select>
		<select id="getOidPeriodoByCodigoPeriodoX" parameterClass="java.util.Map" resultClass="string">
		SELECT
		gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2( PER_PKG_REPOR_PERCE.PER_FN_OBTIE_PERIO
       (seg_perio_corpo.cod_peri, peri.pais_oid_pais, peri.marc_oid_marc, peri.cana_oid_cana, #campanias#))
		FROM cra_perio peri,
		seg_perio_corpo
     where peri.oid_peri = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#)
		AND peri.peri_oid_peri=seg_perio_corpo.oid_peri
	</select>
	<select id="getDesPeriodoByCodigoPeriodoX" parameterClass="java.util.Map" resultClass="string">
		SELECT PER_PKG_REPOR_PERCE.PER_FN_OBTIE_PERIO
       (seg_perio_corpo.cod_peri, peri.pais_oid_pais, peri.marc_oid_marc, peri.cana_oid_cana,#campanias#)
		FROM cra_perio peri,
		seg_perio_corpo
     where peri.oid_peri = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#)
		AND peri.peri_oid_peri=seg_perio_corpo.oid_peri

	</select>

	<select id="getOidMarcaByCodigoMarca" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#) FROM DUAL
	</select>
	<select id="getFechaVencimientoByOidPeriodo" parameterClass="java.util.Map" resultClass="string">
		SELECT MAX (TO_CHAR(FEC_INIC, 'DD/MM/YYYY'))
		FROM CRA_CRONO C, CRA_ACTIV A
		WHERE C.CACT_OID_ACTI = A.OID_ACTI
		AND A.COD_ACTI = 'FP'
		AND C.PERD_OID_PERI = #oidPeriodo# + 1
		AND A.PAIS_OID_PAIS = #oidPais#
	</select>
	<select id="getOidCanalByCodigoCanal" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#) FROM DUAL
	</select>
	<select id="getOidIdiomaByCodigoIdiomaIso" parameterClass="java.util.Map" resultClass="string">
		SELECT I.OID_IDIO
		FROM SEG_IDIOM I
		WHERE UPPER(I.COD_ISO_IDIO) =UPPER(#codigoIdiomaIso#)
	</select>
	<select id="getOidClienteByCodigoCliente" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoCliente#) FROM DUAL
	</select>
	<select id="getOidProductoByCodigoSap" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PRODU(#codigoSap#) FROM DUAL
	</select>
	<select id="getPeriodoPremiacionByConcurso" parameterClass="java.util.Map" resultClass="string">
		SELECT gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(INC_PARAM_GENER_PREMI.PERD_OID_PERI) 
		FROM INC_PARAM_GENER_PREMI
		WHERE INC_PARAM_GENER_PREMI.COPA_OID_PARA_GRAL = #oidParametroGeneral#
	</select>
	<parameterMap id="paramVENEvaluacionVentaVariableSeccion" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

    <procedure id="executeReporteVENEvaluacionVentaVariableSeccion" parameterMap="paramVENEvaluacionVentaVariableSeccion" >
		{call VEN_PKG_REPOR.VEN_PR_CARGA_EVALU_VARIA_SECCI(?, ?, ?, ?, ?, ? )}
	</procedure>

	<parameterMap id="paramVENFlujoResultadosEconomicos" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="anio"                      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    <procedure id="executeReporteVENFlujoResultadosEconomicos" parameterMap="paramVENFlujoResultadosEconomicos" >
		{call VEN_PKG_REPOR.ven_pr_carga_resul_econo(?, ?, ?, ?, ?, ? )}
	</procedure>

	<parameterMap id="paramVENEvaluacionCoberturaNivelesSeccion" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="anio"                      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    <procedure id="executeReporteVENEvaluacionCoberturaNivelesSeccion" parameterMap="paramVENEvaluacionCoberturaNivelesSeccion" >
		{call VEN_PKG_REPOR.VEN_PR_CARGA_EVALU_COBER_NIVEL(?, ?, ?, ?, ?, ? )}
	</procedure>

	<parameterMap id="paramComisionRecuperacionSeccion" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoComision"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoComisionIngreso"     jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

    <procedure id="executeComisionRecuperacionSeccion" parameterMap="paramComisionRecuperacionSeccion" >
		{call COM_PKG_REPOR_RECUP.COM_PR_OBTIE_COMIS_RECUP_SECC(?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramComisionRecuperacionZona" class="java.util.Map">
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoComision"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoComisionIngreso"     jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeComisionRecuperacionZona" parameterMap="paramComisionRecuperacionZona">
		{call COM_PKG_REPOR_RECUP.COM_PR_OBTIE_COMIS_RECUP_ZONA(?, ?, ?)}
	</procedure>

	<parameterMap id="paramComisionRecuperacionRegion" class="java.util.Map">
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoComision"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoComisionIngreso"     jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

    <procedure id="executeComisionRecuperacionRegion" parameterMap="paramComisionRecuperacionRegion" >
		{call COM_PKG_REPOR_RECUP.COM_PR_OBTIE_COMIS_RECUP_REGIO(?, ?, ?)}
	</procedure>

	<parameterMap id="paramInformeProductividadTerritorio" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoZona"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

    <procedure id="executeInformeProductividadTerritorio" parameterMap="paramInformeProductividadTerritorio" >
		{call VEN_PKG_REPOR.VEN_PR_OBTIE_PRODU_TERRI(?, ?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramRECGttResumenCuentaCorriente" class="java.util.Map" >
		<parameter property="codigoPais"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaDesde"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaHasta"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="secuencial1"            jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>

    <procedure id="executeReporteRECGttResumenCuentaCorriente" parameterMap="paramRECGttResumenCuentaCorriente">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_RESUM_CUENT_CORRI(?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramRECGttResumenAbonosCobrar" class="java.util.Map">
		<parameter property="codigoPais"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaDesde"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaHasta"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="secuencial2"            jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>

	<procedure id="executeReporteRECGttResumenAbonosCobrar" parameterMap="paramRECGttResumenAbonosCobrar">
		{call PER_PKG_REPOR_PERCE.PER_PR_GENER_RESUM_ABONO_COBRA(?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramQueryDinamico" class="java.util.Map">
	    <parameter property="query"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeQueryDinamico" parameterMap="paramQueryDinamico">
		{call gen_pkg_gener.gen_pr_ejec_sql_dinam(?)}
	</procedure>

	<parameterMap id="paramAnalisisArea" class="java.util.Map">
		<parameter property="codigoPais"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
  	    <parameter property="codigoSociedad"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoAlmacen"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeAnalisisArea" parameterMap="paramAnalisisArea">
		{call VEN_PKG_REPOR.VEN_PR_OBTIE_ANALI_GENER_AREA(?, ?, ?, ?, ?, ? )}
	</procedure>


	<resultMap id="logoEmpresaEducacionResult" class="baseBlob">
		<result property="bodyAsByteArray"  column="VAL_IMAG" jdbcType="BLOB" javaType="[B" />
	</resultMap>

    <select id="getLogoEmpresaEducacion" parameterClass="java.util.Map" resultMap="logoEmpresaEducacionResult">
		SELECT VAL_IMAG
		FROM EDU_PARAM_PROGR_CAPAC A
		WHERE A.PAIS_COD_PAIS = #codigoPais#
		AND A.EMCO_COD_EMPR_COME = #codigoEmpresa#
		AND A.COD_PROG_CAPA = '01'
	</select>
	<select id="getDesPerioByOidPerio" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#) FROM DUAL		
	</select>

	<select id="getOidIdiomaByCodIso" parameterClass="java.util.Map" resultClass="string">
		SELECT OID_IDIO FROM SEG_IDIOM WHERE COD_ISO_IDIO = #codigoIso#
	</select>

<select id="devuelvePeriodosporFechas" parameterClass="java.util.Map" resultMap="baseResult">
		select oid_peri as codigo,
		val_nomb_peri as descripcion
		from cra_perio
		where (fec_inic>=to_date(#fechaInicial#,'dd/mm/yyyy') 
							<![CDATA[
			             AND  fec_fina<=to_date(#fechaFinal#,'dd/mm/yyyy')	
			            ]]>
		)
		or(<![CDATA[
			               fec_inic<=to_date(#fechaInicial#,'dd/mm/yyyy')	
			            ]]>
		and fec_fina>=to_date(#fechaFinal#,'dd/mm/yyyy'))
		or(fec_inic>=to_date(#fechaInicial#,'dd/mm/yyyy')
						<![CDATA[
			             AND  fec_inic<=to_date(#fechaFinal#,'dd/mm/yyyy')	
			            ]]>
		)
		or(fec_fina>=to_date(#fechaInicial#,'dd/mm/yyyy')
						<![CDATA[
			             AND  fec_fina<=to_date(#fechaFinal#,'dd/mm/yyyy')	
			            ]]>
		)
	</select>

	<select id="getUnidadNegocio" resultMap="baseResult">
		SELECT h.cod_unid_nego as codigo,
		i.VAL_I18N as descripcion
		FROM gen_i18n_sicc_pais i, mae_unida_negoc h
		WHERE i.ATTR_ENTI = 'MAE_UNIDA_NEGOC'
		and i.val_oid = h.oid_unid_nego
	</select>

    <select id="getCabeceraSACFaltante" parameterClass="java.util.Map" resultMap="resulCabeceraReporteSAC">

select TO_CHAR(count(distinct x.OID_SOLI_CABE),'99,999,999') PEDIDOSTOT,
		TO_CHAR(NVL(SUM(y.NUM_UNID_ATEN),0),'99,999,999') UNIDADESTOT,
              TO_CHAR(NVL(SUM(y.NUM_UNID_ATEN * (y.VAL_PREC_CATA_UNIT_LOCA - y.VAL_IMPO_DESC_UNIT_LOCA)),0),'99,999,999.99') MONTO
		from ped_solic_cabec x,
		ped_solic_posic y,
		ped_tipo_solic_pais z,
		ped_tipo_solic v,
		zon_zona r,
		zon_regio p
		where perd_oid_peri = #codigoPeriodo#
		and x.TSPA_OID_TIPO_SOLI_PAIS = z.OID_TIPO_SOLI_PAIS
		and z.TSOL_OID_TIPO_SOLI = v.OID_TIPO_SOLI
		and x.OID_SOLI_CABE = y.SOCA_OID_SOLI_CABE
           and x.FEC_FACT between to_date(#fecFactIni#, 'dd/mm/yyyy') and to_date(#fecFactFin#, 'dd/mm/yyyy')
		and v.COD_TIPO_SOLI = 'SOC'
		and x.ZZON_OID_ZONA = r.OID_ZONA
		and r.ZORG_OID_REGI = p.OID_REGI
		<isNotEmpty property="region">
			<iterate prepend="AND" property="region" open="(" close=")" conjunction="OR">
				(p.COD_REGI = #region[]#)
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="zona">
			<iterate prepend="AND" property="zona" open="(" close=")" conjunction="OR">
				(r.COD_ZONA = #zona[]#)
			</iterate>
		</isNotEmpty>

	</select>

	<select id="getCodUsuarios" resultMap="baseResult">
		SELECT distinct(name) as codigo,		
		name as descripcion
		FROM rec_autor, principals
		WHERE user_oid_user = idprincipal
		order by 1
	</select>

	<select id="getResultadoList" resultMap="baseResult">
		SELECT s.oid_esta_bore||'/'||s.des_esta_bore as codigo, s.des_esta_bore as descripcion
		FROM INT_REC_ESTAD_BOREC s
		WHERE s.NVL_ESTA_BORE = 2
		order by 2
	</select>

	<select id="getMotivoList" resultMap="baseResult">
		SELECT s.oid_motn_reco_bore||'/'||s.des_motn_reco_bore as codigo,s.des_motn_reco_bore as descripcion
		FROM INT_REC_MOTNO_RECOJ_BOREC s
		order by 2
	</select>
	<insert id="insertReporteRECListadoRecAreas" parameterClass="java.util.Map">
		INSERT INTO REC_REPOR_OPERA_UNIDA_ADMIN
		( NUM_SECU,
		COD_OPER ,
		VAL_DESC_LARG ,
		VAL_TIPO_OPER ,
		PERD_OID_PERI ,
		DES_REGI,
		DES_ZONA,
		ZZON_OID_ZONA,
		NUM_GUIA ,
		NUM_UNID_RECL,
		IMP_ABON,
		COD_CLIE
		)

		SELECT #nextValue#,
		REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
            int_pkg_recla.GEN_FN_DESC_REGIO_TERRI_INAC( REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI, #codigoPais#, 'I'),
            int_pkg_recla.GEN_FN_DESC_ZONA_TERRI_INAC( REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI, #codigoPais#, 'I'),
            int_pkg_recla.GEN_FN_OID_ZONA_TERRI_INAC(REC_CABEC_RECLA.ztad_oid_terr_admi, #codigoPais#, 'I'),
		count(DISTINCT REC_CABEC_RECLA.OID_CABE_RECL),
		sum (NVL(REC_LINEA_OPERA_RECLA.NUM_UNID_RECL,0)) as NUM_UNID_RECL,
            SUM(DECODE (REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI,2, NVL(REC_LINEA_OPERA_RECLA.IMP_ABON,0),NVL(REC_LINEA_OPERA_RECLA.IMP_CARG,0))) as MONTO,
            gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(REC_CABEC_RECLA.clie_oid_clie) cod_clie
		FROM REC_CABEC_RECLA,
		REC_OPERA_RECLA,
		REC_LINEA_OPERA_RECLA,
		REC_TIPOS_OPERA,
		REC_OPERA
    WHERE      REC_LINEA_OPERA_RECLA.OPRE_OID_OPER_RECL = REC_OPERA_RECLA.OID_OPER_RECL               
		AND REC_OPERA_RECLA.CARE_OID_CABE_RECL = REC_CABEC_RECLA.OID_CABE_RECL
		AND REC_OPERA_RECLA.TIOP_OID_TIPO_OPER = REC_TIPOS_OPERA.OID_TIPO_OPER
		AND REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
		AND REC_LINEA_OPERA_RECLA.TIMO_OID_TIPO_MOVI =2
              <iterate prepend="AND" property="tipoOperacionList" open="(" close=")" conjunction="OR">
                   REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER  = #tipoOperacionList[]#                                        
		</iterate>
		<isNotEmpty prepend="AND" property="periodoReferenciaInicial">
                 REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE >=gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoReferenciaInicial#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroInicial">
                 REC_OPERA_RECLA.PERD_OID_PERI_RECL >=gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroInicial#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoReferenciaFinal">
             <![CDATA[
                REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE <= gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoReferenciaFinal#)
               ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodoRegistroFinal">
             <![CDATA[
                 REC_OPERA_RECLA.PERD_OID_PERI_RECL <= gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodoRegistroFinal#)
            ]]>
		</isNotEmpty>


		AND EXISTS (SELECT ZON_TERRI_ADMIN.OID_TERR_ADMI
		FROM ZON_TERRI_ADMIN,
		ZON_TERRI,
		ZON_SECCI,
		ZON_ZONA,
		ZON_REGIO
		WHERE ZON_TERRI_ADMIN.OID_TERR_ADMI =REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI
		AND ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		AND ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		AND ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		AND ZON_TERRI.OID_TERR = ZON_TERRI_ADMIN.TERR_OID_TERR
                            <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZON_ZONA.COD_ZONA = #zonaList[]#
		</iterate>
                            <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZON_REGIO.COD_REGI = #regionList[]#
		</iterate>
		)
		GROUP BY REC_OPERA.COD_OPER,
		REC_OPERA.VAL_DESC_LARG,
		REC_TIPOS_OPERA.VAL_TIPO_OPER,
		<isNotEmpty property="periodoReferenciaInicial">
			REC_CABEC_RECLA.PERD_OID_PERI_DOCU_REFE,
		</isNotEmpty>
		<isEmpty property="periodoReferenciaInicial">
			REC_OPERA_RECLA.PERD_OID_PERI_RECL,
		</isEmpty>
		REC_CABEC_RECLA.ZTAD_OID_TERR_ADMI,
		REC_CABEC_RECLA.CLIE_OID_CLIE

	</insert>

	<delete id="deleteReporteListadoRecAreas" parameterClass="java.util.Map">
		delete REC_REPOR_OPERA_UNIDA_ADMIN where NUM_SECU = #nextValue#
	</delete>




   <insert id="insertSTOConsolidadoPostVentaRechazadosCabecera" parameterClass="java.util.Map">		

		INSERT INTO STO_REPOR_GENER(
		NUM_SECU,
		NUM_LOTE,
		COD_PERI_RECL,
		COD_REGI,
		COD_ZONA,
		COD_CLIE,
		VAL_APE1,
		VAL_APE2,
		VAL_NOM1,
		VAL_NOM2,
		NUM_DOCU,
		COD_PERI_REFE,
		FEC_PROC_DOCU,
		NUM_DOCU_CRUC,
		FEC_REFE,
		DES_LARG_MENS,
		cod_moti_rech,
		val_obse_rech_defi,
		DES_MOTI_RECH
		)
		SELECT #nextValue#,
		C.NUM_LOTE LOTE,
			      decode(C.OID_PERI_RECL,null,null,GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(C.OID_PERI_RECL)) PERIODO_RECLAMO,
		C.COD_REGI_ARRI REGION,
		C.COD_ZONA_ARRI ZONA,
		C.COD_CLIE CODIGO_CLIENTE,
		M.VAL_APE1 APELLIDO_PATERNO,
		M.VAL_APE2 APELLIDO_MATERNO,
		M.VAL_NOM1 PRIMER_NOMBRE,
		M.VAL_NOM2 SEGUNDO_NOMBRE,
		C.NUM_DOCU NUM_RECL,
			      decode(C.OID_PERI_REFE,null,null,GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(C.OID_PERI_REFE)) PERIODO_REFERENCIA,
		C.FEC_PROC_DOCU FECHA_INGR_RECL,
		C.NUM_DOCU_CRUC DOCUMENTO_REFERENCIA,
		C.FEC_REFE FECHA_REFERENCIA,
		MV.DES_LARG_MENS MOTIVO_RECHAZO,
		dg.COD_MOTI_RECH COD_RECHAZO,
		dg.VAL_OBSE_RECH_DEFI OBS_RECHAZO,
		(
		select MR.DES_MOTI_RECH
		from sto_recha_motiv MR
		where MR.cod_tipo_docu = DG.COD_TIPO_DOCU
		and MR.cod_moti_rech=dg.COD_MOTI_RECH
		and MR.cod_pais = DG.COD_PAIS
		) DES_MOTI_RECH
		FROM INT_SOLIC_CONSO_POVEN_CABEC C,
		STO_DETAL_DOCUM_EXCEP DE,
		STO_DOCUM_DIGIT DG,
		STO_PARAM_VALID SP,
		STO_MENSA_VALID MV,
		MAE_CLIEN M
		WHERE DE.COD_TIPO_DOCU ='SPVC'
		AND C.SEC_NUME_DOCU = DG.SEC_NUME_DOCU
		AND C.NUM_LOTE = DG.NUM_LOTE
		AND M.COD_CLIE(+) = C.COD_CLIE
		AND DE.SEC_NUME_DOCU = DG.SEC_NUME_DOCU
		AND DE.NUM_LOTE = DE.NUM_LOTE
		AND DG.COD_TIPO_DOCU = DE.COD_TIPO_DOCU
		AND DG.COD_ULTI_VALI_ERRO = DE.COD_VALI
		AND DG.IND_RECH = '1'
		AND SP.COD_VALI = DE.COD_VALI
		AND MV.COD_VALI = SP.COD_VALI
		<isNotEmpty property="codigoPeriodoInicial">
			 <![CDATA[	
		  AND     C.OID_PERI_RECL >= #oidPeriodoInicial#  
		  AND     C.OID_PERI_RECL <= #oidPeriodoFinal#
			 ]]>
		</isNotEmpty>
		<isNotEmpty property="fechaProceso">
		  AND     C.FEC_PROC_DOCU = TO_DATE(to_char(#fechaProceso#,'DD/MM/YYYY') ,'DD/MM/YYYY') 
		</isNotEmpty>
		<isNotEmpty property="numLote">
			AND C.NUM_LOTE = #numLote#
		</isNotEmpty>
		<isNotEmpty property="regionList">
			  <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				c.COD_REGI_ARRI = #regionList[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="zonaList">
			  <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				c.COD_ZONA_ARRI = #zonaList[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="fechaInicio">
		  <![CDATA[	
		  AND     TRUNC(C.FEC_DIGI) >= TO_DATE(#fechaInicio#,'dd/mm/yyyy')
		  AND     TRUNC(C.FEC_DIGI) <= TO_DATE(#fechaFin#,'dd/mm/yyyy')
		  ]]>
		</isNotEmpty>

	</insert>

	<insert id="insertSTOConsolidadoPostVentaRechazadosDetalle" parameterClass="java.util.Map">		

		INSERT INTO STO_REPOR_GENER(
		NUM_SECU,
		NUM_LOTE,
		COD_PERI_RECL,
		FEC_PROC_DOCU,
		COD_REGI,
		COD_ZONA,
		COD_CLIE,
		VAL_APE1,
		VAL_APE2,
		VAL_NOM1,
		VAL_NOM2,
		NUM_DOCU,
		COD_PERI_REFE,
		FEC_INGR_RECL,
		NUM_DOCU_CRUC,
		FEC_REFE,
		VAL_DESC_LARG,
		COD_VENT_DEVU,
		DES_PROD,
		CAN_VENT_DEVU,
		VAL_PREC_CATA_DEVU,
		VAL_PREC_CONT_DEVU,
		COD_VENT_DESE,
		DES_PROD_ENVI,
		CAN_PROD_DESE,
		VAL_PREC_CATA_ENVI,
		VAL_PREC_CONT_ENVI,
		DES_LARG_MENS,
		cod_moti_rech,
		val_obse_rech_defi,
        	DES_MOTI_RECH,
        	CODSAP_PRODUCTO_DEVUELVE,
        	CODSAP_PRODUCTO_ENVIA
		)
		select #nextValue#,
		C.NUM_LOTE LOTE,
         decode(C.OID_PERI_RECL,null, null,GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(C.OID_PERI_RECL)) PERIODO_RECLAMO,
		C.FEC_PROC_DOCU FECHA_RECLAMO,
		C.COD_REGI_ARRI REGION,
		C.COD_ZONA_ARRI ZONA,
		C.COD_CLIE CODIGO_CLIENTE,
		M.VAL_APE1,
		M.VAL_APE2,
		M.VAL_NOM1,
		M.VAL_NOM2,
		C.NUM_DOCU NUM_RECL,
         decode(C.OID_PERI_REFE, null, null, GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(C.OID_PERI_REFE)) PERIODO_REFERENCIA,
		C.FEC_PROC_DOCU FECHA_INGR_RECL,
		C.NUM_DOCU_CRUC DOCUMENTO_REFERENCIA,
		C.FEC_REFE FECHA_REFERENCIA,
		ROP.VAL_DESC_LARG OPERACION,
		D.COD_VENT_DEVU CODIGO_VENTA_DEVUELVE,
         INT_PKG_RECLA.GEN_FN_DESC_PROD(D.PROD_OID_PROD_DEVU) DESCRIPCION_PRODUCTO_DEVUELVE,
		D.CAN_VENT_DEVU CANTIDAD_DEVUELVE,
		D.VAL_PREC_CATA_DEVU PRECIO_FACTURA_DEVUELVE,
		D.VAL_PREC_CONT_DEVU PRECIO_CONTABLE_DEVUELVE,
		D.COD_VENT_DESE CODIGO_VENTA_ENVIA,
         INT_PKG_RECLA.GEN_FN_DESC_PROD(D.PROD_OID_PROD_ENVI) DESCRIPCION_PRODUCTO_ENVIA,
		D.CAN_PROD_DESE CANTIDAD_ENVIA,
		D.VAL_PREC_CATA_ENVI PRECIO_FACTURA_ENVIA,
		D.VAL_PREC_CONT_ENVI PRECIO_CONTABLE_ENVIA,
		MV.DES_LARG_MENS MOTIVO_RECHAZO,
		dg.COD_MOTI_RECH COD_RECHAZO,
		dg.VAL_OBSE_RECH_DEFI OBS_RECHAZO,
		(select MR.DES_MOTI_RECH
		from sto_recha_motiv MR
		where MR.cod_tipo_docu = DG.COD_TIPO_DOCU
		and MR.cod_moti_rech=dg.COD_MOTI_RECH
             and MR.cod_pais = DG.COD_PAIS) DES_MOTI_RECH,
         INT_PKG_RECLA.GEN_FN_CODSAP_PROD(D.PROD_OID_PROD_DEVU) CODSAP_PRODUCTO_DEVUELVE,
	     INT_PKG_RECLA.GEN_FN_CODSAP_PROD(D.PROD_OID_PROD_ENVI) CODSAP_PRODUCTO_ENVIA
    FROM INT_SOLIC_CONSO_POVEN_DETAL D,
		INT_SOLIC_CONSO_POVEN_CABEC C,
		STO_DETAL_DOCUM_EXCEP DE,
		STO_DOCUM_DIGIT DG,
		STO_PARAM_VALID SP,
		MAE_CLIEN M,
		STO_MENSA_VALID MV,
		            (select distinct(uno.cod_oper) COD_OPER, decode(Rxp.VAL_DESC_LARG,null,uno.des_oper,Rxp.VAL_DESC_LARG) VAL_DESC_LARG , cod_oper_sicc
		from (
		select cod_oper cod_oper , des_oper , cod_oper_sicc
		from REC_DIGIT_HOMOL_OPER
		union
		select cod_oper_sicc cod_oper , des_oper , cod_oper_sicc
		from REC_DIGIT_HOMOL_OPER
		union
			            select (substr(cod_oper_sicc,2,1)||substr(cod_oper_sicc,1,1)) cod_oper , des_oper , (substr(cod_oper_sicc,2,1)||substr(cod_oper_sicc,1,1))  cod_oper_sicc
		from REC_DIGIT_HOMOL_OPER
		where IND_EXPRESS = '1'
		union
		select cod_oper_mot cod_oper , des_oper , cod_oper_sicc
		from REC_DIGIT_HOMOL_OPER )uno,
		rec_opera rxp
		where uno.cod_oper = Rxp.COD_OPER(+)
		and uno.cod_oper is not null) ROP
		where D.SEC_NUME_DOCU = DG.SEC_NUME_DOCU
		and DG.SEC_NUME_DOCU_CABE = C.SEC_NUME_DOCU
		and DG.SEC_NUME_DOCU = DE.SEC_NUME_DOCU (+)
		and DG.COD_ULTI_VALI_ERRO = DE.COD_VALI (+)
		and DE.COD_VALI = SP.COD_VALI(+)
		and D.COD_CLIE = M.COD_CLIE
		and SP.COD_VALI = MV.COD_VALI (+) 
		and decode(D.COD_OPER,null,D.TIP_REFE,D.COD_OPER) = ROP.COD_OPER(+)
		and DG.COD_TIPO_DOCU = 'SPVD'
		and DG.IND_RECH = '1'
		<isNotEmpty property="codigoPeriodoInicial">
				 <![CDATA[
		  AND     C.OID_PERI_RECL >= #oidPeriodoInicial#  
		  AND     C.OID_PERI_RECL <= #oidPeriodoFinal#  
				  ]]>
		</isNotEmpty>
		<isNotEmpty property="fechaProceso">
		 	AND C.FEC_PROC_DOCU = TO_DATE(to_char(#fechaProceso#,'DD/MM/YYYY') ,'DD/MM/YYYY') 
		</isNotEmpty>
		<isNotEmpty property="numLote">
			AND C.NUM_LOTE = #numLote#
		</isNotEmpty>
		<isNotEmpty property="regionList">
		    <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				c.COD_REGI_ARRI = #regionList[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty property="zonaList">
		    <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				c.COD_ZONA_ARRI = #zonaList[]#
			</iterate>
		</isNotEmpty>
		  <iterate prepend="AND" property="codOperacionList" open="(" close=")" conjunction="OR">
			ROP.COD_OPER_SICC = #codOperacionList[]#
		</iterate>
		<isNotEmpty property="fechaInicio">
		  <![CDATA[	
		  AND     TRUNC(C.FEC_DIGI) >= TO_DATE(#fechaInicio#,'dd/mm/yyyy')
		  AND     TRUNC(C.FEC_DIGI) <= TO_DATE(#fechaFin#,'dd/mm/yyyy')
		  ]]>
		</isNotEmpty>

	</insert>


	<parameterMap id="paramIndicadorGestionIncentivosCDR" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="campoFiltro"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="concursos"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>				
		<parameter property="periodoInicio"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="periodoFin"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

    <procedure id="executeIndicadorGestionIncentivosCDR" parameterMap="paramIndicadorGestionIncentivosCDR" >
		{call INC_PKG_REPOR_INCEN.INC_PR_OBTIE_INDIC_GESTI_INCEN(?, ?, ?, ?, ?, ?, ?)}
	</procedure>

	<select id="getTiposPrograma" resultMap="baseResult">
		SELECT OID_TIPO_PROG as CODIGO, DES_TIPO_PROG as DESCRIPCION 
		FROM
		(SELECT ctp.oid_tipo_prog, ctp.des_tipo_prog
		FROM inc_concu_tipo_prog ctp
		UNION
		SELECT 9999 AS oid_tipo_prog, 'PRIVILEGE' AS des_tipo_prog
		FROM DUAL
		)
		ORDER BY 2
	</select>

	<parameterMap id="paramPremiosEntregados" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicioFacturacion"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFinFacturacion"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="campoFiltro"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="concursos"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>				
		<parameter property="programas"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSAP"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executePremiosEntregados" parameterMap="paramPremiosEntregados">
		{call INC_PKG_REPOR_INCEN.INC_PR_OBTIE_PREMI_ENTRE(?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>

	<resultMap id="zonasFacturanHoyResult" class="java.util.HashMap">
		<result property="codigoRegion" column="COD_REGI" />
		<result property="descripcionRegion" column="DES_REGI" />
		<result property="codigoZona" column="COD_ZONA" />
		<result property="anio" column="VAL_ANIO" />
		<result property="campana" column="VAL_NOMB_PERI" />
		<result property="indicadorActivo" column="IND_ACTI" />
	</resultMap>

	<!-- SE RECUPERAN LAS ZONAS QUE FACTURAN EL DIA DE HOY u OTRA FECHA -->
    <select id="getZonasFacturanHoy" parameterClass="java.util.Map" resultMap="zonasFacturanHoyResult">                    
		SELECT c.COD_REGI,
		c.DES_REGI,
		b.COD_ZONA,
		e.VAL_ANIO,
		d.VAL_NOMB_PERI,
		DECODE (b.IND_ACTI, 1, 'S', 0, 'N') AS IND_ACTI
		FROM CRA_CRONO a,
		ZON_ZONA b,
		ZON_REGIO c,
		CRA_PERIO d,
		SEG_PERIO_CORPO e,
		CRA_ACTIV f,
		SEG_PAIS g,
		SEG_MARCA m
		WHERE a.ZZON_OID_ZONA = b.OID_ZONA
		AND b.ZORG_OID_REGI = c.OID_REGI
		AND a.PERD_OID_PERI = d.OID_PERI
		AND d.PERI_OID_PERI = e.OID_PERI
		AND d.MARC_OID_MARC = m.OID_MARC
		AND a.CACT_OID_ACTI = f.OID_ACTI
		AND d.PAIS_OID_PAIS = g.OID_PAIS
		AND g.COD_PAIS = #codigoPais#
		AND f.COD_ACTI = 'FA'
		AND m.COD_MARC = #codigoMarca#
		AND a.FEC_INIC = TO_DATE (#fecha#, 'DD/MM/YYYY')
		ORDER BY c.COD_REGI, b.COD_ZONA
	</select>

	<select id="getTipoOfertasList" resultMap="baseResult">
		SELECT 	C.COD_TIPO_OFER AS CODIGO, P.VAL_I18N AS DESCRIPCION 
		FROM GEN_I18N_SICC_COMUN P, PRE_TIPO_OFERT C, SEG_IDIOM I
		WHERE P.VAL_OID = C.OID_TIPO_OFER AND P.IDIO_OID_IDIO = I.OID_IDIO AND
		P.ATTR_ENTI = 'PRE_TIPO_OFERT' AND I.COD_ISO_IDIO = 'es'
		ORDER BY 2
	</select>

   <select id="getOidTipoOfertasList" resultMap="baseOidResult">
		SELECT 	C.OID_TIPO_OFER AS OID, P.VAL_I18N AS DESCRIPCION 
		FROM	GEN_I18N_SICC_COMUN P, PRE_TIPO_OFERT C, SEG_IDIOM I 
		WHERE  	P.VAL_OID = C.OID_TIPO_OFER AND P.IDIO_OID_IDIO = I.OID_IDIO AND
  				P.ATTR_ENTI = 'PRE_TIPO_OFERT' AND I.COD_ISO_IDIO = 'es' 
  		ORDER BY 2
	</select>
	
	<!-- Obtiene el valor de un parametro de reporte general -->
	<select id="getParamReporGener" resultClass="string" parameterClass="java.util.Map">
		SELECT VAL_PARA
		FROM BAS_PARAM_REPOR_GENER
		WHERE COD_PAIS=#codigoPais#
		AND COD_PARA=#codigoParametro#
	</select>

	<select id="getIndicadoresSAC" resultMap="baseResult">
		SELECT COD_INDI as CODIGO, DES_INDI as DESCRIPCION 
		FROM SAC_INDIC
		WHERE IND_ACTI = '1'
		ORDER BY NUM_ORDE
	</select>

	<select id="getSecuenciaIndicadorPeriodoSAC" resultClass="string">
		SELECT SAC_SEQ_INDIC_PERIO.NEXTVAL FROM DUAL
	</select>

	<parameterMap id="paramIndicadoresSAC" class="java.util.Map">
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indicadores"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroSecuencia"       jdbcType="NUMBER"  mode="IN"/>		
	</parameterMap>

	<procedure id="executeIndicadoresSAC" parameterMap="paramIndicadoresSAC">
		{call SAC_PKG_REPOR.SAC_PR_CALCU_INDIC_PERIO(?, ?, ?, ?)}
	</procedure>

	<delete id="deleteReporteIndicadorSAC" parameterClass="java.util.Map">
		delete SAC_TMP_INDIC_PERIO where NUM_SECU = #numeroSecuencia#
	</delete>

	<parameterMap id="paramCargaReporteFNASoles" class="java.util.Map">
		<parameter property="codigoPeriodoInicial"  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoPeriodoFinal"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeCargaReporteFNASoles" parameterMap="paramCargaReporteFNASoles">
		{call REC_PKG_REPOR.REC_PR_CARGA_TEMP_REPOR_FNAAA(?, ?)}
	</procedure>

	<select id="getMensajeReporteRecuperaciones" resultClass="string">
		select count(1)
		from pre_matri_factu_cabec a,
		pre_ofert b,
		pre_ofert_detal c,
		pre_matri_factu d,
		cra_perio e,
		seg_perio_corpo f,
		pre_ofert_detal g,
		pre_matri_factu h,
		pre_matri_recup i,
		mae_produ j,
		mae_produ k,
		gen_i18n_sicc_pais l,
		gen_i18n_sicc_pais m,
		zon_zona n,
		zon_regio o,
		mae_tipo_clasi_clien p,
		mae_clasi q,
		mae_tipo_clien r,
		mae_subti_clien s,
		pre_tipo_ofert t,
		pre_tipo_ofert u
		where a.OID_CABE = b.MFCA_OID_CABE
		and b.OID_OFER = c.OFER_OID_OFER
		and c.OID_DETA_OFER = d.OFDE_OID_DETA_OFER
		and a.PERD_OID_PERI = e.OID_PERI
		and i.MAFA_OID_COD_PPAL = d.OID_MATR_FACT
		and i.MAFA_OID_COD_RECU = h.OID_MATR_FACT
		and h.OFDE_OID_DETA_OFER = g.OID_DETA_OFER
		and f.OID_PERI = e.PERI_OID_PERI
		and f.COD_PERI = #codigoPeriodo#
		and c.PROD_OID_PROD = j.OID_PROD
		and j.OID_PROD = l.VAL_OID
		and l.ATTR_ENTI = 'MAE_PRODU'
		and g.PROD_OID_PROD = k.OID_PROD
		and k.OID_PROD = m.VAL_OID
		and m.ATTR_ENTI = 'MAE_PRODU'
		and g.tofe_oid_tipo_ofer = t.oid_tipo_ofer
		and c.tofe_oid_tipo_ofer = u.oid_tipo_ofer
		and i.ZZON_OID_ZONA = n.OID_ZONA(+)
		and i.ZORG_OID_REGI = o.OID_REGI(+)
		and i.TCCL_OID_TIPO_CLAS = p.OID_TIPO_CLAS(+)
		and i.CLAS_OID_CLAS = q.OID_CLAS(+)
		and i.TICL_OID_TIPO_CLIE = r.OID_TIPO_CLIE(+)
		and i.SBTI_OID_SUBTI_CLIEN = s.OID_SUBT_CLIE(+)
		and c.imp_prec_cata > (select max_valo_ofer
		from bas_pais
		where cod_pais = #codigoPais#)
	</select>

	<select id="getMensajeReporteReemplazos" resultClass="string">
		select count(1)
		from pre_matri_factu_cabec a,
		pre_ofert b,
		pre_ofert_detal c,
		pre_matri_factu d,
		cra_perio e,
		seg_perio_corpo f,
		pre_ofert_detal g,
		pre_matri_factu h,
		pre_matri_reemp i,
		mae_produ j,
		mae_produ k,
		gen_i18n_sicc_pais l,
		gen_i18n_sicc_pais m,
		zon_zona n,
		zon_regio o,
		mae_tipo_clasi_clien p,
		mae_clasi q,
		mae_tipo_clien r,
		mae_subti_clien s,
		pre_tipo_ofert t,
		pre_tipo_ofert u
		where a.OID_CABE = b.MFCA_OID_CABE
		and b.OID_OFER = c.OFER_OID_OFER
		and c.OID_DETA_OFER = d.OFDE_OID_DETA_OFER
		and a.PERD_OID_PERI = e.OID_PERI
		and i.MAFA_OID_COD_PPAL = d.OID_MATR_FACT
		and i.MAFA_OID_COD_REEM = h.OID_MATR_FACT
		and h.OFDE_OID_DETA_OFER = g.OID_DETA_OFER
		and f.OID_PERI = e.PERI_OID_PERI
		and f.COD_PERI = #codigoPeriodo#
		and c.PROD_OID_PROD = j.OID_PROD
		and j.OID_PROD = l.VAL_OID
		and l.ATTR_ENTI = 'MAE_PRODU'
		and g.PROD_OID_PROD = k.OID_PROD
		and k.OID_PROD = m.VAL_OID
		and m.ATTR_ENTI = 'MAE_PRODU'
		and g.tofe_oid_tipo_ofer = t.oid_tipo_ofer
		and c.tofe_oid_tipo_ofer = u.oid_tipo_ofer
		and i.ZZON_OID_ZONA = n.OID_ZONA(+)
		and i.ZORG_OID_REGI = o.OID_REGI(+)
		and i.TCCL_OID_TIPO_CLAS = p.OID_TIPO_CLAS(+)
		and i.CLAS_OID_CLAS = q.OID_CLAS(+)
		and i.TICL_OID_TIPO_CLIE = r.OID_TIPO_CLIE(+)
		and i.SBTI_OID_SUBTI_CLIEN = s.OID_SUBT_CLIE(+)
		and c.imp_prec_cata > (select max_valo_ofer
		from bas_pais
		where cod_pais = #codigoPais#)
	</select>

	<select id="getMensajeReporteGuiaProductos" resultClass="string">
		SELECT count(1)
		FROM pre_ofert,
		pre_ofert_detal,
		mae_produ,
		mae_unida_negoc,
		mae_negoc,
		pre_catal,
		pre_catal_orden,
		pre_estra,
		pre_grupo_ofert,
		gen_i18n_sicc_pais,
		pre_tipo_ofert,
		pre_matri_factu_cabec,
		cra_perio,
		seg_perio_corpo,
		PRE_INDIC_CUADR_TIPO_ESTRA
		WHERE gen_i18n_sicc_pais.ATTR_ENTI = 'MAE_PRODU'
		and mae_produ.OID_PROD = gen_i18n_sicc_pais.VAL_OID
		and pre_tipo_ofert.oid_tipo_ofer = pre_ofert_detal.tofe_oid_tipo_ofer
		and pre_grupo_ofert.CUES_OID_IND_CUAD_TIPO_ESTR =
		PRE_INDIC_CUADR_TIPO_ESTRA.OID_IND_CUAD_TIPO_ESTR(+)
		and pre_matri_factu_cabec.oid_cabe = pre_ofert.mfca_oid_cabe
		and pre_matri_factu_cabec.perd_oid_peri = cra_perio.oid_peri
		and cra_perio.peri_oid_peri = seg_perio_corpo.oid_peri
		and seg_perio_corpo.cod_peri = #codigoPeriodo#
		AND pre_ofert_detal.ofer_oid_ofer = pre_ofert.oid_ofer
		AND pre_ofert_detal.ocat_oid_catal = pre_catal.oid_cata(+)
		AND pre_ofert.coes_oid_estr = pre_estra.oid_estr
		AND pre_ofert_detal.prod_oid_prod = mae_produ.oid_prod
		AND pre_catal_orden.ocat_oid_cata(+) = pre_catal.oid_cata
		AND mae_produ.nego_oid_nego = mae_negoc.oid_nego(+)
		AND mae_produ.uneg_oid_unid_nego = mae_unida_negoc.oid_unid_nego(+)
		and pre_ofert_detal.GOFE_OID_GRUP_OFER =
		pre_grupo_ofert.OID_GRUP_OFER(+)
		and pre_ofert_detal.PRECIO_UNITARIO > (select max_valo_ofer
		from bas_pais
		where cod_pais = #codigoPais#)
	</select>

  <select id="getListaZonasReporteSACAsistenciaCompartamosEsika" parameterClass="java.util.Map" resultClass="java.lang.String"> 
		select distinct f.cod_zona
		from mae_clien b,
		mae_clien_unida_admin c,
		zon_terri_admin d,
		zon_terri e,
		zon_secci h,
		zon_zona f,
		zon_regio g,
		mae_clien_datos_adici i,
		gen_i18n_sicc_comun j
		where b.OID_CLIE = c.CLIE_OID_CLIE
		and c.ZTAD_OID_TERR_ADMI = d.OID_TERR_ADMI
		and d.TERR_OID_TERR = e.OID_TERR
		and d.ZSCC_OID_SECC = h.OID_SECC
		and h.ZZON_OID_ZONA = f.OID_ZONA
		and f.ZORG_OID_REGI = g.OID_REGI
		and c.PERD_OID_PERI_FIN is null
		and b.OID_CLIE = i.CLIE_OID_CLIE
		and i.esta_oid_esta_clie = j.val_oid
		and j.attr_enti = 'MAE_ESTAT_CLIEN'
		and f.oid_ZONA in
		(select zzon_oid_zona
		from cra_crono
		where CACT_OID_ACTI = (select oid_acti
		from cra_activ
		where pais_oid_pais = g.pais_oid_pais
		and cod_acti = 'CV')
		and trunc(fec_inic) = trunc(sysdate + 1))
		and i.ind_acti = 1
	</select>

   <select id="getListaZonasReporteSACActivasSaldo" parameterClass="java.util.Map" resultClass="java.lang.String">
		select distinct f.cod_zona
		from mae_clien b,
		mae_clien_unida_admin c,
		zon_terri_admin d,
		zon_terri e,
		zon_secci h,
		zon_zona f,
		zon_regio g,
		mae_clien_datos_adici i,
		gen_i18n_sicc_comun j
		where b.OID_CLIE = c.CLIE_OID_CLIE
		and c.ZTAD_OID_TERR_ADMI = d.OID_TERR_ADMI
		and d.TERR_OID_TERR = e.OID_TERR
		and d.ZSCC_OID_SECC = h.OID_SECC
		and h.ZZON_OID_ZONA = f.OID_ZONA
		and f.ZORG_OID_REGI = g.OID_REGI
		and c.PERD_OID_PERI_FIN is null
		and b.OID_CLIE = i.CLIE_OID_CLIE
		and i.esta_oid_esta_clie = j.val_oid
		and j.attr_enti = 'MAE_ESTAT_CLIEN'
		and f.oid_ZONA in
		(select zzon_oid_zona
		from cra_crono
		where CACT_OID_ACTI = (select oid_acti
		from cra_activ
		where pais_oid_pais = g.pais_oid_pais
		and cod_acti = 'FA')
		and trunc(fec_inic) = trunc(sysdate + 5))
		and i.ind_acti = 1
	</select>

	<!-- Se Obtiene el correo del gerente de una región -->
    <select id="getCorreoGerenteRegion" parameterClass="java.util.Map" resultClass="string">                    
		SELECT B.VAL_TEXT_COMU
		FROM ZON_REGIO A, MAE_CLIEN_COMUN B
		WHERE A.CLIE_OID_CLIE = B.CLIE_OID_CLIE
		AND B.TICM_OID_TIPO_COMU = 3
		AND COD_REGI = #codigoRegion#
	</select>

	<!-- Se Obtiene el correo del gerente de una región -->
    <select id="getCorreoGerenteZona" parameterClass="java.util.Map" resultClass="string">                    
		SELECT B.VAL_TEXT_COMU
		FROM ZON_ZONA A, MAE_CLIEN_COMUN B
		WHERE A.CLIE_OID_CLIE = B.CLIE_OID_CLIE
		AND B.TICM_OID_TIPO_COMU = 3
		AND COD_ZONA = #codigoZona#
	</select>

	<!-- Se Obtiene el tipo de solicitud -->
    <select id="getTipoSolicitud" parameterClass="java.util.Map" resultClass="string">
		SELECT INT_PKG_RECLA.GEN_FN_DEVUE_OID_TIPO_SOLPA(#tipoSolicitud#) FROM DUAL
	</select>

	<!-- Se Obtiene el codigo de estado del cliente y su codigo de equivalencia -->
	<resultMap id="estadoEquivalenciaClienteResult" class="java.util.HashMap">
		<result property="COD_ESTA_CLIE" column="COD_ESTA_CLIE" />
		<result property="COD_EQUI_CLIE" column="COD_EQUI_CLIE" />
	</resultMap>

	<select id="getEstadoEquivalenciaCliente" parameterClass="java.util.Map" resultMap="estadoEquivalenciaClienteResult">
		SELECT cod_esta_clie, cod_equi_clie
		FROM bas_param_estad_clien
		WHERE cod_pais = #codigoPais#
	</select>

	<!-- Se verifica si una region y/o zona tiene data -->
	<select id="getContadorListaRegionesZonas" parameterClass="java.util.Map"  resultClass="string">
		SELECT COUNT(1)
		FROM int_solic_conso_cabec a, zon_zona b, mae_clien c
		WHERE a.cod_peri = #codigoPeriodo#
		AND a.cod_zona = b.cod_zona (+)
		AND b.clie_oid_clie = c.oid_clie (+)
		<isNotEmpty prepend="AND" property="codigoRegion">
			(a.Cod_Regi = #codigoRegion#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoZona">
			(a.cod_zona = #codigoZona#)
		</isNotEmpty>
		AND a.ztad_oid_terr_admi is not null
	</select>

    <select id="getTiposCDR" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT COD_OPER_HOMOL AS CODIGO,
		DES_OPER_HOMOL AS DESCRIPCION
		FROM REP_MAE_OPER_HOMOL RM
		WHERE COD_TIPO_REGIS = 'RE'
		ORDER BY 2
	</select>

	<select id="getTiposAtencion" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT COD_OPER_HOMOL AS CODIGO,
		DES_OPER_HOMOL AS DESCRIPCION
		FROM REP_MAE_OPER_HOMOL RM
		WHERE COD_TIPO_REGIS = 'AT'
		ORDER BY 2
	</select>

	<!-- Devuelve la fecha inicial y final de un periodo -->
	<resultMap id="rangoResult" class="java.util.HashMap">
		<result property="fechaInicial" column="FEC_INIC" />
		<result property="fechaFinal" column="FEC_FINA" />
	</resultMap>

    <select id="getRangoFechaPeriodo"  parameterClass="string" resultMap="rangoResult">
		SELECT TO_CHAR(c.FEC_INIC,'dd/MM/yyyy') FEC_INIC,
		TO_CHAR(c.FEC_FINA,'dd/MM/yyyy') FEC_FINA
		FROM cra_perio c, seg_perio_corpo s
		WHERE s.OID_PERI = c.PERI_OID_PERI
		AND s.COD_PERI = #value#
	</select>
	<select id="getMaximoValorOferta" resultClass="string">
		SELECT MAX_VALO_OFER
		FROM BAS_PAIS
		WHERE COD_PAIS= #codigoPais#
	</select>

	<select id="getMensajexValorMaximoOferta" resultClass="string">
		select COUNT(1)
		from pre_matri_factu_cabec a,
		pre_ofert b,
		pre_ofert_detal c,
		pre_matri_factu d,
		cra_perio e,
		seg_perio_corpo f,
		pre_ofert_detal g,
		pre_matri_factu h,
		pre_matri_codig_alter i,
		mae_produ j, mae_produ k,
		gen_i18n_sicc_pais l,
		gen_i18n_sicc_pais m,
		pre_tipo_ofert t,
		pre_tipo_ofert u
		where a.OID_CABE=b.MFCA_OID_CABE
		and b.OID_OFER=c.OFER_OID_OFER
		and c.OID_DETA_OFER=d.OFDE_OID_DETA_OFER
		and a.PERD_OID_PERI=e.OID_PERI
		and i.MAFA_OID_COD_PPAL=d.OID_MATR_FACT
		and i.MAFA_OID_COD_ALTE=h.OID_MATR_FACT
		and h.OFDE_OID_DETA_OFER=g.OID_DETA_OFER
		and f.OID_PERI=e.PERI_OID_PERI
		and f.COD_PERI=#codigoPeriodo#
		and c.PROD_OID_PROD=j.OID_PROD
		and j.OID_PROD=l.VAL_OID
		and l.ATTR_ENTI='MAE_PRODU'
		and g.PROD_OID_PROD=k.OID_PROD
		and k.OID_PROD=m.VAL_OID and m.ATTR_ENTI='MAE_PRODU'
		and g.tofe_oid_tipo_ofer=t.oid_tipo_ofer
		and c.tofe_oid_tipo_ofer=u.oid_tipo_ofer
		AND g.imp_prec_cata > (select max_valo_ofer
		from bas_pais
		where cod_pais = #codigoPais#)



	</select>

 	<!-- Se llama al procedure para generar la data para el reporte de Consolidado de Atenciones CDR  -->   
	<parameterMap id="paramSTOConsolidadoAtencionCDR" class="java.util.Map">
		<parameter property="codigoPais"  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodoInicial"  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodoFinal"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

  	<procedure id="executeSTOConsolidadoAtencionCDR" parameterMap="paramSTOConsolidadoAtencionCDR" >
		{call STO_PKG_PROCE_GENER.STO_PR_REPOR_CONSO_ATENC_CDR(?, ?, ?)}
	</procedure>

	<select id="getOidClasificacion" resultClass="string">
		SELECT a.oid_clas
		FROM MAE_CLASI A,
		MAE_TIPO_CLASI_CLIEN B,
		MAE_SUBTI_CLIEN C
		WHERE A.TCCL_OID_TIPO_CLAS= B.OID_TIPO_CLAS
		and B.SBTI_OID_SUBT_CLIE= C.OID_SUBT_CLIE
		AND A.COD_CLAS=#codClasi#
		AND B.COD_TIPO_CLAS=#codTipoClasi#
		AND C.COD_SUBT_CLIE=#codSubTipoClien#
	</select>

    <parameterMap id="paramsReporteProyeccionesPremioConcurso" class="java.util.Map">
    	<parameter property="numeroConcurso" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
    	<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>

    <procedure id="executeReporteProyeccionesPremioConcurso" parameterMap="paramsReporteProyeccionesPremioConcurso">
		{call INC_PKG_PROCE_INCEN.INC_PR_REPOR_PROYE_PREMI_CONCU(?, ?)}
	</procedure>

	<insert id="insertGloblanTemporaryForNumNivel" parameterClass="java.util.Map">
		INSERT INTO INC_GTT_PARAM (VAL_VALO)
		SELECT distinct PNP.NUM_NIVE
		FROM INC_PARAM_NIVEL_PREMI PNP
		<isNotEmpty property="nivelConcursoList">
		  	<iterate prepend="WHERE" property="nivelConcursoList" open="(" close=")" conjunction="OR">
				PNP.NUM_NIVE = #nivelConcursoList[]#
			</iterate>
		</isNotEmpty>
	</insert>

	<!-- REPORTE - MAV - Estado Atenciones -->
	<resultMap id="listaEstadoAtencionesResult" class="java.util.HashMap">
		<result property="facturacion" column="FACTURACION" />
		<result property="lote" column="LOTE" />
		<result property="zona" column="ZONA" />
		<result property="producto" column="PRODUCTO" />
		<result property="descripcion" column="DESCRIPCION" />
		<result property="unid" column="UNID" />
	</resultMap>
    <select id="getEstadoAtencionesMAV"  parameterClass="string" resultMap="listaEstadoAtencionesResult">
		SELECT TO_CHAR(CON.FEC_FACT, 'yy-mm-dd') FACTURACION,
		CON.NUM_LOTE_FACT LOTE,
		ZON.COD_ZONA ZONA,
		PRD.COD_SAP PRODUCTO,
		GEN.VAL_I18N DESCRIPCION,
		POS.NUM_UNID_ATEN UNID
		FROM PED_SOLIC_CABEC CON,
		PED_SOLIC_CABEC SOL,
		PED_SOLIC_POSIC POS,
		MAE_PRODU PRD,
		GEN_I18N_SICC_PAIS GEN,
		ZON_ZONA ZON
		WHERE CON.PERD_OID_PERI = TO_NUMBER(#value#)
           AND 	SOL.TSPA_OID_TIPO_SOLI_PAIS IN (SELECT OID_TIPO_SOLI_PAIS FROM INT_SAW_PARAM_TSOLI)
		AND CON.FEC_FACT IS NOT NULL
		AND SOL.OID_SOLI_CABE = POS.SOCA_OID_SOLI_CABE
		AND SOL.SOCA_OID_SOLI_CABE = CON.OID_SOLI_CABE
		AND POS.PROD_OID_PROD = PRD.OID_PROD
		AND GEN.ATTR_ENTI = 'MAE_PRODU'
		AND GEN.VAL_OID = PRD.OID_PROD
		AND CON.CLIE_OID_CLIE = ZON.CLIE_OID_CLIE
		ORDER BY TO_CHAR(CON.FEC_FACT, 'yy-mm-dd'),
		CON.NUM_LOTE_FACT,
		ZON.COD_ZONA,
		PRD.COD_SAP
	</select>


	<!-- REPORTE - MAV - No Pasaron Pedidos -->
	<resultMap id="listaNoPasaronPedidosResult" class="java.util.HashMap">
		<result property="zona" column="ZONA" />
		<result property="envio" column="ENVIO" />
		<result property="detalle" column="DETALLE" />
		<result property="actividad" column="ACTIVIDAD" />
		<result property="producto" column="COD_SAP" />
		<result property="descripcion" column="DESCRIPCION" />
		<result property="consultora" column="CONSULTORA" />
		<result property="nombre" column="NOMBRE" />
	</resultMap>
    <select id="getNoPasaronPedidosMAV"  parameterClass="java.util.Map" resultMap="listaNoPasaronPedidosResult">
		SELECT zon.cod_zona AS ZONA,
		a.oid_deta_mav AS ENVIO,
		b.oid_envi AS DETALLE,
		g4.val_i18n AS ACTIVIDAD,
		c.cod_sap AS COD_SAP,
		g5.val_i18n AS DESCRIPCION,
		e.cod_clie AS CONSULTORA,
                 TRIM(e.val_nom1)|| ' ' || TRIM(e.val_nom2) || ' ' || TRIM(e.val_ape1) || ' ' || TRIM(e.val_ape2) AS NOMBRE
		FROM mav_detal_mav a,
		mav_envio b,
		mae_produ c,
		mae_clien e,
		mae_clien_unida_admin ua,
		zon_terri_admin za,
		zon_secci sec,
		zon_zona zon,
		zon_terri zt,
		(SELECT * FROM gen_i18n_sicc_comun
		WHERE attr_enti = 'PRE_TIPO_OFERT') g4,
		(SELECT * FROM gen_i18n_sicc_pais
		WHERE attr_enti = 'MAE_PRODU') g5
		WHERE a.perd_oid_peri = #oidPeriodo#
		AND a.oid_deta_mav = b.denv_oid_deta_mav
		AND a.tepr_oid_tipo_esta_proc IN (4)
		AND a.ticl_oid_tipo_clie = 2
		AND b.ind_envi = 'P'
		AND c.oid_prod = a.prod_oid_prod
		AND g5.val_oid(+) = a.prod_oid_prod
		AND g4.val_oid(+) = a.tofe_oid_tipo_ofer
		AND b.clie_oid_clie = e.oid_clie
		AND e.oid_clie = ua.clie_oid_clie
		AND ua.ztad_oid_terr_admi = za.oid_terr_admi
		AND za.terr_oid_terr = zt.oid_terr
		AND za.zscc_oid_secc = sec.oid_secc
		AND sec.zzon_oid_zona = zon.oid_zona
		AND ua.ind_acti = 1
	     <iterate prepend="AND" property="lisZona" open="(" close=")" conjunction="OR">
			zon.COD_ZONA = #lisZona[]#
		</iterate>
		<isNotEmpty prepend="AND" property="codigoSAP">
			(c.cod_sap = #codigoSAP#)
		</isNotEmpty>
		ORDER BY cod_zona, cod_clie
	</select>

 	<select id="getOidFacturacionTipoDocumento"  parameterClass="java.util.Map" resultClass="integer">
		SELECT oid_tipo_docu
		FROM FAC_TIPO_DOCUM
		WHERE
       <iterate property="tipoDocumentoList" open="(" close=")" conjunction="OR">
			COD_TIPO_DOCU = #tipoDocumentoList[]#
		</iterate>

	</select>

 	<!-- Se llama al procedure para generar la data para el reporte de Pedidos Afectados FNA  -->   
	<parameterMap id="paramSICPedidosAfectadosFNA" class="java.util.Map">
		<parameter property="codigoPais"  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

  	<procedure id="executeSICPedidosAfectadosDetFNA" parameterMap="paramSICPedidosAfectadosFNA" >
		{call sic_pkg_repor.SIC_PR_REPOR_DETAL_FNA(?, ?)}
	</procedure>

 	<!-- Se Obtiene los oid de los tipo de solicitud para el reporte de Consolidados de Atencion CDR  -->
	<select id="getTiposSolicitudSTO" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT OP.TSPA_OID_SOLI_CON_STOC AS CODIGO,
		op.cod_oper AS DESCRIPCION
		FROM REC_OPERA OP,
		REP_REC_OPER_HOMOL RR,
		REP_MAE_OPER_HOMOL MR
		WHERE MR.COD_TIPO_REGIS = 'AT'
		AND OP.COD_OPER =RR.COD_OPER
		AND MR.COD_OPER_HOMOL = RR.COD_OPER_HOMOL
	</select>

	<!-- Consulta de Resultado de Chequeo por Consultora -->
	<resultMap id="listaResultadoChequeoConsultoraResult" class="java.util.HashMap">
		<result property="codConsultora" column="COD_CONSULTORA" />
		<result property="nombre" column="NOMBE" />
		<result property="region" column="REGION" />
		<result property="zona" column="ZONA" />
		<result property="seccion" column="SECCION" />
		<result property="territorio" column="TERRITORIO" />
		<result property="documento" column="DOCUMENTO_IDENTIDAD" />
		<result property="campana" column="CAMPANA" />
		<result property="fecFacturacion" column="FECHA_FACURACION" />
		<result property="boleta" column="BOLETA_DESPACHO" />
		<result property="codTipoChequeo" column="COD_TIPO_CHEQUEO" />
		<result property="tipoChequeo" column="TIPO_CHEQUEO" />
		<result property="codResultado" column="COD_RESULTADO" />
		<result property="resultado" column="RESULTADO" />
		<result property="oidPedido" column="OID_PEDIDO" />
	</resultMap>
	<select id="getResultadoChequeoConsultora" parameterClass="java.util.Map" resultMap="listaResultadoChequeoConsultoraResult">
		SELECT pc.cod_clie COD_CONSULTORA,
		GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(pc.cod_clie, 'NOM_CLIE') NOMBE,
		(SELECT zr.des_regi
		FROM zon_regio zr
		WHERE zr.cod_regi = pc.cod_regi) REGION,
		(SELECT zz.des_zona
		FROM zon_zona zz
		WHERE zz.cod_zona = pc.cod_zona) ZONA,
		(SELECT zs.des_secci
		FROM zon_secci zs
		WHERE zs.cod_secc = pc.cod_secc
          		    AND zs.zzon_oid_zona=(select oid_zona from zon_zona where cod_zona=pc.cod_zona)) SECCION,
		pc.cod_terr TERRITORIO,
		mi.num_docu_iden DOCUMENTO_IDENTIDAD,
		pc.cod_peri CAMPANA,
		pc.fec_fact FECHA_FACURACION,
		pc.val_nume_soli BOLETA_DESPACHO,
		pt.cod_tipo_cheq COD_TIPO_CHEQUEO,
		pt.des_tipo_cheq TIPO_CHEQUEO,
		pr.cod_resu_cheq COD_RESULTADO,
		pr.des_resu_cheq RESULTADO,
		pc.oid_pedi_cheq OID_PEDIDO
		FROM ped_pedid_chequ pc,
		mae_clien mc,
		mae_clien_ident mi,
		ped_tipo_chequ pt,
		ped_resul_chequ pr,
		ped_resul_chequ_cabec prc
		WHERE pc.cod_pais = #codigoPais#
		AND pc.cod_clie = #codigoConsultora#
   		   
    	   <![CDATA[
   		   AND  pc.cod_peri >= #codigoPeriodoInicial#
   		   ]]>
   		   <![CDATA[
   		   AND  pc.cod_peri <= #codigoPeriodoFinal#
   		   ]]>

		AND mc.oid_clie = mi.clie_oid_clie
		AND mi.val_iden_docu_prin='1'
		AND mc.cod_clie = pc.cod_clie
		AND pt.cod_pais = pc.cod_pais
		AND pt.cod_tipo_cheq = pc.cod_tipo_cheq
		AND pr.cod_pais = pc.cod_pais
		AND pc.cod_pais = prc.cod_pais
		AND pc.cod_tipo_cheq = prc.cod_tipo_cheq
		AND pc.oid_pedi_cheq = prc.oid_pedi_cheq
		AND pr.cod_pais = prc.cod_pais
		AND pr.cod_resu_cheq = prc.cod_resu_cheq
		ORDER BY pc.cod_peri, pc.cod_tipo_cheq
	</select>

	<!-- Consulta Detalle de Resultado de Chequeo por Consultora -->
	<resultMap id="listaDetalleResultadoChequeoResult" class="java.util.HashMap">
		<result property="codigoSAP" column="CODIGO_SAP" />
		<result property="descripcion" column="DESCRIPCION" />
		<result property="unidades" column="UNIDADES" />
	</resultMap>
	<select id="getDetalleResultadoChequeo" parameterClass="java.util.Map" resultMap="listaDetalleResultadoChequeoResult">
		SELECT pd.cod_prod CODIGO_SAP,
		mp.des_cort DESCRIPCION,
		pd.uni_recl UNIDADES
		FROM ped_resul_chequ_detal pd,
		mae_produ mp
		WHERE pd.cod_pais = #codigoPais#
		AND pd.cod_tipo_cheq = #codigoTipoChequeo#
		AND pd.oid_pedi_cheq = #oidPedido#
		AND pd.cod_resu_cheq = #codigoResultado#
		AND mp.pais_oid_pais = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(pd.cod_pais)
		AND mp.cod_sap = pd.cod_prod
		ORDER BY pd.cod_prod
	</select>

	<!-- Se obtiene el oid del tipo de documento de guia de remision -->
	<select id="getOidGuiaRemision" parameterClass="java.util.Map" resultClass="string">
		SELECT f.oid_tipo_docu
		FROM fac_tipo_docum f
		WHERE f.cod_tipo_docu = #codigoGuiaRemision#
	</select>

	<!-- Se obtiene el oid del tipo de documento de Nota de Credito boleta Venta -->
	<select id="getOidNotaCreditoBol" parameterClass="java.util.Map" resultClass="string">
		SELECT f.oid_tipo_docu
		FROM fac_tipo_docum f
		WHERE f.cod_tipo_docu = #codigoNotaCreditoBol#
	</select>

	<!-- Se obtiene el oid del tipo de documento de Nota de Credito Factura 1 -->     
	<select id="getOidNotaCreditoFact1" parameterClass="java.util.Map" resultClass="string">
		SELECT f.oid_tipo_docu
		FROM fac_tipo_docum f
		WHERE f.cod_tipo_docu = #codigoNotaCreditoFact1#
	</select>

	<!-- Se obtiene el oid del tipo de documento de Nota de Credito Factura 2 -->     
	<select id="getOidNotaCreditoFact2" parameterClass="java.util.Map" resultClass="string">
		SELECT f.oid_tipo_docu
		FROM fac_tipo_docum f
		WHERE f.cod_tipo_docu = #codigoNotaCreditoFact2#
	</select>

    <!-- Se obtiene el oid del tipo de documento de NC Globales -->     
	<select id="getOidNCGlobales" parameterClass="java.util.Map" resultClass="string">
			SELECT f.oid_tipo_docu
			  FROM fac_tipo_docum f
			 WHERE f.cod_tipo_docu = #codigoNCGlobales# 
	</select>

	<!-- Consulta Informe OCR avance pedido -->
	<typeAlias alias="informeOCRPedidoBean"   type="biz.belcorp.ssicc.dao.scsicc.bean.InformeOCRPedidoBean"/> 

	<resultMap id="consultaInformeAvancePedidoResult" class="informeOCRPedidoBean">
		<result property="codigoCliente" column="COD_CLIE" />
		<result property="codigoPeriodo" column="COD_PERI" />
		<result property="numeroLote" column="NUM_LOTE" />
		<result property="fechaSolicitud" column="FEC_SOLI" />
		<result property="nombreCliente" column="NOM_CLIE" />
		<result property="codigoRegion" column="COD_REGI" />
		<result property="codigoZona" column="COD_ZONA" />
		<result property="codigoSeccion" column="COD_SECC" />
		<result property="codigoTerritorio" column="COD_TERR" />
		<result property="estado" column="ESTADO" />
		<result property="telefono1" column="TELF_1" />
		<result property="telefono2" column="TELF_2" />
		<result property="direccion" column="DIRECC" />
		<result property="indicadorRecepcionDigiDist" column="IND_RECE_DD" />
		<result property="indicadorRecepcionWeb" column="IND_RECE_WEB" />
		<result property="indicadorRecepcionOcr" column="IND_RECE_OCR" />
		<result property="indicadorErrorDeuda" column="IND_ERRO_DEUD" />
		<result property="saldoDeudor" column="VAL_SALD_DEUD" />
		<result property="indicadorAdmiCartera" column="IND_ADMI_CART" />
		<result property="observacionPrueba" column="OBS_PRUB" />
		<result property="tipoOrden" column="TIP_ORDE" />
		<result property="codigoErrados" column="COD_ERRA" />
		<result property="montoPedido" column="MON_PEDI" />
		<result property="montoPedidoSinFa" column="MON_PEDI_SIN_FA" />
		<result property="montoOcr" column="MON_OCR" />
		<result property="montoWeb" column="MON_WEB" />
		<result property="montoDigitacionDistr" column="MON_DD" />
		<result property="numeroFa" column="NUM_FA" />
		<result property="facturado" column="FACTUR" />
		<result property="errorMontoMinimo" column="ERR_MON_MIN" />
		<result property="errorMontoMaximo" column="ERR_MON_MAX" />
		<result property="montoPedidoBloq" column="MON_PEDI_BLOQ" />
		<result property="montoMinimo" column="MON_MIN" />
		<result property="montoMaximo" column="MON_MAX" />
		<result property="pedidosEstimados" column="PED_ESTIM" />
	</resultMap>

	<select id="getConsultaInformeAvancePedido" parameterClass="java.util.Map" resultMap="consultaInformeAvancePedidoResult">
		SELECT xx.cod_clie COD_CLIE,
		xx.cod_peri COD_PERI,
		xx.num_lote NUM_LOTE,
		to_char(xx.fec_soli,'dd/MM/yyyy') FEC_SOLI,
		xx.nom_clie NOM_CLIE,
		xx.cod_regi COD_REGI,
		xx.cod_zona COD_ZONA,
		xx.cod_secc COD_SECC,
		xx.cod_terr COD_TERR,
		xx.estado ESTADO,
		xx.telefono_1 TELF_1,
		xx.telefono_2 TELF_2,
		xx.direccion DIRECC,
		ind_rece_dd IND_RECE_DD,
		ind_rece_web IND_RECE_WEB,
		ind_rece_ocr IND_RECE_OCR,
		ind_erro_deud IND_ERRO_DEUD,
		val_sald_deud VAL_SALD_DEUD,
		ind_admi_cart IND_ADMI_CART,
		obs_prub OBS_PRUB,
		tip_orde TIP_ORDE,
		codigos_errados COD_ERRA,
		yy.monto_pedido MON_PEDI,
		yy.monto_pedido_sin_fa MON_PEDI_SIN_FA,
		yy.monto_ocr MON_OCR,
		yy.monto_web MON_WEB,
		yy.monto_dd MON_DD,
		yy.numero_fa NUM_FA,
		facturado FACTUR,
		error_monto_minimo ERR_MON_MIN,
		error_monto_maximo ERR_MON_MAX,
		monto_pedido_bloqueado MON_PEDI_BLOQ,
		(SELECT MAX (val_niv1)
		FROM ped_monto_minim) MON_MIN,
		(SELECT MAX (val_mont_maxi_perm)
		FROM car_param_carte) MON_MAX ,
		(SELECT num_pedi
		FROM int_fuent_venta_previ_sap
		WHERE perd_oid_peri = xx.oid_peri
		AND zzon_oid_zona = xx.zzon_oid_zona) PED_ESTIM
		FROM (SELECT a.cod_clie, a.cod_peri, a.num_lote, d.zzon_oid_zona,
		a.fec_soli, a.nom_clie, a.cod_regi, a.cod_zona, d.cod_secc,
		a.cod_terr, f.oid_peri, a.ind_rece_dd, a.ind_rece_web,
		a.ind_rece_ocr, a.ind_erro_deud, a.val_sald_deud,
		a.ind_admi_cart, a.obs_prub,
		(SELECT g.val_i18n
		FROM mae_clien e,
		mae_clien_datos_adici f,
		gen_i18n_sicc_comun g
		WHERE a.cod_clie = e.cod_clie
		AND e.oid_clie = f.clie_oid_clie
		AND f.esta_oid_esta_clie = g.val_oid
		AND g.attr_enti = 'MAE_ESTAT_CLIEN') estado,
		a.tip_orde, DECODE (a.ind_ocs_proc, 1, 'SI', 'NO') facturado,
		DECODE (a.ind_erro_mtmi, 1, 'SI', 'NO') error_monto_minimo,
		DECODE (a.ind_erro_mtma, 1, 'SI', 'NO') error_monto_maximo,
		a.val_mont_pedi monto_pedido_bloqueado,
		(SELECT COUNT (*)
		FROM ocr_cvent_errad
		WHERE cod_clie = a.cod_clie
		AND cod_peri = a.cod_peri) codigos_errados,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 1
		AND com.clie_oid_clie = mc.oid_clie) telefono_1,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 6
		AND com.clie_oid_clie = mc.oid_clie) telefono_2,
		(SELECT dir.val_nomb_via
		|| ' '
		|| dir.num_ppal
		|| ' '
		|| dir.val_obse direccion
		FROM mae_clien_direc dir
		WHERE dir.ind_elim = 0
		AND dir.clie_oid_clie = mc.oid_clie
		AND dir.ind_dire_ppal = 1) direccion
		FROM int_solic_conso_cabec a,
		mae_clien mc,
		mae_clien_unida_admin mcua,
		zon_terri_admin c,
		zon_secci d,
		cra_perio f,
		seg_perio_corpo g
		WHERE a.cod_peri = #codigoPeriodo#
		AND a.cod_clie = mc.cod_clie
		AND mc.oid_clie = mcua.clie_oid_clie
		AND mcua.ztad_oid_terr_admi = c.oid_terr_admi
		AND mcua.ind_acti = 1
		AND c.zscc_oid_secc = d.oid_secc
		AND a.ind_erro_remp = 0
		AND a.ind_erro_rech = 0
		AND a.cod_zona = #codigoZona#
		AND a.cod_peri = g.cod_peri
		AND g.oid_peri = f.peri_oid_peri) xx,
		(SELECT h.cod_clie, h.cod_peri, h.num_lote,
		SUM (DECODE (h.ind_rece_ocr,
		1, h.val_unid_dem * h.val_prec_cata_unit_loca,
		0
		)
		) monto_ocr,
		SUM (DECODE (h.ind_rece_web,
		1, h.val_unid_dem * h.val_prec_cata_unit_loca,
		0
		)
		) monto_web,
		SUM (DECODE (h.ind_rece_dd,
		1, h.val_unid_dem * h.val_prec_cata_unit_loca,
		0
		)
		) monto_dd,
		SUM (h.val_unid_dem * h.val_prec_cata_unit_loca)
		monto_pedido,
		SUM (DECODE ((h.val_limi_ctrl_vent), NULL, 0, 1)) numero_fa,
		SUM ( DECODE (h.val_limi_ctrl_vent,
		NULL, h.val_unid_dem,
		(h.val_limi_ctrl_vent)
		)
		* h.val_prec_cata_unit_loca
		) monto_pedido_sin_fa
		FROM (SELECT h.cod_vent, h.cod_peri, h.num_lote, h.cod_clie,
		h.val_unid_dem, zz.zzon_oid_zona, xx.zorg_oid_regi,
		h.ind_rece_ocr, h.ind_rece_dd, h.ind_rece_web,
		(SELECT MAX
		(n.val_limi_ctrl_vent
		)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)
		AND n.val_limi_ctrl_vent IS NOT NULL
		AND n.perd_oid_peri = j.oid_peri
		AND xx.oid_zona =
		DECODE (n.zzon_oid_zona,
		NULL, xx.oid_zona,
		n.zzon_oid_zona
		)
		AND xx.zorg_oid_regi =
		DECODE (n.zorg_oid_regi,
		NULL, xx.zorg_oid_regi,
		n.zorg_oid_regi
		)
		GROUP BY h.cod_clie,
		h.cod_peri,
		h.num_lote,
		j.oid_peri) val_limi_ctrl_vent,
		h.val_prec_cata_unit_loca
		FROM int_solic_conso_detal h,
		int_solic_conso_cabec zz,
		zon_zona xx,
		pre_matri_factu_cabec i,
		cra_perio j,
		seg_perio_corpo k,
		pre_ofert l,
		pre_ofert_detal m
		WHERE h.cod_clie = zz.cod_clie
		AND zz.zzon_oid_zona = xx.oid_zona
		AND zz.cod_zona = #codigoZona#
		AND h.cod_peri = k.cod_peri
		AND k.oid_peri = j.peri_oid_peri
		AND h.cod_peri = #codigoPeriodo#
		AND j.oid_peri = i.perd_oid_peri
		AND i.oid_cabe = l.mfca_oid_cabe
		AND l.oid_ofer = m.ofer_oid_ofer
		AND m.val_codi_vent = h.cod_vent) h
		GROUP BY h.cod_clie, h.cod_peri, h.num_lote) yy
		WHERE xx.cod_peri = yy.cod_peri(+) AND xx.cod_clie = yy.cod_clie(+)
		AND xx.num_lote = yy.num_lote(+)
	</select>

	<!-- Consulta Consultoras Activas sin pedido -->
	<typeAlias alias="consultorasActivasSinPedidoBean"   type="biz.belcorp.ssicc.dao.scsicc.bean.ConsultorasActivasSinPedidoBean"/> 

	<resultMap id="consultorasActivasSinPedidoResult" class="consultorasActivasSinPedidoBean">
		<result property="codigoCliente" column="COD_CLIE" />
		<result property="nombreCliente" column="NOM_CLIE" />
		<result property="estado" column="ESTADO" />
		<result property="codigoRegion" column="COD_REGI" />
		<result property="codigoZona" column="COD_ZONA" />
		<result property="codigoSeccion" column="COD_SECC" />
		<result property="activasSeccion" column="ACTIVAS_SECC" />
		<result property="codigoTerritorio" column="COD_TERR" />
		<result property="telefono1" column="TELF_1" />
		<result property="telefono2" column="TELF_2" />
		<result property="direccion" column="DIRECC" />
	</resultMap>

	<select id="getConsultorasActivasSinPedido" parameterClass="java.util.Map" resultMap="consultorasActivasSinPedidoResult">		   
		SELECT
		a.cod_clie COD_CLIE,
		TRIM(a.val_nom1)
		|| ' '
		|| TRIM(a.val_nom2)
		|| ' '
		|| TRIM(a.val_ape1)
		|| ' '
		|| TRIM(a.val_ape2) NOM_CLIE,
		i.val_i18n ESTADO,
		g.cod_regi COD_REGI,
		f.cod_zona COD_ZONA,
		e.cod_secc COD_SECC,
		xx.activas ACTIVAS_SECC,
		d.cod_terr COD_TERR,
		(SELECT val_text_comu
		FROM mae_clien_comun com,mae_tipo_comun s
		WHERE s.COD_TIPO_COMU ='TF'
		AND com.ticm_oid_tipo_comu = s.OID_TIPO_COMU
		AND com.clie_oid_clie = a.oid_clie) TELF_1,
		(SELECT val_text_comu
		FROM mae_clien_comun com,mae_tipo_comun s
		WHERE s.COD_TIPO_COMU ='TM'
		AND com.ticm_oid_tipo_comu = s.OID_TIPO_COMU
		AND com.clie_oid_clie = a.oid_clie) TELF_2,
		(SELECT TRIM(val_nomb_via) || ' ' || TRIM(num_ppal) || ' ' || TRIM(val_obse)
		FROM mae_clien_direc
		WHERE clie_oid_clie = a.oid_clie
		AND ind_elim = 0
		AND ind_dire_ppal = 1) DIRECC
		FROM mae_clien a,
		mae_clien_unida_admin b,
		zon_terri_admin c,
		zon_terri d,
		zon_secci e,
		zon_zona f,
		zon_regio g,
		mae_clien_datos_adici h,
		gen_i18n_sicc_comun i,
		mae_estat_clien z,
		(SELECT e.oid_secc,
		COUNT (DISTINCT a.oid_clie) activas
		FROM mae_clien a,
		mae_clien_unida_admin b,
		zon_terri_admin c,
		zon_terri d,
		zon_secci e,
		zon_zona f,
		zon_regio g,
		mae_clien_datos_adici h,
		mae_estat_clien k
		WHERE a.oid_clie = b.clie_oid_clie
		AND b.ztad_oid_terr_admi = c.oid_terr_admi
		AND c.terr_oid_terr = d.oid_terr
		AND c.zscc_oid_secc = e.oid_secc
		AND e.zzon_oid_zona = f.oid_zona
		AND f.zorg_oid_regi = g.oid_regi
		AND b.ind_acti = 1
		AND f.cod_zona = #codigoZona#
		AND a.oid_clie = h.clie_oid_clie
		AND h.ind_acti = 1
		AND k.oid_esta_clie = h.esta_oid_esta_clie
		           <![CDATA[   
		             AND k.cod_esta_clie <> '07'
		            ]]>
		GROUP BY e.oid_secc) xx
		WHERE a.oid_clie = b.clie_oid_clie
		AND b.ztad_oid_terr_admi = c.oid_terr_admi
		AND c.terr_oid_terr = d.oid_terr
		AND c.zscc_oid_secc = e.oid_secc
		AND e.zzon_oid_zona = f.oid_zona
		AND f.zorg_oid_regi = g.oid_regi
		AND b.ind_acti = 1
		AND f.cod_zona = #codigoZona#
		AND a.oid_clie = h.clie_oid_clie
		AND h.ind_acti = 1
		AND z.oid_esta_clie = h.esta_oid_esta_clie 
		   <![CDATA[
		   AND z.cod_esta_clie <> '07'
		   ]]>
		AND h.esta_oid_esta_clie = i.val_oid
		AND i.attr_enti = 'MAE_ESTAT_CLIEN'
		AND e.oid_secc = xx.oid_secc
		AND a.cod_clie NOT IN (
		SELECT zz.cod_clie
		FROM int_solic_conso_cabec zz
		WHERE zz.ind_erro_rech = 0
		AND zz.cod_zona = #codigoZona#
		AND zz.cod_peri = #codigoPeriodo#
		AND zz.cod_clie = a.cod_clie)

	</select>

	<select id="getFechaUltimaActualizacionZona" parameterClass="java.util.Map" resultClass="string">
		SELECT CASE
		WHEN fec_modi >= fec_digi
		THEN TO_CHAR(fec_modi,'dd/MM/yyyy HH24:MI:SS')
		ELSE TO_CHAR(fec_digi,'dd/MM/yyyy HH24:MI:SS')
		END fec_modi
		FROM (SELECT MAX (fec_modi) fec_modi
		FROM int_solic_conso_cabec
		WHERE ind_erro_rech = 0 AND cod_zona = #codigoZona#
		AND cod_peri = #codigoPeriodo#
		),
		(SELECT MAX (fec_digi) fec_digi
		FROM int_solic_conso_cabec
		WHERE ind_erro_rech = 0 AND cod_zona =#codigoZona#
		AND cod_peri = #codigoPeriodo#
		)

	</select>

	<select id="getNumeroRegistros" parameterClass="java.util.Map" resultClass="int">
		SELECT COUNT (1)
		FROM int_solic_conso_cabec
		WHERE cod_zona = #codigoZona#
		AND cod_peri = #codigoPeriodo#
	</select>


 <select id="getInformeAvancePedido" parameterClass="java.util.Map" resultClass="string">
		SELECT xx.cod_clie || ' ;;; ' ||
		xx.cod_peri || ' ;;; ' ||
		xx.num_lote || ' ;;; ' ||
		to_char(xx.fec_soli,'dd/MM/yyyy') || ' ;;; ' ||
		xx.nom_clie || ' ;;; ' ||
		xx.cod_regi || ' ;;; ' ||
		xx.cod_zona || ' ;;; ' ||
		xx.cod_secc || ' ;;; ' ||
		xx.cod_terr || ' ;;; ' ||
		xx.estado || ' ;;; ' ||
		xx.telefono_1 || ' ;;; ' ||
		xx.telefono_2 || ' ;;; ' ||
		xx.direccion || ' ;;; ' ||
		ind_rece_dd || ' ;;; ' ||
		ind_rece_web || ' ;;; ' ||
		ind_rece_ocr || ' ;;; ' ||
		ind_erro_deud || ' ;;; ' ||
		val_sald_deud || ' ;;; ' ||
		ind_admi_cart || ' ;;; ' ||
		obs_prub || ' ;;; ' ||
		tip_orde || ' ;;; ' ||
		codigos_errados || ' ;;; ' ||
		yy.monto_pedido || ' ;;; ' ||
		yy.monto_pedido_sin_fa || ' ;;; ' ||
		yy.monto_ocr || ' ;;; ' ||
		yy.monto_web || ' ;;; ' ||
		yy.monto_dd || ' ;;; ' ||
		yy.numero_fa || ' ;;; ' ||
		facturado || ' ;;; ' ||
		error_monto_minimo || ' ;;; ' ||
		error_monto_maximo || ' ;;; ' ||
		NVL(monto_pedido_bloqueado,0) || ' ;;; ' ||
		(SELECT MAX (val_niv1)
		FROM ped_monto_minim) || ' ;;; ' ||
		(SELECT MAX (val_mont_maxi_perm)
		FROM car_param_carte) || ' ;;; ' ||
		NVL((SELECT num_pedi
		FROM int_fuent_venta_previ_sap
		WHERE perd_oid_peri = xx.oid_peri
		AND zzon_oid_zona = xx.zzon_oid_zona),0)
		FROM (SELECT a.cod_clie, a.cod_peri, a.num_lote, d.zzon_oid_zona,
		a.fec_soli, a.nom_clie, a.cod_regi, a.cod_zona, d.cod_secc,
		a.cod_terr, f.oid_peri, a.ind_rece_dd, a.ind_rece_web,
		a.ind_rece_ocr, a.ind_erro_deud, a.val_sald_deud,
		a.ind_admi_cart, a.obs_prub,
		(SELECT g.val_i18n
		FROM mae_clien e,
		mae_clien_datos_adici f,
		gen_i18n_sicc_comun g
		WHERE a.cod_clie = e.cod_clie
		AND e.oid_clie = f.clie_oid_clie
		AND f.esta_oid_esta_clie = g.val_oid
		AND g.attr_enti = 'MAE_ESTAT_CLIEN') estado,
		a.tip_orde, DECODE (a.ind_ocs_proc, 1, 'SI', 'NO') facturado,
		DECODE (a.ind_erro_mtmi, 1, 'SI', 'NO') error_monto_minimo,
		DECODE (a.ind_erro_mtma, 1, 'SI', 'NO') error_monto_maximo,
		a.val_mont_pedi monto_pedido_bloqueado,
		(SELECT COUNT (*)
		FROM ocr_cvent_errad
		WHERE cod_clie = a.cod_clie
		AND cod_peri = a.cod_peri) codigos_errados,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 1
		AND com.clie_oid_clie = mc.oid_clie) telefono_1,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 6
		AND com.clie_oid_clie = mc.oid_clie) telefono_2,
		(SELECT dir.val_nomb_via
		|| ' '
		|| dir.num_ppal
		|| ' '
		|| dir.val_obse direccion
		FROM mae_clien_direc dir
		WHERE dir.ind_elim = 0
		AND dir.clie_oid_clie = mc.oid_clie
		AND dir.ind_dire_ppal = 1) direccion
		FROM int_solic_conso_cabec a,
		mae_clien mc,
		mae_clien_unida_admin mcua,
		zon_terri_admin c,
		zon_secci d,
		cra_perio f,
		seg_perio_corpo g
		WHERE a.cod_peri = #codigoPeriodo#
		AND a.cod_clie = mc.cod_clie
		AND mc.oid_clie = mcua.clie_oid_clie
		AND mcua.ztad_oid_terr_admi = c.oid_terr_admi
		AND mcua.ind_acti = 1
		AND c.zscc_oid_secc = d.oid_secc
		AND a.ind_erro_remp = 0
		AND a.ind_erro_rech = 0
		AND a.cod_zona = #codigoZona#
		AND a.cod_peri = g.cod_peri
		AND g.oid_peri = f.peri_oid_peri) xx,
		(SELECT h.cod_clie, h.cod_peri, h.num_lote,
		SUM (DECODE (h.ind_rece_ocr,
		1, h.val_unid_dem * h.val_prec_cata_unit_loca,
		0
		)
		) monto_ocr,
		SUM (DECODE (h.ind_rece_web,
		1, h.val_unid_dem * h.val_prec_cata_unit_loca,
		0
		)
		) monto_web,
		SUM (DECODE (h.ind_rece_dd,
		1, h.val_unid_dem * h.val_prec_cata_unit_loca,
		0
		)
		) monto_dd,
		SUM (h.val_unid_dem * h.val_prec_cata_unit_loca)
		monto_pedido,
		SUM (DECODE ((h.val_limi_ctrl_vent), NULL, 0, 1)) numero_fa,
		SUM ( DECODE (h.val_limi_ctrl_vent,
		NULL, h.val_unid_dem,
		(h.val_limi_ctrl_vent)
		)
		* h.val_prec_cata_unit_loca
		) monto_pedido_sin_fa
		FROM (SELECT h.cod_vent, h.cod_peri, h.num_lote, h.cod_clie,
		h.val_unid_dem, zz.zzon_oid_zona, xx.zorg_oid_regi,
		h.ind_rece_ocr, h.ind_rece_dd, h.ind_rece_web,
		(SELECT MAX
		(n.val_limi_ctrl_vent
		)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)
		AND n.val_limi_ctrl_vent IS NOT NULL
		AND n.perd_oid_peri = j.oid_peri
		AND xx.oid_zona =
		DECODE (n.zzon_oid_zona,
		NULL, xx.oid_zona,
		n.zzon_oid_zona
		)
		AND xx.zorg_oid_regi =
		DECODE (n.zorg_oid_regi,
		NULL, xx.zorg_oid_regi,
		n.zorg_oid_regi
		)
		GROUP BY h.cod_clie,
		h.cod_peri,
		h.num_lote,
		j.oid_peri) val_limi_ctrl_vent,
		h.val_prec_cata_unit_loca
		FROM int_solic_conso_detal h,
		int_solic_conso_cabec zz,
		zon_zona xx,
		pre_matri_factu_cabec i,
		cra_perio j,
		seg_perio_corpo k,
		pre_ofert l,
		pre_ofert_detal m
		WHERE h.cod_clie = zz.cod_clie
		AND zz.zzon_oid_zona = xx.oid_zona
		AND zz.cod_zona = #codigoZona#
		AND h.cod_peri = k.cod_peri
		AND k.oid_peri = j.peri_oid_peri
		AND h.cod_peri = #codigoPeriodo#
		AND j.oid_peri = i.perd_oid_peri
		AND i.oid_cabe = l.mfca_oid_cabe
		AND l.oid_ofer = m.ofer_oid_ofer
		AND m.val_codi_vent = h.cod_vent) h
		GROUP BY h.cod_clie, h.cod_peri, h.num_lote) yy
		WHERE xx.cod_peri = yy.cod_peri(+) AND xx.cod_clie = yy.cod_clie(+)
		AND xx.num_lote = yy.num_lote(+)
	</select>

    <resultMap id="consultaInformeAvancePedidoParte1Result"  class="informeOCRPedidoBean"  >                                                                       
		<result property="codigoCliente" column="COD_CLIE" />
		<result property="codigoPeriodo" column="COD_PERI" />
		<result property="numeroLote" column="NUM_LOTE" />
		<result property="fechaSolicitud" column="FEC_SOLI" />
		<result property="nombreCliente" column="NOM_CLIE" />
		<result property="codigoRegion" column="COD_REGI" />
		<result property="codigoZona" column="COD_ZONA" />
		<result property="codigoSeccion" column="COD_SECC" />
		<result property="codigoTerritorio" column="COD_TERR" />
	</resultMap>

    <resultMap id="consultaInformeAvancePedidoParte2Result"  class="informeOCRPedidoBean"  >                                                                       
		<result property="estado" column="ESTADO" />
		<result property="telefono1" column="TELF_1" />
		<result property="telefono2" column="TELF_2" />
		<result property="direccion" column="DIRECC" />
		<result property="indicadorRecepcionDigiDist" column="IND_RECE_DD" />
		<result property="indicadorRecepcionWeb" column="IND_RECE_WEB" />
		<result property="indicadorRecepcionOcr" column="IND_RECE_OCR" />
		<result property="indicadorErrorDeuda" column="IND_ERRO_DEUD" />
		<result property="saldoDeudor" column="VAL_SALD_DEUD" />
	</resultMap>

    <resultMap id="consultaInformeAvancePedidoParte3Result"  class="informeOCRPedidoBean"  >                                                                       
		<result property="indicadorAdmiCartera" column="IND_ADMI_CART" />
		<result property="observacionPrueba" column="OBS_PRUB" />
		<result property="tipoOrden" column="TIP_ORDE" />
		<result property="codigoErrados" column="COD_ERRA" />
		<result property="montoPedido" column="MON_PEDI" />
		<result property="montoPedidoSinFa" column="MON_PEDI_SIN_FA" />
		<result property="montoOcr" column="MON_OCR" />
		<result property="montoWeb" column="MON_WEB" />
		<result property="montoDigitacionDistr" column="MON_DD" />
	</resultMap>

    <resultMap id="consultaInformeAvancePedidoParte4Result"  class="informeOCRPedidoBean"  >                                                                       
		<result property="numeroFa" column="NUM_FA" />
		<result property="facturado" column="FACTUR" />
		<result property="errorMontoMinimo" column="ERR_MON_MIN" />
		<result property="errorMontoMaximo" column="ERR_MON_MAX" />
		<result property="montoPedidoBloq" column="MON_PEDI_BLOQ" />
		<result property="montoMinimo" column="MON_MIN" />
		<result property="montoMaximo" column="MON_MAX" />
		<result property="pedidosEstimados" column="PED_ESTIM" />
	</resultMap>

 <select id="getConsultaInformeAvancePedido1" parameterClass="java.util.Map" resultMap="consultaInformeAvancePedidoParte1Result">
		SELECT xx.cod_clie COD_CLIE,
		xx.cod_peri COD_PERI,
		xx.num_lote NUM_LOTE,
		to_char(xx.fec_soli,'dd/MM/yyyy') FEC_SOLI,
		xx.nom_clie NOM_CLIE,
		xx.cod_regi COD_REGI,
		xx.cod_zona COD_ZONA,
		xx.cod_secc COD_SECC,
		xx.cod_terr COD_TERR
		FROM (SELECT a.cod_clie, a.cod_peri, a.num_lote, d.zzon_oid_zona,
		a.fec_soli, a.nom_clie, a.cod_regi, a.cod_zona, d.cod_secc,
		a.cod_terr, a.ind_rece_dd, a.ind_rece_web, a.ind_rece_ocr,
		a.ind_erro_deud, a.val_sald_deud, a.ind_admi_cart, a.obs_prub,
		(SELECT g.val_i18n
		FROM mae_clien e,
		mae_clien_datos_adici f,
		gen_i18n_sicc_comun g
		WHERE a.cod_clie = e.cod_clie
		AND e.oid_clie = f.clie_oid_clie
		AND f.esta_oid_esta_clie = g.val_oid
		AND g.attr_enti = 'MAE_ESTAT_CLIEN') estado,
		a.tip_orde, DECODE (a.ind_ocs_proc, 1, 'SI', 'NO') facturado,
		DECODE (a.ind_erro_mtmi, 1, 'SI', 'NO') error_monto_minimo,
		DECODE (a.ind_erro_mtma, 1, 'SI', 'NO') error_monto_maximo,
		a.val_mont_pedi monto_pedido_bloqueado,
		(SELECT COUNT (*)
		FROM ocr_cvent_errad
		WHERE cod_clie = a.cod_clie
		AND cod_peri = a.cod_peri) codigos_errados,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 1
		AND com.clie_oid_clie = mc.oid_clie) telefono_1,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 6
		AND com.clie_oid_clie = mc.oid_clie) telefono_2,
		(SELECT dir.val_nomb_via
		|| ' '
		|| dir.num_ppal
		|| ' '
		|| dir.val_obse direccion
		FROM mae_clien_direc dir
		WHERE dir.ind_elim = 0
		AND dir.clie_oid_clie = mc.oid_clie
		AND dir.ind_dire_ppal = 1) direccion
		FROM int_solic_conso_cabec a,
		mae_clien mc,
		mae_clien_unida_admin mcua,
		zon_terri_admin c,
		zon_secci d
		WHERE a.cod_peri = #codigoPeriodo#
		AND a.cod_clie = mc.cod_clie
		AND mc.oid_clie = mcua.clie_oid_clie
		AND mcua.ztad_oid_terr_admi = c.oid_terr_admi
		AND mcua.ind_acti = 1
		AND c.zscc_oid_secc = d.oid_secc
		AND a.ind_erro_remp = 0
		AND a.ind_erro_rech = 0
		AND a.cod_zona = #codigoZona#) xx,
		(SELECT h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri,
		SUM (h.val_unid_dem * m.imp_prec_cata) monto_pedido,
		SUM
		( DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, h.val_unid_dem,
		(SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		))
		)
		* m.imp_prec_cata
		) monto_pedido_sin_fa,
		SUM
		(DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, 0,
		1
		)
		) numero_fa,
		SUM (DECODE (h.ind_rece_ocr,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_ocr,
		SUM (DECODE (h.ind_rece_web,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_web,
		SUM (DECODE (h.ind_rece_dd,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_dd
		FROM int_solic_conso_detal h,
		pre_matri_factu_cabec i,
		cra_perio j,
		seg_perio_corpo k,
		pre_ofert l,
		pre_ofert_detal m
		WHERE h.cod_peri = k.cod_peri
		AND k.oid_peri = j.peri_oid_peri
		AND h.cod_peri = #codigoPeriodo#
		AND j.oid_peri = i.perd_oid_peri
		AND i.oid_cabe = l.mfca_oid_cabe
		AND l.oid_ofer = m.ofer_oid_ofer
		AND m.val_codi_vent = h.cod_vent
		AND h.cod_clie IN (SELECT r.cod_clie
		FROM int_solic_conso_cabec r
		WHERE r.cod_zona = #codigoZona# AND
		r.cod_clie= h.cod_clie)
		GROUP BY h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri) yy
		WHERE xx.cod_peri = yy.cod_peri
		AND xx.cod_clie = yy.cod_clie
		AND xx.num_lote = yy.num_lote
		ORDER BY xx.cod_clie
	</select>

 <select id="getConsultaInformeAvancePedido2" parameterClass="java.util.Map" resultMap="consultaInformeAvancePedidoParte2Result">
		SELECT xx.estado ESTADO,
		xx.telefono_1 TELF_1,
		xx.telefono_2 TELF_2,
		xx.direccion DIRECC,
		ind_rece_dd IND_RECE_DD,
		ind_rece_web IND_RECE_WEB,
		ind_rece_ocr IND_RECE_OCR,
		ind_erro_deud IND_ERRO_DEUD,
		val_sald_deud VAL_SALD_DEUD
		FROM (SELECT a.cod_clie, a.cod_peri, a.num_lote, d.zzon_oid_zona,
		a.fec_soli, a.nom_clie, a.cod_regi, a.cod_zona, d.cod_secc,
		a.cod_terr, a.ind_rece_dd, a.ind_rece_web, a.ind_rece_ocr,
		a.ind_erro_deud, a.val_sald_deud, a.ind_admi_cart, a.obs_prub,
		(SELECT g.val_i18n
		FROM mae_clien e,
		mae_clien_datos_adici f,
		gen_i18n_sicc_comun g
		WHERE a.cod_clie = e.cod_clie
		AND e.oid_clie = f.clie_oid_clie
		AND f.esta_oid_esta_clie = g.val_oid
		AND g.attr_enti = 'MAE_ESTAT_CLIEN') estado,
		a.tip_orde, DECODE (a.ind_ocs_proc, 1, 'SI', 'NO') facturado,
		DECODE (a.ind_erro_mtmi, 1, 'SI', 'NO') error_monto_minimo,
		DECODE (a.ind_erro_mtma, 1, 'SI', 'NO') error_monto_maximo,
		a.val_mont_pedi monto_pedido_bloqueado,
		(SELECT COUNT (*)
		FROM ocr_cvent_errad
		WHERE cod_clie = a.cod_clie
		AND cod_peri = a.cod_peri) codigos_errados,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 1
		AND com.clie_oid_clie = mc.oid_clie) telefono_1,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 6
		AND com.clie_oid_clie = mc.oid_clie) telefono_2,
		(SELECT dir.val_nomb_via
		|| ' '
		|| dir.num_ppal
		|| ' '
		|| dir.val_obse direccion
		FROM mae_clien_direc dir
		WHERE dir.ind_elim = 0
		AND dir.clie_oid_clie = mc.oid_clie
		AND dir.ind_dire_ppal = 1) direccion
		FROM int_solic_conso_cabec a,
		mae_clien mc,
		mae_clien_unida_admin mcua,
		zon_terri_admin c,
		zon_secci d
		WHERE a.cod_peri = #codigoPeriodo#
		AND a.cod_clie = mc.cod_clie
		AND mc.oid_clie = mcua.clie_oid_clie
		AND mcua.ztad_oid_terr_admi = c.oid_terr_admi
		AND mcua.ind_acti = 1
		AND c.zscc_oid_secc = d.oid_secc
		AND a.ind_erro_remp = 0
		AND a.ind_erro_rech = 0
		AND a.cod_zona = #codigoZona#) xx,
		(SELECT h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri,
		SUM (h.val_unid_dem * m.imp_prec_cata) monto_pedido,
		SUM
		( DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, h.val_unid_dem,
		(SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		))
		)
		* m.imp_prec_cata
		) monto_pedido_sin_fa,
		SUM
		(DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, 0,
		1
		)
		) numero_fa,
		SUM (DECODE (h.ind_rece_ocr,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_ocr,
		SUM (DECODE (h.ind_rece_web,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_web,
		SUM (DECODE (h.ind_rece_dd,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_dd
		FROM int_solic_conso_detal h,
		pre_matri_factu_cabec i,
		cra_perio j,
		seg_perio_corpo k,
		pre_ofert l,
		pre_ofert_detal m
		WHERE h.cod_peri = k.cod_peri
		AND k.oid_peri = j.peri_oid_peri
		AND h.cod_peri = #codigoPeriodo#
		AND j.oid_peri = i.perd_oid_peri
		AND i.oid_cabe = l.mfca_oid_cabe
		AND l.oid_ofer = m.ofer_oid_ofer
		AND m.val_codi_vent = h.cod_vent
		AND h.cod_clie IN (SELECT r.cod_clie
		FROM int_solic_conso_cabec r
		WHERE r.cod_zona = #codigoZona# AND
		r.cod_clie= h.cod_clie)
		GROUP BY h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri) yy
		WHERE xx.cod_peri = yy.cod_peri
		AND xx.cod_clie = yy.cod_clie
		AND xx.num_lote = yy.num_lote
		ORDER BY xx.cod_clie
	</select>

 <select id="getConsultaInformeAvancePedido3" parameterClass="java.util.Map" resultMap="consultaInformeAvancePedidoParte3Result">
		SELECT ind_admi_cart IND_ADMI_CART,
		obs_prub OBS_PRUB,
		tip_orde TIP_ORDE,
		codigos_errados COD_ERRA,
		yy.monto_pedido MON_PEDI,
		yy.monto_pedido_sin_fa MON_PEDI_SIN_FA,
		yy.monto_ocr MON_OCR,
		yy.monto_web MON_WEB,
		yy.monto_dd MON_DD
		FROM (SELECT a.cod_clie, a.cod_peri, a.num_lote, d.zzon_oid_zona,
		a.fec_soli, a.nom_clie, a.cod_regi, a.cod_zona, d.cod_secc,
		a.cod_terr, a.ind_rece_dd, a.ind_rece_web, a.ind_rece_ocr,
		a.ind_erro_deud, a.val_sald_deud, a.ind_admi_cart, a.obs_prub,
		(SELECT g.val_i18n
		FROM mae_clien e,
		mae_clien_datos_adici f,
		gen_i18n_sicc_comun g
		WHERE a.cod_clie = e.cod_clie
		AND e.oid_clie = f.clie_oid_clie
		AND f.esta_oid_esta_clie = g.val_oid
		AND g.attr_enti = 'MAE_ESTAT_CLIEN') estado,
		a.tip_orde, DECODE (a.ind_ocs_proc, 1, 'SI', 'NO') facturado,
		DECODE (a.ind_erro_mtmi, 1, 'SI', 'NO') error_monto_minimo,
		DECODE (a.ind_erro_mtma, 1, 'SI', 'NO') error_monto_maximo,
		a.val_mont_pedi monto_pedido_bloqueado,
		(SELECT COUNT (*)
		FROM ocr_cvent_errad
		WHERE cod_clie = a.cod_clie
		AND cod_peri = a.cod_peri) codigos_errados,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 1
		AND com.clie_oid_clie = mc.oid_clie) telefono_1,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 6
		AND com.clie_oid_clie = mc.oid_clie) telefono_2,
		(SELECT dir.val_nomb_via
		|| ' '
		|| dir.num_ppal
		|| ' '
		|| dir.val_obse direccion
		FROM mae_clien_direc dir
		WHERE dir.ind_elim = 0
		AND dir.clie_oid_clie = mc.oid_clie
		AND dir.ind_dire_ppal = 1) direccion
		FROM int_solic_conso_cabec a,
		mae_clien mc,
		mae_clien_unida_admin mcua,
		zon_terri_admin c,
		zon_secci d
		WHERE a.cod_peri = #codigoPeriodo#
		AND a.cod_clie = mc.cod_clie
		AND mc.oid_clie = mcua.clie_oid_clie
		AND mcua.ztad_oid_terr_admi = c.oid_terr_admi
		AND mcua.ind_acti = 1
		AND c.zscc_oid_secc = d.oid_secc
		AND a.ind_erro_remp = 0
		AND a.ind_erro_rech = 0
		AND a.cod_zona = #codigoZona#) xx,
		(SELECT h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri,
		SUM (h.val_unid_dem * m.imp_prec_cata) monto_pedido,
		SUM
		( DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, h.val_unid_dem,
		(SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		))
		)
		* m.imp_prec_cata
		) monto_pedido_sin_fa,
		SUM
		(DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, 0,
		1
		)
		) numero_fa,
		SUM (DECODE (h.ind_rece_ocr,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_ocr,
		SUM (DECODE (h.ind_rece_web,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_web,
		SUM (DECODE (h.ind_rece_dd,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_dd
		FROM int_solic_conso_detal h,
		pre_matri_factu_cabec i,
		cra_perio j,
		seg_perio_corpo k,
		pre_ofert l,
		pre_ofert_detal m
		WHERE h.cod_peri = k.cod_peri
		AND k.oid_peri = j.peri_oid_peri
		AND h.cod_peri = #codigoPeriodo#
		AND j.oid_peri = i.perd_oid_peri
		AND i.oid_cabe = l.mfca_oid_cabe
		AND l.oid_ofer = m.ofer_oid_ofer
		AND m.val_codi_vent = h.cod_vent
		AND h.cod_clie IN (SELECT r.cod_clie
		FROM int_solic_conso_cabec r
		WHERE r.cod_zona = #codigoZona# AND
		r.cod_clie= h.cod_clie)
		GROUP BY h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri) yy
		WHERE xx.cod_peri = yy.cod_peri
		AND xx.cod_clie = yy.cod_clie
		AND xx.num_lote = yy.num_lote
		ORDER BY xx.cod_clie
	</select>

 <select id="getConsultaInformeAvancePedido4" parameterClass="java.util.Map" resultMap="consultaInformeAvancePedidoParte4Result">
		SELECT yy.numero_fa NUM_FA,
		facturado FACTUR,
		error_monto_minimo ERR_MON_MIN,
		error_monto_maximo ERR_MON_MAX,
		monto_pedido_bloqueado MON_PEDI_BLOQ,
		(SELECT MAX (val_niv1)
		FROM ped_monto_minim) MON_MIN,
		(SELECT MAX (val_mont_maxi_perm)
		FROM car_param_carte) MON_MAX ,
		(SELECT num_pedi
		FROM int_fuent_venta_previ_sap
		WHERE perd_oid_peri = yy.oid_peri
		AND zzon_oid_zona = xx.zzon_oid_zona) PED_ESTIM
		FROM (SELECT a.cod_clie, a.cod_peri, a.num_lote, d.zzon_oid_zona,
		a.fec_soli, a.nom_clie, a.cod_regi, a.cod_zona, d.cod_secc,
		a.cod_terr, a.ind_rece_dd, a.ind_rece_web, a.ind_rece_ocr,
		a.ind_erro_deud, a.val_sald_deud, a.ind_admi_cart, a.obs_prub,
		(SELECT g.val_i18n
		FROM mae_clien e,
		mae_clien_datos_adici f,
		gen_i18n_sicc_comun g
		WHERE a.cod_clie = e.cod_clie
		AND e.oid_clie = f.clie_oid_clie
		AND f.esta_oid_esta_clie = g.val_oid
		AND g.attr_enti = 'MAE_ESTAT_CLIEN') estado,
		a.tip_orde, DECODE (a.ind_ocs_proc, 1, 'SI', 'NO') facturado,
		DECODE (a.ind_erro_mtmi, 1, 'SI', 'NO') error_monto_minimo,
		DECODE (a.ind_erro_mtma, 1, 'SI', 'NO') error_monto_maximo,
		a.val_mont_pedi monto_pedido_bloqueado,
		(SELECT COUNT (*)
		FROM ocr_cvent_errad
		WHERE cod_clie = a.cod_clie
		AND cod_peri = a.cod_peri) codigos_errados,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 1
		AND com.clie_oid_clie = mc.oid_clie) telefono_1,
		(SELECT com.val_text_comu
		FROM mae_clien_comun com
		WHERE com.ticm_oid_tipo_comu = 6
		AND com.clie_oid_clie = mc.oid_clie) telefono_2,
		(SELECT dir.val_nomb_via
		|| ' '
		|| dir.num_ppal
		|| ' '
		|| dir.val_obse direccion
		FROM mae_clien_direc dir
		WHERE dir.ind_elim = 0
		AND dir.clie_oid_clie = mc.oid_clie
		AND dir.ind_dire_ppal = 1) direccion
		FROM int_solic_conso_cabec a,
		mae_clien mc,
		mae_clien_unida_admin mcua,
		zon_terri_admin c,
		zon_secci d
		WHERE a.cod_peri = #codigoPeriodo#
		AND a.cod_clie = mc.cod_clie
		AND mc.oid_clie = mcua.clie_oid_clie
		AND mcua.ztad_oid_terr_admi = c.oid_terr_admi
		AND mcua.ind_acti = 1
		AND c.zscc_oid_secc = d.oid_secc
		AND a.ind_erro_remp = 0
		AND a.ind_erro_rech = 0
		AND a.cod_zona = #codigoZona#) xx,
		(SELECT h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri,
		SUM (h.val_unid_dem * m.imp_prec_cata) monto_pedido,
		SUM
		( DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, h.val_unid_dem,
		(SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		))
		)
		* m.imp_prec_cata
		) monto_pedido_sin_fa,
		SUM
		(DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)),
		NULL, 0,
		1
		)
		) numero_fa,
		SUM (DECODE (h.ind_rece_ocr,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_ocr,
		SUM (DECODE (h.ind_rece_web,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_web,
		SUM (DECODE (h.ind_rece_dd,
		1, h.val_unid_dem * m.imp_prec_cata,
		0
		)
		) monto_dd
		FROM int_solic_conso_detal h,
		pre_matri_factu_cabec i,
		cra_perio j,
		seg_perio_corpo k,
		pre_ofert l,
		pre_ofert_detal m
		WHERE h.cod_peri = k.cod_peri
		AND k.oid_peri = j.peri_oid_peri
		AND h.cod_peri = #codigoPeriodo#
		AND j.oid_peri = i.perd_oid_peri
		AND i.oid_cabe = l.mfca_oid_cabe
		AND l.oid_ofer = m.ofer_oid_ofer
		AND m.val_codi_vent = h.cod_vent
		AND h.cod_clie IN (SELECT r.cod_clie
		FROM int_solic_conso_cabec r
		WHERE r.cod_zona = #codigoZona# AND
		r.cod_clie= h.cod_clie)
		GROUP BY h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri) yy
		WHERE xx.cod_peri = yy.cod_peri
		AND xx.cod_clie = yy.cod_clie
		AND xx.num_lote = yy.num_lote
		ORDER BY xx.cod_clie
	</select>


	<typeAlias alias="faltantesAnunciadosBean"      type="biz.belcorp.ssicc.dao.scsicc.bean.FaltantesAnunciadosBean"/>
	<typeAlias alias="detallePedidoFacturadoBean"   type="biz.belcorp.ssicc.dao.scsicc.bean.DetallePedidoFacturadoBean"/>
	<typeAlias alias="detallePedidoNoFacturadoBean" type="biz.belcorp.ssicc.dao.scsicc.bean.DetallePedidoNoFacturadoBean"/>
	<typeAlias alias="ventasRechazadasBean"         type="biz.belcorp.ssicc.dao.scsicc.bean.VentasRechazadasBean"/>


	<resultMap id="ventasRechazadasBeanResult" class="ventasRechazadasBean">
		<result property="codigoVenta" column="COD_VENT" />
		<result property="unidadesSolicitadas" column="NUM_CANT" />
		<result property="indiceDocumento" column="NUM_INDI" />
		<result property="numeroPreimpreso" column="NUM_PREI" />

	</resultMap>

	<select id="getCodigoVentasRechazados" parameterClass="java.util.Map" resultMap="ventasRechazadasBeanResult">
		select cod_vent, val_unid_dem
		from int_solic_conso_detal a,
		sto_detal_docum_excep b
		where a.sec_nume_docu=b.sec_nume_docu
		and a.num_lote = b.num_lote
		and a.cod_clie=#codigoCliente#
		and a.cod_peri=#codigoPeriodo#
		and b.cod_vali='OCD-2'
	</select>

	<resultMap id="detallePedidoFacturadoBeanResult" class="detallePedidoFacturadoBean">
		<result property="codigoVenta" column="VAL_CODI_VENT" />
		<result property="descripcionProducto" column="DES_PROD" />
		<result property="formaVenta" column="VAL_FORM_VENT" />
		<result property="unidadesDemandaReal" column="NUM_UNID_DEMA_REAL" />
		<result property="unidadesAtendidas" column="NUM_UNID_ATEN" />
		<result property="precioCatalogoUnitario" column="VAL_PREC_CATA_UNIT_LOCA" />
		<result property="precioCatalogoTotal" column="VAL_PREC_CATA_TOTA_LOCA" />
		<result property="porcentajeDescuento" column="VAL_PORC_DESC" />
		<result property="importeDescuentoTotal" column="VAL_IMPO_DESC_TOTA_LOCA" />
		<result property="precioFacturacion" column="VAL_PREC_FACT_TOTA_LOCA" />
		<result property="observacion" column="VAL_OBSE" />

	</resultMap>

	<select id="getDetallePedidoFacturado" parameterClass="java.util.Map" resultMap="detallePedidoFacturadoBeanResult">
		SELECT VAL_CODI_VENT,
		DES_PROD,
		VAL_FORM_VENT,
		NUM_UNID_DEMA_REAL,
		NUM_UNID_ATEN,
		VAL_PREC_CATA_UNIT_LOCA,
		VAL_PREC_CATA_TOTA_LOCA,
		VAL_PORC_DESC,
		VAL_IMPO_DESC_TOTA_LOCA,
		VAL_PREC_FACT_TOTA_LOCA,
		VAL_OBSE
		FROM (
		SELECT PSC.OID_SOLI_CABE,
		PSC.COPA_OID_PARA_GENE,
		PSC.ICTP_OID_TIPO_PROG,
		PSP.OID_SOLI_POSI,
			       NVL(PSP.VAL_CODI_VENT, LPAD('0', 4 - LENGTH(PSP.VAL_CODI_VENT_FICT), '0') || PSP.VAL_CODI_VENT_FICT) AS VAL_CODI_VENT,
			       (SELECT VAL_I18N FROM GEN_I18N_SICC_PAIS WHERE ATTR_ENTI = 'MAE_PRODU' AND IDIO_OID_IDIO = 1 AND VAL_OID = PSP.PROD_OID_PROD) DES_PROD,
		PSP.NUM_UNID_DEMA_REAL,
		PSP.NUM_UNID_ATEN,
		PSP.VAL_PREC_CATA_UNIT_LOCA,
		PSP.VAL_PREC_CATA_UNIT_LOCA * PSP.NUM_UNID_ATEN VAL_PREC_CATA_TOTA_LOCA,
		PSP.VAL_PREC_CONT_UNIT_LOCA,
		PSP.VAL_PREC_CONT_UNIT_LOCA * PSP.NUM_UNID_ATEN VAL_PREC_CONT_TOTA_LOCA,
		PSP.VAL_PREC_FACT_TOTA_LOCA,
		PSP.VAL_IMPO_DESC_TOTA_LOCA,
		NVL(PSP.VAL_PORC_DESC, 0) VAL_PORC_DESC,
		PSP.VAL_IMPO_IMPU_TOTA_LOCA,
		PSP.FOPA_OID_FORM_PAGO,
		PTO.VAL_FORM_VENT,
		CASE
		WHEN NVL(PSP.NUM_UNID_DEMA_REAL, 0) - NVL(PSP.NUM_UNID_ATEN, 0) > 0
		THEN 'Agotado'
		WHEN NVL(PSP.NUM_UNID_DEMA_REAL, 0) = 0 AND NVL(PSP.NUM_UNID_ATEN, 0) = 0
			                AND PSP.IND_LIMI_VENT = 1 AND (PTO.COD_TIPO_OFER = '21' OR PTO.COD_TIPO_OFER = '23')
		THEN 'Falt.Liq.'
		WHEN NVL(PSP.NUM_UNID_DEMA_REAL, 0) = 0 AND NVL(PSP.NUM_UNID_ATEN, 0) = 0
		AND PSP.IND_LIMI_VENT = 1
		THEN 'Falt.Anunc.'
		WHEN NVL(PSP.NUM_UNID_DEMA_REAL, 0) = 0 AND NVL(PSP.NUM_UNID_ATEN, 0) = 0
		AND PSP.ESPO_OID_ESTA_POSI = 2 AND PSP.STPO_OID_SUBT_POSI = 21
		THEN 'Anul.Mto Max'
		WHEN NVL(PSP.NUM_UNID_DEMA_REAL, 0) = 0 AND NVL(PSP.NUM_UNID_ATEN, 0) = 0
		AND PSP.ESPO_OID_ESTA_POSI = 2
		THEN 'Vta Exclusiva'
		WHEN NVL(PSP.NUM_UNID_DEMA_REAL, 0) = 0 AND NVL(PSP.NUM_UNID_ATEN, 0) = 0
		THEN 'No Aplica'
			           WHEN (PSC.COPA_OID_PARA_GENE IS NOT NULL OR PSC.ICTP_OID_TIPO_PROG IS NOT NULL)
		THEN 'Premio'
		WHEN PCS.COD_CLAS_SOLI = 'R1'
		THEN 'Aten. REC'
		WHEN PTP.COD_TIPO_POSI IS NOT NULL AND PTP.COD_TIPO_POSI = 'RE'
		THEN 'Recuperacion'
		WHEN PTP.COD_TIPO_POSI IS NOT NULL AND PTP.COD_TIPO_POSI = 'DA'
		THEN 'Alternativo'
		WHEN EXISTS (
		SELECT NULL
		FROM PRE_MATRI_FACTU PMF,
		PRE_MATRI_REEMP PMR
		WHERE PMF.OID_MATR_FACT = PMR.MAFA_OID_COD_REEM
		AND PMF.OFDE_OID_DETA_OFER = PSP.OFDE_OID_DETA_OFER
		)
		THEN 'Reemplazo'
		WHEN PSP.VAL_PREC_CATA_UNIT_LOCA = 0
		THEN 'Gratis'
		ELSE ''
		END AS VAL_OBSE
		FROM PED_SOLIC_CABEC PSC,
		PED_SOLIC_POSIC PSP,
		PRE_OFERT_DETAL POD,
		PRE_TIPO_OFERT PTO,
		PED_TIPO_SOLIC_PAIS TSP,
		PED_TIPO_SOLIC TS,
		PED_TIPO_POSIC PTP,
		PED_CLASE_SOLIC PCS
		WHERE PSC.OID_SOLI_CABE = PSP.SOCA_OID_SOLI_CABE
		AND PSC.TSPA_OID_TIPO_SOLI_PAIS = TSP.OID_TIPO_SOLI_PAIS
		AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
		AND TS.CLSO_OID_CLAS_SOLI = PCS.OID_CLAS_SOLI
		AND PSP.TPOS_OID_TIPO_POSI = PTP.OID_TIPO_POSI (+)
		AND PSP.OFDE_OID_DETA_OFER = POD.OID_DETA_OFER (+)
		AND POD.TOFE_OID_TIPO_OFER = PTO.OID_TIPO_OFER (+)
		AND PSP.ESPO_OID_ESTA_POSI != 2
		AND PSC.OID_SOLI_CABE = #oidPedido#
		)
		ORDER BY VAL_CODI_VENT
	</select>


	<resultMap id="faltantesAnunciadosBeanResult" class="faltantesAnunciadosBean">
		<result property="codigoVenta" column="COD_VENT" />
		<result property="descripcionProducto" column="VAL_I18N" />
		<result property="limiteControlVenta" column="VAL_LIMI_CTRL_VENT" />
	</resultMap>

	<select id="getFaltantesAnunciados" parameterClass="java.util.Map" resultMap="faltantesAnunciadosBeanResult">
		SELECT DISTINCT
		h.cod_vent,
		gen.val_i18n,
		n.val_limi_ctrl_vent
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q,
		pre_ofert_detal m,
		pre_ofert mm,
		pre_matri_factu_cabec mmm,
		cra_perio cp,
		seg_perio_corpo spc,
		int_solic_conso_detal h,
		gen_i18n_sicc_pais gen,
		int_solic_conso_cabec i,
		zon_zona j
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND h.cod_clie = i.cod_clie
		AND i.zzon_oid_zona = j.oid_zona
		AND p.oid_clie_tipo_subt = q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)
		AND i.zzon_oid_zona =
		DECODE (n.zzon_oid_zona,
		NULL, i.zzon_oid_zona,
		n.zzon_oid_zona
		)
		AND j.zorg_oid_regi =
		DECODE (n.zorg_oid_regi,
		NULL, j.zorg_oid_regi,
		n.zorg_oid_regi
		)
		AND m.ofer_oid_ofer = mm.oid_ofer
		AND mm.mfca_oid_cabe = mmm.oid_cabe
		AND mmm.perd_oid_peri = cp.oid_peri
		AND cp.peri_oid_peri = spc.oid_peri
		AND spc.cod_peri = h.cod_peri
		AND h.cod_vent = m.val_codi_vent
		AND n.val_limi_ctrl_vent IS NOT NULL
		AND m.prod_oid_prod = gen.val_oid
		AND gen.attr_enti = 'MAE_PRODU'
		AND h.cod_peri = #codigoPeriodo#
		AND h.cod_clie = #codigoCliente#
	</select>

	<parameterMap id="executeGenerarReporteRUVSunatCSVparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeGenerarReporteRUVSunatCSV" parameterMap="executeGenerarReporteRUVSunatCSVparam" >
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_SUNAT_CSV(?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="executeGenerarReporteRUVSunatExcelparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeGenerarReporteRUVSunatExcel" parameterMap="executeGenerarReporteRUVSunatExcelparam" >
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_SUNAT_EXCEL(?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="executeGenerarReporteRUVSunatTXTparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeGenerarReporteRUVSunatTXT" parameterMap="executeGenerarReporteRUVSunatTXTparam" >
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_SUNAT_TXT(?, ?, ?, ?, ?)}
	</procedure>

	<resultMap id="getTipoBloqueosResult" class="java.util.HashMap">
		<result property="codigo" column="val_oid" />
		<result property="descripcion" column="val_i18n" />
	</resultMap>

	<select id="getTipoBloqueos" resultMap="getTipoBloqueosResult">
		Select distinct val_oid,
		val_i18n
		from mae_tipo_bloqu a,
		gen_i18n_sicc_comun b,
		int_solic_conso_cabec c
		where a.oid_tipo_bloq = c.ind_bloq_admi
		and a.oid_tipo_bloq = b.val_oid
		and b.attr_enti = 'MAE_TIPO_BLOQU'
	</select>

	<parameterMap id="executeGenerarReporteRUVSunatErrorCSVparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeGenerarReporteRUVSunatErrorCSV" parameterMap="executeGenerarReporteRUVSunatErrorCSVparam" >
		{call RUV_PKG_PROCE.RUV_PR_REPOR_SUNAT_ERROR_CSV(?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="executeGenerarReporteRUVSunatErrorTXTparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeGenerarReporteRUVSunatErrorTXT" parameterMap="executeGenerarReporteRUVSunatErrorTXTparam" >
		{call RUV_PKG_PROCE.RUV_PR_REPOR_SUNAT_ERROR_TXT(?, ?, ?, ?, ?)}
	</procedure>

	<resultMap id="getReporteOCRPedidosGP1SinErrorResult" class="java.util.HashMap">
		<result property="codigoZona" column="cod_zona" />
		<result property="cantidad" column="cantidad" />
	</resultMap>
	<select id="getReporteOCRPedidosGP1SinError" parameterClass="java.util.Map" resultMap="getReporteOCRPedidosGP1SinErrorResult" >
		SELECT Z.COD_ZONA,
		COUNT(1) AS CANTIDAD
		FROM PED_SOLIC_CABEC P,
		ZON_ZONA Z
		WHERE P.ZZON_OID_ZONA = Z.OID_ZONA
		 <![CDATA[
		   AND P.FEC_PROG_FACT >= TO_DATE(#fechaInicial#,'DD/MM/YYYY') AND P.FEC_PROG_FACT <= TO_DATE(#fechaFinal#,'DD/MM/YYYY')
		 ]]>
		AND P.GRPR_OID_GRUP_PROC = 1
		AND P.ESSO_OID_ESTA_SOLI = 1
		AND P.TSPA_OID_TIPO_SOLI_PAIS = #tipoSolicitud#
		   <![CDATA[
		   AND P.PERD_OID_PERI IN
		       (SELECT OID_PERI
		          FROM CRA_PERIO C
		         WHERE (C.FEC_INIC >= TO_DATE(#fechaInicial#,'DD/MM/YYYY') AND C.FEC_INIC <= TO_DATE(#fechaFinal#,'DD/MM/YYYY') AND
                   C.FEC_FINA >= TO_DATE(#fechaInicial#,'DD/MM/YYYY') AND C.FEC_FINA <= TO_DATE(#fechaFinal#,'DD/MM/YYYY') )
                OR (TO_DATE(#fechaInicial#,'DD/MM/YYYY') >= C.FEC_INIC AND  TO_DATE(#fechaInicial#,'DD/MM/YYYY') <= C.FEC_FINA)
                OR (TO_DATE(#fechaFinal#,'DD/MM/YYYY') >= C.FEC_INIC AND TO_DATE(#fechaFinal#,'DD/MM/YYYY') <= C.FEC_FINA))
                 ]]>
		GROUP BY Z.COD_ZONA
	</select>
    <resultMap id="getReportePRIGenerarSolicitudesPrivilegeResult"  class="java.util.HashMap"  >                                                                       
		<result property="codigoSAP" column="oid_sap" />
		<result property="saldo" column="suma" />
		<result property="unidadCompra" column="saldo" />
		<result property="cantidad" column="xx" />
	</resultMap>
	<select id="getReportePRIGenerarSolicitudesPrivilege" parameterClass="java.util.Map" resultMap="getReportePRIGenerarSolicitudesPrivilegeResult" >
	<![CDATA[
	
		select    /*+ PUSH_SUBQ */ 
		          oid_sap,
		          suma, 
		          saldo, 
		          xx 
		from      (
		              select    oid_sap, 
		                        saldo,
		                        nvl((select val_sald from bel_stock where esme_oid_esta_merc=2001 and prod_oid_prod=oid_sap),0) SUMA,
		                        nvl(
		                          (
		                            select    val_cant 
		                            from      bel_movim_almac_detal a 
		                            where     a.MVAL_OID_MOVI_ALMA in
		                                      (
		                                         select    max(cab.OID_MOVI_ALMA) numeroMovimiento
		                                         from      bel_movim_almac_cabec cab
		                                         where     cab.almc_oid_alma_2 = 2001 
		                                           and     cab.val_obse like '%SAM6%'
		                                      ) 
		                              and     a.TMAL_OID_TIPO_MOVI_ALMA=2005
		                              and     PROD_OID_PROD=oid_sap 
		                          ),0
		                        ) xx
		              from 
		                        (
		                            select    c.oid_prod oid_sap, 
		                                      sum(b.NUM_UNID_COMPR) SALDO 
		                            from      ped_solic_cabec a, 
		                                      ped_solic_posic b, 
		                                      mae_produ c, 
		                                      ped_tipo_solic_pais d, 
		                                      ped_tipo_solic e
		                            where     a.OID_SOLI_CABE=b.SOCA_OID_SOLI_CABE
		                            and       a.PERD_OID_PERI = to_number(#oidPeriodo#) 
		                            and       trunc(a.fec_repo_falt)= to_date(#fechaProceso#,'dd/mm/yyyy')
		                            and       b.PROD_OID_PROD=c.OID_PROD 
		                            and       (
		                                        (a.GRPR_OID_GRUP_PROC in (3) and a.ind_oc=1) or 
		                                        (a.GRPR_OID_GRUP_PROC in (4) and a.ind_oc=0)
		                                      )
		                            and       a.TSPA_OID_TIPO_SOLI_PAIS=d.OID_TIPO_SOLI_PAIS and d.TSOL_OID_TIPO_SOLI=e.OID_TIPO_SOLI
		                            and       nvl(e.IND_SOLI_NEGA,0)=0
		                            group by  c.OiD_prod
		                        )
		          ) 
		where     (suma+saldo) <> xx 
		   or     suma < 0 
		   or     saldo < 0
		   
   	 ]]>
	</select>

	<parameterMap id="executeGenerarReporteCCCDetalleMovimientosCtaCteparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSociedad" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoRegion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>						
	</parameterMap>

	<procedure id="executeGenerarReporteCCCDetalleMovimientosCtaCte" parameterMap="executeGenerarReporteCCCDetalleMovimientosCtaCteparam" >
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_CORRI_CONSU(?, ?, ?)}
	</procedure>

	<select id="getObtenerSecuenciaTempMapaAnaquel" parameterClass="java.util.Map" resultClass="string">
		SELECT ape_tmma_seq.nextval FROM DUAL
	</select>

	<parameterMap id="paramExecuteGenerarReporteMapaAnaqBD" class="java.util.Map">
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"          	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"          	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"        	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSecuencia"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMapaCD"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoLineaArmado"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFacturacion"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteMapaAnaqBD" parameterMap="paramExecuteGenerarReporteMapaAnaqBD">
		{call APE_PKG_PROCE.APE_PR_GENER_REPOR_MAPA_ANQBD(?,?,?,?,?,?,?,?) }
	</procedure>

	<delete id="deleteTablaTemporalReporteMapaAnaquel">
		TRUNCATE TABLE APE_TMP_REP_MPANQ
	</delete>

	<select id="getObtenerSecuenciaTempBalanceoLinea" parameterClass="java.util.Map" resultClass="string">
		SELECT ape_tmbl_seq.nextval FROM DUAL
	</select>

	<parameterMap id="paramExecuteGenerarReporteBalanceoLinea" class="java.util.Map">
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"          	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"          	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"        	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSecuencia"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCentro"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoLineaArmado"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteBalanceoLinea" parameterMap="paramExecuteGenerarReporteBalanceoLinea">
		{call APE_PKG_PROCE.APE_PR_GENER_REPOR_BALAN_LINEA(?,?,?,?,?,?,?) }
	</procedure>

	<delete id="deleteTablaTemporalReporteBalanceoLinea">
		TRUNCATE TABLE APE_TMP_REP_BLPRD
	</delete>

	<select id="getCampanhaActivaByZona" parameterClass="java.util.Map" resultClass="string">	
		SELECT NVL ((SELECT min(cod_peri)
		FROM cra_perio a, seg_perio_corpo b
              WHERE a.fec_inic <![CDATA[ <=  ]]> SYSDATE
		AND a.fec_fina >= SYSDATE
		AND a.peri_oid_peri = b.oid_peri
		AND a.oid_peri NOT IN (
		SELECT perd_oid_peri
		FROM fac_contr_cierr
		WHERE zzon_oid_zona =
		(SELECT oid_zona
		FROM zon_zona
		WHERE cod_zona = #codigoZona#))),
		(SELECT cod_peri
		FROM bas_ctrl_fact
		WHERE ind_camp_act = 1 AND sta_camp = 0)
		) cod_peri
		FROM DUAL

	</select>

	<typeAlias alias="retencionPedidosBean"       type="biz.belcorp.ssicc.dao.scsicc.bean.RetencionPedidosBean"/>
	<typeAlias alias="pedidosDigitadosBean"       type="biz.belcorp.ssicc.dao.scsicc.bean.PedidosDigitadosBean"/>

	<parameterMap id="paramExecuteRetencionPedidos" class="java.util.Map">
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"        	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoRegion"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroRetencion"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeRetencionPedidos" parameterMap="paramExecuteRetencionPedidos">
		{call MYE_PKG_REPOR.MYE_PR_GENER_REPOR_RETEN_PEDID(?,?,?,?,?) }
	</procedure>

	<resultMap id="retencionPedidosBeanResult" class="retencionPedidosBean">
		<result property="codigoConsultora" column="COD_CLIE" />
		<result property="numeroRetencion" column="VAL_NUME_RETE" />
		<result property="codigoRegion" column="COD_REGI" />
		<result property="codigoZona" column="COD_ZONA" />
		<result property="ultCampaFactu" column="ULT_CAMP_FACT" />
	</resultMap>

	<select id="getRetencionPedidos" parameterClass="java.util.Map" resultMap="retencionPedidosBeanResult">      
		SELECT COD_CLIE,
		VAL_NUME_RETE,
		COD_REGI,
		COD_ZONA,
		ULT_CAMP_FACT
		FROM GTT_MYE_REPOR_PEDID
	</select>


	<parameterMap id="paramExecutePedidosDigitados" class="java.util.Map">
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"        	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoRegion"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executePedidosDigitados" parameterMap="paramExecutePedidosDigitados">
		{call MYE_PKG_REPOR.MYE_PR_GENER_REPOR_PEDID_DIGIT(?,?,?,?) }
	</procedure>

	<resultMap id="pedidosDigitadosBeanResult" class="pedidosDigitadosBean">
		<result property="codigoConsultora" column="COD_CLIE" />
		<result property="codigoRegion" column="COD_REGI" />
		<result property="codigoZona" column="COD_ZONA" />
		<result property="montoAhorroEsika" column="VAL_MONT_AHOR" />
		<result property="montoHastaAgotar" column="VAL_MONT_AGOT" />
		<result property="montoCatalogos" column="VAL_MONT_CATA" />
		<result property="montoTotal" column="VAL_MONT_TOTA" />
		<result property="estatusAnteriorCliente" column="VAL_ESTA_ANTE" />
		<result property="segundoPedido" column="IND_SEGU_PEDI" />
		<result property="tercerPedido" column="IND_TERC_PEDI" />
		<result property="cuartoPedido" column="IND_CUAR_PEDI" />
		<result property="posibleEgreso" column="IND_POSI_EGRE" />
		<result property="importeSaldoActual" column="VAL_IMPO_SALD_ACTU" />
		<result property="importeSaldoCom" column="VAL_IMPO_SALD_COMI" />
		<result property="medioIngreso" column="MED_INGR" />
		<result property="fechaProceso" column="FEC_PROC" />
		<result property="fechaFacturacion" column="FEC_FACT" />

	</resultMap>

	<select id="getPedidosDigitados" parameterClass="java.util.Map" resultMap="pedidosDigitadosBeanResult">      
		SELECT COD_CLIE,
		COD_REGI,
		COD_ZONA,
		VAL_MONT_AHOR,
		VAL_MONT_AGOT,
		VAL_MONT_CATA,
		VAL_MONT_TOTA,
		VAL_ESTA_ANTE,
		IND_SEGU_PEDI,
		IND_TERC_PEDI,
		IND_CUAR_PEDI,
		IND_POSI_EGRE,
		VAL_IMPO_SALD_ACTU,
		VAL_IMPO_SALD_COMI,
		MED_INGR,
		TO_CHAR(FEC_PROC,'dd/MM/yyyy') FEC_PROC,
		TO_CHAR(FEC_FACT,'dd/MM/yyyy') FEC_FACT
		FROM GTT_MYE_REPOR_PEDID
	</select>

	<select id="getZonasGrupo" parameterClass="string" resultClass="string">
		SELECT B.COD_ZONA
		FROM CRA_DETAL_GRUPO_ZONA A,
		ZON_ZONA B
		WHERE A.CGZO_OID_CABE_GRUP_ZONA =#value#
		AND A.ZZON_OID_ZONA=B.OID_ZONA
	</select>

   <select id="getActividad"  parameterClass="java.util.Map" resultMap="baseResult">
		SELECT CAC.OID_ACTI CODIGO,
		CAC.COD_ACTI ||' - '|| CAC.NOM_ACTI DESCRIPCION
		FROM
		CRA_ACTIV CAC
		WHERE
		CAC.PAIS_OID_PAIS =#oidPais#
		AND CAC.MARC_OID_MARC=#oidMarca#
		AND CAC.CANA_OID_CANA=#oidCanal#
		AND CAC.IND_ACTI = '1'
		order by 1
	</select>

   <select id="getGrupoFacturacion"  parameterClass="java.util.Map" resultMap="baseResult">
		SELECT CAC.OID_CABE_GRUP_ZONA CODIGO,
		CAC.COD_GRUP ||' - '|| CAC.NOM_GRUP DESCRIPCION
		FROM
		CRA_CABEC_GRUPO_ZONA CAC
		WHERE
		CAC.PAIS_OID_PAIS =#oidPais#
		AND CAC.MARC_OID_MARC=#oidMarca#
		AND CAC.CANA_OID_CANA=#oidCanal#
		AND CAC.IND_ESTA=1
		order by 1
	</select>

	<procedure id="executeActualizarTipoPedido">
		{call REC_PKG_REPOR.REC_PR_UPDAT_OPERA_UNIDA_ADMIN }
	</procedure>


	<!-- Se Obtiene el correo del gerente de una región -->
    <select id="getCorreoGerenteRegionByCodigoZona" parameterClass="java.util.Map" resultClass="string">  
		SELECT B.VAL_TEXT_COMU
		FROM ZON_REGIO A, MAE_CLIEN_COMUN B
		WHERE A.CLIE_OID_CLIE = B.CLIE_OID_CLIE
		AND B.TICM_OID_TIPO_COMU = 3
		AND A.COD_REGI IN(
		SELECT X.COD_REGI
		FROM ZON_REGIO x , ZON_ZONA y
		WHERE x.OID_REGI= y.ZORG_OID_REGI
		AND A.COD_REGI = X.COD_REGI
		AND COD_ZONA = #codigoZona# )
	</select>





	<resultMap id="consultorasActivasSinPedidoActResult" class="consultorasActivasSinPedidoBean">
		<result property="codigoRegion" column="COD_REGI" />
		<result property="codigoZona" column="COD_ZONA" />
		<result property="codigoSeccion" column="COD_SECC" />
		<result property="codigoTerritorio" column="COD_TERR" />
		<result property="codigoCliente" column="COD_CLIE" />
		<result property="nombreCliente" column="NOM_CLIE" />
		<result property="estado" column="ESTADO" />
		<result property="telefono1" column="TELF_1" />
		<result property="mail" column="MAIL" />
		<result property="telefono2" column="TELF_2" />
		<result property="direccion" column="DIRECC" />
		<result property="saldo" column="SALDO" />
	</resultMap>

	<select id="getConsultorasActivasSinPedidoAct" parameterClass="java.util.Map" resultMap="consultorasActivasSinPedidoActResult">

		SELECT g.cod_regi COD_REGI,
		f.cod_zona COD_ZONA,
		e.cod_secc COD_SECC,
		d.cod_terr COD_TERR,
		a.cod_clie COD_CLIE,
		a.val_nom1
		|| ' '
		|| a.val_nom2
		|| ' '
		|| a.val_ape1
		|| ' '
		|| a.val_ape2 NOM_CLIE,
		i.val_i18n ESTADO,
		(SELECT val_text_comu
		FROM mae_clien_comun
		WHERE clie_oid_clie = a.oid_clie
		AND ticm_oid_tipo_comu = 1) TELF_1,
		(SELECT val_text_comu
		FROM mae_clien_comun
		WHERE clie_oid_clie = a.oid_clie AND ticm_oid_tipo_comu = 3) MAIL,
		(SELECT val_text_comu
		FROM mae_clien_comun
		WHERE clie_oid_clie = a.oid_clie
		AND ticm_oid_tipo_comu = 6) TELF_2,
		(SELECT val_nomb_via || ' ' || num_ppal || ' ' || val_obse
		FROM mae_clien_direc
		WHERE clie_oid_clie = a.oid_clie
		AND ind_elim = 0
		AND ind_dire_ppal = 1) DIRECC,
		NVL ((SELECT SUM (imp_pend)
		FROM ccc_movim_cuent_corri
		                WHERE clie_oid_clie = a.oid_clie AND <![CDATA[  imp_pend <> 0  ]]>	), 0)
		- NVL ((SELECT SUM (imp_sald_pend)
		FROM ccc_movim_banca
		                WHERE clie_oid_clie = a.oid_clie AND <![CDATA[  imp_sald_pend <> 0  ]]>	), 0)  SALDO		 
		FROM mae_clien a,
		mae_clien_unida_admin b,
		zon_terri_admin c,
		zon_terri d,
		zon_secci e,
		zon_zona f,
		zon_regio g,
		mae_clien_datos_adici h,
		gen_i18n_sicc_comun i,
		mae_estat_clien k
		WHERE a.oid_clie = b.clie_oid_clie
		AND b.ztad_oid_terr_admi = c.oid_terr_admi
		AND c.terr_oid_terr = d.oid_terr
		AND c.zscc_oid_secc = e.oid_secc
		AND e.zzon_oid_zona = f.oid_zona
		AND f.zorg_oid_regi = g.oid_regi
		AND b.ind_acti = 1
		AND f.cod_zona = #codigoZona#
		AND a.oid_clie = h.clie_oid_clie
		AND h.ind_acti = 1
		AND k.oid_esta_clie = h.esta_oid_esta_clie
		       <![CDATA[   
		       AND k.cod_esta_clie <> '07'
		       ]]>
		AND h.esta_oid_esta_clie = i.val_oid
		AND i.attr_enti = 'MAE_ESTAT_CLIEN'
		AND a.cod_clie NOT IN (
		SELECT DISTINCT zz.cod_clie
		FROM int_solic_conso_cabec zz
		WHERE zz.ind_erro_rech = 0
		AND zz.cod_zona = #codigoZona#
		AND zz.cod_clie = a.cod_clie
		AND zz.cod_peri =
		#codigoPeriodo#)

	</select>

  <select id="getInformeAvancePedidoAct" parameterClass="java.util.Map" resultClass="string">
		SELECT xx.cod_clie || ' ;;; ' ||
		xx.cod_peri || ' ;;; ' ||
		xx.num_lote || ' ;;; ' ||
		to_char(xx.fec_soli,'dd/MM/yyyy') || ' ;;; ' ||
		xx.nom_clie || ' ;;; ' ||
		xx.cod_regi || ' ;;; ' ||
		xx.cod_zona || ' ;;; ' ||
		xx.cod_secc || ' ;;; ' ||
		xx.cod_terr || ' ;;; ' ||
		xx.rechazo_otros || ' ;;; ' ||
		CASE
		WHEN xx.facturado = 'SI'
		THEN 'FACTURADO'
		WHEN xx.rechazo_otros = 1
		OR xx.error_monto_minimo = 'SI'
		OR xx.error_monto_maximo = 'SI'
		OR xx.ind_erro_deud = 2
		OR xx.rechazo_ocr  <![CDATA[ <> ]]>'00'
		OR xx.obs_prub = 'CS'
		THEN 'RECHAZADO'
		WHEN xx.ind_erro_deud = 2
                            OR yy.monto_pedido  <![CDATA[   <   ]]>(SELECT MAX (val_niv1)
		FROM ped_monto_minim)
		OR yy.monto_pedido > (SELECT MAX (val_mont_maxi_perm)
		FROM car_param_carte
		where ind_mont_maxi=1
		and niri_oid_nive_ries=(select niri_oid_nive_ries
		from mae_clien_datos_adici, mae_clien
		where clie_oid_clie=oid_clie and
		cod_clie=xx.cod_clie)
		)
		THEN 'OBSERVADO'
		ELSE 'ENVIADO'
		END || ' ;;; ' ||
		ind_rece_dd || ' ;;; ' ||
		ind_rece_web || ' ;;; ' ||
		ind_rece_ocr || ' ;;; ' ||
		ind_erro_deud || ' ;;; ' ||
		val_sald_deud || ' ;;; ' ||
		ind_admi_cart || ' ;;; ' ||
		obs_prub || ' ;;; ' ||
		tip_orde || ' ;;; ' ||
		codigos_errados || ' ;;; ' ||
		yy.monto_pedido || ' ;;; ' ||
		facturado || ' ;;; ' ||
		error_monto_minimo || ' ;;; ' ||
		error_monto_maximo || ' ;;; ' ||
		NVL(monto_pedido_bloqueado,0) || ' ;;; ' ||
		(SELECT MAX (val_niv1)
		FROM ped_monto_minim) || ' ;;; ' ||
		(SELECT MAX (val_mont_maxi_perm)
		FROM car_param_carte
		where ind_mont_maxi=1
		and niri_oid_nive_ries=(select niri_oid_nive_ries
		from mae_clien_datos_adici, mae_clien
		where clie_oid_clie=oid_clie and
		cod_clie=xx.cod_clie)) || ' ;;; ' ||
		NVL((SELECT num_pedi
		FROM int_fuent_venta_previ_sap
		WHERE perd_oid_peri = (select oid_peri
		from cra_perio
		where val_nomb_peri like '%'||#codigoPeriodo#||'%')
		AND zzon_oid_zona = xx.zzon_oid_zona),0) || ' ;;; ' ||
		NVL((SELECT val_vent_neta_esta
		FROM int_fuent_venta_previ_sap
		WHERE perd_oid_peri = (select oid_peri
		from cra_perio
		where val_nomb_peri like '%'||#codigoPeriodo#||'%')
		AND zzon_oid_zona = xx.zzon_oid_zona),0) || ' ;;; ' ||
		yy.numero_fa || ' ;;; ' ||
		yy.monto_pedido_sin_fa || ' ;;; ' ||
		xx.rechazo_ocr || ' ;;; ' ||
		xx.zzon_oid_zona || ' ;;; ' ||
		NVL(xx.monto_facturado,0) || ' ;;; ' ||
		TO_CHAR(xx.fec_fact,'dd/MM/yyyy') || ' ;;; ' ||
		xx.oid_soli_cabe || ' ;;; ' ||
		ind_rece_digi
		FROM (SELECT a.cod_clie, a.cod_peri, a.num_lote,
		DECODE (a.cod_zona,
		NULL, (SELECT oid_zona
		FROM zon_zona
		WHERE cod_zona = a.cod_zona_arri),
		(SELECT oid_zona
		FROM zon_zona
		WHERE cod_zona = a.cod_zona)
		) zzon_oid_zona,
		a.fec_soli,
		NVL (a.nom_clie,
		(SELECT val_nom1
		|| ' '
		|| val_nom2
		|| ' '
		|| val_ape1
		|| ' '
		|| val_ape2
		FROM mae_clien
		WHERE cod_clie = a.cod_clie)
		) nom_clie,
		a.cod_regi,
		DECODE (a.cod_zona, NULL, a.cod_zona_arri, a.cod_zona) cod_zona,
		d.cod_secc, e.cod_terr, a.ind_rece_dd, a.ind_rece_web, a.ind_rece_ocr,
		a.ind_rece_digi, a.ind_erro_deud, a.val_sald_deud, a.ind_admi_cart,
			       decode((select count(1) from ped_solic_cabec where oid_soli_cabe=a.soca_oid_soli_cabe_refe and esso_oid_esta_soli=7),0,a.obs_prub,'CS') obs_prub, 
		a.tip_orde,
		DECODE (a.ind_proc_gp2, 1, 'SI', 'NO') facturado,
		DECODE (a.ind_erro_mtmi, 1, 'SI', 'NO') error_monto_minimo,
		DECODE (a.ind_erro_mtma, 1, 'SI', 'NO') error_monto_maximo,
		a.val_mont_pedi monto_pedido_bloqueado,
		(SELECT COUNT (1)
		FROM ocr_cvent_errad
		WHERE cod_clie = a.cod_clie
		AND cod_peri = a.cod_peri) codigos_errados,
		DECODE (ind_erro_rech, 1, cod_moti_rech, '00') rechazo_ocr,
		(SELECT conso.val_tota_paga_loca monto_pedido
		FROM ped_solic_cabec ped,
		ped_solic_cabec conso
		WHERE ped.soca_oid_soli_cabe = conso.oid_soli_cabe
		AND ped.oid_soli_cabe = a.soca_oid_soli_cabe_refe) monto_facturado,
		(SELECT fec_fact
		FROM ped_solic_cabec
		WHERE oid_soli_cabe = a.soca_oid_soli_cabe_refe) fec_fact,
		a.soca_oid_soli_cabe_refe oid_soli_cabe,
		CASE
		WHEN ( TO_NUMBER (a.ind_erro_mtmi)
		+ TO_NUMBER (a.ind_erro_mtma)
		+ TO_NUMBER (DECODE (ind_erro_rech, 1, cod_moti_rech, '00'))
		+ DECODE (TO_NUMBER (ind_erro_deud), 2, 1, 0)
			                + (select count(1) from ped_solic_cabec where oid_soli_cabe=a.soca_oid_soli_cabe_refe and esso_oid_esta_soli=7)
		) > 0
		THEN 0
		ELSE DECODE (NVL ((SELECT COUNT (1)
		FROM sto_detal_docum_excep
		WHERE sec_nume_docu = a.sec_nume_docu and cod_tipo_docu='OCC'
		and cod_vali not in ('OCC-14','OCC-31')
		and ind_apro=0), 0),
		0, 0,
		1
		)
		END rechazo_otros
		FROM int_solic_conso_cabec a,
		zon_terri_admin b,
		zon_zona c,
		zon_secci d,
		zon_terri e
		WHERE DECODE (a.cod_zona, NULL, a.cod_zona_arri, a.cod_zona) = #codigoZona#
		AND cod_peri = #codigoPeriodo#
		AND a.ztad_oid_terr_admi = b.oid_terr_admi(+)
		AND b.zscc_oid_secc = d.oid_secc(+)
		AND d.zzon_oid_zona = c.oid_zona(+)
		AND b.terr_oid_terr = e.oid_terr(+)
		AND a.ind_erro_remp = 0) xx,
		(SELECT h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri,
                 SUM (h.val_unid_dem * case when l.coes_oid_estr in (2002,2006) then (select sum(imp_prec_cata) 
                                      from pre_ofert_detal where ofer_oid_ofer=l.oid_ofer) else m.imp_prec_cata end) monto_pedido,
		SUM
		(DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)
		AND h.zzon_oid_zona =
		DECODE (n.zzon_oid_zona,
		NULL, h.zzon_oid_zona,
		n.zzon_oid_zona
		)
		AND h.zorg_oid_regi =
		DECODE (n.zorg_oid_regi,
		NULL, h.zorg_oid_regi,
		n.zorg_oid_regi
		)
		AND n.val_limi_ctrl_vent IS NOT NULL
		AND n.perd_oid_peri = j.oid_peri),
		NULL, 0,
		1
		)
		) numero_fa,
		SUM
		( DECODE ((SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)
		AND h.zzon_oid_zona =
		DECODE (n.zzon_oid_zona,
		NULL, h.zzon_oid_zona,
		n.zzon_oid_zona
		)
		AND h.zorg_oid_regi =
		DECODE (n.zorg_oid_regi,
		NULL, h.zorg_oid_regi,
		n.zorg_oid_regi
		)),
		NULL, h.val_unid_dem,
		(SELECT MAX (n.val_limi_ctrl_vent)
		FROM ped_gesti_stock n,
		mae_clien o,
		mae_clien_tipo_subti p,
		mae_clien_clasi q
		WHERE n.ofde_oid_deta_ofer = m.oid_deta_ofer
		AND o.cod_clie = h.cod_clie
		AND o.oid_clie = p.clie_oid_clie
		AND p.oid_clie_tipo_subt =
		q.ctsu_oid_clie_tipo_subt
		AND p.ticl_oid_tipo_clie =
		DECODE (n.ticl_oid_tipo_clie,
		NULL, p.ticl_oid_tipo_clie,
		n.ticl_oid_tipo_clie
		)
		AND p.sbti_oid_subt_clie =
		DECODE (n.sbti_oid_subt_clie,
		NULL, p.sbti_oid_subt_clie,
		n.sbti_oid_subt_clie
		)
		AND q.tccl_oid_tipo_clasi =
		DECODE (n.tccl_oid_tipo_clas,
		NULL, q.tccl_oid_tipo_clasi,
		n.tccl_oid_tipo_clas
		)
		AND q.clas_oid_clas =
		DECODE (n.clas_oid_clas,
		NULL, q.clas_oid_clas,
		n.clas_oid_clas
		)
		AND n.val_limi_ctrl_vent IS NOT NULL
		AND n.perd_oid_peri = j.oid_peri
		AND h.zzon_oid_zona =
		DECODE (n.zzon_oid_zona,
		NULL, h.zzon_oid_zona,
		n.zzon_oid_zona
		)
		AND h.zorg_oid_regi =
		DECODE (n.zorg_oid_regi,
		NULL, h.zorg_oid_regi,
		n.zorg_oid_regi
		))
		)
					* case when l.coes_oid_estr in (2002,2006) then (select sum(imp_prec_cata) 
		from pre_ofert_detal
		where ofer_oid_ofer=l.oid_ofer) else m.imp_prec_cata end
		) monto_pedido_sin_fa
		FROM (SELECT h.cod_vent, h.cod_peri, h.num_lote, h.cod_clie,
		h.val_unid_dem, zz.zzon_oid_zona, xx.zorg_oid_regi
		FROM int_solic_conso_detal h,
		int_solic_conso_cabec zz,
		zon_zona xx
		WHERE h.cod_clie = zz.cod_clie
		AND zz.zzon_oid_zona = xx.oid_zona
		AND zz.cod_zona = #codigoZona#) h,
		pre_matri_factu_cabec i,
		cra_perio j,
		seg_perio_corpo k,
		pre_ofert l,
		pre_ofert_detal m
		WHERE h.cod_peri = k.cod_peri
		AND k.oid_peri = j.peri_oid_peri
		AND h.cod_peri = #codigoPeriodo#
		AND j.oid_peri = i.perd_oid_peri
		AND i.oid_cabe = l.mfca_oid_cabe
		AND l.oid_ofer = m.ofer_oid_ofer
		AND m.val_codi_vent = h.cod_vent
		GROUP BY h.cod_clie, h.cod_peri, h.num_lote, j.oid_peri) yy
		WHERE xx.cod_peri = yy.cod_peri(+)
		AND xx.cod_clie = yy.cod_clie(+)
		AND xx.num_lote = yy.num_lote(+)
	</select>


	<select id="getTiposSolicitudReclamos" resultMap="baseResult">
		SELECT tsp.OID_TIPO_SOLI_PAIS as codigo,
		G.VAL_I18N as descripcion
		FROM PED_TIPO_SOLIC_PAIS TSP,
		pED_TIPO_SOLIC TS,
		GEN_I18N_SICC_COMUN G,
		ped_clase_solic cl
		WHERE G.VAL_OID = TS.OID_TIPO_SOLI
		AND G.ATTR_ENTI = 'PED_TIPO_SOLIC'
		and ts.CLSO_OID_CLAS_SOLI = cl.OID_CLAS_SOLI
		and TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
		and cl.COD_CLAS_SOLI like 'R%'
		and ts.IND_SOLI_NEGA=1
	</select>

	<select id="getOidPeriodo" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#) FROM DUAL
	</select>

	<select id="getIndicadoresCajaBolsa" resultMap="baseResult">
		SELECT    DES_INDI as codigo,
		DES_INDI as descripcion
		FROM MAE_TIPO_EMPAQ
		ORDER BY 1
	</select>


	 <select id="getOidActividad" parameterClass="java.util.Map" resultClass="string">  
		select oid_acti from CRA_ACTIV
		where pais_oid_pais = #oidPais#
		and cod_acti = #codActividad#
	</select>

	<insert id="insertTemporalSTOReporteRechazadas" parameterClass="java.util.Map">
		INSERT INTO STO_TMP_REPOR_RECHA(OID_REP_STO_RECH,
		DES_TIPO_DOCU,
		FEC_DIGI,
		FEC_MODI,
		COD_TIPO_DOCU,
		SEC_NUME_SECU,
		COD_CLIE,
		NUM_LOTE,
		DES_REGI,
		COD_ZONA,
		COD_PAIS,
		IND_CORR,
		IND_GP1 ,
		IND_FACT,
		IND_ERRA,
		IND_RECH,
		IND_CERR,
		COD_PERI,
		DES_ORIG,
		FEC_PROG_FACT,
		DES_MOTI_RECH,
		VAL_OBSE_RECH_DEFI,
		USU_MODI)
		SELECT #secuencia#,
		DESTIPODOCU,
		FECDIGI,
		FECMODI,
		COD_TIPO_DOCU,
		SEC_NUME_DOCU,
		COD_CLIE,
		NUMLOTE,
		COD_REGI,
		COD_ZONA,
		CARGADAS,
		CORRECTAS,
		Enviadas,
		Facturadas,
		ERRADAS,
		RECHAZADAS,
		DETALLESOK_CABECERRADAS,
		COD_PERI,
		origen,
		fec_prog_fact,
		motivorech,
		obsrech,
		usurech
		FROM
		(SELECT #descripcionDocumento# as DESTIPODOCU,
		E.FEC_DIGI AS FECDIGI,
		E.FEC_MODI AS FECMODI,
		E.COD_TIPO_DOCU,
		E.SEC_NUME_DOCU,
		E.COD_CLIE AS COD_CLIE,
		E.NUM_LOTE AS NUMLOTE,
		X.DES_REGI AS COD_REGI,
		E.COD_ZONA AS COD_ZONA,
		E.COD_PAIS AS CARGADAS,
		E.IND_ENVI AS CORRECTAS,

		decode((SELECT count(1)
		FROM STO_DOCUM_DIGIT AA, INT_SOLIC_CONSO_CABEC BB, PED_SOLIC_CABEC P
		WHERE AA.NUM_LOTE = BB.NUM_LOTE
		AND AA.SEC_NUME_DOCU = BB.SEC_NUME_DOCU
		AND AA.COD_PAIS = BB.COD_PAIS
		AND AA.COD_PAIS = E.COD_PAIS
		AND AA.COD_TIPO_DOCU = E.COD_TIPO_DOCU
		AND AA.NUM_LOTE = E.NUM_LOTE
		AND AA.SEC_NUME_DOCU = E.SEC_NUME_DOCU
		AND AA.IND_ENVI = '1'
		AND P.OID_SOLI_CABE = BB.SOCA_OID_SOLI_CABE_REFE
		AND P.GRPR_OID_GRUP_PROC = 1),0,0,1) as Enviadas,

		decode((SELECT count(1)
		FROM STO_DOCUM_DIGIT AA, INT_SOLIC_CONSO_CABEC BB, PED_SOLIC_CABEC P
		WHERE AA.NUM_LOTE = BB.NUM_LOTE
		AND AA.SEC_NUME_DOCU = BB.SEC_NUME_DOCU
		AND AA.COD_PAIS = BB.COD_PAIS
		AND AA.COD_PAIS = E.COD_PAIS
		AND AA.COD_TIPO_DOCU = E.COD_TIPO_DOCU
		AND AA.NUM_LOTE = E.NUM_LOTE
		AND AA.SEC_NUME_DOCU = E.SEC_NUME_DOCU
		AND AA.IND_ENVI = '1'
		AND P.OID_SOLI_CABE = BB.SOCA_OID_SOLI_CABE_REFE
		AND P.GRPR_OID_GRUP_PROC != 1),0,0,1) Facturadas,

		(SELECT COUNT(DISTINCT R.SEC_NUME_DOCU)
		FROM STO_DETAL_DOCUM_EXCEP R
		WHERE R.COD_PAIS = E.COD_PAIS
		AND R.COD_TIPO_DOCU = E.COD_TIPO_DOCU
		AND R.NUM_LOTE = E.NUM_LOTE
		AND R.SEC_NUME_DOCU = E.SEC_NUME_DOCU
		AND R.IND_LEVA_ERRO = 0
		AND R.IND_APRO = 0
		AND E.IND_RECH = 0
		AND ROWNUM = 1) AS ERRADAS,

		E.IND_RECH AS RECHAZADAS,

		(DECODE(E.IND_ENVI, 0, 1, 0)) -
		DECODE(((SELECT COUNT(1)
		FROM STO_DETAL_DOCUM_EXCEP R
		WHERE R.COD_PAIS = E.COD_PAIS
		AND R.COD_TIPO_DOCU = E.COD_TIPO_DOCU
		AND R.NUM_LOTE = E.NUM_LOTE
		AND R.SEC_NUME_DOCU = E.SEC_NUME_DOCU
		AND R.IND_LEVA_ERRO = 0
		AND R.IND_APRO = 0
		AND ROWNUM = 1) + E.IND_RECH),
		0,
		0,
		1) AS DETALLESOK_CABECERRADAS,
		E.COD_PERI AS COD_PERI,
		(SELECT O.Des_Orig
		FROM STO_ORIGE_DOCUM O,
		STO_COMBI_ORIGE_DOCUM C
		WHERE O.COD_PAIS = E.COD_PAIS
		AND O.COD_TIPO_DOCU = E.COD_TIPO_DOCU
		AND O.COD_PAIS = C.COD_PAIS
		AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
		AND O.COD_ORIG = C.COD_ORIG
		AND C.IND_RECE_OCR = E.IND_RECE_OCR
		AND C.IND_RECE_WEB = E.IND_RECE_WEB
		AND C.IND_RECE_DD = E.IND_RECE_DD
		AND C.IND_RECE_DIGI = E.IND_RECE_DIGI
		AND C.IND_RECE_CC = E.IND_RECE_CC
		AND C.IND_RECE_MENS = E.IND_RECE_MENS
		AND C.IND_RECE_ONLI = E.IND_RECE_ONLI
		AND C.IND_RECE_IVR = E.IND_RECE_IVR) as origen ,
		CAB.fec_prog_fact as fec_prog_fact,
		(SELECT smr.des_moti_rech
		FROM STO_RECHA_MOTIV smr
		WHERE smr.cod_moti_rech = E.COD_MOTI_RECH
		AND smr.cod_tipo_docu = E.COD_TIPO_DOCU) as motivorech,
		E.VAL_OBSE_RECH_DEFI as obsrech,
		E.USU_MODI as usurech
		FROM STO_DOCUM_DIGIT E,
		ZON_REGIO X,
		INT_SOLIC_CONSO_CABEC CAB
		WHERE E.COD_PAIS = #codigoPais#
		AND E.COD_TIPO_DOCU = #tipoDocumento#
		AND X.COD_REGI(+) = E.COD_REGI
		AND CAB.COD_PAIS = E.COD_PAIS
		AND CAB.NUM_LOTE = E.NUM_LOTE
		AND CAB.SEC_NUME_DOCU = E.SEC_NUME_DOCU
		AND NVL(E.IND_ELIM,'0') != '1'

		<isNotEmpty property="numLote">
			AND ( E.NUM_LOTE=NVL(#numLote#,E.NUM_LOTE))
		</isNotEmpty>
		<isNotEmpty property="codigoOrigen">
			AND EXISTS (SELECT 1
			FROM STO_ORIGE_DOCUM O,
			STO_COMBI_ORIGE_DOCUM C
			WHERE O.COD_PAIS = E.COD_PAIS
			AND O.COD_TIPO_DOCU = E.COD_TIPO_DOCU
			AND O.COD_PAIS = C.COD_PAIS
			AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
			AND O.COD_ORIG = C.COD_ORIG
			AND C.IND_RECE_OCR = E.IND_RECE_OCR
			AND C.IND_RECE_WEB = E.IND_RECE_WEB
			AND C.IND_RECE_DD = E.IND_RECE_DD
			AND C.IND_RECE_DIGI = E.IND_RECE_DIGI
			AND C.IND_RECE_CC = E.IND_RECE_CC
			AND C.IND_RECE_MENS = E.IND_RECE_MENS
			AND C.IND_RECE_ONLI = E.IND_RECE_ONLI
			AND C.IND_RECE_IVR = E.IND_RECE_IVR
			AND C.COD_ORIG = #codigoOrigen#)
		</isNotEmpty>
		<isNotEmpty property="codigoPeriodo">
			AND ( E.COD_PERI=NVL(#codigoPeriodo#,E.COD_PERI))
		</isNotEmpty>

		<isNotEmpty property="fechaInicio">
				<![CDATA[
					AND E.FEC_DIGI>=NVL(TO_DATE(#fechaInicio#,'DD/MM/YYYY HH24:MI'),E.FEC_DIGI)
					AND E.FEC_DIGI<=NVL(TO_DATE(#fechaFin#,'DD/MM/YYYY HH24:MI'),E.FEC_DIGI)
				]]>
		</isNotEmpty>

		<isNotEmpty property="fechaInicioProceso">
				<![CDATA[
					AND E.FEC_MODI>= NVL(TO_DATE(#fechaInicioProceso#,'DD/MM/YYYY HH24:MI'),E.FEC_MODI)
					AND E.FEC_MODI<= NVL(TO_DATE(#fechaFinProceso#,'DD/MM/YYYY HH24:MI'),E.FEC_MODI)			
				]]>
		</isNotEmpty>

		<isNotEmpty property="flagFechaFact">
				<![CDATA[
					AND CAB.FEC_PROG_FACT>= NVL(TO_DATE(#fechaInicioProgramadaFacturacion#,'DD/MM/YYYY HH24:MI'),CAB.FEC_PROG_FACT)
					AND CAB.FEC_PROG_FACT<= NVL(TO_DATE(#fechaFinProgramadaFacturacion#,'DD/MM/YYYY HH24:MI'),CAB.FEC_PROG_FACT)			
				]]>
		</isNotEmpty>

			<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			E.COD_REGI = #regionList[]#
		</iterate>
			<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			E.COD_ZONA = #zonaList[]#
		</iterate>
		<isNotEmpty property="clienteList">
				<iterate prepend="AND" property="clienteList" open="(" close=")" conjunction="OR">
				E.COD_CLIE = #clienteList[]#
			</iterate>
		</isNotEmpty>
		)
		WHERE 1 = 1
		AND RECHAZADAS = 1
	</insert>

		<select id="getObtenerSecuenciaTempSTORechazadas" parameterClass="java.util.Map" resultClass="string">
		SELECT sto_strr_seq.nextval FROM DUAL
	</select>

	<delete id="deleteTablaTemporalSTORechazadas">
		TRUNCATE TABLE STO_TMP_REPOR_RECHA
	</delete>

	<select id="getValidarMontoTope" parameterClass="java.util.Map" resultClass="java.lang.Double" >
		select val_mont_tope
		from      RET_PARAM_DOCUM_COMIS
		where cod_pais = #codigoPais#
		and cod_tipo_docu = #codigoTipoDocumento#
	</select>

	<select id="getObtenerSecuenciaTempCOSCierreCostoVentas" parameterClass="java.util.Map" resultClass="string">
		SELECT cos_recv_seq.nextval FROM DUAL
	</select>

	<parameterMap id="paramExecuteGenerReporteCierreCostoVentas" class="java.util.Map">
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMesActual"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidSecuencia"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteCierreCostoVentas" parameterMap="paramExecuteGenerReporteCierreCostoVentas">
		{call COS_PKG_REPOR.COS_PR_GENER_REPOR_CCOST_VENTA(?,?,?) }
	</procedure>

	<delete id="deleteReporteTempCierreCostoVentas">
		TRUNCATE TABLE COS_TMP_REPOR_CCVTA
	</delete>

	<select id="getObtenerSecuenciaTempCOSCierreCostoDevoluciones" parameterClass="java.util.Map" resultClass="string">
		SELECT cos_recd_seq.nextval FROM DUAL
	</select>

	<parameterMap id="paramExecuteGenerReporteCierreCostoDevoluciones" class="java.util.Map">
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMesActual"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidSecuencia"     		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteCierreCostoDevoluciones" parameterMap="paramExecuteGenerReporteCierreCostoDevoluciones">
		{call COS_PKG_REPOR.COS_PR_GENER_REPOR_CCOST_DEVOL(?,?,?) }
	</procedure>

	<delete id="deleteReporteTempCierreCostoDevoluciones">
		TRUNCATE TABLE COS_TMP_REPOR_CCDEV
	</delete>

    <select id="getProcesoInformeAvancePedido" parameterClass="java.util.Map" resultClass="string">
		SELECT
		cod_clie || ' ;;; ' ||
		cod_peri || ' ;;; ' ||
		num_lote || ' ;;; ' ||
		to_char(fec_soli,'dd/MM/yyyy') || ' ;;; ' ||
		nom_clie || ' ;;; ' ||
		cod_regi || ' ;;; ' ||
		cod_zona || ' ;;; ' ||
		cod_secc || ' ;;; ' ||
		cod_terr || ' ;;; ' ||
		estado || ' ;;; ' ||
		telefono_1 || ' ;;; ' ||
		telefono_2 || ' ;;; ' ||
		direccion || ' ;;; ' ||
		ind_rece_dd || ' ;;; ' ||
		ind_rece_web || ' ;;; ' ||
		ind_rece_ocr || ' ;;; ' ||
		ind_erro_deud || ' ;;; ' ||
		val_sald_deud || ' ;;; ' ||
		ind_admi_cart || ' ;;; ' ||
		obs_prub || ' ;;; ' ||
		tip_orde || ' ;;; ' ||
		codigos_errados || ' ;;; ' ||
		monto_pedido || ' ;;; ' ||
		monto_pedido_sin_fa || ' ;;; ' ||
		monto_ocr || ' ;;; ' ||
		monto_web || ' ;;; ' ||
		monto_dd || ' ;;; ' ||
		numero_fa || ' ;;; ' ||
		facturado || ' ;;; ' ||
		error_monto_minimo || ' ;;; ' ||
		error_monto_maximo || ' ;;; ' ||
		NVL(monto_pedido_bloqueado,0) || ' ;;; ' ||
		NVL(monto_minimo,0) || ' ;;; ' ||
		NVL(monto_maximo,0)|| ' ;;; ' ||
		NVL(pedidos_estimados,0)
			FROM TABLE(OCR_PKG_REPOR.OCR_FN_GENER_REPOR_PEDID(#codigoPais#,#codigoPeriodo#,#codigoZona#))
	</select>

    <select id="getProcesoInformeAvancePedidoAct" parameterClass="java.util.Map" resultClass="string">
		SELECT a.cod_clie || ' ;;; ' ||
		a.cod_peri || ' ;;; ' ||
		a.num_lote || ' ;;; ' ||
		to_char(a.fec_soli,'dd/MM/yyyy') || ' ;;; ' ||
		a.nom_clie || ' ;;; ' ||
		a.cod_regi || ' ;;; ' ||
		a.cod_zona || ' ;;; ' ||
		a.cod_secc || ' ;;; ' ||
		a.cod_terr || ' ;;; ' ||
		a.rechazo_otros || ' ;;; ' ||
		a.estado || ' ;;; ' ||
		a.ind_rece_dd || ' ;;; ' ||
		a.ind_rece_web || ' ;;; ' ||
		a.ind_rece_ocr || ' ;;; ' ||
		a.ind_erro_deud || ' ;;; ' ||
		a.val_sald_deud || ' ;;; ' ||
		a.ind_admi_cart || ' ;;; ' ||
		a.obs_prub || ' ;;; ' ||
		a.tip_orde || ' ;;; ' ||
		a.codigos_errados || ' ;;; ' ||
		a.monto_pedido || ' ;;; ' ||
		a.facturado || ' ;;; ' ||
		a.error_monto_minimo || ' ;;; ' ||
		a.error_monto_maximo || ' ;;; ' ||
		NVL(a.monto_pedido_bloqueado,0) || ' ;;; ' ||
		a.monto_minimo || ' ;;; ' ||
		a.monto_maximo || ' ;;; ' ||
		a.pedidos_estimados || ' ;;; ' ||
		a.monto_estimados || ' ;;; ' ||
		a.numero_fa || ' ;;; ' ||
		a.monto_pedido_sin_fa || ' ;;; ' ||
		a.rechazo_ocr || ' ;;; ' ||
		a.oid_zona || ' ;;; ' ||
		NVL(a.monto_facturado,0) || ' ;;; ' ||
		TO_CHAR(a.FECHA_FACTURACION,'dd/MM/yyyy') || ' ;;; ' ||
		a.OID_PEDIDO || ' ;;; ' ||
		a.ind_rece_digi
                    FROM TABLE(OCR_PKG_REPOR.OCR_FN_GENER_REPOR_PEDID_ACTUA(#codigoPeriodo#,#codigoZona#)) a    
	</select>

	<parameterMap id="executeGenerarReporteRUVLibroVentasMensualCSVparam" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoInterfaz"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"            jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>

	<procedure id="executeGenerarReporteRUVLibroVentasMensualCSV" parameterMap="executeGenerarReporteRUVLibroVentasMensualCSVparam">
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_LIBRO_CSV(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeGenerarReporteVENDetalleNCMarcaUNCSVparam" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"            jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeGenerarReporteVENDetalleNCMarcaUNCSV" parameterMap="executeGenerarReporteVENDetalleNCMarcaUNCSVparam">
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_DNCMU_CSV(?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeGenerarReporteVENDetalleNDebitoMarcaUNCSVparam" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"            jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeGenerarReporteVENDetalleNDebitoMarcaUNCSV" parameterMap="executeGenerarReporteVENDetalleNDebitoMarcaUNCSVparam">
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_DNDMU_CSV(?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeGenerarReporteVENCabecerasFacturasAnuladasCSVparam" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"            jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeGenerarReporteVENCabecerasFacturasAnuladasCSV" parameterMap="executeGenerarReporteVENCabecerasFacturasAnuladasCSVparam">
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_CABFA_CSV(?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeGenerarReporteVENDetalleProductosAtendidosUNCSVparam" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"            jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeGenerarReporteVENDetalleProductosAtendidosUNCSV" parameterMap="executeGenerarReporteVENDetalleProductosAtendidosUNCSVparam">
		{call RUV_PKG_PROCE.RUV_PR_GENER_REPOR_DETAU_CSV(?, ?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="executeGenerarReportePEDBonificacionCSVparam" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="oidPais" jdbcType="NUMBER" mode="IN" />
		<parameter property="fechaFactura"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="oidTipoDocumento"    jdbcType="NUMBER"   mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>

	<procedure id="executeGenerarReportePEDBonificacionCSV" parameterMap="executeGenerarReportePEDBonificacionCSVparam">
		{call PED_PKG_PROCE.PED_PR_GENER_REPOR_BONIF_CSV(?, ?, ?, ?, ?, ?, ?)}
	</procedure>


	<select id="getTituloReportePaisMarca" parameterClass="java.util.Map" resultClass="string">
		select VAL_PARA
		from bas_param_pais
		where COD_PAIS = #codigoPais#
		and COD_SIST = #codigoSistema#
		and COD_PARA = #codigoParam#
	</select>

	<select id="getIndicadorClienteCedula" parameterClass="java.util.Map" resultClass="string">
		select VAL_PARA
		from bas_param_pais
		where COD_PAIS = #codigoPais#
		and COD_SIST = #codigoSistema#
		and COD_PARA = #codigoParam#
	</select>
	
	<select id="getTipoDocumentoList" parameterClass="java.util.Map"  resultMap="baseResult">
		SELECT fac.cod_tipo_docu CODIGO,
		des_tipo_docu DESCRIPCION
		FROM fac_tipo_docum fac
		WHERE oid_tipo_docu in (1,29)
	</select>

	<select id="getOidTipoDocumento" parameterClass="java.util.Map" resultClass="string">
		SELECT f.oid_tipo_docu
		FROM fac_tipo_docum f
		WHERE f.cod_tipo_docu = #codigoTipoDocu#
	</select>

	<select id="getObtenerSecuenciaTempDsctoComercial" parameterClass="java.util.Map" resultClass="string">
		SELECT SAP_SEQ_TMDC.nextval FROM DUAL
	</select>

	<parameterMap id="paramGenerarReporteSAPFiDescuentoComercial" class="java.util.Map" >
		<parameter property="codigoPais"             		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoReporte"         			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicio"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="fechaFin"            			jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="oidSecuencia"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteSAPFiDescuentoComercial" parameterMap="paramGenerarReporteSAPFiDescuentoComercial">
		{call SAP_PKG_REPOR.SAP_PR_GENER_REPOR_DESCU_COMER(?,?,?,?,?)}
	</procedure>

	<delete id="deleteTablaTemporalReporteDescuentoComercial">
		TRUNCATE TABLE SAP_TMP_REPOR_DSCCO
	</delete>

	<resultMap id="valoresFacturacionDsctoVolResult" class="java.util.HashMap">
		<result property="fecFact" column="FECFACT" />
		<result property="oid1" column="OID1" />
		<result property="oid2" column="OID2" />
	</resultMap>

	<select id="getObtenerSecuenciaTempDsctoVol" parameterClass="java.util.Map" resultClass="string">
		SELECT SAP_SEQ_TMDV.nextval FROM DUAL
	</select>

	<parameterMap id="paramGenerarReporteSAPFiDescuentoVolumen" class="java.util.Map" >
		<parameter property="codigoPais"             		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoReporte"         			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicio"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="fechaFin"            			jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="oidSecuencia"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteSAPFiDescuentoVolumen" parameterMap="paramGenerarReporteSAPFiDescuentoVolumen">
		{call SAP_PKG_REPOR.SAP_PR_GENER_REPOR_DESCU_VOLUM(?,?,?,?,?)}
	</procedure>

	<delete id="deleteTablaTemporalReporteDescuentoVolumen">
		TRUNCATE TABLE SAP_TMP_REPOR_DSCVO
	</delete>

	<select id="getObtenerSecuenciaTempVentaLinea" parameterClass="java.util.Map" resultClass="string">
		SELECT SAP_SEQ_TMVL.nextval FROM DUAL
	</select>

	<parameterMap id="paramGenerarReporteSAPFiVentaLinea" class="java.util.Map" >
		<parameter property="codigoPais"             		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoReporte"         			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoOperacion"         		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicio"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="fechaFin"            			jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="oidSecuencia"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteSAPFiVentaLinea" parameterMap="paramGenerarReporteSAPFiVentaLinea">
		{call SAP_PKG_REPOR.SAP_PR_GENER_REPOR_VENTA_LIDEV(?,?,?,?,?,?)}
	</procedure>

	<delete id="deleteTablaTemporalReporteVentaLinea">
		TRUNCATE TABLE SAP_TMP_REPOR_VTLIN
	</delete>

	<parameterMap id="paramGenerarReporteRECOperaReclaPedidos" class="java.util.Map" >
		<parameter property="codigoPais"             		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidPeriInicial"       			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidPeriFinal"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="fechaDesde"           			jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="fechaHasta"            		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="oidSecuencia"          		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="tipoMovimiento"      			jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>		
		<parameter property="condicionD"          			jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="flagTipoOpera"          		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
		<parameter property="condicionTipoOperacionD"      	jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteRECOperaReclaPedidos" parameterMap="paramGenerarReporteRECOperaReclaPedidos">
		{call REC_PKG_REPOR.REC_PR_CARGA_TEMPO_REPOR_OPREC(?,?,?,?,?,?,?,?,?,?)}
	</procedure>

	<select id="getObtenerSecuenciaTempOperaReclam" parameterClass="java.util.Map" resultClass="string">
		SELECT REC_SEQ_TMRO.nextval FROM DUAL
	</select>

	<delete id="deleteTablaTemporalReporOperaReclaPedidos">
		TRUNCATE TABLE REC_TEMPO_REPOR_OPREC
	</delete>

	<select id="getTipoReporteList" resultMap="baseResult">
		SELECT m.Oid_Esta_Clie CODIGO,
		g.VAL_I18N DESCRIPCION
		FROM GEN_I18N_SICC_COMUN g, MAE_ESTAT_CLIEN m
		WHERE g.ATTR_ENTI = 'MAE_ESTAT_CLIEN'
		AND g.val_oid = m.oid_esta_clie
		<isNotEmpty property="codigoTipoReporte">
		   AND m.Oid_Esta_Clie = #codigoTipoReporte# 
		</isNotEmpty>
	</select>

	<parameterMap id="paramGenerarReporteMAEConsBloqDesb" class="java.util.Map" >
		<parameter property="codigoPais"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidSecuencia"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteMAEConsultoraBloquedasDesbloq" parameterMap="paramGenerarReporteMAEConsBloqDesb">
		{call MAE_PKG_REPOR.MAE_PR_GENER_REPOR_CONSU_BLDES(?,?)}
	</procedure>

	<select id="getObtenerSecuenciaTempConsultBloqDesb" parameterClass="java.util.Map" resultClass="string">
		SELECT MAE_SEQ_TMRBD.nextval FROM DUAL
	</select>

	<delete id="deleteTablaTemporalReporConsultBloqDesb">
		TRUNCATE TABLE MAE_TEMPO_REPOR_BLDES
	</delete>

	<select id="getTipoPlantilla" parameterClass="java.util.Map" resultClass="string">
		SELECT COUNT(1)
		FROM inc_concu_param_gener a
		WHERE a.plc2_oid_plan_conc = 9036
		AND a.oid_para_gral = #codigoConcurso#
	</select>

	<select id="getListaAlmacen" parameterClass="java.util.Map" resultMap="baseResult">													
		<![CDATA[																								
		SELECT a.oid_alma as CODIGO, b.val_i18n as DESCRIPCION 
		FROM bel_almac a, gen_i18n_sicc_pais b
		WHERE 
			a.oid_alma=b.val_oid and 
			b.attr_enti='BEL_ALMAC' and 
			a.CCDI_OID_CONFI_CENTR_DISTR is not null												
			]]>
	</select>

	<select id="getOrigenSTOByTipoDocumento" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT O.COD_ORIG CODIGO,
		O.DES_ORIG DESCRIPCION
		FROM STO_ORIGE_DOCUM O
		WHERE O.COD_PAIS = #codigoPais#
		AND O.COD_TIPO_DOCU = #tipoDocumento#
	</select>

	<parameterMap id="paramGenerarReporteCCCBuroCredito" class="java.util.Map" >
		<parameter property="codigoPais"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeGenerarReporteCCCBuroCredito" parameterMap="paramGenerarReporteCCCBuroCredito">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_BURO_CREDI ( ? )}
	</procedure>

    <select id="getTiposOperaMultipleByOperaxCodigoOid" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT REC_TIPOS_OPERA.OID_TIPO_OPER AS CODIGO,
		REC_OPERA.COD_OPER||'-'||REC_TIPOS_OPERA.VAL_TIPO_OPER AS DESCRIPCION
		FROM REC_TIPOS_OPERA,
		REC_OPERA
		WHERE REC_TIPOS_OPERA.ROPE_OID_OPER = REC_OPERA.OID_OPER
				<iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
			REC_OPERA.COD_OPER = #codigoOperacion[]#
		</iterate>
			   AND REC_OPERA.PAIS_OID_PAIS = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)  
	</select>

	<select id="getOidProcesoControlAsistencia" resultClass="java.math.BigDecimal">
		SELECT PER_CTAS_SEQ.nextval  FROM dual
	</select>


	<select id="getOidProcesoControlAsistenciaTriunfadoras" resultClass="java.math.BigDecimal">
		SELECT PER_CTAS_TRIUN_SEQ.nextval  FROM dual
	</select>
	
	<resultMap id="controlAsistenciaResult" class="java.util.HashMap">
		<result property="codigoZona" column="COD_ZONA" />
		<result property="codigoSeccion" column="COD_SECC" />
		<result property="codigoTerritorio" column="COD_TERR" javaType="java.lang.String" />
		<result property="nombreCliente" column="NOM_CLIE" />
		<result property="fechaFacturacion" column="FEC_FACTU" />
		<result property="nomGere" column="NOM_GERE" />
		<result property="saldo" column="SAL_UNIC" javaType="java.lang.String" />
		<result property="valObservacion" column="VAL_OBSE" />
		<result property="codigoCliente" column="COD_CLIE" />
		<result property="telefonoMovil" column="VAL_TELE_MOVI" />
		<result property="valFamiliaProtegida" column="VAL_FAMI_PROT" />
	</resultMap>

	<select id="getControlAsistencia" parameterClass="java.util.Map" resultMap="controlAsistenciaResult">      
		SELECT
		COD_ZONA,
		COD_SECC,
		COD_TERR,
		NOM_CLIE,
		TO_CHAR(FEC_FACT,'dd/MM/yyyy') FEC_FACTU,
		NOM_GERE,
		SAL_UNIC,
		VAL_OBSE,
		COD_CLIE,
		VAL_TELE_MOVI,
		VAL_FAMI_PROT
		FROM
		PER_REPOR_CNTRL_ASIST_CONFE
		WHERE OID_PROC = #oidProceso#
		ORDER BY COD_ZONA, COD_SECC, NOM_GERE, NOM_CLIE
	</select>

	<parameterMap id="paramGenerarReporteMAEConsultorasPedidos" class="java.util.Map" >
		<parameter property="codigoPais"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="condicionRegion"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="condicionZona"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoReporte"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicioCumpleanios" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFinCumpleanios"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="condicionEstado"    	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="condicionSaldo"    	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="condicionPedido"    	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="condicionClienteDocu"   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="condicionDocuPrincipal"   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeGenerarReporteMAEConsultorasPedidos" parameterMap="paramGenerarReporteMAEConsultorasPedidos">
		{call MAE_PKG_REPOR.MAE_PR_GENER_REPOR_CONSU_PEDID(?,?,?,?,?,?,?,?,?,?,?,?,?) }
	</procedure>

	<resultMap id="detallePedidoNoFacturadoBeanResult" class="detallePedidoNoFacturadoBean">
		<result property="codigoVenta" column="VAL_CODI_VENT" />
		<result property="descripcionProducto" column="DES_PROD" />
		<result property="unidadesDemandada" column="VAL_UNID_DEMA" />
		<result property="limiteVenta" column="VAL_LIMI_CTRL_VENT" />
		<result property="precioCatalogoUnitario" column="VAL_PREC_CATA_UNIT_LOCA" />
		<result property="precioCatalogoTotal" column="VAL_PREC_CATA_TOTA_LOCA" />
	</resultMap>

	<select id="getDetallePedidoNoFacturado" parameterClass="java.util.Map" resultMap="detallePedidoNoFacturadoBeanResult">
		SELECT a.VAL_CODI_VENT,
		a.DES_PROD,
		a.VAL_UNID_DEMA,
		a.VAL_LIMI_CTRL_VENT,
		to_char(a.VAL_PREC_CATA_UNIT_LOCA,'999999999.99') VAL_PREC_CATA_UNIT_LOCA,
                       to_char(a.VAL_PREC_CATA_TOTA_LOCA,'999999999.99') VAL_PREC_CATA_TOTA_LOCA                                                                    
                    FROM TABLE(OCR_PKG_REPOR.OCR_FN_REPOR_DETAL_PEDID_NFACT(#codigoCliente#)) a 
	</select>

	<select id="getDiferenciaPeriodos" parameterClass="java.util.Map" resultClass="int">
		SELECT VEN_PKG_REPOR.VEN_FN_DEVUE_NUME_CAMPA(#codigoPeriodoInicio#, 
                                               #codigoPeriodoFin#, GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#), 
		GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA('T'),
		GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CANAL('VD'))
		FROM DUAL
	</select>


	<parameterMap id="paramComCalRegion" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoComision"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidComision"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

    <procedure id="executeComisionesCalculadasPorRegion" parameterMap="paramComCalRegion" >
		{call COM_PKG_PROCE.COM_PR_CALCU_COMIS_VENT(?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramComCalVnef" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"            	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoComision"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="login"            			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

    <procedure id="executeCalcularComisionVentaNetaEfectiva" parameterMap="paramComCalVnef" >
		{call COM_PKG_PROCE.COM_PR_CALCU_COMIS_VENTA_NETEF(?, ?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="paramCalcuVenZona" class="java.util.Map">
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeCalcularVentaZona" parameterMap="paramCalcuVenZona">
		{call COM_PKG_REPOR.COM_PR_CALCU_VENT_ZONA(?, ?, ?, ?, ?)}
	</procedure>

	<select id="getTipoReporte" resultMap="baseResult">
		SELECT COD_REPO CODIGO, DES_REPO DESCRIPCION
		FROM BAS_REPOR_LISTA
		WHERE IND_ACTI = 1
		ORDER BY NUM_ORDE ASC
	</select>

	<select id="getTipoMav" resultMap="baseResult">
		SELECT C.OID_TIPO_CLIE AS CODIGO, 
		VAL_I18N AS DESCRIPCION
		FROM GEN_I18N_SICC_COMUN P,
		MAE_TIPO_CLIEN C,
		SEG_IDIOM I
		WHERE P.VAL_OID = C.OID_TIPO_CLIE
		AND P.IDIO_OID_IDIO = I.OID_IDIO
		AND P.ATTR_ENTI = 'MAE_TIPO_CLIEN'
		AND I.COD_ISO_IDIO = 'es'
		AND C.COD_TIPO_CLIE IN ('02', '04')
		ORDER BY 2
	</select>

    <select id="getActividadByTipoMAV" parameterClass="string" resultMap="baseResult">
		SELECT OID_ACTI CODIGO,
		PQ_APL_AUX.VALOR_GEN_I18N_SICC (1, OID_ACTI, 'MAV_ACTIV') DESCRIPCION
		FROM MAV_ACTIV
		WHERE TICL_OID_TIPO_CLIE = #value#
		AND EST_REGI = 1
		ORDER BY 2
	</select>

    <select id="getTipoOfertaByTipoMAVActividad" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT DISTINCT COD_TIPO_OFER CODIGO,
		PQ_APL_AUX.VALOR_GEN_I18N_SICC (1, OID_TIPO_OFER, 'PRE_TIPO_OFERT') DESCRIPCION
		FROM PRE_TIPO_OFERT OFE,
		MAV_ACTIV_TIPO_OFERT ATO,
		MAV_ACTIV ACT
		WHERE OFE.OID_TIPO_OFER = ATO.TOFE_OID_TIPO_OFER
		AND ATO.ACTI_OID_ACTI = ACT.OID_ACTI
		<isNotEmpty property="codigoActividad">
			AND ATO.ACTI_OID_ACTI = #codigoActividad#
		</isNotEmpty>
		AND ACT.TICL_OID_TIPO_CLIE = #codigoTipoMav#
		ORDER BY 2
	</select>

	<select id="getTipoOferta" resultMap="baseResult">
		SELECT COD_TIPO_OFER CODIGO,
		SUBSTR(B.VAL_I18N, INSTR(B.VAL_I18N, '-') + 2) DESCRIPCION
		FROM PRE_TIPO_OFERT A, GEN_I18N_SICC_COMUN B
		WHERE A.OID_TIPO_OFER = B.VAL_OID
		AND B.ATTR_ENTI = 'PRE_TIPO_OFERT'
		ORDER BY 2
	</select>

	<parameterMap id="executeCargarTablasReporteCCCDeudorasConMasUnaCampanhaParams" class="java.util.Map">
	    <parameter property="codigoPais"				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoSociedad"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="identificadorProceso"		jdbcType="NUMERIC" javaType="java.lang.Integer" mode="OUT"/>
	    <parameter property="codigoPeriodo01"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="codigoPeriodo02"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="codigoPeriodo03"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="codigoPeriodo04"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="codigoPeriodo05"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="codigoPeriodo06"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	</parameterMap>

	<procedure id="executeCargarTablasReporteCCCDeudorasConMasUnaCampanha" parameterMap="executeCargarTablasReporteCCCDeudorasConMasUnaCampanhaParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_SALDO_CAMPA_5ANTE(?,?,?,?,?,?,?,?,?,?)}
	</procedure>

	<delete id="executeLimpiarTablasReporteCCCDeudorasConMasUnaCampanha" parameterClass="java.util.Map" >	
		DELETE FROM ccc_tempo_saldo_campa PURGE
		WHERE oid_ejecu_repor = #identificadorProceso#
	</delete>

	<delete id="executeLimpiarTablasReporteCCCDeudorasConMasUnaCampanhaArray" parameterClass="java.util.Map" >	
		DELETE FROM ccc_tempo_array_saldo_campa PURGE
		WHERE oid_ejecu_repor = #identificadorProceso#
	</delete>

    <parameterMap id="executeReporteCCCPrimPedDeudParams" class="map">
		<parameter property="codigoPais" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="codigoSociedad" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="codigoPeriodoInicial" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="codigoPeriodoFinal" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="oidEjecuRepor" jdbcType="NUMERIC"	javaType="java.lang.Integer" mode="OUT" />
	</parameterMap>
	<procedure id="executeReporteCCCPrimPedDeud" parameterMap="executeReporteCCCPrimPedDeudParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_PRIME_PEDID_DEUDO (?,?,?,?,?)}
	</procedure>

	<parameterMap id="executeReporteCCCPrimSegPedDeudParams" class="map">
		<parameter property="codigoPais" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="codigoSociedad" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="codigoPeriodoInicial" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="codigoPeriodoFinal" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="oidEjecuRepor" jdbcType="NUMERIC"	javaType="java.lang.Long" mode="OUT" />
	</parameterMap>
	<procedure id="executeReporteCCCPrimSegPedDeud" parameterMap="executeReporteCCCPrimSegPedDeudParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_SEGUN_PEDID_DEUDO(?,?,?,?,?)}
	</procedure>

	<delete id="deleteTableReporteCCCPrimPedDeudTempoPrime" parameterClass="java.util.Map" >	
		DELETE FROM ccc_tempo_prime_pedid_refer purge
		WHERE  oid_ejecu_repor  =  #p_oid_ejecu_repor#
	</delete>

	<delete id="deleteTableReporteCCCPrimPedDeudTempoSaldo" parameterClass="java.util.Map" >	
		DELETE FROM ccc_tempo_saldo_prime_pedid purge
		WHERE  oid_ejecu_repor =  #p_oid_ejecu_repor#
	</delete>

	<delete id="deleteTableReporteCCCPrimSegPedDeudTempoPrime" parameterClass="java.util.Map" >	
		DELETE FROM ccc_tempo_prime_pedid_refer purge
		WHERE oid_ejecu_repor = #p_oid_ejecu_repor#
	</delete>

	<delete id="deleteTableReporteCCCPrimSegPedDeudTempoSaldo" parameterClass="java.util.Map" >	
		DELETE FROM ccc_tempo_saldo_segun_pedid purge
		WHERE  oid_ejecu_repor  =  #p_oid_ejecu_repor#
	</delete>

	<parameterMap id="executeCargaTemporalReportePEDConsultorasChequearParams" class="java.util.Map">
	    <parameter property="codigoPeriodo"				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaInicioFacturacion"	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFinFacturacion"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicion"					jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidProceso"				jdbcType="NUMERIC" javaType="java.lang.Integer" mode="OUT"/>
	</parameterMap>

	<procedure id="executeCargaTemporalReportePEDConsultorasChequear" parameterMap="executeCargaTemporalReportePEDConsultorasChequearParams">
		{call PED_PKG_PROCE.PED_PR_REPOR_CONSU_CHEQU(?,?,?,?,?)}
	</procedure>

	<delete id="executeLimpiarTablaTemporalReportePEDConsultorasChequear" parameterClass="java.util.Map" >	
		DELETE FROM PED_REPOR_CONSU_CHEQU_TEMPO
		WHERE OID_PROC = #oidProceso#
	</delete>

	<parameterMap id="executeCargarTablasReporteCCCDiasCarteraParams" class="map">
		<parameter property="codigoPais"    		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"   		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicio"  			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFin" 				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="oidEjecucion"   		jdbcType="NUMERIC" javaType="java.lang.Long"    mode="OUT"/>
	</parameterMap>
	<procedure id="executeCargarTablasReporteCCCDiasCartera" parameterMap="executeCargarTablasReporteCCCDiasCarteraParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_DIAS_CARTE(?,?,?,?,?)}
	</procedure>

	<delete id="deleteTablasReporteCCCDiasCartera" parameterClass="java.util.Map">
		DELETE FROM ccc_tempo_dias_carte PURGE
		WHERE oid_ejecu_repor = #oidEjecucion#		
	</delete>

	<parameterMap id="executeCargaTemporalReporteMAEConsultorasPedidosParams" class="java.util.Map">
	    <parameter property="oidPais"				    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidPeriodo"	            jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
	    <parameter property="oidActividad"		        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicionFechaInicio"	    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicionFechaFin"		    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicionRegion1"		    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>    
	    <parameter property="condicionZona1"		    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicionFechaInicio2"	    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicionFechaFin2"	    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicionRegion2"		    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="condicionZona2"		    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="tipoReporte"			    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="indicadorDesbloqueadas"	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidProceso"				jdbcType="NUMERIC" javaType="java.lang.Integer" mode="OUT"/> 
	</parameterMap>

	<procedure id="executeCargaTemporalReporteMAEConsultorasPedidos" parameterMap="executeCargaTemporalReporteMAEConsultorasPedidosParams">
	    {call MAE_PKG_REPOR.MAE_PR_GENER_TEMPO_NUEVA_CSV(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>

	<parameterMap id="executeGenerarReporteMAEConsultorasPedidosCSVParams" class="java.util.Map">
		<parameter property="codigoPais"        	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoUsuario"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidProceso"			jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
		<parameter property="nombreArchivo"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="tipoReporte"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="titulo"				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="directorioArchivo"   	jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>			    
	</parameterMap>

	<procedure id="executeGenerarReporteMAEConsultorasPedidosCSV" parameterMap="executeGenerarReporteMAEConsultorasPedidosCSVParams">
		{call MAE_PKG_REPOR.MAE_PR_GENER_REPOR_NUEVA_CSV(?, ?, ?, ?, ?, ?, ?)}
	</procedure>

	<delete id="deleteTemporalReporteMAEConsultorasPedidos" parameterClass="java.util.Map" >	
		DELETE FROM mae_tempo_nueva_recha PURGE
		WHERE oid_proc_nuev = #oidProceso#
	</delete>

	<delete id="deleteTemporalReporteRECCuadreSAP">
		TRUNCATE TABLE REC_TMP_CUADRE_SAP_SICC
	</delete>

	<insert id="insertReporteRECCuadreSAP">
		INSERT INTO REC_TMP_CUADRE_SAP_SICC
		(COD_SAP,
		DES_PROD,
		VAL_UNID_SAP)
		VALUES
		(#codigoSAP#,
		#descripcion#,
		#unidades#)
	</insert>

	<parameterMap id="executeConsolidacionReporteRECCuadreSAPParams" class="map">
		<parameter property="codigoPais"    		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeConsolidacionReporteRECCuadreSAP" parameterMap="executeConsolidacionReporteRECCuadreSAPParams">
		{call SAP_PKG_REPOR.SAP_PR_GENER_REPOR_CUADR(?)}
	</procedure>

	<parameterMap id="executeReportePEDExportarDemandaAnticipadaParams" class="map">
		<parameter property="codigoPais"    		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"    		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fecha"    				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeReportePEDExportarDemandaAnticipada" parameterMap="executeReportePEDExportarDemandaAnticipadaParams">
		{call ped_pkg_proce.ped_pr_repor_deman_antic(?,?,?)}
	</procedure>

	<parameterMap id="executeCargaReporteCentroAcopioFacturadoParams" class="map">
		<parameter property="codigoPeriodo"    		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFacturacion" 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeCargaReporteCentroAcopioFacturado" parameterMap="executeCargaReporteCentroAcopioFacturadoParams">
		{call sto_pkg_gener.sto_pr_carga_tmp_ceaco_factu(?,?)}
	</procedure>

	<select id="getEsPrimerDiaFacturacion" parameterClass="string" resultClass="string">
		Select 1
		from ped_acumu_pedid_campa
		where cod_peri = #value#
		and rownum=1
	</select>

    <select id="getPedidosAcumulados" parameterClass="string" resultClass="string">
		Select distinct num_pedi_acum
		from ped_acumu_pedid_campa
		where cod_peri = #value#
		and rownum=1
	</select>

	<parameterMap id="executeCargaReporteSimulacionFaltantesParams" class="map">
		<parameter property="codigoPeriodo"    				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFacturacion" 				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroPedidosProyectar" 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoPup" 						jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="promedioMontoPedido" 			jdbcType="NUMERIC" javaType="java.math.BigDecimal" mode="IN"/>
		<parameter property="porcentajeMaximoFaltante" 		jdbcType="NUMERIC" javaType="java.math.BigDecimal" mode="IN"/>
	</parameterMap>

	<procedure id="executeCargaReporteSimulacionFaltantes" parameterMap="executeCargaReporteSimulacionFaltantesParams">
		{call sto_pkg_gener.sto_pr_carga_tmp_simul_falta(?,?,?,?,?,?)}
	</procedure>

	<parameterMap id="executeReportePEandPCParams" class="map">
		<parameter property="codigoPeriodo"    		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeReportePedidosEnviados" parameterMap="executeReportePEandPCParams">
		{call emp_pkg_proce.emp_pr_repor_pedid_envia(?)}
	</procedure>

	<procedure id="executeReportePosiblesCandidatas" parameterMap="executeReportePEandPCParams">
		{call emp_pkg_proce.emp_pr_repor_posib_candi(?)}
	</procedure>

	<parameterMap id="executeReportePedidosRecibidosParams" class="map">
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fechaInicio" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fechaFin" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
	</parameterMap>

	<procedure id="executeReportePedidosRecibidos" parameterMap="executeReportePedidosRecibidosParams">
		{call sac_pkg_repor.SAC_PR_REPOR_PEDID_REICB(?,?,?)}
	</procedure>

	<insert id="insertReporteGttFacturaDetalle" parameterClass="java.util.Map">
		INSERT INTO SAC_GTT_REPOR_FACTU_DETAL(COD_REGI,COD_ZONA,VAL_RPAT)
		VALUES(#codigoRegion#,#codigoZona#,#repeat#)
	</insert>

	<select id="getCountRegionByCodZona" parameterClass="java.util.Map" resultClass="int" >	
		select count(cod_regi) from SAC_GTT_REPOR_FACTU_DETAL where cod_regi = #codigoRegion#
	</select>

	<parameterMap id="executeReporteFacturaDetalleParams" class="map">
		<parameter property="codigoPeriodoOid"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicio"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFin"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="origen"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeReporteFacturaDetalle1" parameterMap="executeReporteFacturaDetalleParams">
		{call SAC_PKG_REPOR.SAC_PR_GENER_REPOR_FACTU_DETA1(?,?,?,?)}
	</procedure>

	<procedure id="executeReporteFacturaDetalle2" parameterMap="executeReporteFacturaDetalleParams">
		{call SAC_PKG_REPOR.SAC_PR_GENER_REPOR_FACTU_DETA2(?,?,?,?)}
	</procedure>


	<parameterMap id="executeGenerarReporteZONUnidadesGeograficasCSVparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeGenerarReporteZONUnidadesGeograficasCSV" parameterMap="executeGenerarReporteZONUnidadesGeograficasCSVparam" >
		{call ZON_PKG_UNIDA_GEOGR.ZON_PR_GENER_REPOR_UNIGE_CSV(?, ?, ?, ?)}
	</procedure>

	<parameterMap id="executeReporteGISDireccionConsultaParams" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoMarca" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoCanal" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoTipoCliente" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoInicio" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionEstatus" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>					
		<parameter property="codigoRegion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	
		<parameter property="condicionUA" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
	</parameterMap>

	<procedure id="executeReporteGISDireccionConsulta" parameterMap="executeReporteGISDireccionConsultaParams" >
		{call ZON_PKG_UNIDA_GEOGR.ZON_PR_REPOR_DIREC_CONSU(?,?,?,?,?,?,?,?)}
	</procedure>

	<insert id="insertConsultaDireccionConsulta" parameterClass="java.util.Map">

       INSERT INTO ZON_REPOR_DIREC_TMPCO (clie_oid_clie, cod_regi,cod_zona,cod_terr,cod_secc,oid_zona,oid_regi) 
       SELECT cuad.clie_oid_clie, zorg.cod_regi, zzon.cod_zona,terr.cod_terr, zscc.cod_secc,zzon.oid_zona, zorg.oid_regi
		FROM mae_clien_unida_admin cuad,
		zon_terri_admin ztad,
		zon_secci zscc,
		zon_terri terr,
		zon_zona zzon,
		zon_regio zorg,
		mae_clien clie
		WHERE cuad.ztad_oid_terr_admi = ztad.oid_terr_admi
		AND cuad.clie_oid_clie = clie.oid_clie
		AND ztad.zscc_oid_secc = zscc.oid_secc
		AND ztad.terr_oid_terr = terr.oid_terr
		AND zscc.zzon_oid_zona = zzon.oid_zona
		AND zzon.zorg_oid_regi = zorg.oid_regi
		AND cuad.ind_acti = 1
		AND zorg.ind_acti = 1
		AND zzon.ind_acti = 1
		AND zscc.ind_acti = 1
		AND terr.ind_borr = 0
		$condicionUA$
	</insert>

	<delete id="deleteConsultaDireccionConsulta">
		TRUNCATE TABLE ZON_REPOR_DIREC_TMPCO
	</delete>

	<insert id="insertGloblalTemporaryForRegionZonaCapacitadora" parameterClass="java.util.Map">
		INSERT INTO MAE_GTT_REZOC (VAL_CODI, VAL_TIPO)
		VALUES(#codigo#, #tipoRegionZonaCapacitadora#)
	</insert>
	
	<delete id="deleteReporteMAVAtencionCampanhaSapTemporal" parameterClass="java.util.Map">
		TRUNCATE TABLE MAV_REPOR_ATENC_SAP_TEMPO
	</delete>

	<insert id="insertReporteMAVAtencionCampanhaSapTemporal" parameterClass="java.util.Map">
		INSERT INTO MAV_REPOR_ATENC_SAP_TEMPO (COD_SAP)
		VALUES(#codigoSAP#)
	</insert>

	<parameterMap id="executeGenerarReporteGISEnviarDireccionConsultorasCSVparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="EstrucGeopo1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="EstrucGeopo2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="EstrucGeopo3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionUA" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeGenerarReporteGISEnviarDireccionConsultorasCSV" parameterMap="executeGenerarReporteGISEnviarDireccionConsultorasCSVparam" >
		{call ZON_PKG_UNIDA_GEOGR.ZON_PR_REPOR_DIREC_CONSU_CSV(?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>

	<select id="getListaZonasReporteMAENovedadesZona" resultMap="baseResult">
		select distinct
		mdch.Cod_Zona_Ante||','||r.cod_regi CODIGO, '' DESCRIPCION
		from mae_datos_clien_histo mdch,
		zon_zona z, zon_regio r
		where mdch.ind_proc = 'P'
		and mdch.ind_camb_zona in('T','Z')
		and mdch.Cod_Zona_Ante = z.cod_zona
		and z.zorg_oid_regi = r.oid_regi
		and mdch.Cod_Zona_Ante is not null
		union
		select mdch.cod_zona_nuev||','||r.cod_regi CODIGO, '' DESCRIPCION
		from mae_datos_clien_histo mdch,
		zon_zona z, zon_regio r
		where mdch.ind_proc = 'P'
		and mdch.ind_camb_zona in('T','Z')
		and mdch.cod_zona_nuev = z.cod_zona
		and z.zorg_oid_regi = r.oid_regi
		and mdch.cod_zona_nuev is not null
	</select>

	<update id="updateReporteMAENovedadesZona" parameterClass="java.util.Map">
		update mae_datos_clien_histo
		set IND_PROC = #indProcEnvio#
		where IND_PROC = 'P'
	</update>

	<select id="getTipoConcurso" parameterClass="java.util.Map" resultClass="string">
		SELECT A.BCAL_OID_BASE_CALC
		FROM INC_CONCU_PARAM_GENER A
		WHERE A.OID_PARA_GRAL = #codigoConcurso#
	</select>

	<parameterMap id="executeReporteMAVGenericCSVParam" class="map">
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>

	<procedure id="executeReporteMAVAtencionGerenteConFechaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_GEREN_CONFE_CSV(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionGerenteConFechaRegionZonaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_GEREN_CONFE_REGZO_CSV(?, ?, ?, ?) }
	</procedure>

	<parameterMap id="executeReporteMAVAtencionGerenteDetalleConSinFechaTipoCargoCSVParam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="codigoTipoCargo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
	</parameterMap>

	<procedure id="executeReporteMAVAtencionGerenteDetalleConSinFechaTipoCargoCSV" parameterMap="executeReporteMAVAtencionGerenteDetalleConSinFechaTipoCargoCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_DETAL_TIPO_CARGO_CSV(?, ?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionGerenteDetalleConSinFechaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_DETAL_CONSI_FECHA_CSV(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionGerenteSinFechaRegionCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_GEREN_SINFE_REGIO_CSV(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionGerenteSinFechaRegionZonaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_GEREN_SINFE_REGZO_CSV(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionGerenteSinFechaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_GEREN_SINFE_CSV(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVEnviosConSinFechaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.MAV_PR_ENVIO_CONSI_FECHA_CSV(?, ?, ?, ?) }
	</procedure>

	<!-- Consultoras -->
	<procedure id="executeReporteMAVAtencionConsultoraConFechaRegionCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_consu_confe_regio_csv(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionConsultoraConFechaRegionZonaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_consu_confe_regzo_csv(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionConsultoraConFechaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_consu_confe_csv(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionConsultoraDetalleConSinFechaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_consu_detal_consi_csv(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionConsultoraSinFechaRegionCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_consu_sinfe_regio_csv(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionConsultoraSinFechaRegionZonaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_consu_sinfe_regzo_csv(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionConsultoraSinFechaCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_consu_sinfe_csv(?, ?, ?, ?) }
	</procedure>

	<procedure id="executeReporteMAVAtencionGerenteConFechaRegionCSV" parameterMap="executeReporteMAVGenericCSVParam" >
		{ call MAV_PKG_REPOR.mav_pr_geren_confe_regio_csv(?, ?, ?, ?) }
	</procedure>

	<select id="getCodigoPeriodoASD" parameterClass="java.util.Map" resultClass="string">
		SELECT PER_PKG_REPOR_PERCE.PER_FN_OBTIE_PERIO (
		#codigoPeriodo#,
		GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#),
		GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA(#codigoMarca#),
		GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CANAL(#codigoCanal#),
		#parametroSistema# ) FROM DUAL
	</select>



	<parameterMap id="executeINCProgramaReconocimientoParams" class="java.util.Map" >
		<parameter property="numeroConcurso"  	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidPeriodo" 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="puntajeMinimo" jdbcType="NUMBER" mode="IN" />
		<parameter property="puntajeMaximo" jdbcType="NUMBER" mode="IN" />
	</parameterMap>
  	<procedure id="executeINCProgramaReconocimiento" parameterMap="executeINCProgramaReconocimientoParams" >
		{call INC_PKG_REPOR_INCEN.INC_PR_CARGA_HISTO_PROGR_RECON(?, ?, ?, ?)}
	</procedure>

  	<parameterMap id="executeINCProgramaReconocimiento2Params" class="java.util.Map" >
		<parameter property="numeroConcurso"  	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidPeriodo" 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="puntajeMinimo" jdbcType="NUMBER" mode="IN" />
		<parameter property="puntajeMaximo" jdbcType="NUMBER" mode="IN" />
	</parameterMap>
  	<procedure id="executeINCProgramaReconocimiento2" parameterMap="executeINCProgramaReconocimiento2Params" >
		{call INC_PKG_REPOR_INCEN.INC_PR_HISTO_PROGR_RECON_COLOM(?, ?, ?, ?)}
  	</procedure>
	
  	
  	<parameterMap id="executeGenerarReporteGestionarConsultoraCSVparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="campanyaComunicacion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="campanyaFacturacion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoCliente" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoCalificacionComportamiento" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoCalificacionExperiencia" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>		
	</parameterMap>
  	
  	<procedure id="executeGenerarReporteGestionarConsultoraCSV" parameterMap="executeGenerarReporteGestionarConsultoraCSVparam" >
		{call FLX_PKG_PROCE.FLX_PR_REPOR_GESTI_CONSU_CSV(?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>

	<parameterMap id="executeReporteCRAZonasFacturaFechaParams" class="java.util.Map" >
		<parameter property="fechaFacturacion" 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPais" 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
  	</parameterMap>
  	<procedure id="executeReporteCRAZonasFacturaFecha" parameterMap="executeReporteCRAZonasFacturaFechaParams" >
		  { call CRA_PKG_REPOR.CRA_PR_REPOR_ZONA_FACTU(?,?) }
  	</procedure>
  	
  	<parameterMap id="executeReporteIMPPorceDesviPedidoParams" class="java.util.Map" >
		<parameter property="codigoPais" 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="promedio" 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="desviacion" 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFacturacion" 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
  	</parameterMap>
  	
  	<procedure id="executeReporteIMPPorceDesviPedido" parameterMap="executeReporteIMPPorceDesviPedidoParams" >
		  { call IMP_PKG_PROCE_LASER.IMP_PR_PROCE_DESVI_PEDID(?,?,?,?) }
  	</procedure>
  	
	<parameterMap id="executeReporteINCCuponesElectronicosParams" class="map" >
		<parameter property="numeroConcurso" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="usuarioLogin" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
  	<procedure id="executeReporteINCCuponesElectronicos" parameterMap="executeReporteINCCuponesElectronicosParams" >
		  { call INC_PKG_REPOR_INCEN.INC_PR_REPOR_CUPON_ELECT(?, ?) }
  	</procedure>

	<parameterMap id="executeGenerarReporteINCCuponesElectronicosCSVParams" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="usuarioLogin" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
  	<procedure id="executeGenerarReporteINCCuponesElectronicosCSV" parameterMap="executeGenerarReporteINCCuponesElectronicosCSVParams" >
		{call INC_PKG_REPOR_INCEN.INC_PR_GENER_REPOR_CUPON_ELECT(?, ?, ?, ?, ?)}
  	</procedure>
  	
  	<parameterMap id="executeReporteCUPNuevaUnidadAtendidaCSVParam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	
	<procedure id="executeReporteCUPNuevaUnidadAtendidaCSV" parameterMap="executeReporteCUPNuevaUnidadAtendidaCSVParam" >
		{ call CUP_PKG_PROG_NUEVAS.CUP_PR_GENER_NUEVA_UNIDA_ATEND(?, ?, ?, ?, ?) }
	</procedure>
  	
    <procedure id="executeAuditoriaSaldoCuentasPorCobrar">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_SALDO_DIARI}
    </procedure>    
	
    <insert id="insertTablaRegionZona" parameterClass="java.util.Map" >	
		INSERT INTO APE_REPOR_REGIO_ZONA(COD_ZONA)
		VALUES(#codigoZona#)
	</insert>
	
	<delete id="deleteTablaRegionZona">
        TRUNCATE TABLE APE_REPOR_REGIO_ZONA
    </delete>
    	
	<parameterMap id="executeReporteMgpedxdiaCsvParams" class="map">
		<parameter property="codigoPeriodo"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
				
	<procedure id="executeReporteMgpedxdiaCsv1" parameterMap="executeReporteMgpedxdiaCsvParams">
		{call APE_PKG_PROCE.APE_PR_REPOR_MGPED_CSV1(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="executeReporteAPEDistribucionCdrsFacturacionRealParams" class="map">
		<parameter property="codigoPeriodo"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="usuario"	  				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
				
	<procedure id="executeReporteAPEDistribucionCdrsFacturacionReal" parameterMap="executeReporteAPEDistribucionCdrsFacturacionRealParams">
		{call APE_PKG_PROCE.APE_PR_REPOR_DISTR_FACTU_REAL(?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="executeReporteSACFacturacionDetalleParams" class="map">
		<parameter property="codigoPeriodo"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="almacen"	  				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFacturacion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tipoPedido" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteSACFacturacionDetalle" parameterMap="executeReporteSACFacturacionDetalleParams">
		{call SAC_PKG_REPOR.SAC_PR_REPOR_FACTU_DETA(?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<delete id="deleteReporteSICDetalleUnidadesAtendidasFaltantes" parameterClass="java.util.Map"  >
        DELETE FROM SIC_TMP_DETAL_UNIDA_FALTA
    </delete>
	
	 <insert id="insertReporteSICDetalleUnidadesAtendidasFaltantes" parameterClass="java.util.Map" >	
		INSERT INTO SIC_TMP_DETAL_UNIDA_FALTA(
			VAL_CODI_VENT, 
			COD_SAP, 
			DES_PROD, 
			COD_TIPO_OFER, 
			FEC_FACT, 
			DES_REGI, 
			DES_ZONA, 
			DES_SECC, 
			COD_TERR, 
			COD_CLIE, 
			VAL_NOM1, 
			VAL_NOM2, 
			VAL_APE1, 
			VAL_APE2, 
			VAL_APEL_CASA, 
			NUM_UNID_DEMA, 
			IND_CTRL_STOC, 
			NUM_UNID_DEMA_REAL, 
			NUM_UNID_ATEN, 
			NUM_UNID_FALT, 
			VAL_IMPO_UNIT, 
			VAL_PORC_DESC, 
			VAL_NUME_SOLI, 
			VAL_STAT_CLIE
		)
		select y.VAL_CODI_VENT, 
		       s.COD_SAP CODIGO_PRODUCTO, 
		       INT_PKG_RECLA.GEN_FN_DESC_PROD(S.OID_PROD) AS DESCRIPCION, 
		       (SELECT B.VAL_I18N
		          FROM pre_tipo_ofert tof, 
		               pre_ofert_detal od,
		               GEN_I18N_SICC_COMUN B
		         WHERE tof.OID_TIPO_OFER=od.TOFE_OID_TIPO_OFER 
		         and y.OFDE_OID_DETA_OFER=od.OID_DETA_OFER 
				 and tof.OID_TIPO_OFER = B.VAL_OID
				   AND B.ATTR_ENTI = 'PRE_TIPO_OFERT'
		         ) COD_TIPO_OFER,          
		       x.FEC_FACT, 
		       g.DES_REGI REGION, 
		       f.DES_ZONA ZONA, 
		       e.DES_SECCI SECCION, 
		       d.COD_TERR TERRITORIO, 
		       a.COD_CLIE CODIGO, 
		       a.VAL_NOM1 NOMBRE1, 
		       a.VAL_NOM2 NOMBRE2, 
		       a.VAL_APE1 APELLIDO_PATERNO, 
		       a.VAL_APE2 APELLIDO_MATERNO, 
		       a.VAL_APEL_CASA APELLIDO_CASADA, 
		       y.NUM_UNID_DEMA, 
		       DECODE(y.IND_CTRL_STOC,1,'SI','NO') SE_APLICO_CONTROL_STOCK, 
		       y.NUM_UNID_DEMA_REAL UNIDADES_DEMANDADAS, 
		       y.NUM_UNID_ATEN UNIDADES_ATENDIDAS, 
		      <![CDATA[ case when y.NUM_UNID_DEMA_REAL-y.NUM_UNID_ATEN 
		       < 0   then 0
       			 else y.NUM_UNID_DEMA_REAL-y.NUM_UNID_ATEN
        		end FALTANTE ]]>,  
		       y.VAL_PREC_CATA_UNIT_LOCA-nvl(y.VAL_IMPO_DESC_UNIT_LOCA,0) IMPORTE_UNITARIO, 
		       y.VAL_PORC_DESC PORCENTAJE_DESCUENTO,
		       (select val_nume_soli from ped_solic_cabec where oid_soli_cabe=x.soca_oid_soli_cabe) BOLETA_DESPACHO,
		       (
		        SELECT gsc.val_i18n
				        FROM mae_clien_datos_adici dac, gen_i18n_sicc_comun gsc
				        WHERE dac.clie_oid_clie = a.oid_clie
				       AND gsc.attr_enti = 'MAE_ESTAT_CLIEN'
				       AND gsc.val_oid = dac.esta_oid_esta_clie
				       AND dac.IND_ACTI = 1
				       ) STATUS_CLIENTE
				from ped_solic_cabec x, 
				     ped_solic_posic y, 
				     mae_clien a, 
				     mae_clien_unida_admin b, 
				     zon_terri_admin c , 
				     zon_terri d, 
				     zon_secci e, 
				     zon_zona f, 
				     zon_regio g , 
				     mae_produ s     
				where  
				x.OID_SOLI_CABE=y.SOCA_OID_SOLI_CABE 
				and x.CLIE_OID_CLIE=a.OID_CLIE 
				and b.CLIE_OID_CLIE=a.OID_CLIE 
				and b.ZTAD_OID_TERR_ADMI=c.OID_TERR_ADMI 
				and c.ZSCC_OID_SECC=e.OID_SECC 
				and c.TERR_OID_TERR=d.OID_TERR 
				and e.ZZON_OID_ZONA=f.OID_ZONA 
				and f.ZORG_OID_REGI=g.OID_REGI 
				and x.PERD_OID_PERI= #oidPeriodo#
				and y.PROD_OID_PROD=s.OID_PROD 
				AND EXISTS (SELECT * FROM ped_tipo_solic pt, ped_tipo_solic_pais pts 
				            WHERE  pt.COD_TIPO_SOLI in ('C1','C8','C81') and x.TSPA_OID_TIPO_SOLI_PAIS_CONS=pts.OID_TIPO_SOLI_PAIS       
				            and pts.TSOL_OID_TIPO_SOLI=pt.OID_TIPO_SOLI  ) 
				and x.FEC_FACT is not null 
				and (x.ESSO_OID_ESTA_SOLI = 1 OR x.ESSO_OID_ESTA_SOLI = 5) 
				and nvl(y.VAL_CODI_VENT,0) = Decode(#codigoVenta#,null, nvl(y.VAL_CODI_VENT,0),'', nvl(y.VAL_CODI_VENT,0), #codigoVenta# ) 
				 <![CDATA[
				and y.ESPO_OID_ESTA_POSI<>2 
				  ]]>
				
				and b.IND_ACTI=1 
				and s.COD_SAP = Decode(#codigoSap#,null,s.COD_SAP,'',s.COD_SAP, #codigoSap# ) 
				 <![CDATA[
				and ((#fechaFacturacionInicio# is null OR x.FEC_FACT >= to_date(#fechaFacturacionInicio#,'dd/mm/yyyy')) 
				      and (#fechaFacturacionFin# is null OR x.FEC_FACT <= to_date(#fechaFacturacionFin#,'dd/mm/yyyy') )
				    )
				  ]]>
				$tipoOferta$
				$filtroReporte$
				$condicion$
				$statusCliente$
				$filtroOrdenCompra$ 
		
	</insert>
	
	<parameterMap id="paramExecuteReporteSICDetalleUnidadesAtendidasFaltantesCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
				
	<procedure id="executeReporteSICDetalleUnidadesAtendidasFaltantesCSV" parameterMap="paramExecuteReporteSICDetalleUnidadesAtendidasFaltantesCSV">
		{call SIC_PKG_REPOR.SIC_PR_REPOR_DETAL_UNIDA_ATEND(?,?,?,?)}
	</procedure>
	
	
	<delete id="deleteReporteMAEConsejerasBloqueadasDesbloqueadas" parameterClass="java.util.Map"  >
        DELETE FROM MAE_TMP_CONSE_BLOQU_DESBL
    </delete>
	
	<insert id="insertReporteMAEConsejerasBloqueadasDesbloqueadas" parameterClass="java.util.Map" >	
	   <![CDATA[
	   INSERT INTO MAE_TMP_CONSE_BLOQU_DESBL (
	   		DES_TIPO_REPO, 
			DES_REGI, 
			COD_ZONA, 
			COD_SECC, 
			COD_TERR, 
			COD_CLIE, 
			NUM_DOCU_IDEN, 
			VAL_APEL_NOMB, 
			FEC_INGR, 
			CAM_INGR,
			VAL_ESTA_ACTU, 
			SAL_DEUD_ANTE, 
			VAL_BLOQ, 
			OBS_BLOQ, 
			COD_PERI_BLOQ_MINI, 
			FEC_BLOQ, 
			VAL_HORA_BLOQ, 
			VAL_USUA_BLOQ, 
			OBS_DESB, 
			COD_PERI_DESB_MINI, 
			FEC_DESB, 
			VAL_HORA_DESB, 
			VAL_USUA_DESB,
			VAL_ESTA_DESB,
			VAL_AREA_ORIG,
			VAL_ESTA
	   )
	   SELECT 
		   #codigoTipoReporte# DES_TIPO_REPO,
		   ZR.DES_REGI REGION,
	       ZZ.COD_ZONA ZONA,
	       ZS.COD_SECC SECCION,
	       ZT.COD_TERR TERRITORIO,
	       M.COD_CLIE COD_CLIE,
	       MCI.NUM_DOCU_IDEN,
	       TRIM(M.VAL_APE1) || ' ' || TRIM(M.VAL_APE2) || ', ' || TRIM(M.VAL_NOM1) || ' ' ||  TRIM(M.VAL_NOM2) NOMBRE,
	       TO_CHAR(M.FEC_INGR, 'DD/MM/YYYY') FEC_ING,
	       mae_pkg_proce_clien.mae_fn_devue_perio_mayor_fecha(#codigoPais#, 'T', 'VD', M.FEC_INGR) CAM_INGR,
	       (SELECT VAL_I18N
	          FROM GEN_I18N_SICC_COMUN G
	         WHERE G.ATTR_ENTI = 'MAE_ESTAT_CLIEN'
	           AND G.VAL_OID = MDA.ESTA_OID_ESTA_CLIE) ESTADO_ACTUAL,
	       M.SAL_DEUD_ANTE SAL_DEUD_ANTE,
	       (SELECT VAL_I18N
	          FROM GEN_I18N_SICC_COMUN G
	         WHERE G.ATTR_ENTI = 'MAE_TIPO_BLOQU'
	           AND G.VAL_OID = B.TIBQ_OID_TIPO_BLOQ) BLOQUEO,
	       B.OBS_BLOQ OBS_BLOQ,
	       (SELECT MIN(SP.COD_PERI)
	          FROM CRA_PERIO       CP,
	               SEG_PERIO_CORPO SP
	         WHERE B.FEC_BLOQ BETWEEN CP.FEC_INIC AND CP.FEC_FINA
	           AND SP.OID_PERI = CP.PERI_OID_PERI) PERIODO_BLOQUEO,
	       TO_CHAR(B.FEC_BLOQ, 'DD/MM/YYYY') FECHA_BLOQUEO,
	       TO_CHAR(B.FEC_BLOQ,'HH24:MI:SS') HORA_BLOQUEO,        
	       B.VAL_USUA_BLOQ USU_BLOQ,
	       B.OBS_DESB OBS_DESB,
	       (SELECT MIN(SP.COD_PERI)
	          FROM CRA_PERIO       CP,
	               SEG_PERIO_CORPO SP
	         WHERE B.FEC_DESB BETWEEN CP.FEC_INIC AND CP.FEC_FINA
	           AND SP.OID_PERI = CP.PERI_OID_PERI) PERIODO_DESBLOQUEO,
	       TO_CHAR(B.FEC_DESB, 'DD/MM/YYYY') FECHA_DESBLOQUEO,
	       TO_CHAR(B.FEC_DESB,'HH24:MI:SS') HORA_DESBLOQUEO,
	       B.VAL_USUA_DESB VAL_USU_DESB,
	       (CASE B.IND_DESB WHEN '1' THEN 'Pendiente de Regularizacion' ELSE 'Completo o Solucionado' END) VAL_ESTA_DESB,
	       (SELECT DES_AREA_NEGO FROM MAE_AREA_NEGOC WHERE COD_AREA = B.ARNE_COD_AREA) VAL_AREA_ORIG,
	       (CASE WHEN MDA.IND_ACTI = 1 THEN 'Activo' ELSE 'Inactivo' END) ESTADO
	  FROM MAE_CLIEN             M,
	       MAE_CLIEN_BLOQU       B,
	       MAE_CLIEN_UNIDA_ADMIN UA,
	       MAE_CLIEN_DATOS_ADICI MDA,
	       MAE_CLIEN_IDENT     MCI,
	       ZON_TERRI_ADMIN       ZTA,
	       ZON_SECCI             ZS,
	       ZON_ZONA              ZZ,
	       ZON_REGIO             ZR,
	       ZON_TERRI             ZT
	 WHERE M.OID_CLIE = B.CLIE_OID_CLIE
	   AND UA.CLIE_OID_CLIE = M.OID_CLIE
	   AND UA.ZTAD_OID_TERR_ADMI = ZTA.OID_TERR_ADMI
	   AND UA.IND_ACTI = 1
	   AND ZTA.TERR_OID_TERR = ZT.OID_TERR
	   AND ZTA.ZSCC_OID_SECC = ZS.OID_SECC
	   AND ZS.ZZON_OID_ZONA = ZZ.OID_ZONA
	   AND ZZ.ZORG_OID_REGI = ZR.OID_REGI
	   AND M.OID_CLIE = MDA.CLIE_OID_CLIE
	   AND MCI.VAL_IDEN_DOCU_PRIN = 1
	   AND MCI.CLIE_OID_CLIE = M.OID_CLIE
	   $condicionRegion$
	   $condicionZonas$    
	   $condicionBloqueo$     
	   AND EXISTS (SELECT 1
	          FROM CRA_PERIO       CP,
	               SEG_PERIO_CORPO SP
	         WHERE B.FEC_BLOQ BETWEEN CP.FEC_INIC AND CP.FEC_FINA
	           AND SP.OID_PERI = CP.PERI_OID_PERI
	           AND SP.COD_PERI >= DECODE(#codigoPeriodoInicial#,'',SP.COD_PERI, #codigoPeriodoInicial#)
	           AND SP.COD_PERI <= DECODE(#codigoPeriodoFinal#,'',SP.COD_PERI, #codigoPeriodoFinal#))
	   $condicionFechas$
	   AND MDA.ESTA_OID_ESTA_CLIE = DECODE(#codigoTipoReporte#,'T',MDA.ESTA_OID_ESTA_CLIE, #codigoTipoReporte#)
	   ]]>
	</insert>
	
	<parameterMap id="paramExecuteReporteMAEConsejerasBloqueadasDesbloqueadasCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteMAEConsejerasBloqueadasDesbloqueadasCSV" parameterMap="paramExecuteReporteMAEConsejerasBloqueadasDesbloqueadasCSV">
		{call MAE_PKG_REPOR.MAE_PR_REPOR_CONSE_BLOQU_DESBL(?,?,?,?)}
	</procedure>
	
	<parameterMap id="paramExecuteReporteCOBDetalladoRecuperacionCarteraCobradorCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSociedad" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoInicio" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoFin" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoEtapaDeuda" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoCobrador" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="vistaReporte" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteCOBDetalladoRecuperacionCarteraCobradorCSV" parameterMap="paramExecuteReporteCOBDetalladoRecuperacionCarteraCobradorCSV">
		{call COB_PKG_REPOR_ESTAD.cob_pr_detal_carte_cobra_csv(?,?,?,?,?,?,?,?,?,?)}
	</procedure>

	<parameterMap id="paramExecuteReporteCOBCargaMasivaGestionCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSociedad" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoInicio" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoFin" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoEtapaDeuda" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoCobrador" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCOBCargaMasivaGestionCSV" parameterMap="paramExecuteReporteCOBCargaMasivaGestionCSV">
		{call COB_PKG_REPOR_ESTAD.cob_pr_carga_masiv_gesti_csv(?,?,?,?,?,?,?,?,?)}
	</procedure>

	<delete id="deleteReporteINCPuntObtenidosBolsaFaltantesInc" parameterClass="java.util.Map"  >
        DELETE FROM INC_TMP_PUNTO_BOLSA_FALTA
    </delete>
	
	 <insert id="insertReporteINCPuntObtenidosBolsaFaltantesInc" parameterClass="java.util.Map" >	
		INSERT INTO INC_TMP_PUNTO_BOLSA_FALTA(
			COD_REGI,
			DES_REGI,
			COD_ZONA,
			DES_ZONA,
			COD_TERR,
			COD_SECC,
			COD_CLIE,
			TIP_DOCU,
			NUM_DOCU,
			NOM_CLIE,
			NUM_TELE,
			NUM_CELU,
			VAL_DIRE,
			NUM_CONC,
			VAL_NOMB, 
			COD_SAP,
			DES_PROD,
			VAL_TOTA,
			FEC_ASIG,
			FEC_SOLU,
			VAL_OBSE,
			VAL_NUME_SOLI,
			COD_VTA,
			NUM_UNID,
			VAL_PREC_UNIT,
			VAL_PREC_TOTA,
			VAL_ESTA,
			COD_CAMP,
			FEC_FACT,
			TIP_SOLI
		)
		select	cod_regi,
				des_regi,
				cod_zona,
				des_zona,
				cod_terr,
				COD_SECC,   
				cod_clie,
				Tipo_Documento as tipo_doc,   
				Nro_Documento as num_doc,    
				nombre,      
				Telefono,
				Celular,  
				Direccion,  
				num_conc,
				val_nomb,
				cod_sap,
				producto,
				sum(total) as total
				,to_char(fecha_asig,'dd/mm/yyyy') as fecha_asig,
				fecha_solu,
				val_obse,
				val_nume_soli,
				COD_VTA,
				UNIDADES,
				PRECIO_UNITARIO,
				PRECIO_TOTAL,
				ESTATUS,
				CAMPANA,
				FECHA_FACT,
				TIPO_SOLICITUD
		from
		(
		select
		  ZON_REGIO.COD_REGI,
		  ZON_REGIO.DES_REGI,
		  ZON_ZONA.COD_ZONA,
		  ZON_ZONA.DES_ZONA,
		  ZON_TERRI.COD_TERR,
		  ZON_SECCI.COD_SECC,
		  MAE_TIPO_DOCUM.VAL_SIGL as Tipo_Documento, 
		  MAE_CLIEN_IDENT.NUM_DOCU_IDEN as Nro_Documento, 
		  (SELECT DECODE(MCC.VAL_TEXT_COMU , NULL, '',MCC.VAL_TEXT_COMU)
		    FROM MAE_TIPO_COMUN MTC ,
		         MAE_CLIEN_COMUN MCC 
		    WHERE MTC.OID_TIPO_COMU = MCC.TICM_OID_TIPO_COMU
		    AND  MTC.COD_TIPO_COMU  ='TF' 
		    AND  MCC.CLIE_OID_CLIE= MAE_CLIEN.oid_clie ) Telefono,
		  (SELECT DECODE(MCC.VAL_TEXT_COMU , NULL, '',MCC.VAL_TEXT_COMU)
		    FROM MAE_TIPO_COMUN MTC ,
		         MAE_CLIEN_COMUN MCC 
		    WHERE MTC.OID_TIPO_COMU = MCC.TICM_OID_TIPO_COMU
		    AND  MTC.COD_TIPO_COMU  ='TM' 
		    AND  MCC.CLIE_OID_CLIE= MAE_CLIEN.oid_clie ) Celular,
		  DIRECCION.DESC_UNI as Direccion,  
		  MAE_CLIEN.oid_clie,
		  MAE_CLIEN.cod_clie,
		  VAL_NOM1 || ' ' || VAL_NOM2 || ' ' || VAL_APE1 || ' ' || VAL_APE2 as nombre,
		  (SELECT VAL_I18N FROM GEN_I18N_SICC_COMUN
		    WHERE ATTR_ENTI='MAE_ESTAT_CLIEN'
		      AND VAL_OID=mae_clien_datos_adici.ESTA_OID_ESTA_CLIE) AS ESTATUS
		from
		  MAE_CLIEN,
		  MAE_CLIEN_UNIDA_ADMIN,
		  ZON_TERRI_ADMIN,
		  ZON_SECCI,
		  ZON_ZONA,  
		  ZON_REGIO,
		  ZON_TERRI,      
		  ZON_SUB_GEREN_VENTA,
		  MAE_CLIEN_IDENT,  
		  MAE_TIPO_DOCUM,
		  mae_clien_datos_adici,     
		   (  
		        select COD_CLIE,DES_ABRV_TIPO_VIA || ' ' || VAL_NOMB_VIA || ' ' || NUM_PPAL || ' ' || VAL_OBSE || ' ' ||
		       nivel_1
		       || DECODE(nivel_2, NULL, '', '/' || nivel_2)
		       || DECODE(nivel_3, NULL, '', '/' || nivel_3)
		       || DECODE(nivel_4, NULL, '', '/' || nivel_4)
		       || DECODE(nivel_5, NULL, '', '/' || nivel_5)
		       || DECODE(nivel_6, NULL, '', '/' || nivel_6)
		       || DECODE(nivel_7, NULL, '', '/' || nivel_7)
		       || DECODE(nivel_8, NULL, '', '/' || nivel_8)
		       || DECODE(nivel_9, NULL, '', '/' || nivel_9) AS DESC_UNI
		
		   FROM (SELECT D.COD_CLIE,
		   mcd.OID_CLIE_DIRE OID,
		               c.DES_ABRV_TIPO_VIA,
		               mcd.VAL_NOMB_VIA,
		               mcd.NUM_PPAL,
		               mcd.VAL_OBSE,
		               mcd.VAL_BARR,
		               t.COD_TERR,
		               (SELECT DES_CIUD
		                  FROM ZON_CIUDA
		                 WHERE COD_UGEO_REGI = mcd.CIUD_COD_UGEO_REGI
		                   AND COD_CIUD = mcd.CIUD_COD_CIUD) DES_CIUD,
		               mcd.DES_VILLA_POBL,
		               (SELECT des_geog
		                  FROM zon_valor_estru_geopo
		                 WHERE pais_oid_pais = d.pais_oid_pais
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                   AND orde_2 IS NULL) AS nivel_1,
		               (SELECT des_geog
		                  FROM zon_valor_estru_geopo
		                 WHERE pais_oid_pais = d.pais_oid_pais
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                   AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                   AND orde_3 IS NULL) AS nivel_2,
		               (SELECT des_geog
		                  FROM zon_valor_estru_geopo
		                 WHERE pais_oid_pais = d.pais_oid_pais
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                   AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                   AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)
		                   AND orde_4 IS NULL) AS nivel_3,
		               CASE
		                 WHEN LENGTH(mcd.cod_unid_geog) > 18
		                  THEN
		                  (SELECT des_geog
		                     FROM zon_valor_estru_geopo
		                    WHERE pais_oid_pais =
		                          d.pais_oid_pais
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)
		                      AND orde_5 IS NULL)
		                 ELSE
		                  NULL
		               END AS nivel_4,
		               CASE
		                 WHEN LENGTH(mcd.cod_unid_geog) > 24
		                  THEN
		                  (SELECT des_geog
		                     FROM zon_valor_estru_geopo
		                    WHERE pais_oid_pais = d.pais_oid_pais
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)
		                      AND orde_6 IS NULL)
		                 ELSE
		                  NULL
		               END AS nivel_5,
		               CASE
		                 WHEN LENGTH(mcd.cod_unid_geog) > 30
		                  THEN
		                  (SELECT des_geog
		                     FROM zon_valor_estru_geopo
		                    WHERE pais_oid_pais = d.pais_oid_pais
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)
		                      AND orde_7 IS NULL)
		                 ELSE
		                  NULL
		               END AS nivel_6,
		               CASE
		                 WHEN LENGTH(mcd.cod_unid_geog) > 36
		                  THEN
		                  (SELECT des_geog
		                     FROM zon_valor_estru_geopo
		                    WHERE pais_oid_pais =  d.pais_oid_pais
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)
		                      AND orde_8 IS NULL)
		                 ELSE
		                  NULL
		               END AS nivel_7,
		               CASE
		                 WHEN LENGTH(mcd.cod_unid_geog) > 42
		                  THEN
		                  (SELECT des_geog
		                     FROM zon_valor_estru_geopo
		                    WHERE pais_oid_pais = d.pais_oid_pais
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)
		                      AND orde_8 = SUBSTR(mcd.cod_unid_geog, 43, 6)
		                      AND orde_9 IS NULL)
		                 ELSE
		                  NULL
		               END AS nivel_8,
		               CASE
		                 WHEN LENGTH(mcd.cod_unid_geog) > 48
		                  THEN
		                  (SELECT des_geog
		                     FROM zon_valor_estru_geopo
		                    WHERE pais_oid_pais = d.pais_oid_pais
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)
		                      AND orde_8 = SUBSTR(mcd.cod_unid_geog, 43, 6)
		                      AND orde_9 = SUBSTR(mcd.cod_unid_geog, 49, 6))
		                 ELSE
		                  NULL
		               END AS nivel_9
		          FROM MAE_CLIEN_DIREC mcd,
		               MAE_TIPO_DIREC mtd,
		               SEG_TIPO_VIA c,
		               MAE_CLIEN d,
		               ZON_TERRI t
		         WHERE 
		            d.OID_CLIE = mcd.CLIE_OID_CLIE
		           AND mcd.IND_ELIM = 0
		           AND mtd.OID_TIPO_DIRE = mcd.TIDC_OID_TIPO_DIRE
		           AND c.OID_TIPO_VIA = mcd.TIVI_OID_TIPO_VIA
		           AND mcd.IND_DIRE_PPAL = 1
		           AND mcd.TERR_OID_TERR = t.OID_TERR(+)
		         ORDER BY mcd.OID_CLIE_DIRE DESC)
		         ) DIRECCION            
		
		where
		  1=1  
		  and MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE
		  and MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI
		  and ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC
		  and ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA
		  and ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI
		  and ZON_REGIO.ZSGV_OID_SUBG_VENT = ZON_SUB_GEREN_VENTA.OID_SUBG_VENT
		  and MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1
		  AND ZON_TERRI.OID_TERR =  ZON_TERRI_ADMIN.TERR_OID_TERR  
		  AND MAE_CLIEN.OID_CLIE = MAE_CLIEN_IDENT.CLIE_OID_CLIE  
		  AND MAE_CLIEN_IDENT.val_iden_docu_prin=1                
		  AND MAE_TIPO_DOCUM.oid_tipo_docu = MAE_CLIEN_IDENT.tdoc_oid_tipo_docu
		  AND mae_clien_datos_adici.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE 
		  AND DIRECCION.COD_CLIE = MAE_CLIEN.COD_CLIE
		  $condicion$  
		)zon, 
		(  
		select
		  NUM_CONC,
		  VAL_NOMB,
		  INC_BOLSA_FALTA.NUM_PREM,
		  cod_sap,
		  dep.VAL_I18N as producto,
		  INC_BOLSA_FALTA.clie_oid_clie,
		    to_date(fec_alta,'dd/MM/yyyy') as fecha_asig,
		  to_date(fec_solu,'dd/MM/yyyy') as fecha_solu,
  		  INC_BOLSA_FALTA.val_obse, 
		  sum(NUM_UNID_FALT) total,
		  CON.val_nume_soli,
		  posi.VAL_CODI_VENT AS COD_VTA,
		  posi.NUM_UNID_ATEN AS UNIDADES,
		  posi.VAL_PREC_FACT_UNIT_LOCA AS PRECIO_UNITARIO,
		  posi.VAL_PREC_FACT_TOTA_LOCA AS PRECIO_TOTAL,
		  per.val_nomb_peri AS CAMPANA,
		  TO_CHAR(SOL.FEC_FACT,'DD/MM/YYYY') AS FECHA_FACT,
		  DTS.VAL_I18N AS TIPO_SOLICITUD
		from
		  INC_BOLSA_FALTA,
		  INC_CONCU_PARAM_GENER,
		  mae_produ,
		  (select VAL_I18N, VAL_OID from GEN_I18N_SICC_PAIS where ATTR_ENTI = 'MAE_PRODU') dep
		  , PED_SOLIC_POSIC posi
		  , PED_SOLIC_CABEC CON
		  , PED_SOLIC_CABEC SOL
		  , CRA_PERIO PER
		  , PED_TIPO_SOLIC_PAIS TSPA
		  , GEN_I18N_SICC_COMUN DTS
		where
		  INC_BOLSA_FALTA.COPA_OID_PARA_GENE = INC_CONCU_PARAM_GENER.OID_PARA_GRAL
		  $condicionFaltante$
		  and INC_BOLSA_FALTA.PROD_OID_PROD = dep.VAL_OID
		  $numeroConcurso$  
		  $condicionPeriodoInicio$
  		  $condicionPeriodoFin$
		  and mae_produ.OID_PROD = dep.VAL_OID
		  and INC_BOLSA_FALTA.Sopo_Oid_Soli_Posi=posi.oid_soli_posi
		  AND CON.OID_SOLI_CABE=SOL.SOCA_OID_SOLI_CABE
		  AND SOL.OID_SOLI_CABE=posi.SOCA_OID_SOLI_CABE
		  AND INC_BOLSA_FALTA.PERD_OID_PERI=PER.OID_PERI
		  AND SOL.TSPA_OID_TIPO_SOLI_PAIS=TSPA.OID_TIPO_SOLI_PAIS
		  AND DTS.VAL_OID=TSPA.TSOL_OID_TIPO_SOLI
		  AND DTS.ATTR_ENTI='PED_TIPO_SOLIC'
		group by 
		    NUM_CONC,VAL_NOMB, INC_BOLSA_FALTA.NUM_PREM, cod_sap,dep.VAL_I18N, INC_BOLSA_FALTA.clie_oid_clie ,to_date(fec_alta,'dd/MM/yyyy'),
		    to_date(fec_solu,'dd/MM/yyyy'),INC_BOLSA_FALTA.val_obse,
		    CON.val_nume_soli,posi.VAL_CODI_VENT,posi.NUM_UNID_ATEN,posi.NUM_UNID_POR_ATEN,posi.VAL_PREC_FACT_UNIT_LOCA,
    		posi.VAL_PREC_FACT_TOTA_LOCA,per.val_nomb_peri,SOL.FEC_FACT,DTS.VAL_I18N
		) bolsa
		where
		zon.oid_clie = bolsa.clie_oid_clie
		group by
		cod_regi,
		des_regi,
		cod_zona,
		des_zona,
		cod_terr,
		COD_SECC,
		num_conc,
		val_nomb,
		Tipo_Documento,
		Nro_Documento,
		cod_clie,
		nombre,
		Telefono,
		Celular,
		Direccion,
		cod_sap,
		producto,
		fecha_asig,
		fecha_solu,
		val_obse,
		val_nume_soli, 
		COD_VTA,
		UNIDADES,
		PRECIO_UNITARIO,
		PRECIO_TOTAL,
		ESTATUS,
		CAMPANA,
		FECHA_FACT,
		TIPO_SOLICITUD
	</insert>
	
        <parameterMap id="paramExecuteReporteINCPuntObtenidosBolsaFaltantesIncCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>

	<procedure id="executeReporteINCPuntObtenidosBolsaFaltantesIncCSV" parameterMap="paramExecuteReporteINCPuntObtenidosBolsaFaltantesIncCSV">
		{call INC_PKG_REPOR_INCEN.INC_PR_REPOR_PUNTO_BOLSA_FALTA(?,?,?,?)}
	</procedure>
	
	<delete id="deleteReporteCOBDetalladCobranza31dias" parameterClass="java.util.Map"  >	
	    delete from COB_TMP_DETAL_COBRA_31DIA 
	</delete>
	
	<delete id="deleteReportePEDSeguimientoConsultora" parameterClass="java.util.Map"  >	
	    delete from PED_TMP_DETAL_SEGUI_CONSU 
	</delete>
	
	<delete id="deleteReportePEDAvanceFacturadoProgramaReconocimientoVZConsu" parameterClass="java.util.Map"  >	
	    delete from PED_AFPRV_CONSU_TEMPO 
	</delete>
	
	<insert id="insertReportePEDAvanceFacturadoProgramaReconocimientoVZConsu" parameterClass="java.util.Map">
		INSERT INTO PED_AFPRV_CONSU_TEMPO (COD_CLIE)
		VALUES(#codigoCliente#)
	</insert>
	
	<parameterMap id="executeReportePEDAvanceFacturadoProgramaReconocimientoVZParams" class="map">
		<parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoInicio" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoFin" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
	</parameterMap>


	<procedure id="executeReportePEDAvanceFacturadoProgramaReconocimientoVZ" parameterMap="executeReportePEDAvanceFacturadoProgramaReconocimientoVZParams">
		{call ped_pkg_proce.ped_pr_afprv_repor_pedid(?, ?, ?)}
	</procedure>
	
	<insert id="insertReporteCOBDetalladCobranza31dias" parameterClass="java.util.Map"  >	
	   INSERT INTO COB_TMP_DETAL_COBRA_31DIA (
	   	COD_REGI, 
		COD_ZONA, 
		COD_SECC, 
		NUM_DOCU_IDEN, 
		COD_CLIE, 
		COD_DIGI_CTRL, 
		NOM_CLIE, 
		NUM_TELE, 
		PRIM_PEDI, 
		FEC_DOCU, 
		IMP_FAC_NETO, 
		COB_DIAS_31, 
		COB_DIAS_999, 
		IMP_SALD_PEND_SAC,
		IMP_CARG_DIRE	
	   )
	   with  Saldos  as  (
			SELECT 
			      cod_regi, 
			      cod_zona,
			      cod_secc,                                
			      oid_clie,
			   min(mcc.fec_docu)fec_docu,
			   SUM(imp_fact_neto) imp_fac_neto,
			   SUM(COB_DIAS_31) COB_DIAS_31,
			   SUM(COB_DIAS_999) COB_DIAS_999,
			   SUM(IMP_SALD_PEND_sac) IMP_SALD_PEND_SAC,
			   SUM(IMP_CARG_DIRE) IMP_CARG_DIRE			  
			FROM cob_repor_estad_recup_cobra cbz,
			     ccc_movim_cuent_corri mcc
			WHERE   
			 <![CDATA[
			   cbz.cod_peri >= #codigoPeriodoInicial#
			   AND cbz.cod_peri <=  #codigoPeriodoFinal#
			 ]]>
			   and mcc.oid_movi_cc = cbz.oid_movi_cc
			   $condicion$
			GROUP BY 
			      cod_regi, 
			      cod_zona,
			      cod_secc,
			      oid_clie
	   )
		select  
		      sal.cod_regi, 
		      sal.cod_zona, 
		      sal.cod_secc,
		      mci.num_docu_iden,
		      mc.cod_clie,
		      nvl(mc.cod_digi_ctrl, ' ') cod_digi_ctrl,
		      mc.val_nom1 || ' ' || mc.val_nom2 || ' ' || mc.val_ape1 || ' ' || mc.val_ape2 nom_clie,      
		      nvl((
			      SELECT  mcc.val_text_comu  num_tele 
			      FROM  mae_clien_comun mcc,
			                mae_tipo_comun mtc 
			      WHERE mcc.clie_oid_clie = sal.oid_clie  
			      and      mcc.ticm_oid_tipo_comu  =  mtc.oid_tipo_comu 
			      and      mtc.cod_tipo_comu   =  'TF' 
				),' ')  num_tele ,
		      
			 nvl((
			        select   cor.cod_peri   
			        from  mae_clien_prime_conta pc,
			                 cra_perio cam,
			                 seg_perio_corpo cor
			        where  sal.oid_clie  =   pc.clie_oid_clie   
			        and  cam.PERI_OID_PERI =  cor.OID_PERI
			        and  cam.oid_peri  =   pc.perd_oid_peri  
				),' ')   prim_pedi,  
		      to_char(sal.fec_docu,'dd/mm/yyyy') fec_docu,
		      sal.imp_fac_neto,
		      sal.COB_DIAS_31,
		      sal.COB_DIAS_999,
		      sal.IMP_SALD_PEND_SAC,
		      sal.IMP_CARG_DIRE
		from  saldos    sal,
		      mae_clien mc,
		      mae_clien_ident mci                              
		where  mc.oid_clie       =   sal.oid_clie     
		AND mc.oid_clie  = mci.CLIE_OID_CLIE
		AND mci.VAL_IDEN_DOCU_PRIN  =  1    
	</insert>
		
		<insert id="insertReportePEDSeguimientoConsultora" parameterClass="java.util.Map"  >	
	   INSERT INTO PED_TMP_DETAL_SEGUI_CONSU (
	   	  COD_REGI,
		  COD_ZONA,
		  COD_SECC,
		  COD_TERR,
		  COD_CLIE,
		  COD_DIGI_CTRL,
		  NOM_CLIE,
		  CAMP_INGR,          
		  CAMP_PRIM_PEDI,
		  CAMP_ULTI_PEDI,
		  SAL_DEUD_ANTE,
		  ESTADO,
		  VAL_NUME_PEDI,
		  DIRECCION,
		  COLONIA,
		  LOCALIDAD,
		  DEL_MUN,
		  DESC_ESTA,
		  val_cod_post,
		  PRIM_FONO,
		  SEGU_FONO,
		  COD_RECOM
	   )
		SELECT G.COD_REGI REGION,
		       F.COD_ZONA ZONA,
		       H.COD_SECC,
		       E.COD_TERR TERRITORIO,
		       B.COD_CLIE CODIGO_CLIENTE,
		       B.COD_DIGI_CTRL DIG_VER,
		       TRIM(B.VAL_APE1) || '/' || TRIM(B.VAL_APE2) || '/' ||
		       TRIM(B.VAL_NOM1) || ' ' || TRIM(B.VAL_NOM2) NOMBRE,
		       k.CAMP_INGR CAMPANIA_INGRESO,
		       k.CAMP_PRIM_PEDI PRIMER_PEDIDO,
		       k.CAMP_ULTI_PEDI ULTIMO_PEDIDO,
		       B.SAL_DEUD_ANTE SALDO,
		       (select val_i18n
		          from gen_i18n_sicc_comun
		         where attr_enti = 'MAE_ESTAT_CLIEN'
		           and val_oid = mcda.esta_oid_esta_clie) ESTADO,
		       k.VAL_NUME_PEDI NUMERO_PEDIDOS,
		       j.VAL_NOMB_VIA || ' ' || j.NUM_PPAL || ' ' || j.VAL_OBSE direccion,
		       (SELECT DES_GEOG
		          FROM ZON_VALOR_ESTRU_GEOPO
		         WHERE ORDE_1 =
		               (SELECT ORDE_1
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_2 =
		               (SELECT ORDE_2
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_3 =
		               (SELECT ORDE_3
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_4 =
		               (SELECT ORDE_4
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))) COLONIA,
		       (SELECT DES_GEOG
		          FROM ZON_VALOR_ESTRU_GEOPO
		         WHERE ORDE_1 =
		               (SELECT ORDE_1
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_2 =
		               (SELECT ORDE_2
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_3 =
		               (SELECT ORDE_3
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_4 IS NULL) LOCALIDAD,
		       (SELECT DES_GEOG
		          FROM ZON_VALOR_ESTRU_GEOPO
		         WHERE ORDE_1 =
		               (SELECT ORDE_1
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_2 =
		               (SELECT ORDE_2
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_3 IS NULL
		           AND ORDE_4 IS NULL) DEL_MUN,
		       (SELECT DES_GEOG
		          FROM ZON_VALOR_ESTRU_GEOPO
		         WHERE ORDE_1 =
		               (SELECT ORDE_1
		                  FROM ZON_VALOR_ESTRU_GEOPO
		                 WHERE OID_VALO_ESTR_GEOP =
		                       (select VEPO_OID_VALO_ESTR_GEOP
		                          from zon_terri
		                         where oid_terr = j.terr_oid_terr))
		           AND ORDE_2 IS NULL
		           AND ORDE_3 IS NULL
		           AND ORDE_4 IS NULL) ESTADO,
		       j.val_cod_post,
		       (select val_text_comu
		          from mae_clien_comun
		         where clie_oid_clie = b.oid_clie
		           and TICM_OID_TIPO_COMU = 1
		           and rownum = 1) TELEFONO_1,
		       (select val_text_comu
		          from mae_clien_comun
		         where clie_oid_clie = b.oid_clie
		           and TICM_OID_TIPO_COMU = 6
		           and rownum = 1) TELEFONO_2,
		       (select max(y.cod_clie)
		          from mae_clien_vincu x, mae_clien y
		         where x.CLIE_OID_CLIE_VNDO = b.oid_clie
		           and x.clie_oid_clie_vnte = y.oid_clie
		           and TIVC_OID_TIPO_VINC = 9) CODIGO_RECOMENDANTE
		  FROM mae_clien_unida_admin       A,
		       MAE_CLIEN                   B,
		       ZON_TERRI_ADMIN             D,
		       ZON_TERRI                   E,
		       ZON_SECCI                   H,
		       ZON_ZONA                    F,
		       ZON_REGIO                   G,
		       mae_clien_datos_adici       mcda,
		       mae_clien_direc             j,
		       mae_clien_estat k
		 WHERE A.CLIE_OID_CLIE = B.OID_CLIE
		   and b.oid_clie = j.clie_oid_clie
		   and b.oid_clie = k.oid_clie(+)
		   and j.ind_elim = 0
		   and j.ind_dire_ppal = 1
		   and A.CLIE_OID_CLIE = mcda.clie_OID_CLIE
		   AND A.ZTAD_OID_TERR_ADMI = D.OID_TERR_ADMI
		   and a.perd_oid_peri_fin is null
		   and mcda.ind_acti = 1
		   AND D.TERR_OID_TERR = E.OID_TERR
		   AND D.ZSCC_OID_SECC = H.OID_SECC
		   AND H.ZZON_OID_ZONA = F.OID_ZONA
		   AND F.ZORG_OID_REGI = G.OID_REGI
		   $condicion$
		 order by cod_regi, cod_zona, COD_SECC, COD_TERR, cod_clie    
	</insert>
	
	<parameterMap id="paramExecuteReporteCOBDetalladCobranza31diasCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCOBDetalladCobranza31diasCSV" parameterMap="paramExecuteReporteCOBDetalladCobranza31diasCSV">
		{call COB_PKG_REPOR_ESTAD.cob_pr_detal_cobra_31dia_csv(?,?,?,?)}
	</procedure>
	
		<parameterMap id="paramExecuteReportePEDSeguimientoConsultoraCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReportePEDSeguimientoConsultoraCSV" parameterMap="paramExecuteReportePEDSeguimientoConsultoraCSV">
		{call ped_pkg_proce.ped_pr_detal_segui_consu_csv(?,?,?,?)}
	</procedure>
	
	
	<delete id="deleteReporteCOBSaldosPendientes" parameterClass="java.util.Map"  >	
	    delete from COB_TMP_SALDO_PENDI
	</delete>
	
	<insert id="insertReporteCOBSaldosPendientes" parameterClass="java.util.Map"  >	
	   INSERT INTO COB_TMP_SALDO_PENDI (
	   		COD_PERI, 
			COD_REGI, 
			COD_ZONA, 
			COD_SECC, 
			COD_TERR, 
			COD_CLIE, 
			COD_DIGI_CTRL, 
			NOM_CLIE, 
			VAL_APE1, 
			VAL_APE2, 
			NUM_DOCU_IDEN, 
			NOM_DEPA, 
			NOM_PROV, 
			NOM_DIST, 
			VAL_DIRE, 
			VAL_TELE_FIJO, 
			VAL_TELE_CELU, 
			CAM_INGR, 
			VAL_URBA, 
			NUM_IDEN_CUOT, 
			FEC_DOCU, 
			IMP_MOVI, 
			IMP_PEND, 
			FEC_VENC, 
			VAL_EMAI, 
			FEC_NACI,
			ORI_PEDI,
			DIA_PAGO
	   )
	   WITH TEMP1 AS
		 ( SELECT 
		       MCC.PERD_OID_PERI,
		       MCC.CLIE_OID_CLIE , 
		       MAX(MCC.NUM_IDEN_CUOT) Boleta,
		       MIN(MCC.FEC_DOCU) Fecha,
		       SUM(MCC.IMP_MOVI) Facturado,
		       SUM(MCC.IMP_PEND) Saldos  ,
		       MAX(MCC.FEC_VENC) Fec_Venc   
		   FROM CCC_MOVIM_CUENT_CORRI MCC
		    <![CDATA[
		   WHERE MCC.IMP_PEND > 0
			   AND MCC.PERD_OID_PERI >= #oidPeriodoInicial#
			   AND MCC.PERD_OID_PERI <= #oidPeriodoFinal#
			   HAVING SUM(MCC.IMP_PEND) > 0     
		    ]]>  
		   GROUP BY MCC.PERD_OID_PERI,MCC.CLIE_OID_CLIE)
		 SELECT 
		       gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(S.PERD_OID_PERI) Camp,
		       R.COD_REGI Region,       
		       R.COD_ZONA Zona,
		       R.COD_SECC Secc,      
		       R.COD_TERR Terr, 
		       R.COD_CLIE Codigo_Cli, 
		       MC.COD_DIGI_CTRL cod_digi_ctrl,      
		       NVL(TRIM(R.VAL_NOM1),' ') || ' ' || NVL(TRIM(R.VAL_NOM2),' ') Nombres,   
		       NVL(TRIM(R.VAL_APE1),' ') Ap_Pate,
		       NVL(TRIM(R.VAL_APE2),' ') Ap_Mate,       
		       R.NUM_DOCU_IDEN DNI,              
		       R.NOM_DEPA AS Dpto,
		       R.NOM_PROV AS Provincia,  
		       R.NOM_DIST AS Distrito,
		       TRIM((R.VAL_NOMB_VIA || ' ' || R.NUM_PPAL || ' ' ||R.VAL_OBSE)) AS Direccion,
		       R.VAL_TELE_FIJO AS telf,
		       R.VAL_TELE_CELU AS CEL,  
		       R.CAM_INGR CAM_INGR,            
		       GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_OID(R.OID_CLIE, 'DES_URBA') AS Urba,                                                                 
		       S.Boleta,
		       TO_CHAR(S.FECHA, 'dd/mm/yyyy') FECHA,       
		       S.FACTURADO,
		       S.Saldos  ,
		       TO_CHAR(S.FEC_VENC, 'dd/mm/yyyy') FEC_VENC,
		       (SELECT CC.VAL_TEXT_COMU FROM MAE_CLIEN_COMUN CC, MAE_TIPO_COMUN TC WHERE TC.OID_TIPO_COMU = CC.TICM_OID_TIPO_COMU 
				 AND TC.COD_TIPO_COMU = 'ML' AND CC.CLIE_OID_CLIE = MC.OID_CLIE) VAL_EMAI,
		      TO_CHAR(MDA.FEC_NACI, 'dd/mm/yyyy') FEC_NACI,
		      gen_pkg_gener.gen_fn_devue_pedid_orig (mc.cod_clie, gen_pkg_gener.gen_fn_devuelve_id_cra_perio3(s.PERD_OID_PERI)) ORI_PEDI,
		      gen_pkg_gener.gen_fn_devue_prome_pagos_ultim(mc.oid_clie,#codigoPeriodo#) DIA_PAGO   
		     FROM    
		      TEMP1 S,
		      INT_REU_CONSU_HISTO R,
		      MAE_CLIEN MC,
		      MAE_CLIEN_DATOS_ADICI MDA
		      WHERE S.CLIE_OID_CLIE = R.OID_CLIE                                 
		      AND MC.OID_CLIE = S.CLIE_OID_CLIE
		      AND MC.OID_CLIE = R.OID_CLIE
		      AND  MDA.CLIE_OID_CLIE = MC.OID_CLIE
		      $condicion$
	</insert>
		
	<parameterMap id="paramExecuteReporteCOBSaldosPendientesCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCOBSaldosPendientesCSV" parameterMap="paramExecuteReporteCOBSaldosPendientesCSV">
		{call COB_PKG_REPOR_ESTAD.cob_pr_saldo_pendi_csv(?,?,?,?)}
	</procedure>
	
	<parameterMap id="paramExecuteReporteCCCLiquidacionCobranzasCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaPagoDesde" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaPagoHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaProcDesde" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaProcHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoProceso" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoSubproceso" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoBanco" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="tipoNombreReporte" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCCCLiquidacionCobranzasCSV" parameterMap="paramExecuteReporteCCCLiquidacionCobranzasCSV">
		{call CCC_PKG_REPOR_PROCE.ccc_pr_liqui_cobra_csv(?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="executeGenerarHistoricoOperacionCrediticiaTXTparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	
	<procedure id="executeGenerarHistoricoOperacionCrediticiaTXT" parameterMap="executeGenerarHistoricoOperacionCrediticiaTXTparam" >
		{call COB_PKG_PROCE.cob_pr_gener_repor_credt_txt(?, ?, ?, ?)}
	</procedure>  	

    <parameterMap id="paramGenerarHistoricoOperacionCrediticia" class="java.util.Map" >
		<parameter property="mesAnnio"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicioMesAnnio"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFinMesAnnio"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    	        
    <procedure id="executeGenerarHistoricoOperacionCrediticia" parameterMap="paramGenerarHistoricoOperacionCrediticia" >
		{call COB_PKG_PROCE.cob_pr_gener_repor_credt(?, ?, ?)}
    </procedure>
    
	<delete id="deleteReporteCOBDetalladoMovRecuperacionIncobrable" parameterClass="java.util.Map"  >
     <![CDATA[
        DELETE FROM COB_TMP_MOVIM_RECUP_INCOB WHERE USU_DIGI = #codigoUsuario#
     ]]>
    </delete>
	
	<insert id="insertReporteCOBDetalladoMovRecuperacionIncobrable" parameterClass="java.util.Map" >	
     <![CDATA[
       INSERT INTO cob_tmp_movim_recup_incob (
        cod_clie,
        num_docu_iden,
        des_subp,
        val_nomb,
        val_dire,
        val_dpto,
        val_prov,
        mnt_valor,
        num_dias_venc,
        num_dias_fact,
        oid_movi_cc,
        cod_regi,
        cod_zona,
        cod_peri,
        fec_docu,
        imp_movi,
        usu_digi
	   )
		SELECT
		        mc.cod_clie,
		        mci.num_docu_iden, 
		        su.des_subp,
		        mc.val_nom1 || ' ' || mc.val_nom2 || ' ' || mc.val_ape1 || ' ' || mc.val_ape2 val_nomb,
		        fin_pkg_gener.fin_fn_obtie_direc_compl_clien (mc.oid_clie) val_dire,
		        gen_pkg_gener.gen_fn_clien_datos_oid (mc.oid_clie, 'DES_DPTO') val_dpto,
		        gen_pkg_gener.gen_fn_clien_datos_oid (mc.oid_clie, 'DES_PROV') val_prov,
		        null mnt_valor,
		        null num_dias_venc,
		        null num_dias_fact,
		        mcc.oid_movi_cc, 
		        zr.cod_regi, 
		        zz.cod_zona, 
		        spc.cod_peri, 
		        mcc.fec_docu, 
		        mcc.imp_movi,
		        #codigoUsuario# usu_digi
		  FROM ccc_movim_cuent_corri mcc,
		       mae_clien mc,
		       ccc_subpr su,
		       ccc_proce pr,
		       mae_clien_ident mci,
		       mae_clien_unida_admin mcua,
		       zon_terri_admin zta,
		       zon_secci zs,
		       zon_zona zz,
		       zon_regio zr,
		       cra_perio cp,
		       seg_perio_corpo spc
		 WHERE mc.oid_clie = mcc.clie_oid_clie
		   AND mc.oid_clie = mci.clie_oid_clie
		   AND mc.oid_clie = mcua.clie_oid_clie
		   AND mcc.perd_oid_peri = cp.oid_peri
		   AND mcc.subp_oid_subp_crea = su.oid_subp
		   AND mcua.ztad_oid_terr_admi = zta.oid_terr_admi
		   AND cp.peri_oid_peri = spc.oid_peri
		   AND su.ccpr_oid_proc = pr.oid_proc
		   AND zta.zscc_oid_secc = zs.oid_secc
		   AND zs.zzon_oid_zona = zz.oid_zona
		   AND zz.zorg_oid_regi = zr.oid_regi
		   AND pr.cod_proc = 'CCC007'
		   AND mci.val_iden_docu_prin = 1
		   AND mcua.ind_acti = 1
		   AND su.cod_subp = 70 
		   $condicionFechas$
     ]]>
	</insert>
	
	<parameterMap id="paramExecuteReporteCOBDetalladoMovRecuperacionIncobrableCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoUsuario" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCOBDetalladoMovRecuperacionIncobrableCSV" parameterMap="paramExecuteReporteCOBDetalladoMovRecuperacionIncobrableCSV">
		{call COB_PKG_REPOR.COB_PR_REPOR_MOVIM_RECUP_INCOB(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="deleteReporteCCCArchivosMediosMagneticosParams" class="map">
		<parameter property="codigoUsuario"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="deleteReporteCCCArchivosMediosMagneticos" parameterMap="deleteReporteCCCArchivosMediosMagneticosParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_CLEAR_TABLA_MEDIO_MAGNE(?)}
	</procedure>
	
	<parameterMap id="insertReporteCCCArchivosMediosMagneticosParams" class="map">
		<parameter property="codigoUsuario"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaDesde"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaHasta"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="insertReporteCCCArchivosMediosMagneticos" parameterMap="insertReporteCCCArchivosMediosMagneticosParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_CARGA_REPOR_MEDIO_MAGNE(?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeGeneraReporteCCCArchivosMediosMagneticosCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoUsuario"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="psArchivos"   		  jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeGeneraReporteCCCArchivosMediosMagneticosCSV" parameterMap="executeGeneraReporteCCCArchivosMediosMagneticosCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_REPOR_MEDIO_MAGNE(?, ?, ?, ?)}
	</procedure>
	
	<delete id="deleteReporteMAEVinculosCliente" parameterClass="java.util.Map"  >
        DELETE FROM MAE_TMP_VINCU_CLIEN
    </delete>
	
	<insert id="insertReporteMAEVinculosCliente" parameterClass="java.util.Map" >	
     <![CDATA[
       INSERT INTO MAE_TMP_VINCU_CLIEN (
            DES_ZONA_RECO_MIEN, 
			COD_CLIE_RECO_MIEN, 
			VAL_NOMB_RECO_MIEN, 
			DES_ZONA_RECO_MEND, 
			COD_CLIE_RECO_MEND, 
			VAL_NOMB_RECO_MEND, 
			FEC_DESD, 
			VAL_CAMP_VINC, 
			COD_REGI, 
			COD_ZONA, 
			COD_TIPO_VINC
	   )
	   
	   WITH TEMP
       AS 
	   (  SELECT zzon.des_zona zona_recomienda,
             cvnte.cod_clie codigo_recomienda,
             cvnte.val_ape1 || ' ' || cvnte.val_ape2 || ' ' || cvnte.val_nom1 || ' ' ||    cvnte.val_nom2 nombre_recomienda,
             (SELECT zz.des_zona
                FROM mae_clien_unida_admin ua,
                     zon_terri_admin       zta,
                     zon_secci             zs,
                     zon_zona              zz,
                     zon_regio             zr
               WHERE zta.oid_terr_admi = ua.ztad_oid_terr_admi
                 AND zs.oid_secc = zta.zscc_oid_secc
                 AND zz.oid_zona = zs.zzon_oid_zona
                 AND zr.oid_regi = zz.zorg_oid_regi
                 AND ua.clie_oid_clie = cvndo.oid_clie
                 AND ua.ind_acti = '1'
                 AND rownum = 1) zona_recomendada,
             cvndo.cod_clie codigo_recomendada,
             cvndo.val_ape1 || ' ' || cvndo.val_ape2 || ' ' || cvndo.val_nom1 || ' ' ||  cvndo.val_nom2 nombre_recomendada,
             v.fec_desd fecha_vinculo,
             (SELECT MIN(peri.cod_peri)
                FROM cra_perio perd, seg_perio_corpo peri
               WHERE perd.peri_oid_peri = peri.oid_peri
                 AND v.fec_desd BETWEEN perd.fec_inic AND perd.fec_fina) campa_vinculo,
             zorg.cod_regi,
             zzon.cod_zona,
             tivc.cod_tipo_vinc
        FROM mae_clien_vincu v,
             mae_clien cvnte,
             mae_clien cvndo,
             mae_tipo_vincu tivc,
             ( SELECT t.val_oid, t.val_i18n FROM gen_i18n_sicc_pais t WHERE t.attr_enti = 'MAE_TIPO_VINCU' ) tivcdes,
             mae_clien_unida_admin cuad,
             zon_terri_admin ztad,
             zon_secci zscc,
             zon_regio zorg,
             zon_zona zzon
       WHERE v.clie_oid_clie_vnte = cuad.clie_oid_clie
         AND cuad.ztad_oid_terr_admi = ztad.oid_terr_admi
         AND ztad.zscc_oid_secc = zscc.oid_secc
         AND zscc.zzon_oid_zona = zzon.oid_zona
         AND zzon.zorg_oid_regi = zorg.oid_regi
         AND v.clie_oid_clie_vnte = cvnte.oid_clie
         AND v.clie_oid_clie_vndo = cvndo.oid_clie
         AND v.tivc_oid_tipo_vinc = tivc.oid_tipo_vinc
         AND tivc.oid_tipo_vinc = tivcdes.val_oid
         AND cuad.ind_acti = 1
         $condicionRegion$
         $condicionTipoVinculo$
       )
       SELECT 
         zona_recomienda,
         codigo_recomienda,
         nombre_recomienda,
         zona_recomendada,
         codigo_recomendada,
         nombre_recomendada,
         fecha_vinculo,
         campa_vinculo,
         cod_regi,
         cod_zona,
         cod_tipo_vinc
       FROM TEMP
       WHERE campa_vinculo >= #codigoPeriodoInicial#
        AND  campa_vinculo <= #codigoPeriodoFinal#
     ]]>
     
	</insert>
	
	
	<parameterMap id="executeReporteMAEVinculosClienteCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteMAEVinculosClienteCSV" parameterMap="executeReporteMAEVinculosClienteCSVParams">
		{call MAE_PKG_REPOR.MAE_PR_GENER_REPOR_VINCU_CLIEN(?, ?, ?, ?)}
	</procedure>
	
	
	<parameterMap id="executeReporteCCCDetalleCuentaCorrienteContableCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSociedad" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tipoReporte" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCCCDetalleCuentaCorrienteContableCSV" parameterMap="executeReporteCCCDetalleCuentaCorrienteContableCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_REPOR_DETAL_CTACT(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCCCPRDetalleCuentaCorrienteParams" class="map">		
		<parameter property="fechaHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
	</parameterMap>
	
	<procedure id="executeReporteCCCPRDetalleCuentaCorriente" parameterMap="executeReporteCCCPRDetalleCuentaCorrienteParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_DETAL_CUENT_CORRI_CONTA(?)}
	</procedure>

	<parameterMap id="executeReporteCCCDetalladoPagoxRegularizarCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoBanco" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaPagoDesde" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaPagoHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaProcDesde" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaProcHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCCCDetalladoPagoxRegularizarCSV" parameterMap="executeReporteCCCDetalladoPagoxRegularizarCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_REPOR_DETAL_PAGO_REGUL(?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
   
  <select id="getOidDetaOferByCodigoCUVPeriodo" parameterClass="java.util.Map" resultClass="string">
		SELECT pod.oid_deta_ofer
		  FROM pre_ofert_detal       pod,
		       pre_ofert             po,
		       pre_matri_factu_cabec pmf,
		       cra_perio cp,
		       seg_perio_corpo sp
		WHERE pod.ofer_oid_ofer = po.oid_ofer
		   AND pod.val_codi_vent = #codigoCUV#
		   AND po.mfca_oid_cabe = pmf.oid_cabe
		   AND pmf.perd_oid_peri = cp.oid_peri
		   and cp.peri_oid_peri=sp.oid_peri
		   and sp.cod_peri =#codigoPeriodo# 
	</select>	
	
	<delete id="deleteBeforeReporteINCPuntajeFaltantes" parameterClass="java.util.Map" >	
		delete from INC_TMP_REPOR_POBTE_PFALT
	</delete>
	
	<insert id="insertBeforeReporteINCPuntajeFaltantes" parameterClass="java.util.Map" >	
	<![CDATA[
	INSERT INTO INC_TMP_REPOR_POBTE_PFALT(
		COD_REGI,                     
		DES_REGI,                     
		COD_ZONA,                     
		DES_ZONA,                     
		COD_SECC,                     
		COD_TERR,                     
		NUM_CONC,                     
		VAL_NOMB_CONC,                     
		COD_CLIE,           
		VAL_NOMB_CLIE,                
		VAL_TIPO_DOCU,                
		NUM_DOCU_IDEN,                
		VAL_NUME_CELU,                
		VAL_DIRE,                     
		VAL_PUNT,                     
		NUM_NIVE,                     
		VAL_PUNT_FALT,                
		VAL_ESTA 
		)                     
		SELECT                                                                                                              
		  COD_REGI,                                                                                                         
		  DES_REGI,                                                                                                         
		  COD_ZONA,                                                                                                         
		  DES_ZONA,                                                                                                         
		  COD_SECC,                                                                                                         
		  To_char(COD_TERR, '9999999') AS COD_TERR,                                                                         
		  NUM_CONC,                                                                                                         
		  VAL_NOMB,                                                                                                         
		  MAE_CLIEN.COD_CLIE,                                                                                               
		  VAL_NOM1 || ' ' || VAL_NOM2 || ' ' || VAL_APE1 || ' ' || VAL_APE2 as Nombre,                                      
		  mtd.val_sigl as Tipo_Documento,                                                                                   
		  mci.NUM_DOCU_IDEN as Nro_Documento,                                                                               
		  mcc.val_text_comu as Celular,                                                                                     
		  DIRECCION.DESC_UNI as Direccion,                                                                                  
		  puntaje,                                                                                                          
		  pnp.NUM_NIVE,                                                                                                     
		  CASE                                                                                                              
		    when (NUM_CANT_INIC_PUNT - puntaje) < 0 then 0                                                                  
		    else (NUM_CANT_INIC_PUNT - puntaje)                                                                             
		  end Puntos_Faltante,                                                                                              
		  (SELECT gsc.val_i18n                                                                                              
		          FROM gen_i18n_sicc_comun gsc                                                                              
		         WHERE gsc.attr_enti = 'MAE_ESTAT_CLIEN'                                                                    
		           AND gsc.val_oid = mcd.esta_oid_esta_clie) Estado                                                         
		FROM                                                                                                                
		  MAE_CLIEN,                                                                                                        
		  MAE_CLIEN_UNIDA_ADMIN,                                                                                            
		  ZON_TERRI_ADMIN,                                                                                                  
		  ZON_TERRI,                                                                                                        
		  ZON_SECCI,                                                                                                        
		  ZON_ZONA,                                                                                                         
		  ZON_REGIO,                                                                                                        
		  INC_CONCU_PARAM_GENER pgc,                                                                                        
		  INC_PARAM_GENER_PREMI pgp,                                                                                        
		  INC_PARAM_NIVEL_PREMI pnp,                                                                                        
		    MAE_CLIEN_IDENT mci,                                                                                            
		  (                                                                                                                 
		    select                                                                                                          
		      COPA_OID_PARA_GRAL,                                                                                           
		      CLIE_OID_CLIE,                                                                                                
		      SUM(NUM_PUNT) as puntaje                                                                                      
		    from                                                                                                            
		      INC_CUENT_CORRI_PUNTO                                                                                         
		    where                                                                                                           
		      COPA_OID_PARA_GRAL = #oidConcurso#        
		      AND VAL_DESC <> 'Entrega de Premio'                                                                           
		      AND CLIE_OID_CLIE not in                                                                                      
		        (                                                                                                           
		        select                                                                                                      
		        INC_DESCA.CLIE_OID_CLIE                                                                                     
		            from                                                                                                    
		        INC_DESCA                                                                                                   
		        where                                                                                                       
		        1=1                                                                                                         
		        and INC_DESCA.COPA_OID_PARA_GRAL = INC_CUENT_CORRI_PUNTO.COPA_OID_PARA_GRAL                                 
		        )                                                                                                           
		    group by                                                                                                        
		      COPA_OID_PARA_GRAL,                                                                                           
		      CLIE_OID_CLIE                                                                                                 
		  ) cliente,                                                                                                        
		                                                                                                                    
		        (                                                                               
		        select COD_CLIE,DES_ABRV_TIPO_VIA || ' ' || VAL_NOMB_VIA || ' ' || NUM_PPAL || ' ' || VAL_OBSE || ' ' ||    
		       nivel_1                                                                                                      
		       || DECODE(nivel_2, NULL, '', '/' || nivel_2)                                                                 
		       || DECODE(nivel_3, NULL, '', '/' || nivel_3)                                                                 
		       || DECODE(nivel_4, NULL, '', '/' || nivel_4)                                                                 
		       || DECODE(nivel_5, NULL, '', '/' || nivel_5)                                                                 
		       || DECODE(nivel_6, NULL, '', '/' || nivel_6)                                                                 
		       || DECODE(nivel_7, NULL, '', '/' || nivel_7)                                                                 
		       || DECODE(nivel_8, NULL, '', '/' || nivel_8)                                                                 
		       || DECODE(nivel_9, NULL, '', '/' || nivel_9) AS DESC_UNI                                                     
		   FROM (SELECT D.COD_CLIE,                                                                                         
		   mcd.OID_CLIE_DIRE OID,                                                                                           
		               c.DES_ABRV_TIPO_VIA,                                                                                 
		               mcd.VAL_NOMB_VIA,                                                                                    
		               mcd.NUM_PPAL,                                                                                        
		               mcd.VAL_OBSE,                                                                                        
		               mcd.VAL_BARR,                                                                                        
		               t.COD_TERR,                                                                                          
		               (SELECT DES_CIUD                                                                                     
		                  FROM ZON_CIUDA                                                                                    
		                 WHERE COD_UGEO_REGI = mcd.CIUD_COD_UGEO_REGI                                                       
		                   AND COD_CIUD = mcd.CIUD_COD_CIUD) DES_CIUD,                                                      
		               mcd.DES_VILLA_POBL,                                                                                  
		               (SELECT des_geog                                                                                     
		                  FROM zon_valor_estru_geopo                                                                        
		                 WHERE pais_oid_pais = d.pais_oid_pais                                                              
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                     
		                   AND orde_2 IS NULL) AS nivel_1,                                                                  
		               (SELECT des_geog                                                                                     
		                  FROM zon_valor_estru_geopo                                                                        
		                 WHERE pais_oid_pais = d.pais_oid_pais                                                              
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                     
		                   AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                     
		                   AND orde_3 IS NULL) AS nivel_2,                                                                  
		               (SELECT des_geog                                                                                     
		                  FROM zon_valor_estru_geopo                                                                        
		                 WHERE pais_oid_pais = d.pais_oid_pais                                                              
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                     
		                   AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                     
		                   AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                                    
		                   AND orde_4 IS NULL) AS nivel_3,                                                                  
		               CASE                                                                                                 
		                 WHEN LENGTH(mcd.cod_unid_geog) > 18                                                                
		                  THEN                                                                                              
		                  (SELECT des_geog                                                                                  
		                     FROM zon_valor_estru_geopo                                                                     
		                    WHERE pais_oid_pais =                                                                           
		                          d.pais_oid_pais                                                                           
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                  
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                  
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                                 
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                                 
		                      AND orde_5 IS NULL)                                                                           
		                 ELSE                                                                                               
		                  NULL                                                                                              
		               END AS nivel_4,                                                                                      
		               CASE                                                                                                 
		                 WHEN LENGTH(mcd.cod_unid_geog) > 24                                                                
		                  THEN                                                                                              
		                  (SELECT des_geog                                                                                  
		                     FROM zon_valor_estru_geopo                                                                     
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                           
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                  
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                  
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                                 
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                                 
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                                 
		                      AND orde_6 IS NULL)                                                                           
		                 ELSE                                                                                               
		                  NULL                                                                                              
		               END AS nivel_5,                                                                                      
		               CASE                                                                                                 
		                 WHEN LENGTH(mcd.cod_unid_geog) > 30                                                                
		                  THEN                                                                                              
		                  (SELECT des_geog                                                                                  
		                     FROM zon_valor_estru_geopo                                                                     
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                           
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                  
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                  
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                                 
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                                 
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                                 
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                                 
		                      AND orde_7 IS NULL)                                                                           
		                 ELSE                                                                                               
		                  NULL                                                                                              
		               END AS nivel_6,                                                                                      
		               CASE                                                                                                 
		                 WHEN LENGTH(mcd.cod_unid_geog) > 36                                                                
		                  THEN                                                                                              
		                  (SELECT des_geog                                                                                  
		                     FROM zon_valor_estru_geopo                                                                     
		                    WHERE pais_oid_pais =  d.pais_oid_pais                                                          
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                  
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                  
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                                 
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                                 
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                                 
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                                 
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)                                                 
		                      AND orde_8 IS NULL)                                                                           
		                 ELSE                                                                                               
		                  NULL                                                                                              
		               END AS nivel_7,                                                                                      
		               CASE                                                                                                 
		                 WHEN LENGTH(mcd.cod_unid_geog) > 42                                                                
		                  THEN                                                                                              
		                  (SELECT des_geog                                                                                  
		                     FROM zon_valor_estru_geopo                                                                     
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                           
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                  
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                  
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                                 
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                                 
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                                 
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                                 
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)                                                 
		                      AND orde_8 = SUBSTR(mcd.cod_unid_geog, 43, 6)                                                 
		                      AND orde_9 IS NULL)                                                                           
		                 ELSE                                                                                               
		                  NULL                                                                                              
		               END AS nivel_8,                                                                                      
		               CASE                                                                                                 
		                 WHEN LENGTH(mcd.cod_unid_geog) > 48                                                                
		                  THEN                                                                                              
		                  (SELECT des_geog                                                                                  
		                     FROM zon_valor_estru_geopo                                                                     
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                           
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                                  
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                                  
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                                 
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                                 
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                                 
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                                 
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)                                                 
		                      AND orde_8 = SUBSTR(mcd.cod_unid_geog, 43, 6)                                                 
		                      AND orde_9 = SUBSTR(mcd.cod_unid_geog, 49, 6))                                                
		                 ELSE                                                                                               
		                  NULL                                                                                              
		               END AS nivel_9                                                                                       
		          FROM MAE_CLIEN_DIREC mcd,                                                                                 
		               MAE_TIPO_DIREC mtd,                                                                                  
		               SEG_TIPO_VIA c,                                                                                      
		               MAE_CLIEN d,                                                                                         
		               ZON_TERRI t                                                                                          
		         WHERE                                                                                                      
		            d.OID_CLIE = mcd.CLIE_OID_CLIE                                                                          
		           AND mcd.IND_ELIM = 0                                                                                     
		           AND mtd.OID_TIPO_DIRE = mcd.TIDC_OID_TIPO_DIRE                                                           
		           AND c.OID_TIPO_VIA = mcd.TIVI_OID_TIPO_VIA                                                               
		           AND mcd.IND_DIRE_PPAL = 1                                                                                
		           AND mcd.TERR_OID_TERR = t.OID_TERR(+)                                                                    
		         ORDER BY mcd.OID_CLIE_DIRE DESC)                                                                           
		         ) DIRECCION ,                                                                                              
		     MAE_CLIEN_COMUN mcc ,                                                                                          
		     MAE_TIPO_DOCUM mtd,                                                                                            
		     MAE_CLIEN_DATOS_ADICI mcd                                                                                      
		                                                                                                                    
		where                                                                                                               
		  cliente.COPA_OID_PARA_GRAL = pgc.OID_PARA_GRAL                                                                    
		  and pgc.OID_PARA_GRAL = pgp.COPA_OID_PARA_GRAL                                                                    
		  and pgp.OID_PARA_GENE_PREM = pnp.PAGP_OID_PARA_GENE_PREM                                                          
		  and cliente.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE                                                                    
		  and MAE_CLIEN.OID_CLIE = MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE                                                      
		  and MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1                                                                            
		  and MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI                                      
		  and ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC                                                            
		  and ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA                                                                   
		  and ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI                                                                   
		  and ZON_TERRI_ADMIN.TERR_OID_TERR = ZON_TERRI.OID_TERR                                                            
		                                                                                                                    
		  AND MAE_CLIEN.OID_CLIE = mci.clie_oid_clie                                                                        
		  AND mci.val_iden_docu_prin=1                                                                                      
		  AND DIRECCION.COD_CLIE = MAE_CLIEN.COD_CLIE                                                                       
		  AND MAE_CLIEN.OID_CLIE  = MCC.CLIE_OID_CLIE (+)                                                                   
		  AND MCC.TICM_OID_TIPO_COMU(+) = 6                                                                                 
		  AND mtd.oid_tipo_docu = mci.tdoc_oid_tipo_docu                                                                    
		  AND mcd.clie_oid_clie = cliente.CLIE_OID_CLIE                                                                     
		                                                                                                                    
		  AND pnp.num_nive = (SELECT  MIN(NP.NUM_NIVE)                                          
		      FROM   INC_PARAM_NIVEL_PREMI  NP                                                                              
		      WHERE  pgp.OID_PARA_GENE_PREM = NP.PAGP_OID_PARA_GENE_PREM                                                    
              AND    (NP.num_cant_inic_punt - cliente.puntaje >0
                         OR (NP.NUM_NIVE=pgp.num_nive and NP.num_cant_inic_punt - cliente.puntaje <=0))
                                  )		                                                                                                                    
		  $condicion$
          $condicionEstado$
	                                                                                                                                                                                    
       ]]>
	</insert>
	
	<insert id="insertBeforeReporteINCPuntajeFaltantesExigidos" parameterClass="java.util.Map" >	
	<![CDATA[
	INSERT INTO INC_TMP_REPOR_POBTE_PFALT(
		COD_REGI,                     
		DES_REGI,                     
		COD_ZONA,                     
		DES_ZONA,                     
		COD_SECC,                     
		COD_TERR,                     
		NUM_CONC,                     
		VAL_NOMB_CONC,                     
		COD_CLIE,           
		VAL_NOMB_CLIE,                
		VAL_TIPO_DOCU,                
		NUM_DOCU_IDEN,                
		VAL_NUME_CELU,                
		VAL_DIRE,                     
		VAL_PUNT,                     
		VAL_PUNT_EXIG,                
		NUM_NIVE,                     
		VAL_PUNT_FALT,                
		VAL_PUNT_FALT_EXIG,           
		VAL_ESTA  
	 )                    
     select                                                                                                    
		  COD_REGI,                                                                                               
		  DES_REGI,                                                                                               
		  COD_ZONA,                                                                                               
		  DES_ZONA,                                                                                               
		  COD_SECC,                                                                                               
		  To_char(COD_TERR, '9999999') AS COD_TERR,                                                               
		  NUM_CONC,                                                                                               
		  VAL_NOMB,                                                                                               
		  MAE_CLIEN.COD_CLIE,                                                                                     
		  VAL_NOM1 || ' ' || VAL_NOM2 || ' ' || VAL_APE1 || ' ' || VAL_APE2 as Nombre,                            
		  mtd.val_sigl as Tipo_Documento,                                                                         
		  mci.NUM_DOCU_IDEN as Nro_Documento,                                                                     
		  mcc.val_text_comu as Celular,                                                                           
		  DIRECCION.DESC_UNI as Direccion,                                                                        
		  puntaje,                                                                                                
		  puntaje_exigido,                                                                                        
		  pnp.NUM_NIVE,                                                                                           
		  CASE                                                                                                    
		    when (NUM_CANT_INIC_PUNT - puntaje) < 0 then 0                                                        
		    else (NUM_CANT_INIC_PUNT - puntaje)                                                                   
		  end Puntos_Faltante,                                                                                    
		  CASE                                                                                                    
		    when (NUM_PUNT_PROD_EXIG - puntaje_exigido) < 0 then 0                                                
		    else (NUM_PUNT_PROD_EXIG - puntaje_exigido)                                                           
		  end Puntos_Faltante_exigidos,                                                                           
		   (SELECT gsc.val_i18n                                                                                   
		    FROM gen_i18n_sicc_comun gsc                                                                          
		   WHERE gsc.attr_enti = 'MAE_ESTAT_CLIEN'                                                                
		     AND gsc.val_oid = mcd.esta_oid_esta_clie) Estado                                                     
		from                                                                                                      
		  MAE_CLIEN,                                                                                              
		  MAE_CLIEN_UNIDA_ADMIN,                                                                                  
		  ZON_TERRI_ADMIN,                                                                                        
		  ZON_TERRI,                                                                                              
		  ZON_SECCI,                                                                                              
		  ZON_ZONA,                                                                                               
		  ZON_REGIO,                                                                                              
		  INC_CONCU_PARAM_GENER pgc,                                                                              
		  INC_PARAM_GENER_PREMI pgp,                                                                              
		  INC_PARAM_NIVEL_PREMI pnp,                                                                              
		   MAE_CLIEN_IDENT mci,                                                                                   
		  (                                                                                                       
		    select                                                                                                
		      COPA_OID_PARA_GRAL,                                                                                 
		      CLIE_OID_CLIE,                                                                                      
		      SUM(NUM_PUNT) as puntaje,                                                                           
		      SUM(NUM_PUNT_EXIG) as puntaje_exigido                                                               
		    from                                                                                                  
		      INC_CUENT_CORRI_PUNTO                                                                               
		    where                                                                                                 
		      COPA_OID_PARA_GRAL = #oidConcurso#      
		      AND VAL_DESC <> 'Entrega de Premio'                                                                 
		      AND CLIE_OID_CLIE not in                                                                            
		        (                                                                                                 
		        select                                                                                            
		        INC_DESCA.CLIE_OID_CLIE                                                                           
		            from                                                                                          
		        INC_DESCA                                                                                         
		        where INC_DESCA.COPA_OID_PARA_GRAL = INC_CUENT_CORRI_PUNTO.COPA_OID_PARA_GRAL                     
		        )                                                                                                 
		    group by                                                                                              
		      COPA_OID_PARA_GRAL,                                                                                 
		      CLIE_OID_CLIE                                                                                       
		  ) cliente,                                                                                              
		    (                                                                                                     
		        select COD_CLIE,DES_ABRV_TIPO_VIA || ' ' || VAL_NOMB_VIA || ' ' || NUM_PPAL || ' ' || VAL_OBSE || 
		       nivel_1                                                                                            
		       || DECODE(nivel_2, NULL, '', '/' || nivel_2)                                                       
		       || DECODE(nivel_3, NULL, '', '/' || nivel_3)                                                       
		       || DECODE(nivel_4, NULL, '', '/' || nivel_4)                                                       
		       || DECODE(nivel_5, NULL, '', '/' || nivel_5)                                                       
		       || DECODE(nivel_6, NULL, '', '/' || nivel_6)                                                       
		       || DECODE(nivel_7, NULL, '', '/' || nivel_7)                                                       
		       || DECODE(nivel_8, NULL, '', '/' || nivel_8)                                                       
		       || DECODE(nivel_9, NULL, '', '/' || nivel_9) AS DESC_UNI                                           
		   FROM (SELECT D.COD_CLIE,                                                                               
		   mcd.OID_CLIE_DIRE OID,                                                                                 
		               c.DES_ABRV_TIPO_VIA,                                                                       
		               mcd.VAL_NOMB_VIA,                                                                          
		               mcd.NUM_PPAL,                                                                              
		               mcd.VAL_OBSE,                                                                              
		               mcd.VAL_BARR,                                                                              
		               t.COD_TERR,                                                                                
		               (SELECT DES_CIUD                                                                           
		                  FROM ZON_CIUDA                                                                          
		                 WHERE COD_UGEO_REGI = mcd.CIUD_COD_UGEO_REGI                                             
		                   AND COD_CIUD = mcd.CIUD_COD_CIUD) DES_CIUD,                                            
		               mcd.DES_VILLA_POBL,                                                                        
		               (SELECT des_geog                                                                           
		                  FROM zon_valor_estru_geopo                                                              
		                 WHERE pais_oid_pais = d.pais_oid_pais                                                    
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                           
		                   AND orde_2 IS NULL) AS nivel_1,                                                        
		               (SELECT des_geog                                                                           
		                  FROM zon_valor_estru_geopo                                                              
		                 WHERE pais_oid_pais = d.pais_oid_pais                                                    
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                           
		                   AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                           
		                   AND orde_3 IS NULL) AS nivel_2,                                                        
		               (SELECT des_geog                                                                           
		                  FROM zon_valor_estru_geopo                                                              
		                 WHERE pais_oid_pais = d.pais_oid_pais                                                    
		                   AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                           
		                   AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                           
		                   AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                          
		                   AND orde_4 IS NULL) AS nivel_3,                                                        
		               CASE                                                                                       
		                 WHEN LENGTH(mcd.cod_unid_geog) > 18                                                      
		                  THEN                                                                                    
		                  (SELECT des_geog                                                                        
		                     FROM zon_valor_estru_geopo                                                           
		                    WHERE pais_oid_pais =                                                                 
		                          d.pais_oid_pais                                                                 
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                        
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                        
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                       
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                       
		                      AND orde_5 IS NULL)                                                                 
		                 ELSE                                                                                     
		                  NULL                                                                                    
		               END AS nivel_4,                                                                            
		               CASE                                                                                       
		                 WHEN LENGTH(mcd.cod_unid_geog) > 24                                                      
		                  THEN                                                                                    
		                  (SELECT des_geog                                                                        
		                     FROM zon_valor_estru_geopo                                                           
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                 
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                        
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                        
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                       
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                       
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                       
		                      AND orde_6 IS NULL)                                                                 
		                 ELSE                                                                                     
		                  NULL                                                                                    
		               END AS nivel_5,                                                                            
		               CASE                                                                                       
		                 WHEN LENGTH(mcd.cod_unid_geog) > 30                                                      
		                  THEN                                                                                    
		                  (SELECT des_geog                                                                        
		                     FROM zon_valor_estru_geopo                                                           
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                 
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                        
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                        
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                       
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                       
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                       
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                       
		                      AND orde_7 IS NULL)                                                                 
		                 ELSE                                                                                     
		                  NULL                                                                                    
		               END AS nivel_6,                                                                            
		               CASE                                                                                       
		                 WHEN LENGTH(mcd.cod_unid_geog) > 36                                                      
		                  THEN                                                                                    
		                  (SELECT des_geog                                                                        
		                     FROM zon_valor_estru_geopo                                                           
		                    WHERE pais_oid_pais =  d.pais_oid_pais                                                
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                        
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                        
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                       
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                       
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                       
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                       
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)                                       
		                      AND orde_8 IS NULL)                                                                 
		                 ELSE                                                                                     
		                  NULL                                                                                    
		               END AS nivel_7,                                                                            
		               CASE                                                                                       
		                 WHEN LENGTH(mcd.cod_unid_geog) > 42                                                      
		                  THEN                                                                                    
		                  (SELECT des_geog                                                                        
		                     FROM zon_valor_estru_geopo                                                           
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                 
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                        
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                        
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                       
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                       
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                       
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                       
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)                                       
		                      AND orde_8 = SUBSTR(mcd.cod_unid_geog, 43, 6)                                       
		                      AND orde_9 IS NULL)                                                                 
		                 ELSE                                                                                     
		                  NULL                                                                                    
		               END AS nivel_8,                                                                            
		               CASE                                                                                       
		                 WHEN LENGTH(mcd.cod_unid_geog) > 48                                                      
		                  THEN                                                                                    
		                  (SELECT des_geog                                                                        
		                     FROM zon_valor_estru_geopo                                                           
		                    WHERE pais_oid_pais = d.pais_oid_pais                                                 
		                      AND orde_1 = SUBSTR(mcd.cod_unid_geog, 1, 6)                                        
		                      AND orde_2 = SUBSTR(mcd.cod_unid_geog, 7, 6)                                        
		                      AND orde_3 = SUBSTR(mcd.cod_unid_geog, 13, 6)                                       
		                      AND orde_4 = SUBSTR(mcd.cod_unid_geog, 19, 6)                                       
		                      AND orde_5 = SUBSTR(mcd.cod_unid_geog, 25, 6)                                       
		                      AND orde_6 = SUBSTR(mcd.cod_unid_geog, 31, 6)                                       
		                      AND orde_7 = SUBSTR(mcd.cod_unid_geog, 37, 6)                                       
		                      AND orde_8 = SUBSTR(mcd.cod_unid_geog, 43, 6)                                       
		                      AND orde_9 = SUBSTR(mcd.cod_unid_geog, 49, 6))                                      
		                 ELSE                                                                                     
		                  NULL                                                                                    
		               END AS nivel_9                                                                             
		          FROM MAE_CLIEN_DIREC mcd,                                                                       
		               MAE_TIPO_DIREC mtd,                                                                        
		               SEG_TIPO_VIA c,                                                                            
		               MAE_CLIEN d,                                                                               
		               ZON_TERRI t                                                                                
		         WHERE                                                                                            
		            d.OID_CLIE = mcd.CLIE_OID_CLIE                                                                
		           AND mcd.IND_ELIM = 0                                                                           
		           AND mtd.OID_TIPO_DIRE = mcd.TIDC_OID_TIPO_DIRE                                                 
		           AND c.OID_TIPO_VIA = mcd.TIVI_OID_TIPO_VIA                                                     
		           AND mcd.IND_DIRE_PPAL = 1                                                                      
		           AND mcd.TERR_OID_TERR = t.OID_TERR(+)                                                          
		         ORDER BY mcd.OID_CLIE_DIRE DESC)                                                                 
		         ) DIRECCION ,                                                                                    
		     MAE_CLIEN_COMUN mcc ,                                                                                
		     MAE_CLIEN_DATOS_ADICI mcd ,                                                                          
		     MAE_TIPO_DOCUM mtd                                                                                   
		where                                                                                                     
		  cliente.COPA_OID_PARA_GRAL = pgc.OID_PARA_GRAL                                                          
		  and pgc.OID_PARA_GRAL = pgp.COPA_OID_PARA_GRAL                                                          
		  and pgp.OID_PARA_GENE_PREM = pnp.PAGP_OID_PARA_GENE_PREM                                                
		  and cliente.CLIE_OID_CLIE = MAE_CLIEN.OID_CLIE                                                          
		  and MAE_CLIEN.OID_CLIE = MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE                                            
		  and MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = 1                                                                  
		  and MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI = ZON_TERRI_ADMIN.OID_TERR_ADMI                            
		  and ZON_TERRI_ADMIN.ZSCC_OID_SECC = ZON_SECCI.OID_SECC                                                  
		  and ZON_SECCI.ZZON_OID_ZONA = ZON_ZONA.OID_ZONA                                                         
		  and ZON_ZONA.ZORG_OID_REGI = ZON_REGIO.OID_REGI                                                         
		  and ZON_TERRI_ADMIN.TERR_OID_TERR = ZON_TERRI.OID_TERR                                                  
		                                                                                                          
		  AND MAE_CLIEN.OID_CLIE = mci.clie_oid_clie                                                              
		  AND mci.val_iden_docu_prin=1                                                                            
		  AND DIRECCION.COD_CLIE = MAE_CLIEN.COD_CLIE                                                             
		  AND MAE_CLIEN.OID_CLIE  = MCC.CLIE_OID_CLIE (+)                                                         
		  AND MCC.TICM_OID_TIPO_COMU(+) = 6                                                                       
		  AND mtd.oid_tipo_docu = mci.tdoc_oid_tipo_docu                                                          
		  AND mcd.clie_oid_clie = cliente.CLIE_OID_CLIE                                                           
		                                                                                                          
		  AND pnp.num_nive = (SELECT  MIN(NP.NUM_NIVE)                                         
              FROM   INC_PARAM_NIVEL_PREMI  NP                                                                             
              WHERE  pgp.OID_PARA_GENE_PREM = NP.PAGP_OID_PARA_GENE_PREM                                                   
              AND    (NP.num_cant_inic_punt - cliente.puntaje >0
                         OR (NP.NUM_NIVE=pgp.num_nive and NP.num_cant_inic_punt - cliente.puntaje <=0))
                                  )
		  $condicion$
          $condicionEstado$                                                                                                                                                                                   
       ]]>
	</insert>
	
	<parameterMap id="executeReporteINCPuntObtenidosPuntFaltantesCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tipoReporte"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCPuntObtenidosPuntFaltantesCSV" parameterMap="executeReporteINCPuntObtenidosPuntFaltantesCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_REPOR_POBTE_PFALT_CSV(?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCCCAuditoriaSaldoCuentasPorCobrarCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreReporteCSV"    jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCCCAuditoriaSaldoCuentasPorCobrarCSV" parameterMap="executeReporteCCCAuditoriaSaldoCuentasPorCobrarCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_REPOR_AUDI_SALDO_CXCOB(?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCCCDetalleIFCCSVParams" class="java.util.Map">
		<parameter property="fechaCorte" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteCCCDetalleIFCCSV" parameterMap="executeReporteCCCDetalleIFCCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_REPOR_DETAL_IFC(?,?,?,?,?)} 
	</procedure>	

	<resultMap id="historicoReportResult" class="historicoReporte" >
	    <result property="codigoHistoricoReporte" 		column="NUM_SEQU" 		/> 
	    <result property="codigoPais" 					column="PAIS_COD_PAIS" 		/> 
	    <result property="codigoMenu" 					column="COD_MENU" 			/> 
	    <result property="codigoReporte" 				column="COD_REPO" 		/> 
	    <result property="nombreArchivoReporte" 		column="NOM_ARCH_REPO" 		/> 
	    <result property="ipMaquina" 					column="VAL_IP_MAQU" 			/> 
	    <result property="codigoUsuario" 				column="COD_USUA" 			/> 
	    <result property="codigoPeriodo" 				column="COD_PERI" 			/> 
	    <result property="fechaInicio" 					javaType="java.sql.Timestamp"  column="FEC_INIC_REPO" /> 
	    <result property="fechaFin" 					javaType="java.sql.Timestamp"  column="FEC_FINA_REPO" /> 
	    <result property="formatoReporte"				column="VAL_FORM_REPO" 			/> 
	    <result property="duracionSegundos" 			column="NUM_DURA_SEGU" 			/> 
	    <result property="multiReporte"			 		column="IND_MULTI_REPO" 			/> 
	    <result property="numeroMultireportes" 			column="VAL_REPO_GENE" 			/>
	    <result property="envioMail" 					column="IND_ENVIO_EMAIL" 			/>	        
	  </resultMap>
	
	<select id="getDevuelveIdSgteCodHistoricoReporte" parameterClass="historicoReporte" resultClass="long">
		SELECT
			BAS_SEQ_REPOR_HISTO_EJECU.NEXTVAL
		FROM
			DUAL
	</select>
	
	<insert id="insertHistoricoReporte" parameterClass="historicoReporte">
    <![CDATA[
	    INSERT INTO BAS_REPOR_EJECU_ACTUA (
	    	NUM_SEQU,
			PAIS_COD_PAIS, 
			COD_MENU, 
			COD_REPO,			
			NOM_ARCH_REPO,
			VAL_IP_MAQU,
			COD_USUA,
			COD_PERI, 	
			FEC_INIC_REPO, 
			FEC_FINA_REPO, 
			VAL_FORM_REPO, 
			NUM_DURA_SEGU,
			IND_MULTI_REPO, 
			VAL_REPO_GENE,
			IND_ENVIO_EMAIL 
		)
	    VALUES (
	    	#codigoHistoricoReporte#, 
		    #codigoPais#,
		    #codigoMenu#,
		    #codigoReporte#,
		    #nombreArchivoReporte#,
		    #ipMaquina#,    
		    #codigoUsuario#,
		    #codigoPeriodo#,
		    #fechaInicio#,
		    NULL,
		    #formatoReporte#,
		    NULL,
		    #multiReporte#,
		    #numeroMultireportes#,
		    #envioMail#		    
	    )
    ]]>
  </insert>
  
  <update id="updateHistoricoReporte" parameterClass="historicoReporte">
    <![CDATA[
	    UPDATE BAS_REPOR_EJECU_ACTUA 
	    SET
			PAIS_COD_PAIS = #codigoPais#, 
			COD_MENU = #codigoMenu#,
			COD_REPO = #codigoReporte#,
			NOM_ARCH_REPO = #nombreArchivoReporte#,
			VAL_IP_MAQU = #ipMaquina#, 		
			COD_USUA = #codigoUsuario#,
			COD_PERI = #codigoPeriodo#,
			FEC_INIC_REPO = #fechaInicio#,
			FEC_FINA_REPO = #fechaFin#,
			VAL_FORM_REPO = #formatoReporte#,
			NUM_DURA_SEGU = #duracionSegundos#,
			IND_MULTI_REPO = #multiReporte#,
			VAL_REPO_GENE = #numeroMultireportes#,
			IND_ENVIO_EMAIL = #envioMail#,
			IND_ERRO  = #indicadorError#
		WHERE NUM_SEQU = #codigoHistoricoReporte#	 
    ]]>
  </update>
  
 <parameterMap id="paramExecuteReporteMAEClasificacionXClienteCSV" class="map">
        <parameter property="oidTipoClasi" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="oidClasi" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="oidTipoClien" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="oidSubtClien" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
				
	<procedure id="executeReporteMAEClasificacionXClienteCSV" parameterMap="paramExecuteReporteMAEClasificacionXClienteCSV">
		{call MAE_PKG_REPOR.MAE_PR_REPOR_CLASI_X_CLIEN_CSV(?,?,?,?,?,?,?,?)}
	</procedure>

	<resultMap id="getExisteListaProcesoRECEnviarCDRRecepcionadosResult"   class="java.util.HashMap">
        <result property="oidReclamo" 				      column="OID_CABE_RECL"/>
  </resultMap> 
	
	<select id="getExisteListaProcesoRECEnviarCDRRecepcionados" parameterClass="java.util.Map" resultMap="getExisteListaProcesoRECEnviarCDRRecepcionadosResult">
	   SELECT 
		  rcc.OID_CABE_RECL
		FROM  INT_RECEP_CDR_CABEC rcc
		WHERE rcc.ind_esta = #tipoIndicadorCDR#
		$condicionUsuarioCDR$
		$condicionPeriodoCDR$
		$condicionFechaIngreso$
		$condicionPeriodoPedido$
     </select>
     
    <resultMap id="getListaProcesoRECEnviarCDRRecepcionadosResult"   class="java.util.HashMap">
        <result property="oidReclamo" 				      column="OID_CABE_RECL"/>
	    <result property="numeroReclamo" 				  column="num_recl"/>
		<result property="numeroSolicitud" 				  column="VAL_NUME_SOLI"/>
		<result property="periodoDocuRefe" 				  column="cod_peri_docu_Refe"/>
		<result property="periodoReclamo" 				  column="cod_peri_recl"/>
		<result property="indicadorOrigen" 				  column="ind_orig"/>
		<result property="indicadorEstado" 				  column="ind_esta"/>
		<result property="codigoSAP" 					  column="cod_sap"/>
		<result property="codigoVenta" 					  column="COD_VENT"/>
		<result property="unidadesDevolucion" 			  column="num_uni_devo"/>
		<result property="unidadesDisponibles" 			  column="num_uni_disp"/>
		<result property="unidadesDestruccion" 			  column="num_uni_dest"/>
		<result property="unidadesApro" 				  column="num_uni_apro"/>
		<result property="indicadorExistencia" 			  column="ind_exis"/>
  </resultMap> 
	
	
	<select id="getListaProcesoRECEnviarCDRRecepcionados" parameterClass="java.util.Map" resultMap="getListaProcesoRECEnviarCDRRecepcionadosResult">
	   SELECT
	      rcc.OID_CABE_RECL,
		  rcc.num_recl,
		  rcc.VAL_NUME_SOLI,
		  gen_pkg_gener.gen_fn_devuelve_des_perio(rcc.oid_peri_docu_Refe) cod_peri_docu_Refe,
		  gen_pkg_gener.gen_fn_devuelve_des_perio(rcc.oid_peri_recl) cod_peri_recl,
		  rcc.ind_orig,
		  rcc.ind_esta,
		  rcc.USU_INGR_RECL,
		  rcc.FEC_INGR_RECL,
		  rcc.USU_MODI_RECL,
		  rcc.FEC_MODI_RECL,
		  rcc.USU_ENVI_SAP,
		  rcc.FEC_ENVI_SAP,
		  rcd.cod_sap,
		  rcd.COD_VENT,
		  rcd.num_uni_devo,
		  rcd.num_uni_disp,
		  rcd.num_uni_dest,
		  rcd.num_uni_apro,
		  rcd.ind_exis
		FROM  INT_RECEP_CDR_CABEC rcc, 
		      INT_RECEP_CDR_DETAL rcd
		WHERE rcc.OID_CABE_RECL = rcd.OID_CABE_RECL
		and rcc.ind_esta = #tipoIndicadorCDR#
		$condicionUsuarioCDR$
		$condicionPeriodoCDR$
		$condicionFechaIngreso$
		$condicionPeriodoPedido$
     </select>
	
 <parameterMap id="executeCargaTemporalReporteZONMovimientoTerritorioParams" class="map">
        <parameter property="codigoPais" 					jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="codigoCampania" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="codigoMarca" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="codigoCanal" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="consultora" 					jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionFechaActua" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="oidProceso"					jdbcType="NUMERIC" javaType="java.lang.Integer" mode="OUT"/>
	</parameterMap>
				
	<procedure id="executeCargaTemporalReporteZONMovimientoTerritorio" parameterMap="executeCargaTemporalReporteZONMovimientoTerritorioParams">
		{call ZON_PKG_REPOR.ZON_PR_TEMPO_MOVIM_TERRI_CSV(?,?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="generarReporteZONMovimientoTerritorioCSVParams" class="java.util.Map">
		<parameter property="codigoPais"        		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidProceso"				jdbcType="NUMERIC" javaType="java.lang.Integer" mode="IN"/>
		<parameter property="nombreArchivo" 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="titulo"							jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="directorioArchivo"   	jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>			    
	</parameterMap>
	
	<procedure id="generarReporteZONMovimientoTerritorioCSV" parameterMap="generarReporteZONMovimientoTerritorioCSVParams">
		{call ZON_PKG_REPOR.ZON_PR_REPOR_MOVIM_TERRI_CSV(?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCCCGastoCuponCSVParams" class="map">
		<parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tipoReporte" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaDesde" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaHasta" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="executeReporteCCCGastoCuponCSV" parameterMap="executeReporteCCCGastoCuponCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_REPOR_GASTO_CUPON(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<update id="actualizarRegistroAuditoriaReinicioServidor" >
	   UPDATE BAS_REPOR_EJECU_ACTUA
	   SET FEC_FINA_REPO = SYSDATE,
	       VAL_IP_MAQU = 'SERVIDOR REINICIADO'
	   WHERE FEC_FINA_REPO IS NULL
    </update>
	
    <parameterMap id="executeReporteSACRecallTrazabilidadParams" class="map">
		<parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSAP" 			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroLote" 			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaInicial" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFinal" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="nombreArchivo" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="executeReporteSACRecallTrazabilidad" parameterMap="executeReporteSACRecallTrazabilidadParams">
		{call SAC_PKG_REPOR.SAC_PR_REPOR_RECAL_TRAZA(?,?,?,?,?,?,?,?)}
	</procedure>
	
	<delete id="deleteBeforeReporteINCPuntosConsultora" parameterClass="java.util.Map" >	
		delete from INC_TMP_REPOR_PUNTO_CONSU
	</delete>
	
	<insert id="insertBeforeReporteINCPuntosConsultora" parameterClass="java.util.Map" >	
	<![CDATA[
	INSERT INTO INC_TMP_REPOR_PUNTO_CONSU(
		DES_REGI,                     
		COD_ZONA,                     
		COD_SECC,
		COD_TERR,                     
		COD_CLIE,                     
		VAL_CEDU,                     
		NOM_CONS,                     
		VAL_CIUD,                     
		VAL_TELE,                     
		VAL_MOVI,           
		NUM_PUNT_VD,                
		NUM_PUNT_RETA,                
		NUM_PUNT_BONI,                
		NUM_DESC_CDRS,                
		NUM_ABON_CARG,                     
		NUM_TOTA_PUNT
	 )                    
	select des_regi, zon.cod_zona,  
	    sec.cod_secc seccion, zt.cod_terr territorio,
	       cod_clie,
        (select max(num_docu_iden) from  mae_clien_ident ide where ide.clie_oid_clie=cli.oid_clie 
	           and val_iden_docu_prin = 1) cedula,
	       val_nom1 || ' ' || val_nom2 || ' ' || val_ape1 || ' ' || val_ape2 consultora,
        (select des_geog from zon_valor_estru_geopo geo where direc.geo1=orde_1 and 
                   direc.geo2=orde_2 and orde_3 is null) ciudad,   
        (select max(val_text_comu) from mae_clien_comun comun 
                where comun.clie_oid_clie=cli.oid_clie and ticm_oid_tipo_comu=1) telefono,
        (select max(val_text_comu) from mae_clien_comun comun 
                where comun.clie_oid_clie=cli.oid_clie and ticm_oid_tipo_comu=6) movil,
        puntaje_vd - puntaje_bonificado puntaje_vd, puntaje_retail, puntaje_bonificado, descuento_cdrs, 
	       (total_puntaje - (puntaje_vd + puntaje_retail + descuento_cdrs)) otros_abon_carg,
	       Total_puntaje
        from ( select clie_oid_clie, SUM(num_punt) total_puntaje,
                    sum(case when val_desc like '%/ECM%' then num_punt else 0 end) puntaje_retail,
                    sum(case when val_desc like '%(REC)%' then num_punt else 0 end) descuento_cdrs,
                    sum(case when val_desc like '%Abono Puntaje del periodo Grupo Todas Venta Directa%' or
                                val_desc like '%AbonoPuntaje del períodoGrupo Todas Venta Directa%' 
                                then nvl(num_punt, 0) else 0 end) Puntaje_vd,
                    sum(case when tmov_oid_tipo_movi=1 
                                then nvl(num_punt_boni, 0) else 0 end) Puntaje_bonificado                                          
	          from inc_concu_param_gener, inc_cuent_corri_punto
	         where 1 = 1
	           and oid_para_gral = copa_oid_para_gral
	           and val_desc not like '%Entrega de Premio%'
	           and val_desc not like '%BASE INCUMPLIDA%'
	           and num_conc = #numeroConcurso#
                group by clie_oid_clie  having sum(num_punt) > #puntajeMinimo#
	        ) basep,
                mae_clien cli, mae_clien_unida_admin ua, zon_terri_admin za, zon_secci sec, zon_zona zon,
                zon_terri zt, zon_regio, 
                (select clie_oid_clie, substr(cod_unid_geog,1,6) geo1, substr(cod_unid_geog,7,6) geo2 
                    from  mae_clien_direc where ind_dire_ppal=1 and ind_elim=0) direc
       where cli.oid_clie = ua.clie_oid_clie and basep.clie_oid_clie=cli.oid_clie 
	   and ua.ztad_oid_terr_admi = za.oid_terr_admi
            and za.terr_oid_terr = zt.oid_terr AND za.zscc_oid_secc = sec.oid_secc 
            and sec.zzon_oid_zona = zon.oid_zona and ua.ind_acti = 1 
	   and zorg_oid_regi = oid_regi
	   and basep.clie_oid_clie = direc.clie_oid_clie(+)
	   $condicion$
       ]]>
	</insert>
	
	<parameterMap id="executeReporteINCPuntosConsultoraCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCPuntosConsultoraCSV" parameterMap="executeReporteINCPuntosConsultoraCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_REPOR_PUNTO_CONSU_CSV(?, ?, ?, ?)}
	</procedure>
	
	<delete id="deleteBeforeReporteINCPuntosCampania" parameterClass="java.util.Map" >	
		delete from INC_TMP_REPOR_PUNTO_CAMPA
	</delete>
	
	<insert id="insertBeforeReporteINCPuntosCampania" parameterClass="java.util.Map" >	
	<![CDATA[
	INSERT INTO INC_TMP_REPOR_PUNTO_CAMPA(
		DES_REGI,                     
		COD_ZONA,                     
		COD_SECC,
		COD_TERR,                           
		COD_CLIE,                     
		VAL_CEDU,                     
		NOM_CONS,                     
		VAL_CIUD,                     
		VAL_TELE,                     
		VAL_MOVI,           
		COD_PERI,
		NUM_PUNT_VD,                
		NUM_PUNT_RETA,                
		NUM_PUNT_BONI,                
		NUM_DESC_CDRS,                
		NUM_ABON_CARG,                     
		NUM_TOTA_PUNT,
		NUM_TOTA
	 )
	select * from (
		select des_regi , zon.cod_zona,  
		       sec.cod_secc seccion, zt.cod_terr territorio,
		        cod_clie,
		        (select max(num_docu_iden) from  mae_clien_ident ide where ide.clie_oid_clie=cli.oid_clie 
		                   and val_iden_docu_prin=1) cedula, 
		        val_nom1||' '||val_nom2||' '||val_ape1||' '||val_ape2 consultora,
		        (select des_geog from zon_valor_estru_geopo geo where direc.geo1=orde_1 and 
		                   direc.geo2=orde_2 and orde_3 is null) ciudad,   
		        (select max(val_text_comu) from mae_clien_comun comun 
		                where comun.clie_oid_clie=cli.oid_clie and ticm_oid_tipo_comu=1) telefono,
		        (select max(val_text_comu) from mae_clien_comun comun 
		                where comun.clie_oid_clie=cli.oid_clie and ticm_oid_tipo_comu=6) movil,
		        cod_peri,
		        (puntaje_vd - puntaje_bonificado) puntaje_vd, puntaje_retail, puntaje_bonificado, descuento_cdrs, 
		        (total_puntaje-(puntaje_vd+puntaje_retail+descuento_cdrs)) otros_abon_carg,
		        Total_puntaje,
		        sum(total_puntaje) over (partition by cod_clie ) total
		        from ( select clie_oid_clie, perd_oid_peri, SUM(num_punt) total_puntaje,
		                    sum(case when val_desc like '%/ECM%' then num_punt else 0 end) puntaje_retail,
		                    sum(case when val_desc like '%(REC)%' then num_punt else 0 end) descuento_cdrs,
		                    sum(case when val_desc like '%Abono Puntaje del periodo Grupo Todas Venta Directa%' or
		                                val_desc like '%AbonoPuntaje del períodoGrupo Todas Venta Directa%' 
		                                then num_punt else 0 end) Puntaje_vd,
		                    sum(case when tmov_oid_tipo_movi=1 
		                                then nvl(num_punt_boni,0) else 0 end) Puntaje_bonificado                                          
		                from inc_concu_param_gener , inc_cuent_corri_punto
		                where 1=1  
		                    and oid_para_gral = copa_oid_para_gral   
		                    and val_desc not like '%Entrega de Premio%'
		                    and val_desc not like '%BASE INCUMPLIDA%'
		                    and num_conc = #numeroConcurso#
		                group by clie_oid_clie, perd_oid_peri 
		                ) basep, 
		                mae_clien cli, mae_clien_unida_admin ua, zon_terri_admin za, zon_secci sec, zon_zona zon,
		                zon_terri zt, zon_regio, 
		                (select clie_oid_clie, substr(cod_unid_geog,1,6) geo1, substr(cod_unid_geog,7,6) geo2 
		                    from  mae_clien_direc where ind_dire_ppal=1 and ind_elim=0) direc,
		                cra_perio cra , seg_perio_corpo seg
		       where cli.oid_clie = ua.clie_oid_clie and basep.clie_oid_clie=cli.oid_clie 
		            and ua.ztad_oid_terr_admi = za.oid_terr_admi 
		            and za.terr_oid_terr = zt.oid_terr AND za.zscc_oid_secc = sec.oid_secc 
		            and sec.zzon_oid_zona = zon.oid_zona and ua.ind_acti = 1 
		            and zorg_oid_regi = oid_regi 
		            and cra.peri_oid_peri = seg.oid_peri
		            and basep.perd_oid_peri = cra.oid_peri            
		            and basep.clie_oid_clie = direc.clie_oid_clie(+)
		            $condicion$
		)
		where total > #puntajeMinimo# 
		order by des_regi, cod_zona, cod_clie, cod_peri 
       ]]>
	</insert>
	
	<parameterMap id="executeReporteINCPuntosCampaniaCSVParams" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCPuntosCampaniaCSV" parameterMap="executeReporteINCPuntosCampaniaCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_REPOR_PUNTO_CAMPA_CSV(?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCOBRetiradasSinDeudaParams" class="map">
		<parameter property="importeDeuda"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteCOBRetiradasSinDeuda" parameterMap="executeReporteCOBRetiradasSinDeudaParams">
		{call COB_PKG_REPOR.COB_PR_REPOR_RETIR_SINDE(?)}
	</procedure>
	
	<parameterMap id="executeEgresadasSinDeudaParams" class="map">
		<parameter property="importeDeuda"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeEgresadasSinDeuda" parameterMap="executeEgresadasSinDeudaParams">
		{call COB_PKG_REPOR.COB_PR_REPOR_EGRES_SINDE(?)}
	</procedure>
	
	<parameterMap id="executeReporteCOBPrimerPedidoConDeudaParams" class="map">
		<parameter property="campanaDesde"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="campanaHasta"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteCOBPrimerPedidoConDeuda" parameterMap="executeReporteCOBPrimerPedidoConDeudaParams">
		{call COB_PKG_REPOR.COB_PR_REPOR_PRIME_PEDID_DEUDO(?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCOBPedidosFacturadosConDeudaParams" class="map">
		<parameter property="codigoPeriodoDesde"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoHasta"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteCOBPedidosFacturadosConDeuda" parameterMap="executeReporteCOBPedidosFacturadosConDeudaParams">
		{call COB_PKG_REPOR.COB_PR_REPOR_PEDID_LEVAN_DEUDA(?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCOBPrimerosSegundoPedidosConDeudaParams" class="map">
		<parameter property="codigoPeriodoDesde"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoHasta"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteCOBPrimerosSegundoPedidosConDeuda" parameterMap="executeReporteCOBPrimerosSegundoPedidosConDeudaParams">
		{call COB_PKG_REPOR.COB_PR_REPOR_SEGUN_PEDID_DEUDO(?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCOBPrimerSegundoTercerPedidoConDeudaParams" class="map">
		<parameter property="campanaDesde"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="campanaHasta"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteCOBPrimerSegundoTercerPedidoConDeuda" parameterMap="executeReporteCOBPrimerSegundoTercerPedidoConDeudaParams">
		{call COB_PKG_REPOR.COB_PR_REPOR_TERCE_PEDID_DEUDO(?, ?)}
	</procedure>
	
	
	<delete id="deleteReporteCCCLiquidacionCobranzas" parameterClass="java.util.Map" >	
		delete from CCC_REPOR_LIQUI_COBRA
	</delete>
	
	<insert id="insertReporteCCCLiquidacionCobranzasCZ" parameterClass="java.util.Map" >	
	<![CDATA[
	   insert into CCC_REPOR_LIQUI_COBRA(
	        cod_cc, 
			des_cc, 
			cod_regi, 
			cod_zona, 
			tipo_cc, 
			fec_pago, 
			fec_proc, 
			tot_reg_lote,
			imp_pago
		)
		SELECT
          ccb.cod_cc cod_banc,
          ccb.des_cc des_banc,
          zorg.cod_regi,
          zzon.cod_zona,
          CASE
             WHEN   cp.cod_proc='TES001' AND su.cod_subp=1 THEN
                'Automatico'
             WHEN   cp.cod_proc='TES001' AND su.cod_subp=2 THEN
                'Manual'
           END tipo,
           to_char(mb.fec_pago, 'dd/mm/yyyy') fec_pago,
           to_char(MIN(mb.fec_proc), 'dd/mm/yyyy') fec_proc ,
           COUNT(*) tot_reg_lote,
           SUM(mb.imp_pago) imp_tota
        FROM ccc_movim_banca mb,
             ccc_cuent_corri_banca ccb,
             ccc_proce cp,
             ccc_subpr su,
             mae_clien clie,
             mae_clien_unida_admin cuad,
             zon_terri_admin ztad,
             zon_terri terr,
             zon_secci zscc,
             zon_zona zzon,
             zon_regio zorg
        WHERE mb.ccba_oid_cc_banc = ccb.oid_cuen_corr_banc
        AND mb.subp_oid_marc_crea = su.oid_subp
        AND cp.oid_proc = su.ccpr_oid_proc
        AND mb.fec_pago >= DECODE(TO_DATE(#fechaPagoDesde#,'DD/MM/YYYY'),null,mb.fec_pago,'',mb.fec_pago,TO_DATE(#fechaPagoDesde#,'DD/MM/YYYY'))
        AND mb.fec_pago <= DECODE(TO_DATE(#fechaPagoHasta#,'DD/MM/YYYY'),null,mb.fec_pago,'',mb.fec_pago,TO_DATE(#fechaPagoHasta#,'DD/MM/YYYY'))
        AND mb.fec_proc >= DECODE(TO_DATE(#fechaProcDesde#,'DD/MM/YYYY'),null,mb.fec_proc,'',mb.fec_proc,TO_DATE(#fechaProcDesde#,'DD/MM/YYYY'))
        AND mb.fec_proc <= DECODE(TO_DATE(#fechaProcHasta#,'DD/MM/YYYY'),null,mb.fec_proc,'',mb.fec_proc,TO_DATE(#fechaProcHasta#,'DD/MM/YYYY'))
        AND cp.cod_proc = DECODE(#codigoProceso#,null,cp.cod_proc,'',cp.cod_proc,#codigoProceso#)
        AND su.cod_subp = DECODE(#codigoSubproceso#,null,su.cod_subp,'',su.cod_subp,#codigoSubproceso#)
        AND ccb.cod_cc = DECODE(#codigoBanco#,null,ccb.cod_cc,'Todos',ccb.cod_cc,'',ccb.cod_cc,#codigoBanco#)
        AND mb.cod_iden_proc='P'
        AND cuad.clie_oid_clie=mb.clie_oid_clie
        AND clie.oid_clie = cuad.clie_oid_clie
        AND cuad.ztad_oid_terr_admi = ztad.oid_terr_admi
        AND ztad.zscc_oid_secc = zscc.oid_secc
        AND zscc.zzon_oid_zona = zzon.oid_zona
        AND zzon.zorg_oid_regi = zorg.oid_regi
        AND ztad.terr_oid_terr = terr.oid_terr
        AND cuad.ind_acti = 1
        $condicionZona$
        GROUP BY  ccb.cod_cc,ccb.des_cc, ZORG.COD_REGI, zzon.cod_zona, cp.cod_proc, su.cod_subp, mb.fec_pago
       
          ]]>
	</insert>
	
	
	<insert id="insertReporteCCCLiquidacionCobranzasDZ" parameterClass="java.util.Map" >	
	<![CDATA[
	   insert into CCC_REPOR_LIQUI_COBRA(
	        des_cc, 
			cod_regi, 
			cod_zona, 
			cod_cons,
			nom_clie,
			tipo_cc, 
			fec_pago, 
			fec_proc, 
			imp_pago
		)
	       SELECT
           ccb.des_cc des_banc,
           zorg.cod_regi,
           zzon.cod_zona,
           mb.cod_cons cod_clie,
           (SELECT TRIM(mc.val_ape1) || ' ' || TRIM(mc.val_ape2) || ' '  || TRIM(mc.val_nom1) || ' ' || TRIM(mc.val_nom2)
            FROM mae_clien mc
            WHERE mc.oid_clie = mb.clie_oid_clie) nom_clie,
           CASE
              WHEN cp.cod_proc='TES001' AND su.cod_subp=1 THEN
                'Automatico'
              ELSE
                'Manual'
           END tipo,
           to_char(mb.fec_pago, 'dd/mm/yyyy') fec_pago,
           to_char(mb.fec_proc, 'dd/mm/yyyy') fec_proc,
           mb.imp_pago
        FROM
             ccc_movim_banca mb,
             ccc_cuent_corri_banca ccb,
             ccc_proce cp,
             ccc_subpr su,
             mae_clien_unida_admin cuad,
             zon_terri_admin ztad,
             zon_terri terr,
             zon_secci zscc,
             zon_zona zzon,
             zon_regio zorg,
             mae_clien clie
        WHERE mb.ccba_oid_cc_banc = ccb.oid_cuen_corr_banc
        AND mb.subp_oid_marc_crea = su.oid_subp
        AND cp.oid_proc = su.ccpr_oid_proc
        AND mb.fec_pago >= DECODE(TO_DATE(#fechaPagoDesde#,'DD/MM/YYYY'),null,mb.fec_pago,'',mb.fec_pago,TO_DATE(#fechaPagoDesde#,'DD/MM/YYYY'))
        AND mb.fec_pago <= DECODE(TO_DATE(#fechaPagoHasta#,'DD/MM/YYYY'),null,mb.fec_pago,'',mb.fec_pago,TO_DATE(#fechaPagoHasta#,'DD/MM/YYYY'))
        AND mb.fec_proc >= DECODE(TO_DATE(#fechaProcDesde#,'DD/MM/YYYY'),null,mb.fec_proc,'',mb.fec_proc,TO_DATE(#fechaProcDesde#,'DD/MM/YYYY'))
        AND mb.fec_proc <= DECODE(TO_DATE(#fechaProcHasta#,'DD/MM/YYYY'),null,mb.fec_proc,'',mb.fec_proc,TO_DATE(#fechaProcHasta#,'DD/MM/YYYY'))
        AND cp.cod_proc = DECODE(#codigoProceso#,null,cp.cod_proc,'',cp.cod_proc,#codigoProceso#)
        AND su.cod_subp = DECODE(#codigoSubproceso#,null,su.cod_subp,'',su.cod_subp,#codigoSubproceso#)
        AND ccb.cod_cc = DECODE(#codigoBanco#,null,ccb.cod_cc,'Todos',ccb.cod_cc,'',ccb.cod_cc,#codigoBanco#)
        
        and mb.cod_iden_proc='P'
        AND cuad.clie_oid_clie=mb.clie_oid_clie
        AND clie.oid_clie = cuad.clie_oid_clie
        AND cuad.ztad_oid_terr_admi = ztad.oid_terr_admi
        AND ztad.zscc_oid_secc = zscc.oid_secc
        AND zscc.zzon_oid_zona = zzon.oid_zona
        AND zzon.zorg_oid_regi = zorg.oid_regi
        AND ztad.terr_oid_terr = terr.oid_terr
        AND cuad.ind_acti = 1
         $condicionZona$
        
	
          ]]>
	</insert>
	
	<parameterMap id="executeBeforeReporteCUPNuevasCuponesParams" class="map">
	    <parameter property="codigoPais"                  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoInicial"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoFinal"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeBeforeReporteCUPNuevasCupones" parameterMap="executeBeforeReporteCUPNuevasCuponesParams">
		{call cup_pkg_prog_nuevas.CUP_PR_GENER_REPOR_NUEVA_CUPON(?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCUPNuevasCuponesCSVparam" class="map" >
		<parameter property="codigoPais"           jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"    jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	
	<procedure id="executeReporteCUPNuevasCuponesCSV" parameterMap="executeReporteCUPNuevasCuponesCSVparam" >
		{call cup_pkg_prog_nuevas.CUP_PR_REPOR_NUEVA_CUPON_CSV(?, ?, ?, ?)}
	</procedure>

   <parameterMap id="executeReporteSACControlFacturacionEntregaPedidoParams" class="map">
		<parameter property="codigoPais" 					jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoInicial" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoFinal" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSecuencia" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="nombreArchivo" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="executeReporteSACControlFacturacionEntregaPedido" parameterMap="executeReporteSACControlFacturacionEntregaPedidoParams">
		{call SAC_PKG_REPOR.SAC_PR_REPOR_CTRL_FACT_PEDI(?,?,?,?,?,?,?)}
	</procedure>	

	<parameterMap id="executeReporteLETResultadoParams" class="map">
		<parameter property="codigoPais" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo"				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="nombreArchivo" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tramo" 		            jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="executeReporteLETResultado" parameterMap="executeReporteLETResultadoParams">
		{call LET_PKG_PROCE.LET_PR_REPOR_RESU(?,?,?,?,?,?)}
	</procedure>	

    <select id="getSecuenciaIndicadorControlEntregaNextValue" resultClass="string">
   		 SELECT REP_SAC_CFEP_SEQ.NEXTVAL FROM DUAL
    </select>

    <insert id="insertRegionReporteLETResultado" parameterClass="java.util.Map" >	
		INSERT INTO LET_TEMPO_REPOR_RESUL_REGIO(COD_REGI)
		VALUES(#codigoRegion#)
	</insert>
	
	<parameterMap id="executeReporteSGRSolicitudesTodParams" class="map">
		<parameter property="codigoPais" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoRegion"				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoZona" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoSeccion"				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoInicio" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodoFin"			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPoliza"				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="nombreArchivo" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="executeReporteSGRSolicitudesTod" parameterMap="executeReporteSGRSolicitudesTodParams">
		{call SGR_PKG_PROCE_FAMSE.SGR_PR_REPOR_SOLI(?,?,?,?,?,?,?,?,?,?)}
	</procedure>

	<insert id="insertReporteSACControlFacturacionEntregaPedido" parameterClass="java.util.Map">
		INSERT INTO rep_sac_cfact_epedi(
			fec_proc,
			num_docu,
			cod_clie,
			cod_peri,
			oid_soli_cabe,
			num_secu)
		SELECT ot.fec_proc,
		       ot.num_docu,
		       ot.cod_clie,
		       ot.cod_peri,
		       con.oid_soli_cabe,
		       #codigoSecuencia# num_secu
		FROM int_solic_conso_orden_trans   ot,
		          sto_docum_digit   dd,
		          ped_solic_cabec   con
		WHERE dd.sec_nume_docu = ot.sec_nume_docu
		     AND dd.cod_tipo_docu = 'OT'
		     AND dd.ind_envi IN (SELECT val_param
		                                       FROM sto_param_gener_occrr
		                                       WHERE cod_para LIKE 'STO_IND_OT%')
		     AND dd.ind_rech = '0'
		     AND ot.num_docu = con.val_nume_soli
			<isNotEmpty prepend="AND" property="codigoPeriodoInicial">
				<![CDATA[
				ot.cod_peri >= #codigoPeriodoInicial#
				]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoPeriodoInicial">
				<![CDATA[
				ot.cod_peri <= #codigoPeriodoFinal#
				]]>
			</isNotEmpty>
		     AND con.ind_oc = 0
		     AND con.grpr_oid_grup_proc = 5
		     AND con.tspa_oid_tipo_soli_pais = fin_pkg_gener.fin_fn_obtie_oid_solic_pais('C1')
	</insert>
	
    <parameterMap id="executeReporteLECEnviarReporteProyecionParams" class="map">
		<parameter property="codigoPais"		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="campanyaProceso" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionTramos" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoUsuario" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteLECEnviarReporteProyecion" parameterMap="executeReporteLECEnviarReporteProyecionParams">
		{call LEC_PKG_PROCE.LEC_PR_GENER_REPOR_PROYE(?,?,?,?)}
	</procedure>	
	
	<select id="getRegionesReporteLECEnviarReporteProyecion" parameterClass="map" resultMap="baseResult">
		SELECT DISTINCT COD_REGI CODIGO, '' DESCRIPCION 
		FROM REP_LEC_PROYE 
		WHERE COD_USUA = #codigoUsuario#
		ORDER BY COD_REGI
	</select>

	<select id="getZonasReporteLECEnviarReporteProyecion" parameterClass="map" resultMap="baseResult">
        SELECT DISTINCT
        Z.COD_ZONA CODIGO, 
	    	    (SELECT  clco.val_text_comu
		            FROM mae_clien_comun clco,
		                 mae_tipo_comun ticm
		          WHERE ticm.cod_tipo_comu = 'ML'
		             AND clco.ticm_oid_tipo_comu = ticm.oid_tipo_comu 
		             AND clco.clie_oid_clie = Z.CLIE_OID_CLIE) DESCRIPCION        
        FROM REP_LEC_PROYE R, ZON_ZONA Z
        WHERE R.COD_ZONA = Z.COD_ZONA         
        AND R.COD_REGI = #codigoRegion#
        AND R.COD_USUA = #codigoUsuario#
	</select>
	
    <delete id="deleteReporteCCCArchivosMediosMagneticosCuentaCorrienteBimensual">
        TRUNCATE TABLE CCC_REPOR_MEDIO_MAGNE_BIMEN
    </delete>
	
	<parameterMap id="insertReporteCCCArchivosMediosMagneticosCuentaCorrienteBimensualParams" class="map">
		<parameter property="fechaInicial"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFinal"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="insertReporteCCCArchivosMediosMagneticosCuentaCorrienteBimensual" parameterMap="insertReporteCCCArchivosMediosMagneticosCuentaCorrienteBimensualParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_REPOR_MEDIO_MAGNE_BIMEN(?,?)}
	</procedure>
	
	<parameterMap id="executeGeneraReporteCCCArchivosMediosMagneticosCuentaCorrienteBimensualCSVparam" class="map" >
		<parameter property="codigoPais"           jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"    jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	
	<procedure id="executeGeneraReporteCCCArchivosMediosMagneticosCuentaCorrienteBimensualCSV" parameterMap="executeGeneraReporteCCCArchivosMediosMagneticosCuentaCorrienteBimensualCSVparam">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GEN_REPOR_MED_MAG_BIMEN(?,?,?,?)}
	</procedure>	

	<delete id="deleteReporteCCCAntiguedadSaldos">
        TRUNCATE TABLE CCC_REPOR_DETAL_ANTIG_SALDO
    </delete>
        
	<parameterMap id="insertReporteCCCAntiguedadSaldosParams" class="map">		
		<parameter property="fechaCorte"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoUsuario"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="insertReporteCCCAntiguedadSaldos" parameterMap="insertReporteCCCAntiguedadSaldosParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_REPOR_ANTIG_SALDO(?,?)}
	</procedure>
	
	<parameterMap id="executeGeneraReporteCCCAntiguedadSaldosCSVparam" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeGeneraReporteCCCAntiguedadSaldosCSV" parameterMap="executeGeneraReporteCCCAntiguedadSaldosCSVparam">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_REPOR_ANTIG_SALDO_CSV(?,?,?,?)}
	</procedure>
	
	<select id="getCampanyaBonoRegion" parameterClass="java.util.Map" resultClass="string">
		SELECT LEC_PKG_PROCE.LEC_FN_OBTE_CAMPA_RECU(#codigoPais#,#codigoPrograma#,#campanyaProceso#,#codigoRegion#,null,'B') FROM DUAL
	</select>
	
	<select id="getCampanyaBonoZona" parameterClass="java.util.Map" resultClass="string">
		SELECT LEC_PKG_PROCE.LEC_FN_OBTE_CAMPA_RECU(#codigoPais#,#codigoPrograma#,#campanyaProceso#,reg.COD_REGI,#codigoZona#,'B') 
		  FROM ZON_ZONA zon, ZON_REGIO reg
		 WHERE zon.zorg_oid_regi = reg.oid_regi
		   AND zon.cod_zona = #codigoZona#
		   AND zon.IND_ACTI = 1
	</select>
	
	<select id="getCampanyaRecaudoRegion" parameterClass="java.util.Map" resultClass="string">
		SELECT LEC_PKG_PROCE.LEC_FN_OBTE_CAMPA_RECU(#codigoPais#,#codigoPrograma#,#campanyaProceso#,#codigoRegion#,null,'R') FROM DUAL
	</select>
	
	<select id="getCampanyaRecaudoZona" parameterClass="java.util.Map" resultClass="string">
		SELECT LEC_PKG_PROCE.LEC_FN_OBTE_CAMPA_RECU(#codigoPais#,#codigoPrograma#,#campanyaProceso#,reg.COD_REGI,#codigoZona#,'R') 
		  FROM ZON_ZONA zon, ZON_REGIO reg
		 WHERE zon.zorg_oid_regi = reg.oid_regi
		   AND zon.cod_zona = #codigoZona#
		   AND zon.IND_ACTI = 1
	</select>
	
	
    <parameterMap id="executeReporteCCCDetalladoConsultorasIncobrableParams" class="map">
		<parameter property="campanaHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteCCCDetalladoConsultorasIncobrable" parameterMap="executeReporteCCCDetalladoConsultorasIncobrableParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_DETAL_PREVI_CONSU_INCOB(?,?)}
	</procedure>	
	
	<parameterMap id="executeReporteCCCDetalladoConsultorasIncobrableCSVParams" class="map">
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="campanaHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="regionList" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="zonaList" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="seccionList" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
	</parameterMap>
	
	<procedure id="executeReporteCCCDetalladoConsultorasIncobrableCSV" parameterMap="executeReporteCCCDetalladoConsultorasIncobrableCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_DETAL_CONSUL_INCOBR(?,?,?,?,?,?,?,?,?)}
	</procedure>	
	
	<parameterMap id="executeReporteCCCBuroCreditoCSVParams" class="map">
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>		
	</parameterMap>
	
	<procedure id="executeReporteCCCBuroCreditoCSV" parameterMap="executeReporteCCCBuroCreditoCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_BURO_CREDITO(?,?,?,?)}
	</procedure>	
	
	<delete id="deleteReporteCCCDetalladoConsultorasIncobrable">
         DELETE FROM ccc_repor_previ_consu_incob
    </delete>
    
    
    <parameterMap id="executeReporteCCCDetalladoConsultorasIncobrableConsultoraCSVParams" class="map">
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="fechaInicial" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFinal" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
	</parameterMap>
	
    <procedure id="executeReporteCCCDetalladoProvisionIncobrableConsultoraCSV" parameterMap="executeReporteCCCDetalladoConsultorasIncobrableConsultoraCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_DET_PROV_INCOBR_CONSLT(?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="executeReporteCCCDetalladoConsultorasIncobrableMovCSVParams" class="map">
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="fechaInicial" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFinal" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
	</parameterMap>
	
    <procedure id="executeReporteCCCDetalladoProvisionIncobrableMovCSV" parameterMap="executeReporteCCCDetalladoConsultorasIncobrableMovCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_DETAL_PROV_INCOBR_MOV(?,?,?,?,?,?)}
	</procedure>
    
    
    <parameterMap id="executeReporteCCCConsolidadoRecaudoCampanaParams" class="map">
		<parameter property="fechaDesde" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaHasta" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
	</parameterMap>
	
    <procedure id="executeReporteCCCConsolidadoRecaudoCampana" parameterMap="executeReporteCCCConsolidadoRecaudoCampanaParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_RECAU_CAMPA(?,?)}
	</procedure>
	
	<delete id="deleteReporteCCCConsolidadoRecaudoCampana">
		delete from ccc_repor_recau_campa
	</delete>
	
	<parameterMap id="executeReporteZONTerritorioUnidadGeograficaCSVParams" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="titulo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteZONTerritorioUnidadGeograficaCSV" parameterMap="executeReporteZONTerritorioUnidadGeograficaCSVParams" >
		{call ZON_PKG_REPOR.ZON_PR_GENER_REPOR_TUNGE_CSV(?, ?, ?, ?)}
	</procedure>
	
		<parameterMap id="executePrepararReporteCOBRecuperacionCobranzaFFVVTXTParams" class="map" >
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoRegion" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executePrepararReporteCOBRecuperacionCobranzaFFVVTXT" parameterMap="executePrepararReporteCOBRecuperacionCobranzaFFVVTXTParams" >
		{call COB_PKG_REPOR.COB_PR_GENER_COBRA_FFVV(?, ?)}
	</procedure>	

	<parameterMap id="executeGenerarReporteCOBRecuperacionCobranzaFFVVTXTParams" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="titulo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	
	<procedure id="executeGenerarReporteCOBRecuperacionCobranzaFFVVTXT" parameterMap="executeGenerarReporteCOBRecuperacionCobranzaFFVVTXTParams" >
		{call COB_PKG_REPOR.COB_PR_GENER_REPOR_COBRA_FFVV(?, ?, ?, ?, ?)}
	</procedure>	
	
	<parameterMap id="executeGeneraReporteCCCRegistroVentasBoliviaCSVparam" class="map" >
		<parameter property="codigoPais"           jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"             jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"    jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	
	<procedure id="executeGeneraReporteCCCRegistroVentasBoliviaCSV" parameterMap="executeGeneraReporteCCCRegistroVentasBoliviaCSVparam">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GEN_REPOR_REG_VENT_BOL(?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="executeGeneraReporteCCCRegistroAbonosBoliviaCSVparam" class="map" >
		<parameter property="codigoPais"           jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"             jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"    jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	
	<procedure id="executeGeneraReporteCCCRegistroAbonosBoliviaCSV" parameterMap="executeGeneraReporteCCCRegistroAbonosBoliviaCSVparam">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GEN_REPOR_REG_ABON_BOL(?,?,?,?,?,?)}
	</procedure>
	
	<delete id="deleteTablaTemporalLecProyecPpreg">
        DELETE REP_LEC_PROYE_PPREG
    </delete>
    
    <delete id="deleteTablaTemporalRerLecProye">
        DELETE REP_LEC_PROYE
    </delete>
    
    <parameterMap id="executeReporteAntigNotasCrediParams" class="java.util.Map">
	    <parameter property="fechaDesde"				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaHasta"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

	<procedure id="executeReporteAntigNotasCredi" parameterMap="executeReporteAntigNotasCrediParams">
		{call CCC_PKG_REPOR_PROCE. CCC_PR_REPOR_ANTIG_NOTAS_CREDI(?,?)}
	</procedure>
	
	<parameterMap id="executeReporteCOBPrimerSegundoTercerCuartoPedidoConDeudaParams" class="map">
		<parameter property="campanaDesde"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="campanaHasta"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteCOBPrimerSegundoTercerCuartoPedidoConDeuda" parameterMap="executeReporteCOBPrimerSegundoTercerCuartoPedidoConDeudaParams">
		{call COB_PKG_REPOR.COB_PR_REPOR_CUART_PEDID_DEUDO(?, ?)}
	</procedure>
	
	
	<parameterMap id="paramExecuteReporteSACTIMImpositivoAduana" class="map">
		<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoUsuario"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPeriodo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"            jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionRegion"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionZona"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="executeReporteSACTIMImpositivoAduana" parameterMap="paramExecuteReporteSACTIMImpositivoAduana">
		{call SAC_PKG_REPOR.SAC_PR_REPOR_IMPOS_ADUAN(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<delete id="deleteReporteSACAtendidoxFechaConsolidado">
		TRUNCATE TABLE SAC_TMP_ATEND_FECHA_CONSO
	</delete>
	
	<delete id="deleteReporteSACAtendidoxFechaDetallado">
		TRUNCATE TABLE SAC_TMP_ATEND_FECHA_DETAL
	</delete>
	
	<insert id="insertarReporteSACAtendidoxFechaConsolidado" parameterClass = "java.util.Map">
	    INSERT INTO SAC_TMP_ATEND_FECHA_CONSO(
			cod_sap, 
			cod_ind_dent_caja, 
			num_unid_aten)
		SELECT 
            PRD.COD_SAP SAP,
            PRD.COD_IND_DENT_CAJA AFP,
            POS.NUM_UNID_ATEN
		FROM 
		            PED_SOLIC_CABEC CON,
		            PED_SOLIC_CABEC SOL,
		            PED_SOLIC_POSIC POS,
		            MAE_PRODU PRD,
		            GEN_I18N_SICC_PAIS GEN,
		            MAE_CLIEN CLI,
		            CRA_PERIO PER,
		            GEN_I18N_SICC_COMUN DTS,
		            ZON_ZONA ZON,
		            ZON_TERRI_ADMIN ZTAD,
		            ZON_SECCI SECC,
		            PED_TIPO_SOLIC_PAIS TSPA
		WHERE 
		            CON.PERD_OID_PERI=PER.OID_PERI
		            AND CON.FEC_FACT IS NOT NULL
		            
		            <![CDATA[
		            AND CON.NUM_UNID_ATEN_TOTA > 0
		            
		            AND CON.OID_SOLI_CABE=SOL.SOCA_OID_SOLI_CABE
		            AND SOL.OID_SOLI_CABE=POS.SOCA_OID_SOLI_CABE
		            AND PRD.OID_PROD=POS.PROD_OID_PROD
		            AND GEN.ATTR_ENTI='MAE_PRODU'
		            AND GEN.VAL_OID=PRD.OID_PROD
		            AND CON.CLIE_OID_CLIE=CLI.OID_CLIE
		            
		            AND POS.NUM_UNID_ATEN > 0
		         
		            AND SOL.TSPA_OID_TIPO_SOLI_PAIS=TSPA.OID_TIPO_SOLI_PAIS
		            AND DTS.ATTR_ENTI='PED_TIPO_SOLIC'
		            AND DTS.VAL_OID=TSPA.TSOL_OID_TIPO_SOLI
		            AND CON.ZZON_OID_ZONA=ZON.OID_ZONA
		            AND CON.ZTAD_OID_TERR_ADMI=ZTAD.OID_TERR_ADMI
		            AND ZTAD.ZSCC_OID_SECC=SECC.OID_SECC
		            
		            AND con.VAL_BASE_FLET_LOCA > 0 
		             ]]>
		            
		           AND  CON.FEC_FACT = TO_DATE(#fechaFacturacion#, 'DD/MM/YYYY')
	
	</insert>
	
	<insert id="insertarReporteSACAtendidoxFechaDetallado" parameterClass = "java.util.Map">
	   INSERT INTO SAC_TMP_ATEND_FECHA_DETAL (
			cod_zona, 
			cod_secc, 
			cod_clie, 
			cod_cedu, 
			val_nomb, 
			val_dire, 
			val_tele, 
			val_tele_celu, 
			val_nume_soli, 
			cod_sap, 
			val_codi_vent, 
			val_desc, 
			num_unid_aten, 
			val_prec_fact_unit_loca, 
			val_prec_fact_tota_loca, 
			val_esta, 
			val_nomb_peri, 
			fec_fact, 
			val_tipo_soli
			)
		SELECT 
            ZON.COD_ZONA AS ZONA,
            SECC.COD_SECC AS SECCION,
            CLI.COD_CLIE AS CONSULTORA,
            
            (select num_docu_iden from mae_clien_ident iden where iden.CLIE_OID_CLIE=con.clie_oid_clie
            and tdoc_oid_tipo_docu=2001) as Cedula, 
            
            TRIM(CLI.VAL_APE1)||' '||TRIM(CLI.VAL_APE2)||', '||TRIM(CLI.VAL_NOM1)||' '||TRIM(CLI.VAL_NOM2) AS NOMBRES,
            
            (select des_abrv_tipo_via||' '||val_nomb_via||' '||num_ppal||' '||val_obse 
            from mae_clien_direc dir,seg_tipo_via
            where dir.clie_oid_clie=con.clie_oid_clie and ind_elim='0' and ind_dire_ppal=1
            and tivi_oid_tipo_via=oid_tipo_via) as Direccion,
            
            (select val_text_comu from mae_clien_comun com where com.CLIE_OID_CLIE=con.clie_oid_clie
            and ticm_oid_tipo_comu=1) as Telefono, 
            
            (select val_text_comu from mae_clien_comun com where com.CLIE_OID_CLIE=con.clie_oid_clie
            and ticm_oid_tipo_comu=6) as Celular,
            
            CON.VAL_NUME_SOLI AS PEDIDO,
            PRD.COD_SAP AS PRODUCTO,
            POS.VAL_CODI_VENT AS COD_VTA,
            GEN.VAL_I18N AS DESCRIPCION,
            POS.NUM_UNID_ATEN AS UNIDADES,
            POS.VAL_PREC_FACT_UNIT_LOCA AS PRECIO_UNITARIO,
            POS.VAL_PREC_FACT_TOTA_LOCA AS PRECIO_TOTAL,
            
             <![CDATA[
            (SELECT VAL_I18N FROM MAE_CLIEN_HISTO_ESTAT,GEN_I18N_SICC_COMUN
             WHERE CLIE_OID_CLIE=CON.CLIE_OID_CLIE 
             AND PERD_OID_PERI <= PER.OID_PERI
             AND (PER.OID_PERI <= PERD_OID_PERI_PERI_FIN OR PERD_OID_PERI_PERI_FIN IS NULL)
             AND ATTR_ENTI='MAE_ESTAT_CLIEN'
             AND VAL_OID=ESTA_OID_ESTA_CLIE) AS ESTATUS,
              ]]>
              
            PER.VAL_NOMB_PERI,
            TO_CHAR(CON.FEC_FACT,'DD/MM/YYYY') ,
            DTS.VAL_I18N AS TIPO_SOLICITUD
		FROM 
            PED_SOLIC_CABEC CON,
            PED_SOLIC_CABEC SOL,
            PED_SOLIC_POSIC POS,
            MAE_PRODU PRD,
            GEN_I18N_SICC_PAIS GEN,
            MAE_CLIEN CLI,
            CRA_PERIO PER,
            GEN_I18N_SICC_COMUN DTS,
            ZON_ZONA ZON,
            ZON_TERRI_ADMIN ZTAD,
            ZON_SECCI SECC,
            PED_TIPO_SOLIC_PAIS TSPA
		WHERE 
            CON.PERD_OID_PERI=PER.OID_PERI
            AND CON.FEC_FACT IS NOT NULL
            
             <![CDATA[
            AND CON.NUM_UNID_ATEN_TOTA > 0
            AND POS.NUM_UNID_ATEN > 0
            ]]>
            
            AND CON.OID_SOLI_CABE=SOL.SOCA_OID_SOLI_CABE
            AND SOL.OID_SOLI_CABE=POS.SOCA_OID_SOLI_CABE
            AND PRD.OID_PROD=POS.PROD_OID_PROD
            AND GEN.ATTR_ENTI='MAE_PRODU'
            AND GEN.VAL_OID=PRD.OID_PROD
            AND CON.CLIE_OID_CLIE=CLI.OID_CLIE
            
            AND SOL.TSPA_OID_TIPO_SOLI_PAIS=TSPA.OID_TIPO_SOLI_PAIS
            AND DTS.ATTR_ENTI='PED_TIPO_SOLIC'
            AND DTS.VAL_OID=TSPA.TSOL_OID_TIPO_SOLI
            AND CON.ZZON_OID_ZONA=ZON.OID_ZONA
            AND CON.ZTAD_OID_TERR_ADMI=ZTAD.OID_TERR_ADMI
            AND ZTAD.ZSCC_OID_SECC=SECC.OID_SECC
            AND CON.FEC_FACT = TO_DATE(#fechaFacturacion#, 'DD/MM/YYYY')
	
	</insert>
	
	<select id="getCampanyaRecaudoRegionZona" parameterClass="java.util.Map" resultClass="string">
		SELECT LEC_PKG_PROCE.LEC_FN_OBTE_CAMPA_RECU(#codigoPais#,#codigoPrograma#,#campanyaProceso#,#codigoRegion#,#codigoZona#,'R') FROM DUAL
	</select>
	
	<select id="getExisteCUV" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		SELECT count(1)
		  FROM pre_matri_factu_cabec a,
		       pre_ofert b,
		       pre_ofert_detal c,
		       mae_produ d,
		       pre_matri_factu e
		WHERE a.oid_cabe = b.mfca_oid_cabe
		   AND b.oid_ofer = c.ofer_oid_ofer
		   AND c.prod_oid_prod = d.oid_prod
		   AND c.oid_deta_ofer = e.ofde_oid_deta_ofer
		   AND e.mfca_oid_cabe = a.oid_cabe 
		   AND a.perd_oid_peri = #oidPeriodo#
		   AND c.val_codi_vent = #codigoCUV#
		   AND d.pais_oid_pais = gen_pkg_gener.gen_fn_devuelve_id_pais(#codigoPais#)
	</select>
	
	<parameterMap id="paramExecuteReporteConsultoraPuntajeUbicacion" class="map">
		<parameter property="oidConcurso"          jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteConsultoraPuntajeUbicacion" parameterMap="paramExecuteReporteConsultoraPuntajeUbicacion">
		{call Inc_Pkg_Repor_Incen.INC_PR_REPOR_CONSU_PUNTA(?)}
	</procedure>
	
	<parameterMap id="paramExecuteReporteCodigosInexistentes" class="map">
	    <parameter property="periodoInicial"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="periodoFinal"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaFacturacionInicio"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaFacturacionFin"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoRegion"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoZona"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="codigoCliente"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="estado"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="preimpreso"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteCodigosInexistentes" parameterMap="paramExecuteReporteCodigosInexistentes">
		{call SAC_PKG_REPOR.SAC_PR_REPOR_CODIG_INEXI(?, ?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>
	
	<delete id="deleteReporteRECListadoDeudaPendPeriodoConsolidado">
		TRUNCATE TABLE REC_REPOR_DEUDA_PERIO_CONSO
	</delete>
	
	<insert id="insertarReporteRECListadoDeudaPendPeriodoConsolidado" parameterClass = "java.util.Map">
	   insert into REC_REPOR_DEUDA_PERIO_CONSO (
	        des_regi, 
			des_zona, 
			cod_terr, 
			cod_clie, 
			nom_clie, 
			fec_fact, 
			num_soli_cons, 
			imp_cuot, 
			imp_cuot_pend, 
			imp_inaf_perc, 
			imp_pend_inaf_perc, 
			imp_afec_perc, 
			imp_pend_afec_perc
	       )
		SELECT   
		     r.des_regi, 
	         zon.des_zona, 
	         te.cod_terr, 
	         cli.cod_clie, 
	         TRIM(cli.val_ape1)||' '||TRIM(cli.val_ape2)||' '|| TRIM(cli.val_nom1)||' '|| TRIM(cli.val_nom2) as nom_clie,
	         per.fec_fact,
	         per.NUM_SOLI_CONS,
	         per.imp_cuot, 
	         per.imp_cuot_pend,
	         per.imp_inaf_perc, 
	         per.imp_pend_inaf_perc, 
	         per.imp_afec_perc, 
	         per.imp_pend_afec_perc
	    FROM per_cuent_corri_docle per,
	         mae_clien_unida_admin uni_adm,
	         mae_clien cli,
	         zon_terri_admin ter_adm,
	         zon_terri te,
	         zon_secci secc,
	         zon_zona zon,
	         zon_regio r,
	         (SELECT * FROM cra_perio where oid_peri= #oidPeriodoInicio# ) peri_i,
	         (SELECT * FROM cra_perio where oid_peri= #oidPeriodoFin# ) peri_f
	     WHERE (  (cli.oid_clie = uni_adm.clie_oid_clie)
	          AND (cli.cod_clie = per.cod_clie)
	          AND (ter_adm.oid_terr_admi = uni_adm.ztad_oid_terr_admi)
	          AND (te.oid_terr = ter_adm.terr_oid_terr)
	          AND (secc.oid_secc = ter_adm.zscc_oid_secc)
	          AND (zon.oid_zona = secc.zzon_oid_zona)
	          AND (r.oid_regi = zon.zorg_oid_regi)
	          $condicion$
	          AND per.fec_fact = Decode(#fechaFacturacion#, null, per.fec_fact, '', per.fec_fact,To_Date(#fechaFacturacion#,'dd/MM/yyyy') )
	          
	           <![CDATA[
	          AND (peri_i.fec_inic <= per.fec_fact)
	          AND (peri_f.fec_fina >= per.fec_fact)
	          ]]>
	         )    
	     
	</insert>
	
	
	<delete id="deleteReporteRECListadoDeudaPendPeriodoDetallado">
		TRUNCATE TABLE REC_REPOR_DEUDA_PERIO_DETAL
	</delete>
	
	<insert id="insertarReporteRECListadoDeudaPendPeriodoDetallado" parameterClass = "java.util.Map">
	   insert into REC_REPOR_DEUDA_PERIO_DETAL(
	   		cod_regi,
	        des_regi, 
	        cod_zona,
			des_zona, 
			cod_terr, 
			cod_clie, 
			nom_clie, 
			fec_fact, 
			fec_venc_cuot,
			num_soli_cons, 
			imp_cuot, 
			imp_cuot_pend, 
			imp_inaf_perc, 
			imp_pend_inaf_perc, 
			imp_afec_perc, 
			imp_pend_afec_perc
	       )
		SELECT  
		     r.cod_regi, 
		     r.des_regi, 
		     zon.cod_zona,
	         zon.des_zona, 
	         te.cod_terr, 
	         cli.cod_clie, 
	         TRIM(cli.val_ape1)||' '||TRIM(cli.val_ape2)||' '|| TRIM(cli.val_nom1)||' '|| TRIM(cli.val_nom2) as nom_clie,
	         per.fec_fact,
	         per.fec_venc_cuot, 
	         per.NUM_SOLI_CONS,
	         per.imp_cuot, 
	         per.imp_cuot_pend,
	         per.imp_inaf_perc, 
	         per.imp_pend_inaf_perc, 
	         per.imp_afec_perc, 
	         per.imp_pend_afec_perc
	    FROM per_cuent_corri_docle per,
	         mae_clien_unida_admin uni_adm,
	         mae_clien cli,
	         zon_terri_admin ter_adm,
	         zon_terri te,
	         zon_secci secc,
	         zon_zona zon,
	         zon_regio r,
	         (SELECT * FROM cra_perio where oid_peri= #oidPeriodoInicio# ) peri_i,
	         (SELECT * FROM cra_perio where oid_peri= #oidPeriodoFin# ) peri_f
	     WHERE (  (cli.oid_clie = uni_adm.clie_oid_clie)
	          AND (cli.cod_clie = per.cod_clie)
	          AND (ter_adm.oid_terr_admi = uni_adm.ztad_oid_terr_admi)
	          AND (te.oid_terr = ter_adm.terr_oid_terr)
	          AND (secc.oid_secc = ter_adm.zscc_oid_secc)
	          AND (zon.oid_zona = secc.zzon_oid_zona)
	          AND (r.oid_regi = zon.zorg_oid_regi)
	          $condicion$
	          AND per.fec_fact = Decode(#fechaFacturacion#, null, per.fec_fact, '', per.fec_fact,To_Date(#fechaFacturacion#,'dd/MM/yyyy') )
	          
	           <![CDATA[
	          AND (peri_i.fec_inic <= per.fec_fact)
	          AND (peri_f.fec_fina >= per.fec_fact)
	          ]]>
	         )    
	     
	</insert>
	
	<insert id="insertReporteGanadorasSinCUVClie" parameterClass="java.util.Map">
		INSERT INTO inc_tempo_ganad_repor_clie_cuv(clie_oid_clie, estado)
			SELECT sc.clie_oid_clie, SUM(case
                     when sp.val_codi_vent 
                          <iterate prepend="IN" property="CUVList" open="(" close=")" conjunction=",">
									#CUVList[]#
							</iterate>
                      THEN
                      1
                     ELSE
                      0
                   END) estad
			  FROM ped_solic_cabec sc,
			       ped_solic_posic sp,
			       cra_perio       a,
			       seg_perio_corpo b
			 WHERE sp.soca_oid_soli_cabe = sc.oid_soli_cabe
			   AND fec_fact is not NULL
			   AND sc.ind_ts_no_conso = 1
			   AND sc.ind_pedi_prue = 0
			   <![CDATA[
			   AND sp.espo_oid_esta_posi <> 2
			   ]]>
			   AND a.peri_oid_peri = b.oid_peri
			   AND sc.perd_oid_peri = a.oid_peri
			   AND cod_peri = #codigoPeriodo#
			   AND tspa_oid_tipo_soli_pais =
			       (select tsp.oid_tipo_soli_pais
			          from ped_tipo_solic_pais tsp, ped_tipo_solic ts, v_gen_i18n_sicc i
			         where i.idio_oid_idio = 1
			           and i.attr_enti = 'PED_TIPO_SOLIC'
			           and i.val_oid = ts.oid_tipo_soli
			           and tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli
			           and ts.cod_tipo_soli = 'SOC')
			   GROUP BY sc.clie_oid_clie
	</insert>
	
	<delete id="deleteReporteGanadorasSinCUVClie">
        DELETE FROM inc_tempo_ganad_repor_clie_cuv
	</delete>
	
	<insert id="insertReporteGanadorasSinCUV" parameterClass="java.util.Map">
		INSERT INTO inc_tempo_ganad_repor_sin_cuv(cod_regi,cod_zona,nom_clie,cod_clie)
			select cod_regi, cod_zona, val_nom1 ||' '|| val_ape1 ||' '|| val_ape2 nom_clie, cod_clie
			  FROM inc_tempo_ganad_repor_clie_cuv QUERIE1,
			       MAE_CLIEN CLI,
			       MAE_CLIEN_UNIDA_ADMIN UA,
			       ZON_TERRI_ADMIN ZA,
			       ZON_SECCI SEC,
			       ZON_ZONA ZON,
			       ZON_TERRI ZT,
			       zon_regio ZR
			 <![CDATA[      
			 WHERE QUERIE1.ESTADO < 1
			 ]]>
			   AND oid_clie IN
			       (SELECT clie_oid_clie
			          FROM (SELECT clie_oid_clie, sum(num_punt) puntos
			                  FROM inc_concu_param_gener,
			                       mae_clien,
			                       INC_CUENT_CORRI_PUNTO
			                 WHERE 1 = 1
			                   AND oid_para_gral = copa_oid_para_gral
			                   AND clie_oid_clie = oid_clie
			                   AND VAL_DESC NOT LIKE 'ENTREGA DE PREMIO%'
			                   AND num_conc = #numeroConcurso#
			                 GROUP BY clie_oid_clie)
			         WHERE puntos >= (SELECT MIN(NUM_CANT_INIC_PUNT)
			                            FROM inc_concu_param_gener a,
			                                 inc_param_gener_premi b,
			                                 inc_param_nivel_premi c
			                           WHERE oid_para_gral = copa_oid_para_gral
			                             AND PAGP_OID_PARA_GENE_PREM = OID_PARA_GENE_PREM
			                             AND a.num_conc = #numeroConcurso#
			                          ))
			   AND CLI.OID_CLIE = QUERIE1.CLIE_OID_CLIE
			   AND CLI.OID_CLIE = UA.CLIE_OID_CLIE
			   AND UA.ZTAD_OID_TERR_ADMI = ZA.OID_TERR_ADMI
			   AND ZA.TERR_OID_TERR = ZT.OID_TERR
			   AND ZA.ZSCC_OID_SECC = SEC.OID_SECC
			   AND SEC.ZZON_OID_ZONA = ZON.OID_ZONA
			   AND UA.IND_ACTI = 1
			   AND zorg_oid_regi = zr.oid_regi
			   AND za.pais_oid_pais = gen_pkg_gener.gen_fn_devuelve_id_pais(#codigoPais#)
			   <isNotEmpty property="regionList">        
					<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		            	ZR.Cod_Regi = #regionList[]#
					</iterate>  
		    	</isNotEmpty>                                            
				<isNotEmpty property="zonaList">        
					<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		            	ZON.COD_ZONA = #zonaList[]#
					</iterate>  
		    	</isNotEmpty>		
	</insert>
	
	<delete id="deleteReporteGanadorasSinCUV">
        DELETE FROM inc_tempo_ganad_repor_sin_cuv
	</delete>
	
	<delete id="deleteCodigoSAPReportePEDDetallePedidosFacturados">
        DELETE FROM PED_COSAP_DEPEF_TEMPO
	</delete>
	
	<insert id="insertCodigoSAPReportePEDDetallePedidosFacturados" parameterClass="java.util.Map" >	
		INSERT INTO PED_COSAP_DEPEF_TEMPO(COD_SAP)
		VALUES(#codigosSAP#)
	</insert>
	
	<delete id="deleteReportePEDDetallePedidosFacturadosPorCodigoSAP" parameterClass="java.util.Map">
        DELETE FROM PED_DETAL_PEDFA_XSAP_TEMPO 
         WHERE COD_USUA = #codigoUsuario#
	</delete>
	
	<insert id="insertReportePEDDetallePedidosFacturadosPorCodigoSAP" parameterClass="java.util.Map">
		INSERT INTO PED_DETAL_PEDFA_XSAP_TEMPO
        SELECT C.COD_CLIE CODIGO,
               C.VAL_NOM1 || ' ' || C.VAL_NOM2|| ' ' ||C.VAL_APE1|| ' ' ||C.VAL_APE2 NOMBRE,
               O.COD_ZONA ZONA,  
               N.COD_SECC SECCION,
               K.DESCRIPCION ESTADO,
               TO_CHAR(A.FEC_FACT, 'DD/MM/YYYY') FEC_FACT,
               B.VAL_NOMB_PERI CAMPANA,
               A.VAL_PREC_CATA_TOTA_LOCA MONTO_CATALOGO,
               D.VAL_CODI_VENT CUV,
               E.COD_SAP,
               D.NUM_UNID_POR_ATEN UNIDADES_SOLICITADAS,
               D.NUM_UNID_ATEN UNIDADES_ATENDIDAS,
               D.NUM_UNID_POR_ATEN - NVL(D.NUM_UNID_ATEN,0) UNIDADES_FALTANTES,
               D.VAL_PREC_CATA_UNIT_LOCA,
               D.VAL_PREC_CATA_TOTA_LOCA,             
               I.VAL_I18N DESC_PRODUCTO,
               H.VAL_I18N TIPO_OFERTA,
               #codigoUsuario#
          FROM PED_SOLIC_CABEC A, 
               CRA_PERIO B,
               MAE_CLIEN C,
               PED_SOLIC_POSIC D,
               MAE_PRODU E,
               PRE_TIPO_OFERT F,
               PRE_OFERT_DETAL G,            
               (SELECT VAL_I18N, VAL_OID FROM  GEN_I18N_SICC_COMUN WHERE ATTR_ENTI = 'PRE_TIPO_OFERT') H,
               (SELECT v.val_oid, v.val_i18n FROM v_gen_i18n_sicc v WHERE v.attr_enti = 'MAE_PRODU' AND v.idio_oid_idio = 1) I,
               MAE_CLIEN_DATOS_ADICI J,
               (SELECT VAL_OID ID, VAL_I18N DESCRIPCION FROM GEN_I18N_SICC_COMUN WHERE ATTR_ENTI = 'MAE_ESTAT_CLIEN') K,
               MAE_CLIEN_UNIDA_ADMIN L,
               ZON_TERRI_ADMIN M,
               ZON_SECCI N,
               ZON_ZONA O,
               SEG_PERIO_CORPO sp,
               PED_COSAP_DEPEF_TEMPO CSAP
         WHERE A.PERD_OID_PERI = B.OID_PERI
           AND A.CLIE_OID_CLIE = C.OID_CLIE
           AND A.OID_SOLI_CABE = D.SOCA_OID_SOLI_CABE
           AND D.PROD_OID_PROD = E.OID_PROD
           AND D.OFDE_OID_DETA_OFER = G.OID_DETA_OFER(+)
           AND G.TOFE_OID_TIPO_OFER = F.OID_TIPO_OFER(+)
           AND F.OID_TIPO_OFER = H.VAL_OID(+)
           AND E.OID_PROD = I.VAL_OID(+)
           AND C.OID_CLIE = J.CLIE_OID_CLIE
           AND J.ESTA_OID_ESTA_CLIE = K.ID
           AND C.OID_CLIE = L.CLIE_OID_CLIE
           AND L.IND_ACTI = 1
           AND L.ZTAD_OID_TERR_ADMI = M.OID_TERR_ADMI
           AND M.ZSCC_OID_SECC = N.OID_SECC
           AND N.ZZON_OID_ZONA = O.OID_ZONA
           AND E.COD_SAP = CSAP.COD_SAP
           AND A.GRPR_OID_GRUP_PROC = 5
           AND A.TSPA_OID_TIPO_SOLI_PAIS = fin_pkg_gener.FIN_FN_OBTIE_OID_SOLIC_PAIS('SOC')  
           AND b.peri_oid_peri=sp.oid_peri 
           AND sp.cod_peri = #codigoPeriodo#
	</insert>
	
	<parameterMap id="paramExecuteReporteVENFacturaAuditoriaConso" class="map">
		<parameter property="fechaDesde"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaHasta"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteVENFacturaAuditoriaConso" parameterMap="paramExecuteReporteVENFacturaAuditoriaConso">
		{call VEN_PKG_REPOR.VEN_PR_REPOR_FACTU_AUDIT_CONSO(?, ?)}
	</procedure>
	
	<parameterMap id="paramExecuteReporteVENFacturaAuditoriaDetal" class="map">
		<parameter property="fechaDesde"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaHasta"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteVENFacturaAuditoriaDetal" parameterMap="paramExecuteReporteVENFacturaAuditoriaDetal">
		{call VEN_PKG_REPOR.VEN_PR_REPOR_FACTU_AUDIT_DETAL(?, ?)}
	</procedure>
	
	<parameterMap id="paramExecuteReporteConfiguracionOfertasConcurso" class="map">
		<parameter property="codigoPeriodo"    jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteConfiguracionOfertasConcurso" parameterMap="paramExecuteReporteConfiguracionOfertasConcurso">
		{call pre_pkg_proce.PRE_PR_REPOR_CONFI_OFERT_CONCU(?)}
	</procedure>
	
	<parameterMap id="paramExecuteReporteConfiguracionOfertasN" class="map">
		<parameter property="codigoPeriodo"    jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReporteConfiguracionOfertasN" parameterMap="paramExecuteReporteConfiguracionOfertasN" >
		{call pre_pkg_proce.PRE_PR_REPOR_CONFI_OFERT_N(?)}
	</procedure>
	
	<delete id="deleteReporteCOBNumeroPagosCampanna">
		TRUNCATE TABLE COB_REPOR_NUMER_PAGOS_CAMPA
	</delete>
	
	<insert id="insertReporteCOBNumeroPagosCampannaConsultora" parameterClass = "java.util.Map" >
	    INSERT INTO COB_REPOR_NUMER_PAGOS_CAMPA(
	            COD_REGI, 
				DES_REGI, 
				COD_ZONA, 
				DES_ZONA, 
				COD_SECC, 
				COD_CLIE, 
				VAL_NOMB, 
				DES_ESTA, 
				COD_PERI, 
				IMP_ABON
	    )
	    SELECT   zr.cod_regi ,
		         zr.des_regi,
		         zz.cod_zona ,
		         zz.des_zona,
		         zs.cod_secc, 
		         mc.cod_clie,
		         trim(MC.VAL_NOM1) || ' ' ||trim(MC.VAL_NOM2) || ' ' || trim(MC.VAL_APE1) || ' ' || trim(MC.VAL_APE2) AS val_nombre,
		         gen.val_i18n,
		         spc.cod_peri,
		         imp_abon
		FROM ccc_aplic_abono_cargo cad,
	         ccc_movim_cuent_corri mcc,
	         ped_tipo_solic_pais ptsp,
	         ped_tipo_solic pts,
	         cra_perio cp,
	         seg_perio_corpo spc,
	         mae_clien mc,
	         mae_clien_datos_adici mcda,
	         gen_i18n_sicc_comun gen,
	         mae_clien_unida_admin mcua,
	         zon_terri_admin zta,
	         zon_secci zs,
	         zon_zona zz,
	         zon_regio zr,
	         SEG_SOCIE SO
		WHERE cad.mvcc_oid_movi_carg = mcc.oid_movi_cc 
	     AND mc.oid_clie = cad.clie_oid_clie
	     AND mc.oid_clie = mcc.clie_oid_clie
	     AND mcc.perd_oid_peri = cp.oid_peri
	     AND cp.peri_oid_peri = spc.oid_peri
	     AND cad.cmba_oid_movi_banc IS NOT NULL
	     AND mcc.tspa_oid_tipo_soli_pais = ptsp.oid_tipo_soli_pais
	     AND ptsp.tsol_oid_tipo_soli = pts.oid_tipo_soli
	     AND mc.oid_clie = mcda.clie_oid_clie
	     AND mcda.esta_oid_esta_clie = gen.val_oid 
	     AND gen.attr_enti = 'MAE_ESTAT_CLIEN'
	     AND mc.oid_clie = mcua.clie_oid_clie
	     AND mcua.ind_acti = 1
	     AND mcua.ztad_oid_terr_admi = zta.oid_terr_admi
	     AND zta.zscc_oid_secc = zs.oid_secc
	     AND zs.zzon_oid_zona = zz.oid_zona
	     AND zz.zorg_oid_regi = zr.oid_regi
	     AND SO.OID_SOCI = MCC.SOCI_OID_SOCI
	     AND pts.cod_tipo_soli = 'C1'
	     AND mcc.subp_oid_subp_crea = 2001
	     AND CAD.CMBA_OID_MOVI_BANC IS NOT NULL 
		 AND SO.COD_SOCI = #codigoSociedad#
	      <![CDATA[      
		   AND MCC.IMP_MOVI > 0
		   AND MCC.IMP_PEND = 0
		   AND (SPC.COD_PERI >= #codigoPeriodoInicial#  AND SPC.COD_PERI <= #codigoPeriodoFinal# ) 
		   ]]>
		   
		   <isNotEmpty property="regionList">     
			   <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				   ZR.COD_REGI = #regionList[]#
			   </iterate>
		   </isNotEmpty>
		   
		   <isNotEmpty property="zonaList">     
			   <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				   ZZ.COD_ZONA = #zonaList[]#
			   </iterate>
		   </isNotEmpty>
	</insert>
	
	<insert id="insertReporteCOBNumeroPagosCampannaBanco" parameterClass = "java.util.Map">
	    INSERT INTO COB_REPOR_NUMER_PAGOS_CAMPA(
	            COD_REGI, 
				DES_REGI, 
				COD_ZONA, 
				DES_ZONA, 
				COD_SECC, 
				COD_CLIE, 
				VAL_NOMB, 
				DES_ESTA, 
				COD_PERI, 
				DES_CC, 
				IMP_ABON
	    )
	    SELECT ZR.COD_REGI,
		       ZR.DES_REGI,
		       ZZ.COD_ZONA,
		       ZZ.DES_ZONA,
		       ZS.COD_SECC,
		       MC.COD_CLIE,
		       trim(MC.VAL_NOM1) || ' ' ||trim(MC.VAL_NOM2) || ' ' || trim(MC.VAL_APE1) || ' ' || trim(MC.VAL_APE2) AS val_nombre,
		       GEN.VAL_I18N as val_Esta,
		       SPC.COD_PERI,
		       CCB.DES_CC,
		       IMP_ABON
		  FROM CCC_APLIC_ABONO_CARGO CAD,
		       CCC_MOVIM_CUENT_CORRI MCC,
		       CCC_MOVIM_BANCA       MB,
		       CCC_CUENT_CORRI_BANCA CCB,
		       PED_TIPO_SOLIC_PAIS   PTSP,
		       PED_TIPO_SOLIC        PTS,
		       CRA_PERIO             CP,
		       SEG_PERIO_CORPO       SPC,
		       MAE_CLIEN             MC,
		       MAE_CLIEN_DATOS_ADICI MCDA,
		       GEN_I18N_SICC_COMUN   GEN,
		       MAE_CLIEN_UNIDA_ADMIN MCUA,
		       ZON_TERRI_ADMIN       ZTA,
		       ZON_SECCI             ZS,
		       ZON_ZONA              ZZ,
		       ZON_REGIO             ZR,
		       SEG_SOCIE             SO
		 WHERE CAD.MVCC_OID_MOVI_CARG = MCC.OID_MOVI_CC
		   AND CAD.CMBA_OID_MOVI_BANC = MB.OID_MOVI_BANC
		   AND MB.CCBA_OID_CC_BANC = CCB.OID_CUEN_CORR_BANC
		   AND MC.OID_CLIE = CAD.CLIE_OID_CLIE
		   AND MC.OID_CLIE = MCC.CLIE_OID_CLIE
		   AND MCC.PERD_OID_PERI = CP.OID_PERI
		   AND CP.PERI_OID_PERI = SPC.OID_PERI
		   AND CAD.CMBA_OID_MOVI_BANC IS NOT NULL
		   AND MCC.TSPA_OID_TIPO_SOLI_PAIS = PTSP.OID_TIPO_SOLI_PAIS
		   AND PTSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI
		   AND MC.OID_CLIE = MCDA.CLIE_OID_CLIE
		   AND MCDA.ESTA_OID_ESTA_CLIE = GEN.VAL_OID
		   AND GEN.ATTR_ENTI = 'MAE_ESTAT_CLIEN'
		   AND MC.OID_CLIE = MCUA.CLIE_OID_CLIE
		   AND MCUA.IND_ACTI = 1
		   AND MCUA.ZTAD_OID_TERR_ADMI = ZTA.OID_TERR_ADMI
		   AND ZTA.ZSCC_OID_SECC = ZS.OID_SECC
		   AND ZS.ZZON_OID_ZONA = ZZ.OID_ZONA
		   AND ZZ.ZORG_OID_REGI = ZR.OID_REGI
		   AND SO.OID_SOCI = MCC.SOCI_OID_SOCI
		   AND PTS.COD_TIPO_SOLI = 'C1'
		   AND MCC.SUBP_OID_SUBP_CREA = 2001
		   AND CAD.CMBA_OID_MOVI_BANC IS NOT NULL 
		   AND SO.COD_SOCI = #codigoSociedad#
		   
		    <![CDATA[      
		   AND MCC.IMP_MOVI > 0
		   AND MCC.IMP_PEND = 0
		   AND (SPC.COD_PERI >= #codigoPeriodoInicial#  AND SPC.COD_PERI <= #codigoPeriodoFinal# ) 
		   ]]>
		  
		   <isNotEmpty property="regionList">     
			   <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				   ZR.COD_REGI = #regionList[]#
			   </iterate>
		   </isNotEmpty>
		   <isNotEmpty property="zonaList">     
			   <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				   ZZ.COD_ZONA = #zonaList[]#
			   </iterate>
		   </isNotEmpty>
	</insert>
	
	<parameterMap id="paramExecuteReporteCOBNumeroPagosCampannaCSV" class="map">
	    <parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="tipoReporte"    jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroPagosMayores" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoUsuario" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	
	<procedure id="executeReporteCOBNumeroPagosCampannaCSV" parameterMap="paramExecuteReporteCOBNumeroPagosCampannaCSV" >
		{call COB_PKG_REPOR.COB_PR_REPOR_PAGOS_CAMPA_CSV(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteCCCInteresCCorrienteCSVParams" class="map">
		<parameter property="tituloReporteOracle" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" 		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tipoReporteInteres" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="directorioArchivo" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>		
	</parameterMap>
	
	<procedure id="executeReporteCCCInteresCCorrienteCSV" parameterMap="executeReporteCCCInteresCCorrienteCSVParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_INTER_FACTU_TOTAL(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="executeGenerarReporteCCCInteresCCorrienteParams" class="map">		
		<parameter property="tipoReporteInteres" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condRegiones" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condZonas" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condClientes" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>			
				
	</parameterMap>
	
	<procedure id="executeGenerarReporteCCCInteresCCorriente" parameterMap="executeGenerarReporteCCCInteresCCorrienteParams">
		{call CCC_PKG_REPOR_PROCE.CCC_PR_GENER_INTER_TOTAL(?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="executeReporteINCDetallePuntosRegionZonaByNacionalCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroConcurso"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionPeriodo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCDetallePuntosRegionZonaByNacionalCSV" parameterMap="executeReporteINCDetallePuntosRegionZonaByNacionalCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_PROGR_PUNTO_NACI_CSV(?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteINCDetallePuntosRegionZonaByRegionCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroConcurso"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionPeriodo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionRegion"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCDetallePuntosRegionZonaByRegionCSV" parameterMap="executeReporteINCDetallePuntosRegionZonaByRegionCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_PROGR_PUNTO_REGI_CSV(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteINCDetallePuntosRegionZonaByZonaCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroConcurso"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionPeriodo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionRegion"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionZona"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCDetallePuntosRegionZonaByZonaCSV" parameterMap="executeReporteINCDetallePuntosRegionZonaByZonaCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_PROGR_PUNTO_ZONA_CSV(?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteINCDetallePuntosRegionZonaByConsultoraCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroConcurso"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionPeriodo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionRegion"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionZona"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCDetallePuntosRegionZonaByConsultoraCSV" parameterMap="executeReporteINCDetallePuntosRegionZonaByConsultoraCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_PROGR_PUNTO_CONS_CSV(?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteINCDetallePuntosRegionZonaByCampaniaCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroConcurso"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionPeriodo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionRegion"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="condicionZona"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCDetallePuntosRegionZonaByCampaniaCSV" parameterMap="executeReporteINCDetallePuntosRegionZonaByCampaniaCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_PROGR_PUNTO_CAMP_CSV(?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteINCProvisionContableIngresosCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroConcurso"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCProvisionContableIngresosCSV" parameterMap="executeReporteINCProvisionContableIngresosCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_PROVI_CONTA_INGRE_CSV(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteINCProvisionContableGastosCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="numeroConcurso"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaInicio"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fechaFin"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReporteINCProvisionContableGastosCSV" parameterMap="executeReporteINCProvisionContableGastosCSVParams">
		{call INC_PKG_REPOR_INCEN.INC_PR_PROVI_CONTA_GASTO_CSV(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="executeReporteAPEIventarioCampoParams" class="map">
		<parameter property="usuario"	  				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nombreArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
				
	<procedure id="executeReporteAPEIventarioCampoResumen" parameterMap="executeReporteAPEIventarioCampoParams">
		{call APE_PKG_PROCE.APE_PR_REPOR_INVEN_CAMPO_RESU(?,?,?,?,?)}
	</procedure>
	
	<procedure id="executeReporteAPEIventarioCampoDetalle" parameterMap="executeReporteAPEIventarioCampoParams">
		{call APE_PKG_PROCE.APE_PR_REPOR_INVEN_CAMPO_DETA(?,?,?,?,?)}
	</procedure>		
	
	
	<parameterMap id="executeReportePERResumenDiarioPercepcionesSunatCSVParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaGeneracion"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteOracle"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"     jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReportePERResumenDiarioPercepcionesSunatCSV" parameterMap="executeReportePERResumenDiarioPercepcionesSunatCSVParams">
		{call PER_PKG_PROCE_PERCE.PER_PR_GENER_REPOR_SUNAT_CSV(?, ?, ?, ?, ?)}
	</procedure>		
	
	<parameterMap id="executeReportePERResumenDiarioPercepcionesSunatTXTParams" class="map">
	    <parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="nombreArchivo"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	    <parameter property="fechaGeneracion"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="tituloReporteTxt"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="directorioArchivo"     jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<procedure id="executeReportePERResumenDiarioPercepcionesSunatTXT" parameterMap="executeReportePERResumenDiarioPercepcionesSunatTXTParams">
		{call PER_PKG_PROCE_PERCE.PER_PR_GENER_REPOR_SUNAT_TXT(?, ?, ?, ?, ?)}
	</procedure>
	
	
</sqlMap>