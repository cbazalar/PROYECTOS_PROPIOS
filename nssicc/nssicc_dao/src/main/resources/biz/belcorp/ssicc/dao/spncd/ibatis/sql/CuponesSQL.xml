<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="spncd.CuponesSQL">
 
  <typeAlias alias="progCupon" 		type="biz.belcorp.ssicc.dao.spncd.model.ProgramaCupon"/>
  <typeAlias alias="despachoProducto" type="biz.belcorp.ssicc.dao.spncd.model.DespachoProducto"/>
  <typeAlias alias="programaPeriodo" 		type="biz.belcorp.ssicc.dao.spncd.model.ProgramaPeriodo"/>
  <typeAlias alias="equivalenciaMatriz" type="biz.belcorp.ssicc.dao.spncd.model.EquivalenciaMatriz"/>
  <typeAlias alias="susCabecConsultora" type="biz.belcorp.ssicc.dao.spncd.model.SuscripcionCabeceraConsultora"/>
  <typeAlias alias="susDetalConsultora" type="biz.belcorp.ssicc.dao.spncd.model.SuscripcionDetalleConsultora"/>
  <typeAlias alias="susNivelConsultora" type="biz.belcorp.ssicc.dao.spncd.model.SuscripcionNivelConsultora"/>
  <typeAlias alias="unidadAdm" type="biz.belcorp.ssicc.dao.spncd.model.UnidadAdministrativaCupon"/>
  <typeAlias alias="descuentos" type="biz.belcorp.ssicc.dao.spncd.model.DescuentoCupon"/>    
  
	<resultMap id="baseResult"          class="baseGenerico">
    	<result property="codigo" 		column="CODIGO" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>

	<resultMap id="programaPeriodoResult" class="programaPeriodo">       
    	<result property="codigoPais"				column="COD_PAIS"/> 
		<result property="codigoPrograma"           column="COD_PROG" />         
		<result property="codigoPeriodo"           	column="COD_PERI" />         
		<result property="estadoProgramaPeriodo"    column="EST_PROG_PERI" />    		     		 		
		<result property="nivelesAsignados"    column="NIV_ASIG" />    		     		 		
	</resultMap> 

 <resultMap id="equivalenciaMatrizResult" class="equivalenciaMatriz">       
    <result property="id"					column="ID"												/> 
    <result property="codigoPais"              	column="PAIS" />         
    <result property="codigoPeriodo"           	column="PERIODO" />         
    <result property="codigoCupon"             	column="CUPON" />         
    <result property="codigoPrograma"             	column="COD_PROG" />         
    <result property="codigoNivel"             	column="COD_NIVEL" />         
    <result property="valorUnitario"           	column="VAL_PREC" />         
    <result property="descripcionProducto"     	column="DES_PROD"  />        
    <result property="codigoProducto"          	column="COD_PROD" />  
    <result property="codigoVenta"             	column="COD_VENTA" />                  
	<result property="valorPrioridad"           column="VAL_PRIO"/>
	<result property="valorUnidadesMaximas"     column="val_unid_maxi"/>
	<result property="indicadorLove"            column="IS_LOVE"/>
	<result property="indicadorLoveDefault"     column="IS_DEFAULT"/>
		<result property="indicadorKit"     		column="IND_PROD_KIT"/>
  <result property="vigencia"     			column="NUM_VIGE"/>
  	</resultMap>    

  <resultMap id="despachoProductoResult" class="despachoProducto">       
    <result property="id"					column="ID"												/> 
    <result property="codigoPais"              	column="COD_PAIS" />         
    <result property="codigoPeriodo"           	column="COD_PERI" />         
    <result property="codigoVenta"             	column="COD_VENTA" />         
    <result property="codigoPrograma"             	column="COD_PROG" />         
    <result property="codigoNivel"             	column="COD_NIVEL" />         
    <result property="valorUnitario"           	column="VAL_PREC" />         
    <result property="descripcionProducto"     	column="DES_PROD"  />        
    <result property="codigoProducto"          	column="COD_PROD" />         
    <result property="estadoRegistro"          	column="STA_REG"	   />
    <result property="auditInfo.createdBy" 	column="USU_DIGI"		/>       
    <result property="auditInfo.created" 	column="FEC_DIGI"	/>       
    <result property="auditInfo.updatedBy" 	column="USU_MODI"	/>       
    <result property="auditInfo.lastUpdated" 	column="FEC_MODI"	/>   
    <result property="indicadorRegalo"         	column="IND_REGA"/>
    <result property="indicadorKit"          	column="IND_KIT"/>
  <result property="tipoDespacho"          	column="TIDE_TIPO_DESP"/>
  </resultMap>                

  <resultMap id="cuponesDsctosResult" class="progCupon">                     
    <result property="id"					column="ID"			/>                 		    
    <result property="codigoPais"			column="PAIS"		/>                 		    
    <result property="codigoPrograma"		column="PROG"       />              
    <result property="campanhaInicial"		column="INICIAL"    />            
    <result property="campanhaFinal"		column="FINAL"      />              
	<result property="numVigencia"		column="NUM_VIGE"      />    
    <result property="codigoVentCupIni"		column="CUP_INIC"  />            
    <result property="codigoVentCupFin"		column="CUP_FINA"  />            
    <result property="estadoProg"			column="ESTADO"     />                      
    <result property="situacion"			column="SITUACION"		/>                	
    <result property="codigoMarca"			column="MARCA"		/>  		
    <result property="codigoCanal"			column="CANAL"		/>  
    <result property="indicadorConstanciaCupon"	column="IND_CONST"		/>
    <result property="indicadorCupon"	column="IND_CUPO"		/>
    <result property="indicadorConstanciaPremio"	column="IND_CONS_PREM"		/> 
    <result property="indicadorConstanciaPremioElectivo"	column="IND_CONS_PREM_ELEC"/>
    <result property="indicadorProgramaObligatorio"     	column="IND_PROG_OBLI"/>
    <result property="indicadorPremioElectivo"     	        column="IND_ACTI_LOVE"/>
    <result property="indicadorGeneraMensaje"     	        column="IND_GENE_MENS"/>
    <result property="indicadorRegaloPedido"     	        column="IND_REGA_PEDI"/>
    <result property="montoMinimo"     	        			column="PED_MONT_MINI"/>
    <result property="indicadorPremioIncentivo"     	    column="IND_PREM_INCE"/>
    <result property="numeroPedidos"			     	    column="NUM_PEDI"/>
    <result property="tipoPedido"				     	    column="COD_ORIG_PEDI"/>
    <result property="indicadorPedidoMixto"		     	    column="IND_PEDI_MIXT"/>
    <result property="indicadorPremioWeb"		     	    column="IND_PREM_WEB"/>
    <result property="indicadorVigencia"		     	    column="IND_VIGE"/>
    <result property="descripcionCanal"		     	    	column="DESCRIPCION_CANAL"/>
    <result property="descripcionMarca"		     	    	column="DESCRIPCION_MARCA"/>
    <result property="indicadorCuponReutilizable"		    column="ind_cupo_reut"/>
  </resultMap> 

  <resultMap id="tabEquivResult" class="java.util.HashMap">      
    <result property="codigoPais"			column="PAIS"			  />        
    <result property="codigoPrograma"		column="PROG"       />        
    <result property="campanha" 			column="CAMPANHA"      /> 
    <result property="codigoVentaCupon"		column="COD_VENT_CUPO"  />  
    <result property="codigoUnicoVenta"		column="COD_UNIC_VENT"  />  
  </resultMap>                                                        

  	<resultMap id="productoMatrizSiCCResult" class="java.util.HashMap">	   
	    <result property="codigoVenta" 				column="COD_VENTA"/>
	    <result property="codigoSap" 				column="COD_PROD"/>
	    <result property="descripcionCorta"			column="DES_PROD"/>
    </resultMap>                                                      

  	<resultMap id="susCabecConsultoraResult" class="susCabecConsultora">	   
		<result property="codigoPais"        column="COD_PAIS"/>
		<result property="codigoPrograma"    column="COD_PROG"/>
		<result property="codigoConsultora"  column="COD_CONS"/>
		<result property="codigoPeriodo"     column="COD_PERI"/>
		<result property="estadoRegistro"    column="EST_REGI"/>
		<result property="codigoMarca"       column="COD_MARC"/>
    </resultMap> 
    
    <resultMap id="nivelesSuscripcionReuslt" class="java.util.HashMap">	   
		<result property="codigoPais"        column="COD_PAIS"/>
		<result property="codigoPrograma"    column="COD_PROG"/>	
		<result property="codigoNivel"       column="COD_NIVE"/>
		<result property="campanaInicio"     column="CAM_INI"/>
		<result property="campanaFin"        column="CAM_FIN"/>	
		<result property="valorUnidad"     column="VAL_UNID"/>
		<result property="codigoCupon"     column="COD_CUPON"/>
		<result property="codigoVenta"     column="COD_VENTA"/>
		<result property="descripcionProducto"     column="DES_PROD"/>	
		<result property="cantidadPedida"     column="cant_Pedida"/>		
		<result property="indicadorUtilizado"     column="ind_util"/>
    </resultMap>
    
    <resultMap id="susDetalConsultoraResult" class="susDetalConsultora">	   
		<result property="codigoPais"        column="COD_PAIS"/>
		<result property="codigoPrograma"    column="COD_PROG"/>
		<result property="codigoConsultora"  column="COD_CONS"/>
		<result property="codigoNivel"       column="COD_NIVE"/>
		<result property="codigoCupon"       column="COD_CUPO"/>
		<result property="codigoVenta"       column="COD_VENT"/>		
    </resultMap>
    
    <!-- OBTIENE LOS PROGRAMAS - CUPONES DE DESCUENTO SEGUN LOS CRITERIOS  -->
  <select id="getCUPProgDesctosbyCriteria" parameterClass="java.util.Map" resultMap="cuponesDsctosResult">
		SELECT  CUP.COD_PAIS || '-' || CUP.COD_PROG	"ID",
				CUP.COD_PAIS		  "PAIS"		,      
				CUP.COD_PROG	      "PROG"      ,  
				CUP.CAM_INIC	      "INICIAL"    , 
				CUP.CAM_FIN	      "FINAL"      ,
				CUP.NUM_VIG        "NUM_VIGE", 
				CUP.COD_CUPON_INIC "CUP_INIC" ,  
				CUP.COD_CUPON_FIN  "CUP_FINA" ,  
				CUP.EST_PROG		  "ESTADO"		,    
				CUP.EST_PROG		  "SITUACION"      ,
				CUP.COD_MARCA         "MARCA",
				CUP.COD_CANAL         "CANAL",
				CUP.IND_CONST         "IND_CONST",
				CUP.IND_CUPO          "IND_CUPO",
				CUP.IND_CONS_PREM     "IND_CONS_PREM" ,
				CUP.IND_CONS_PREM_ELEC  "IND_CONS_PREM_ELEC" ,
				CUP.IND_PROG_OBLI       "IND_PROG_OBLI",
				CUP.IND_ACTI_LOVE       "IND_ACTI_LOVE"  ,
				CUP.IND_GENE_MENS       			"IND_GENE_MENS",
				CUP.ind_rega_pedi					"IND_REGA_PEDI",
				CUP.ped_mont_mini					"PED_MONT_MINI",
				CUP.ind_prem_ince					"IND_PREM_INCE",
				CUP.NUM_PEDI						"NUM_PEDI",
				CUP.COD_ORIG_PEDI					"COD_ORIG_PEDI",
				CUP.IND_PEDI_MIXT					"IND_PEDI_MIXT",
				CUP.IND_PREM_WEB					"IND_PREM_WEB",
				NVL(CUP.IND_VIGE, 'P')				"IND_VIGE",
		       (SELECT VAL_I18N
		          FROM GEN_I18N_SICC_COMUN P, 
		          	   SEG_CANAL C, 
		          	   SEG_IDIOM I
		         WHERE P.VAL_OID = C.OID_CANA
		           AND P.IDIO_OID_IDIO = I.OID_IDIO
		           AND P.ATTR_ENTI = 'SEG_CANAL'
		           AND I.COD_ISO_IDIO = 'es'
		           AND C.COD_CANA = CUP.COD_CANAL)	"DESCRIPCION_CANAL",
		       (SELECT DES_MARC 
		          FROM SEG_MARCA 
		         WHERE COD_MARC=CUP.COD_MARCA)		"DESCRIPCION_MARCA",
		         CUP.ind_cupo_reut					"ind_cupo_reut"
		FROM CUP_PROG_NUEVA_CUPON CUP         
	<dynamic prepend="where">
		<isNotEmpty prepend="AND" property="codigoPais">
			CUP.COD_PAIS = #codigoPais#
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoPrograma">
			CUP.COD_PROG = #codigoPrograma#
    	</isNotEmpty>
	</dynamic>
		ORDER BY CUP.CAM_INIC DESC
  </select>

    <select id="getProgramaActivo" parameterClass="java.util.Map" resultClass="string">
		SELECT	to_char(to_number(max(cod_prog)), 'FM99099')
		FROM 																				
			CUP_PROG_NUEVA_CUPON												
		WHERE																				
			COD_PAIS = #codigoPais#
			and EST_PROG = 'S'
  </select>

    <!-- OBTIENE DETALLE DE PROGRAMA - TABLA EQUIVLAENCIA SEGUN LOS CRITERIOS  -->
  <select id="getTablaEquivalByCriteria" parameterClass="java.util.Map" resultMap="tabEquivResult">
	SELECT																			
		EQ.COD_PAIS				AS 	 "PAIS"    			,		
		EQ.COD_PROG				AS 	 "PROG"       	,		
		EQ.CAM_PROC				AS 	 "CAMPANHA"       ,	
		EQ.COD_VENT_CUPO		AS "COD_VENT_CUPO"  ,	
		EQ.COD_UNIC_VENT		AS "COD_UNIC_VENT"  	
	FROM 																				
		CUP_TABLA_EQUIV EQ												
  	WHERE																				
		EQ.COD_PAIS = #codigoPais#     AND  							
    	EQ.COD_PROG = #codigoPrograma#

  </select>
  
  <update id="updateProgramaDscto" parameterClass="progCupon">
    	UPDATE	cup_prog_nueva_cupon
           SET 	cam_inic 		   = #campanhaInicial#,
                 cam_fin 			= #campanhaFinal#			,  
			     cod_canal 			= #codigoCanal#			,  
			    ind_const          = #indicadorConstanciaCupon#,
			    num_vig 		   = #numVigencia#,
			    cod_cupon_inic 	   = #codigoVentCupIni#,
			    usu_modi		   = #codigoUsuario#,
			    fec_modi		   = SYSDATE,
			    cod_cupon_fin 	   = #codigoVentCupFin#,
			    ind_cupo   		   = #indicadorCupon#,
			    ind_cons_prem      = #indicadorConstanciaPremio#,
			    ind_acti_love      = #indicadorPremioElectivo#,
			    ind_gene_mens      = #indicadorGeneraMensaje#,
			    ind_cons_prem_elec = #indicadorConstanciaPremioElectivo#,
			    ind_prog_obli      = #indicadorProgramaObligatorio#,
			    ind_rega_pedi	   = #indicadorRegaloPedido#,
			    ped_mont_mini      = TO_NUMBER(#montoMinimo#,'999999999999.99'),
			    ind_prem_ince	   = #indicadorPremioIncentivo#,
			    num_pedi		   = #numeroPedidos#,
			    cod_orig_pedi	   = #tipoPedido#,
			    ind_pedi_mixt	   = #indicadorPedidoMixto#,
			    ind_prem_web	   = #indicadorPremioWeb#,
			    ind_vige		   = #indicadorVigencia#,
			    ind_cupo_reut	   = #indicadorCuponReutilizable#			
         WHERE	cod_pais = #codigoPais#
           AND	cod_prog = #codigoPrograma#
	</update>

	<select id="getNextCodigoPrograma" parameterClass="java.util.Map" resultClass="string">
		SELECT	nvl(to_char(to_number(max(cod_prog)) + 1 , 'FM99099'),'001')
		FROM 																				
			CUP_PROG_NUEVA_CUPON												
		WHERE																				
			COD_PAIS = #codigoPais#    
	</select>

    <insert id="insertProgramaDscto" parameterClass="progCupon">
    	INSERT INTO CUP_PROG_NUEVA_CUPON (
        	cod_pais,
          	cod_prog,
        	cam_inic,
        	cam_fin,
        	num_vig,
        	cod_cupon_inic,
        	cod_cupon_fin,
        	est_prog,
        	cod_marca,
         	cod_canal,
         	ind_const,
         	ind_cupo,
         	ind_cons_prem,
         	ind_cons_prem_elec,
         	ind_prog_obli,
         	ind_acti_love,
         	ind_gene_mens,
         	ind_rega_pedi,
         	ped_mont_mini,
         	ind_prem_ince,
         	ind_esta,
         	num_pedi,
         	cod_orig_pedi,
         	ind_pedi_mixt,
         	ind_prem_web,
         	ind_vige,
         	ind_cupo_reut
        )
      	VALUES(	
			#codigoPais#,
			#codigoPrograma# ,
			#campanhaInicial#	,    
			#campanhaFinal#		,      
			#numVigencia#			,        
			#codigoVentCupIni#	,
			#codigoVentCupFin#	,
			#estadoProg#		,
			#codigoMarca#	,
			#codigoCanal#,
			#indicadorConstanciaCupon#,
			#indicadorCupon#,
			#indicadorConstanciaPremio#,
			#indicadorConstanciaPremioElectivo#,
			#indicadorProgramaObligatorio#,
			#indicadorPremioElectivo#,
			#indicadorGeneraMensaje#,
			#indicadorRegaloPedido#,
			TO_NUMBER(#montoMinimo#,'999999999999.99'),
			#indicadorPremioIncentivo#,
			'A',
			#numeroPedidos#,
			#tipoPedido#,
			#indicadorPedidoMixto#,
			#indicadorPremioWeb#,
			#indicadorVigencia#,
			#indicadorCuponReutilizable#
		)
	</insert>

    <delete id="deleteProgramaDscto" parameterClass="progCupon">
          delete from CUP_PROG_NUEVA_CUPON
          where cod_pais = #codigoPais#
             and cod_prog = #codigoPrograma#
    </delete>
 <update id="updateIncactivoPrograma" parameterClass="progCupon">
          update CUP_PROG_NUEVA_CUPON
             set EST_PROG= 'N'
           where cod_pais = #codigoPais#
             and cod_prog = #codigoPrograma#
	</update>
  <!-- OBTIENE DESPACHO DE PRODUCTOS SEGUN LOS CRITERIOS  -->
  <select id="getDespachoProductosByCriteria" parameterClass="java.util.Map" resultMap="despachoProductoResult">
  		SELECT 
	       COD.COD_PAIS || '-' || COD.COD_PERI 	|| '-' || COD.COD_PROG || '-' || COD.COD_NIVEL 	|| '-' || COD.COD_VENTA AS "ID" ,
  	       COD.COD_PAIS,        
	       COD.COD_PERI,        
		   COD.COD_PROG ,
	       COD.COD_VENTA,        
		   COD.COD_NIVEL ,
	       COD.VAL_PREC,        
	       COD.DES_PROD,        
	       COD.COD_PROD,        
	       COD.STA_REG,                                 
	       COD.USU_DIGI,                                
	       COD.FEC_DIGI,                                
	       COD.USU_MODI,                                
	       COD.FEC_MODI,
	       NVL(COD.IND_REGA_PEDI,0) AS IND_REGA,
           NVL(COD.IND_PROD_KIT,0) AS IND_KIT,
           COD.TIDE_TIPO_DESP
    	FROM CUP_DESP_PROD COD,
    		 MAE_PRODU M
	   WHERE COD.COD_PAIS = #codigoPais#
         AND M.COD_SAP = COD.COD_PROD
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD.COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoVenta">        
			COD.COD_VENTA = #codigoVenta#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPrograma">        
			COD.COD_PROG = #codigoPrograma#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoNivel">        
			COD.COD_NIVEL = #codigoNivel#                          
    	</isNotEmpty>                                            

		ORDER BY          
			COD.COD_PROG desc,
			COD.COD_PERI desc, 
			COD.COD_NIVEL,
			COD.COD_PAIS ,
		    COD.COD_VENTA
  </select>

<select id="getEquivalenciaMatrizByCriteria" parameterClass="java.util.Map" resultMap="equivalenciaMatrizResult">
  		SELECT 
	       COD.COD_PAIS || '-' || COD.COD_PERI 	|| '-' || COD.COD_PROG || '-' || COD.COD_NIVEL 	|| '-' || COD.COD_CUPON || '-' ||null|| '-' ||null AS "ID",
  	       COD.COD_PAIS as pais,        
	       COD.COD_PERI as periodo,        
		   COD.COD_PROG ,
	       COD.COD_CUPON as cupon,        
		   COD.COD_NIVEL ,
	       COD.VAL_PREC,        
	       COD.DES_PROD,        
	       COD.COD_PROD,        
	       COD.COD_VENTA,
		   COD.VAL_PRIO,
		   cod.val_unid_maxi,
       	   NULL AS is_love,
           (SELECT COUNT(1)
	          FROM LOV_CUPON_DEFEC LD
	         WHERE LD.COD_PERI = COD.COD_PERI
	           AND LD.COD_PAIS = COD.COD_PAIS
	           AND LD.COD_CUPO = COD.COD_CUPON
	           AND LD.COD_PROG = COD.COD_PROG) AS IS_DEFAULT,
	       COD.IND_PROD_KIT,
           (CASE NVL(PNC.IND_VIGE, 'P')  
                WHEN 'P' THEN PNC.NUM_VIG
                 WHEN 'N' THEN                           
                  (CASE WHEN  (SELECT LEM.COD_PERI   FROM LOV_EQUIV_MATR LEM
                      WHERE LEM.COD_PROG=cod.cod_prog
                       AND LEM.COD_PAIS=cod.cod_pais
                       AND LEM.COD_CUPON=cod.cod_cupon
                        AND LEM.COD_PERI=cod.cod_peri
                        AND LEM.COD_NIVEL=cod.cod_nivel) IS NOT NULL THEN 1
                   ELSE
                     (SELECT PNI.NUM_VIGE FROM  NVS_PROGR_NIVEL PNI 
                             WHERE PNI.COD_PAIS = COD.COD_PAIS             
                             AND PNI.COD_PROG = COD.COD_PROG
                             AND PNI.COD_NIVE = COD.COD_NIVEL 
                             AND PNI.EST_REGI = '1')
                      END ) 
                      END) NUM_VIGE                                 
    	FROM  CUP_EQUIV_MATR COD, CUP_PROG_NUEVA_CUPON PNC
    	WHERE PNC.COD_PAIS = COD.COD_PAIS AND PNC.COD_PROG = COD.COD_PROG                         
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD.COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD.COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoCupon">        
			COD.COD_CUPON = #codigoCupon#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPrograma">        
			COD.COD_PROG = #codigoPrograma#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoNivel">        
			COD.COD_NIVEL = #codigoNivel#                          
    	</isNotEmpty>                                            
        AND NOT EXISTS(SELECT NULL
	                     FROM LOV_EQUIV_MATR lem
	                    WHERE lem.COD_PROG=cod.cod_prog
	                      AND lem.COD_PAIS=cod.cod_pais
	                      AND lem.COD_CUPON=cod.cod_cupon
	                      AND lem.COD_PERI=cod.cod_peri
	                      AND lem.COD_NIVEL=cod.cod_nivel)
	

	UNION
	SELECT 
	       COD.COD_PAIS || '-' || COD.COD_PERI 	|| '-' || COD.COD_PROG || '-' || COD.COD_NIVEL 	|| '-' || COD.COD_CUPON || '-' ||'1'|| '-' ||(SELECT COUNT(1) 
	          FROM lov_cupon_defec ld
	         WHERE ld.cod_peri = COD.COD_PERI
	           AND ld.cod_pais = COD.COD_PAIS
	           AND ld.cod_cupo = COD.COD_CUPON) AS "ID",
  	       COD.COD_PAIS,        
	       COD.COD_PERI,        
		   COD.COD_PROG ,
	       COD.COD_CUPON,        
		   COD.COD_NIVEL ,
	       COD.VAL_PREC,        
	       COD.DES_PROD,        
	       COD.COD_PROD,        
	       COD.COD_VENTA,
		   COD.VAL_PRIO,
		  (SELECT 
		       cem.val_unid_maxi  
		  FROM CUP_EQUIV_MATR cem
		   where cem.COD_PAIS = COD.COD_PAIS
		   AND cem.COD_PERI = COD.COD_PERI
		   and cem.cod_cupon = COD.COD_CUPON
		   AND cem.COD_PROG = COD.COD_PROG
		   AND cem.COD_NIVEL = COD.COD_NIVEL) val_unid_maxi,		   
           '1' AS is_love,
	       (SELECT COUNT(1) 
	          FROM lov_cupon_defec ld
	         WHERE ld.cod_peri = COD.COD_PERI
	           AND ld.cod_pais = COD.COD_PAIS
	           AND ld.cod_cupo = COD.COD_CUPON
	           AND LD.COD_PROG = COD.COD_PROG) AS is_default,
			COD.IND_PROD_KIT,
           (CASE NVL(PNC.IND_VIGE, 'P')  
                WHEN 'P' THEN PNC.NUM_VIG
                 WHEN 'N' THEN                           
                  (CASE WHEN  (SELECT LEM.COD_PERI   FROM LOV_EQUIV_MATR LEM
                      WHERE LEM.COD_PROG=cod.cod_prog
                       AND LEM.COD_PAIS=cod.cod_pais
                       AND LEM.COD_CUPON=cod.cod_cupon
                        AND LEM.COD_PERI=cod.cod_peri
                        AND LEM.COD_NIVEL=cod.cod_nivel) IS NOT NULL THEN 1
                   ELSE
                     (SELECT PNI.NUM_VIGE FROM  NVS_PROGR_NIVEL PNI 
                             WHERE PNI.COD_PAIS = COD.COD_PAIS             
                             AND PNI.COD_PROG = COD.COD_PROG
                             AND PNI.COD_NIVE = COD.COD_NIVEL 
                             AND PNI.EST_REGI = '1')
                      END ) 
                      END) NUM_VIGE                                
    	FROM  LOV_EQUIV_MATR COD, CUP_PROG_NUEVA_CUPON PNC
    	WHERE PNC.COD_PAIS = COD.COD_PAIS AND PNC.COD_PROG = COD.COD_PROG
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD.COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD.COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoCupon">        
			COD.COD_CUPON = #codigoCupon#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPrograma">        
			COD.COD_PROG = #codigoPrograma#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoNivel">        
			COD.COD_NIVEL = #codigoNivel#                          
    	</isNotEmpty>                                            
		ORDER BY pais, periodo desc, COD_NIVEL, cupon
  </select>
  <!-- OBTIENE DETALLE OFERTA DE LA MATRIZ DE FACTURACION POR OID  -->
  <select id="getOfertaDetalleById" parameterClass="java.util.Map" resultMap="despachoProductoResult">
  		SELECT 
	         '' "ID" ,
             #codigoPais#  	       AS COD_PAIS,        
	         #codigoPeriodo#          AS COD_PERI,                     
		   	 #codigoPrograma#	AS	COD_PROG ,
		   	 #codigoNivel#	AS		COD_NIVEL ,
             DET.VAL_CODI_VENT AS COD_VENTA ,
             OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(DET.PROD_OID_PROD) AS COD_PROD ,
             OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(DET.PROD_OID_PROD) AS DES_PROD,
             DET.IMP_PREC_CATA AS VAL_PREC,
    	       ''                AS STA_REG,                                 
    	       ''                AS USU_DIGI,                                
    	       ''                AS FEC_DIGI,                                
    	       ''                AS USU_MODI,                                
    	       ''                AS FEC_MODI,
    	       '' AS IND_REGA,
           	   '' AS IND_KIT,
           	   '' AS TIDE_TIPO_DESP                                 
        FROM PRE_OFERT_DETAL  DET
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="idDetalleOferta">           
			DET.OID_DETA_OFER = #idDetalleOferta#
		</isNotEmpty>
	</dynamic>                                                   
  </select>

    <insert id="insertDespachoProductos" parameterClass="despachoProducto">
		INSERT INTO cup_desp_prod  (
            COD_PAIS, 
       		cod_prog, 
       		cod_peri, 
			cod_venta, 
       		cod_nivel, 
            VAL_PREC , 
            DES_PROD, 
            COD_PROD, 
            STA_REG, 
            USU_DIGI, 
            FEC_DIGI, 
            USU_MODI, 
            FEC_MODI,
            IND_PROD_KIT,
            TIDE_TIPO_DESP
		)	  
		VALUES(
			#codigoPais#     	,
			#codigoPrograma#     ,	
			#codigoPeriodo#     ,	
			#codigoVenta#     	,
			#codigoNivel#     	,
		   to_number(#valorUnitario#, '99999999.99'),
			#descripcionProducto#,
			#codigoProducto#     ,	
			#estadoRegistro#     ,
      		#auditInfo.createdBy# 	, 
      		#auditInfo.created# 		, 
      		#auditInfo.updatedBy# 	, 
      		#auditInfo.lastUpdated#,
      		#indicadorKit# ,
      		#indicadorPremioWeb#
    	)
	</insert>

    <update id="desactivarDespachoProducto" parameterClass="despachoProducto">
        UPDATE cup_desp_prod t
		SET
          		t.STA_REG = #estadoRegistro#,
          		t.TIDE_TIPO_DESP = #tipoDespacho#
          		
          		<isNotEmpty property="actualizarIndicadorKit">
					,IND_PROD_KIT = #indicadorKit#
    			</isNotEmpty>
    	WHERE
		      t.COD_PAIS = #codigoPais# AND
          	  t.COD_PERI = #codigoPeriodo# AND
			  t.COD_VENTA = 	#codigoVenta# AND
			  t.COD_PROG = #codigoPrograma#  AND                        
			  t.COD_NIVEL = #codigoNivel#                          

    </update>

	<select id="getCodVentaDespachoProductoById" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_EXIS_CUP_DESP_PROD(#codigoPais#, #codigoPrograma#, #codigoPeriodo#, #codigoVenta#, #codigoNivel#) FROM dual
	</select>

	<select id="getDetOfertaEstrategiaCompuestaFijaById" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_DEV_OFER_ESTR_COMP_FIJA(#idDetalleOferta#) FROM dual
	</select>

    <!-- OBTIENE LOS PROGRAMAS DE DESCUENTO ( DESCUENTOS ) -->
 	<select id="getProgramasDescuentosbyPais" parameterClass="java.util.Map" resultMap="baseResult">
       select c.cod_prog AS CODIGO,  
              c.cod_prog AS DESCRIPCION  
       from   cup_prog_nueva_cupon c 
       where  c.cod_pais = #codigoPais# and
              c.est_prog = 'S'
 	</select>

    <!-- OBTIENE LOS NIVELES ( DESCUENTOS ) -->
 	<select id="getNivelbyPais" parameterClass="java.util.Map" resultMap="baseResult">
         select n.cod_nivel AS CODIGO , 
                n.des_nivel AS DESCRIPCION  
         from cup_nivel n
         where n.cod_nivel != '00'
         and IND_ACTI = '1'
 	</select>

    <parameterMap id="executeProcesoCUPDespachoProductosParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="periodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFact"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPrograma"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeProcesoCUPDespachoProductos" 
   			  parameterMap="executeProcesoCUPDespachoProductosParams" >
		{call CUP_PKG_PROG_NUEVAS.CUP_PR_PROCESA_DESPACHO(?,?,?,?)}
    </procedure>  

    <parameterMap id="executeProcesoCUPCierreFacturacionParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="periodo"	             	 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="codigoUsuario"             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>

    <procedure id="executeProcesoCUPCierreFacturacion" 
   			  parameterMap="executeProcesoCUPCierreFacturacionParams" >
		{call CUP_PKG_PROG_NUEVAS.CUP_PR_PROCE_CIERR_CUPON_MULTI(?,?,?)}
    </procedure>  

    <delete id="deleteCupCuponNivel" parameterClass="java.util.Map">
          delete from CUP_CUPON_NIVEL
          where cod_pais = #codigoPais#
             and cod_prog = #codigoPrograma#
			 and cod_nivel = #nivel#
			<iterate prepend="AND" property="cuponesNoAsignados" open="(" close=")" conjunction="OR">
				cod_cupon = #cuponesNoAsignados[]#
			</iterate>
    </delete>	
	
	<insert id="insertCupCuponNivel" parameterClass="java.util.Map">
	 insert into CUP_CUPON_NIVEL
        (cod_pais, cod_prog, COD_CUPON, COD_nivel, cod_precon)
      values
		(	#codigoPais# ,			
			#codigoPrograma#	,    
			#codigoCupon#		,      
			#nivel#			,        
			trim(to_char(#codPrecon#, '00'))	 )        
	</insert>

    <!-- OBTIENE LOS PROGRAMAS POR PERIODO -->
 	<select id="getProgramasPeriodoByCriteria" parameterClass="java.util.Map" resultMap="programaPeriodoResult">
      SELECT CUP_PROG_PERIO.COD_PAIS AS COD_PAIS,
 			 CUP_PROG_PERIO.COD_PROG AS COD_PROG,
			 CUP_PROG_PERIO.COD_PERI AS COD_PERI,
			 CUP_PROG_PERIO.EST_PROG_PERI AS EST_PROG_PERI,
			 cup_pkg_prog_nuevas.CUP_FN_NIVEL_MATR_EQUI( CUP_PROG_PERIO.COD_PAIS , CUP_PROG_PERIO.COD_PERI,  CUP_PROG_PERIO.COD_PROG ) AS NIV_ASIG
	   FROM  CUP_PROG_PERIO
	   <dynamic prepend="where">		
		<isNotEmpty prepend="AND" property="codigoPais">
			CUP_PROG_PERIO.COD_PAIS = #codigoPais#
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoPrograma">
			CUP_PROG_PERIO.COD_PROG = #codigoPrograma#
    	</isNotEmpty>
    	<isNotEmpty prepend="AND" property="codigoPeriodo">
			CUP_PROG_PERIO.COD_PERI = #codigoPeriodo#
    	</isNotEmpty>
    	<isNotEmpty prepend="AND" property="estadoProgramaPeriodo">
			CUP_PROG_PERIO.EST_PROG_PERI = #estadoProgramaPeriodo#
    	</isNotEmpty>		
		</dynamic>
		ORDER BY                               
			CUP_PROG_PERIO.COD_PROG DESC, CUP_PROG_PERIO.COD_PAIS
 	</select>
	<select id="getProgramaPeriodoById" parameterClass="java.util.Map" resultMap="programaPeriodoResult">
      SELECT CUP_PROG_PERIO.COD_PAIS AS COD_PAIS,
 			 CUP_PROG_PERIO.COD_PROG AS COD_PROG,
			 CUP_PROG_PERIO.COD_PERI AS COD_PERI,
			 CUP_PROG_PERIO.EST_PROG_PERI AS EST_PROG_PERI,
			 cup_pkg_prog_nuevas.CUP_FN_NIVEL_MATR_EQUI( CUP_PROG_PERIO.COD_PAIS , CUP_PROG_PERIO.COD_PERI,  CUP_PROG_PERIO.COD_PROG ) AS NIV_ASIG
	   FROM  CUP_PROG_PERIO
	   where
			CUP_PROG_PERIO.COD_PAIS = #codigoPais#
    		AND CUP_PROG_PERIO.COD_PROG = #codigoPrograma#
			AND CUP_PROG_PERIO.COD_PERI = #codigoPeriodo#
			<isNotEmpty prepend="AND" property="estadoProgramaPeriodo">
				CUP_PROG_PERIO.EST_PROG_PERI = #estadoProgramaPeriodo#
    		</isNotEmpty>
 	</select>
	<select id="getListaCuponInsertar" parameterClass="java.util.Map" resultClass="string">
      SELECT COD_CUPON AS COD_CUPON 			 
	   FROM  CUP_EQUIV_MATR
	   where
			COD_PAIS = #codigoPais#
    		AND COD_PROG = #codigoPrograma#
			AND COD_PERI = #codigoPeriodo#
			AND COD_NIVEL = #nivel#
 	</select>
	<select id="getListaCuponNivelInsertar" parameterClass="java.util.Map" resultClass="string">
      SELECT COD_CUPON AS COD_CUPON 			 
	   FROM  CUP_CUPON_NIVEL
	   where
			COD_PAIS = #codigoPais#
    		AND COD_PROG = #codigoPrograma#		
			AND COD_NIVEL = #nivel#
 	</select>
	<select id="getNextPeriodoByCupProgPerio" parameterClass="java.util.Map" resultClass="string">
	select 	
      CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA( (SELECT MAX (CUP_PROG_PERIO.COD_PERI )
	   FROM  CUP_PROG_PERIO
	   where
			CUP_PROG_PERIO.COD_PAIS = #codigoPais#
			AND CUP_PROG_PERIO.COD_PROG = #codigoPrograma#), 1)
	from dual 

 	</select>
	
	<insert id="insertProgramaPeriodo" parameterClass="programaPeriodo">
		INSERT INTO CUP_PROG_PERIO  (
            COD_PAIS, 
       		cod_prog, 
       		cod_peri, 
			EST_PROG_PERI
		)	  
		VALUES(
			#codigoPais#     	,
			#codigoPrograma#     ,	
			#codigoPeriodo#     ,	
			#estadoProgramaPeriodo#
    	)
	</insert>
	
	<insert id="insertPeriodoNivel" parameterClass="programaPeriodo">
		INSERT INTO CUP_PERIO_NIVEL  (
            COD_PAIS, 
       		cod_prog, 
       		cod_peri,
       		cod_nive,
       		VAL_UNID,
       		VAL_UNID_PREM_ELEC
		)	  
		VALUES(
			#codigoPais#     	,
			#codigoPrograma#     ,	
			#codigoPeriodo#     ,	
			#nivel#,
			#valorUnidad#,
			#valorUnidadPremioElectivo#
    	)
	</insert>
	
	<update id="updatePeriodoNivel" parameterClass="programaPeriodo">
          update CUP_PERIO_NIVEL
             set VAL_UNID = #valorUnidad#,
                 VAL_UNID_PREM_ELEC = #valorUnidadPremioElectivo#	                 		
           where cod_pais = #codigoPais#
             and cod_prog = #codigoPrograma#
			 and cod_peri = #codigoPeriodo#
			 and cod_nive = #nivel#
	</update>
  
	<update id="updateProgramaPeriodo" parameterClass="programaPeriodo">
          update CUP_PROG_PERIO
             set EST_PROG_PERI 			= #estadoProgramaPeriodo#	                 		
           where cod_pais = #codigoPais#
             and cod_prog = #codigoPrograma#
			 and cod_peri = #codigoPeriodo#
	</update>
	<delete id="deleteEquivalenciaMatrizByProgramaPeriodo" parameterClass="programaPeriodo">
          delete FROM CUP_EQUIV_MATR                           		
           where cod_pais = #codigoPais#
             and cod_prog = #codigoPrograma#
			 and cod_peri = #codigoPeriodo#
 			 and cod_nivel = #nivel#
			 <iterate prepend="AND" property="cuponesNoAsignados" open="(" close=")" conjunction="OR">
			 cod_cupon = #cuponesNoAsignados[]#
			</iterate>
	</delete>
	 <!-- OBTIENE DETALLE DE PROGRAMA - TABLA EQUIVLAENCIA SEGUN LOS CRITERIOS  -->
  	<insert id="insertCuponMatrizEquivalencia" parameterClass="java.util.Map">
		INSERT INTO CUP_EQUIV_MATR  (
				COD_PAIS, 
				cod_prog, 
				cod_peri, 
				COD_CUPON,
				COD_NIVEL
			)	  
			VALUES(
				#codigoPais#,
				#codigoPrograma#,	
				#codigoPeriodo# ,	
				#codigoCupon#,
				#nivel#
			)
	  </insert>
	<select id="getPeriodoInicioByCupon" parameterClass="java.util.Map" resultClass="string">
      SELECT CAM_INIC
	   FROM  CUP_PROG_NUEVA_CUPON
	   where
			COD_PAIS = #codigoPais#
    		AND COD_PROG = #codigoPrograma#			
 	</select>	
		<select id="getPeriodoFinByCupon" parameterClass="java.util.Map" resultClass="string">
      SELECT CAM_FIN
	   FROM  CUP_PROG_NUEVA_CUPON
	   where
			COD_PAIS = #codigoPais#
    		AND COD_PROG = #codigoPrograma#			
 	</select>	
	<select id="getEquivalenciaMatrizById" parameterClass="java.util.Map" resultMap="equivalenciaMatrizResult">
  		SELECT 
	       COD.COD_PAIS || '-' || COD.COD_PERI 	|| '-' || COD.COD_PROG || '-' || COD.COD_NIVEL 	|| '-' || COD.COD_CUPON AS "ID" ,
  	       COD.COD_PAIS as pais,        
	       COD.COD_PERI as periodo,        
		   COD.COD_PROG ,
	       COD.COD_CUPON as cupon,        
		   COD.COD_NIVEL ,
	       COD.VAL_PREC,        
	       COD.DES_PROD,        
	       COD.COD_PROD,        
	       COD.COD_VENTA,
		   COD.VAL_PRIO,
		   cod.val_unid_maxi,
       	   NULL AS is_love,
           NULL AS is_default,
           COD.IND_PROD_KIT,
           NULL NUM_VIGE                     
    	FROM  CUP_EQUIV_MATR COD                        
		WHERE
			COD.COD_PAIS = #codigoPais#                             
    		AND COD.COD_PERI = #codigoPeriodo#                          
    		AND COD.COD_PROG = #codigoPrograma#                          
    		AND COD.COD_NIVEL = #codigoNivel#                          
			<isNotEmpty prepend="AND" property="codigoCupon">
					COD.COD_CUPON = #codigoCupon#                          
    		</isNotEmpty>  
			<isNotEmpty prepend="AND" property="codigoVenta">
					COD.COD_VENTA = #codigoVenta#                          
    		</isNotEmpty>                          
  </select>
  <update id="updateEquivalenciaMatriz" parameterClass="equivalenciaMatriz">
          update CUP_EQUIV_MATR
             set COD_VENTA = #codigoVenta#,
				 COD_PROD = #codigoProducto#,
				 DES_PROD = #descripcionProducto#,
				 VAL_PREC = to_number(#valorUnitario#, '99999999.99') ,
				 VAL_PRIO = to_number(#valorPrioridad#  , '99999'),
				 VAL_UNID_MAXI = to_number(#valorUnidadesMaximas#  , '99999'),
				 IND_PROD_KIT = #indicadorKit#,
				 USU_MODI = #codigoUsuario#,
				 FEC_MODI = SYSDATE
           where cod_pais = #codigoPais#
				 and cod_prog = #codigoPrograma#
				 and cod_peri = #codigoPeriodo#
				 and cod_nivel = #codigoNivel#
				 and cod_cupon = #codigoCupon#			 
	</update>
	<insert id="insertEquivalenciaMatriz" parameterClass="equivalenciaMatriz">
		INSERT INTO CUP_EQUIV_MATR  (
            COD_PAIS, 
       		cod_prog, 
       		cod_peri, 
			cod_venta, 
       		cod_nivel, 
            VAL_PREC , 
            DES_PROD, 
            COD_PROD, 
            COD_CUPON,
			VAL_PRIO,
			VAL_UNID_MAXI,
			IND_PROD_KIT,
			USU_DIGI,
			FEC_DIGI
		)	  
		VALUES(
			#codigoPais#     	,
			#codigoPrograma#     ,	
			#codigoPeriodo#     ,	
			#codigoVenta#     	,
			#codigoNivel#     	,
		    to_number(#valorUnitario#, '99999999.99'),
			#descripcionProducto#,
			#codigoProducto#     ,	
      		#codigoCupon#        ,
			to_number(#valorPrioridad#  , '99999'),
			to_number(#valorUnidadesMaximas#  , '99999'),
			#indicadorKit#,
			#auditInfo.createdBy#,
			SYSDATE
    	)
	</insert>
	<delete id="deleteEquivalenciaMatriz" parameterClass="equivalenciaMatriz">
          delete FROM CUP_EQUIV_MATR                           		
           where cod_pais = #codigoPais#
				 and cod_prog = #codigoPrograma#
				 and cod_peri = #codigoPeriodo#
				 and cod_nivel = #codigoNivel#
				 and cod_cupon = #codigoCupon#
	</delete>

  	<select id="getCodigoPeriodoFinal" parameterClass="java.util.Map" resultClass="string">
			SELECT	max(COD_PERI)
			FROM 																				
				CUP_PROG_PERIO												
			WHERE																				
				COD_PAIS = #codigoPais#
				and COD_PROG = #codigoPrograma#
	  </select>

	  <select id="getCodigoPeriodoInicial" parameterClass="java.util.Map" resultClass="string">
			SELECT min(COD_PERI)
			FROM 																				
				CUP_PROG_PERIO
			WHERE																				
				COD_PAIS = #codigoPais#
				and COD_PROG = #codigoPrograma#
	  </select>

	  <select id="getCodigoCuponFinal" parameterClass="java.util.Map" resultClass="string">
			SELECT	max(cod_cupon)
			FROM 																			
				CUP_CUPON_NIVEL
			WHERE																				
				COD_PAIS = #codigoPais#
				and COD_PROG = #codigoPrograma#
	  </select>
	
	  <select id="getCodigoCuponInicial" parameterClass="java.util.Map" resultClass="string">
			SELECT	min(cod_cupon)
			FROM 																				
				CUP_CUPON_NIVEL												
			WHERE																				
				COD_PAIS = #codigoPais#
				and COD_PROG = #codigoPrograma#
	  </select>
	
	 <select id="getPeriodoDefaultByPrograma" parameterClass="java.util.Map" resultClass="string">
		SELECT	max(cod_peri)
		FROM 	CUP_PROG_PERIO												
		WHERE	COD_PAIS = #codigoPais#
				and COD_PROG = #codigoPrograma#
				and EST_PROG_PERI = 1				
	  </select>
	  
	  <select id="validaPrioridad" parameterClass="equivalenciaMatriz" resultClass="string">
		SELECT to_char(count(*),'99999')
		FROM CUP_EQUIV_MATR CEM
		WHERE CEM.COD_PAIS = #codigoPais#
			  and CEM.COD_PROG = #codigoPrograma#
			  and CEM.COD_PERI = #codigoPeriodo#
			  and CEM.COD_NIVEL = #codigoNivel#
			  and CEM.VAL_PRIO = to_number(#valorPrioridad#,'99999')
	  </select>
	<select id="getValorNivel" parameterClass="java.util.Map" resultClass="string">
		SELECT trim(to_char(VAL_UNID,'99999'))
      FROM CUP_PERIO_NIVEL
     WHERE COD_PAIS = #codigoPais#
       AND COD_PROG = #codigoPrograma#
       AND COD_PERI = #codigoPeriodo#
       AND COD_NIVE = #codigoNivel#
	</select>	 
		 
	<select id="getValorCodigoNivel" parameterClass="java.util.Map" resultClass="string">
		    SELECT COD_NIVE
      FROM CUP_PERIO_NIVEL
     WHERE COD_PAIS = #codigoPais#
       AND COD_PROG = #codigoPrograma#
       AND COD_PERI = #codigoPeriodo#
       AND COD_NIVE = #nivel#
	</select>
	
	<select id="getCupNoAsignadosUtilizados" parameterClass="java.util.Map" resultClass="string">
		SELECT distinct(cem.cod_cupon)
		FROM CUP_EQUIV_MATR cem
		WHERE cem.cod_cupon 
		<iterate prepend="IN" property="cuponesNoAsignados" open="(" close=")" conjunction=",">
				#cuponesNoAsignados[]#
		</iterate>
		and cem.cod_prog = #codigoPrograma#
		UNION 
		SELECT distinct(con.cod_cupon)
		FROM CUP_CONSU_CUPON con
		where con.cod_cupon 
		<iterate prepend="IN" property="cuponesNoAsignados" open="(" close=")" conjunction=",">
				#cuponesNoAsignados[]#
		</iterate>
		and con.cod_prog = #codigoPrograma#
	</select>	  
	
	<!--Obtiene productos de la matriz de facturacion-->	 
	<select id="getProductosMatrizByCriteria" parameterClass="java.util.Map" resultMap="productoMatrizSiCCResult">
         select DET.VAL_CODI_VENT AS COD_VENTA,
				OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(DET.PROD_OID_PROD) AS COD_PROD,
				OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(DET.PROD_OID_PROD) AS DES_PROD
		from pre_matri_factu matriz, pre_ofert_detal det
		where matriz.ofde_oid_deta_ofer = det.oid_deta_ofer
			  and exists (SELECT cab.oid_cabe
						FROM pre_Matri_Factu_Cabec cab
						WHERE exists (SELECT null
									FROM cra_perio a, seg_perio_corpo b
						            WHERE a.peri_oid_peri = b.oid_peri
										and b.cod_peri = #codigoPeriodo#
						                and cab.perd_oid_peri = a.oid_peri)
							and matriz.mfca_oid_cabe = cab.oid_cabe)
			<isNotEmpty prepend="AND" property="codigoVenta">
				DET.VAL_CODI_VENT like UPPER(#codigoVenta#||'%')
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="codigoSap">
				OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(DET.PROD_OID_PROD) like UPPER(#codigoSap#||'%')
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="descripcionCorta">			
			    OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(DET.PROD_OID_PROD) like UPPER(#descripcionCorta#||'%')
   		    </isNotEmpty>
	</select>
	
	<!-- OBTIENE LA CABECERA DE LA CONSULTORA DE SUSCRIPCION  -->
  <select id="getCabecConsultorasSuscripcion" parameterClass="java.util.Map" resultMap="susCabecConsultoraResult">
			select suca.cod_pais,
			       suca.cod_prog,
			       suca.cod_cons,
			       suca.cod_peri,
			       suca.est_regi,
			       suca.cod_marc
			  from cup_suscr_cabec_consu suca
			 where suca.cod_pais = #codigoPais#
			   and suca.cod_prog = #codigoPrograma#
			   and suca.cod_cons = #codigoConsultora#
			   and suca.cod_marc = #codigoMarca#
  </select>
  
   <!--Obtiene los niveles de suscripcion-->	 
   <select id="getNivelesSuscripcion" parameterClass="java.util.Map" resultMap="nivelesSuscripcionReuslt">	   
    select peni.cod_pais,
           peni.cod_prog,
           peni.cod_nive,
           CASE
             WHEN (CUP_PKG_PROG_NUEVAS.CUP_FN_DEVUE_INDIC_CUPON(#codigoPais#, #codigoPrograma#)) = '0' THEN
              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
                                                         peni.cod_nive)
             ELSE
              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
                                                         peni.cod_nive - 1)
           END AS cam_ini,
           CASE
             WHEN (CUP_PKG_PROG_NUEVAS.CUP_FN_DEVUE_INDIC_CUPON(#codigoPais#, #codigoPrograma#)) = '0' THEN
              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
                                                         (select p.num_vig
                                                            from cup_prog_nueva_cupon p
                                                           where p.cod_pais = #codigoPais#
                                                             and p.cod_prog =
                                                                 #codigoPrograma#) +
                                                         peni.cod_nive - 1)
             ELSE
              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
                                                         (select p.num_vig
                                                            from cup_prog_nueva_cupon p
                                                           where p.cod_pais = #codigoPais#
                                                             and p.cod_prog =
                                                                 #codigoPrograma#) +
                                                         peni.cod_nive - 2)
           END AS cam_fin,
           peni.val_unid,
           ma.cod_cupon,
           ma.cod_venta,
           ma.des_prod,
           '' as "cant_Pedida",
           '' as ind_util
      from cup_perio_nivel peni, cup_equiv_matr ma
     where peni.cod_peri = #codigoPeriodo#
       and peni.cod_pais = #codigoPais#
       and peni.cod_prog = #codigoPrograma#
       and ma.cod_pais = peni.cod_pais
       and ma.cod_prog = peni.cod_prog
       and ma.cod_peri = peni.cod_peri
       and ma.cod_nivel = peni.cod_nive
     order by peni.cod_nive, ma.cod_cupon	           
	</select>
	<!--Obtiene los niveles de suscripcion edit-->	 
   <select id="getNivelesSuscripcionEdit" parameterClass="java.util.Map" resultMap="nivelesSuscripcionReuslt">   
   		select peni.cod_pais,
	           peni.cod_prog,
	           peni.cod_nive,
	           CASE
	             WHEN (CUP_PKG_PROG_NUEVAS.CUP_FN_DEVUE_INDIC_CUPON(#codigoPais#, #codigoPrograma#)) = '0' THEN
	              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
	                                                         peni.cod_nive)
	             ELSE
	              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
	                                                         peni.cod_nive - 1)
	           END AS cam_ini,
	           CASE
	             WHEN (CUP_PKG_PROG_NUEVAS.CUP_FN_DEVUE_INDIC_CUPON(#codigoPais#, #codigoPrograma#)) = '0' THEN
	              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
	                                                         (select p.num_vig
	                                                            from cup_prog_nueva_cupon p
	                                                           where p.cod_pais = #codigoPais#
	                                                             and p.cod_prog =
	                                                                 #codigoPrograma#) +
	                                                         peni.cod_nive - 1)
	             ELSE
	              CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,
	                                                         (select p.num_vig
	                                                            from cup_prog_nueva_cupon p
	                                                           where p.cod_pais = #codigoPais#
	                                                             and p.cod_prog =
	                                                                 #codigoPrograma#) +
	                                                         peni.cod_nive - 2)
	           END AS cam_fin,
	           peni.val_unid,
	           ma.cod_cupon,
	           ma.cod_venta,
	           ma.des_prod,
	           deta.val_dema as "cant_Pedida",
               deta.ind_util as ind_util
	      from cup_perio_nivel peni, cup_equiv_matr ma, cup_suscr_detal_consu deta
	     where peni.cod_peri = #codigoPeriodo#
	       and peni.cod_pais = #codigoPais#
	       and peni.cod_prog = #codigoPrograma#
	       and ma.cod_pais = peni.cod_pais
	       and ma.cod_prog = peni.cod_prog
	       and ma.cod_peri = peni.cod_peri
	       and ma.cod_nivel = peni.cod_nive	       
	       and deta.COD_PAIS(+) = ma.cod_pais 
   		   and deta.COD_PROG(+) = ma.cod_prog 
	       and deta.COD_CONS(+) = #codigoConsultora#
	       and deta.COD_NIVE(+) = ma.cod_nivel
   		   and deta.COD_CUPO(+) = ma.cod_cupon	       
	     order by peni.cod_nive, ma.cod_cupon	      	     
	</select>
	
	<insert id="insertSuscripcionConsultoras" parameterClass="susCabecConsultora">
		INSERT INTO CUP_SUSCR_CABEC_CONSU  (
            COD_PAIS,
			COD_PROG,
			COD_CONS,
			COD_PERI,
			EST_REGI,
			COD_MARC,
			USU_DIGI,
			FEC_DIGI
		)	  
		VALUES(
			#codigoPais#     	,
			#codigoPrograma#     ,	
			#codigoConsultora#    ,	
			#codigoPeriodo#   	,
			#estadoRegistro# 	,
			#codigoMarca# 	,		   
			#codigoUsuario# 	, 
      		trunc(sysdate)
    	)
	</insert>
	
	<insert id="insertSuscripcionConsultorasNivel" parameterClass="susNivelConsultora">
		INSERT INTO CUP_SUSCR_NIVEL_CONSU
		  (
           COD_PAIS,
			COD_PROG,
			COD_CONS,
			COD_NIVE,
			CAM_INIC,
			CAM_FIN ,
			USU_DIGI,
			FEC_DIGI
		)	  
		VALUES(
			#codigoPais#     	,
			#codigoPrograma#     ,	
			#codigoConsultora#    ,	
			#codigoNivel#   	,
			#campanhaInicio# 	,
			#campanhaFin# 	,		   
      		#codigoUsuario# 	, 
      		trunc(sysdate)
    	)
	</insert>
	
	<insert id="insertSuscripcionConsultorasDetalle" parameterClass="susDetalConsultora">
		INSERT INTO CUP_SUSCR_DETAL_CONSU
		  (
           COD_PAIS,
			COD_PROG,
			COD_CONS,
			COD_NIVE,
			COD_CUPO,
			COD_VENT,
			DES_PROD,
			VAL_DEMA,
			IND_UTIL,
			CAM_UTIL,
			USU_DIGI,
			FEC_DIGI
		)	  
		VALUES(
			#codigoPais#     	,
			#codigoPrograma#     ,	
			#codigoConsultora#    ,	
			#codigoNivel#   	,
			#codigoCupon#   	,
			#codigoVenta# 	,
			#descripcionProducto# 	,	
			#valorDemandada# 	,	
			#indicadorUtilidad# 	,   
			#campanhaUtilidad# 	,
      		#codigoUsuario# 	, 
      		trunc(sysdate)
    	)
	</insert>
	
	<delete id="deleteSuscripcionConsultorasDetalle" parameterClass="susCabecConsultora">
          delete FROM CUP_SUSCR_DETAL_CONSU                           		
           where cod_pais = #codigoPais#
				 and cod_prog = #codigoPrograma#
				 and cod_cons = #codigoConsultora#
	</delete>
	
    <update id="updateSuscripcionConsultorasDetalle" parameterClass="susDetalConsultora">
          update CUP_SUSCR_DETAL_CONSU
             set VAL_DEMA =#valorDemandada#,
             	 USU_MODI =#codigoUsuario#,
             	 FEC_MODI=sysdate
           where cod_pais = #codigoPais#
				 and cod_prog = #codigoPrograma#
				 and cod_cons = #codigoConsultora#
				 and cod_nive = #codigoNivel#
				 and cod_cupo = #codigoCupon#	
				 and ind_util != '1'	 
	</update>
	
	<delete id="deleteSuscripcionDetalle" parameterClass="susDetalConsultora">
          delete FROM CUP_SUSCR_DETAL_CONSU                           		
           where cod_pais = #codigoPais#
				 and cod_prog = #codigoPrograma#
				 and cod_cons = #codigoConsultora#
				 and cod_nive = #codigoNivel#
				 and cod_cupo = #codigoCupon#
	</delete>

  <!-- OBTIENE EL DETALLE DE LA CONSULTORA DE SUSCRIPCION  -->
  <select id="getDetalleSuscripcionConsultora" parameterClass="susDetalConsultora" resultMap="susDetalConsultoraResult">
		select de.cod_pais,
		       de.cod_prog,
		       de.cod_cons,
		       de.cod_nive,
		       de.cod_cupo,
		       de.cod_vent
		  from cup_suscr_detal_consu de
		where de.cod_pais = #codigoPais#
		       and de.cod_prog = #codigoPrograma#
		       and de.cod_cons = #codigoConsultora#
		       and de.cod_nive = #codigoNivel#
		       and de.cod_cupo = #codigoCupon#
		       and de.cod_vent = #codigoVenta#
  </select>

  <select id="getCuponesNoHomologados" parameterClass="java.util.Map" resultClass="string">
      select c.cod_cupon
		from cup_equiv_matr c 
		where c.cod_pais = #codigoPais# 
		  and c.cod_prog = #codigoPrograma#
		  <isNotEmpty prepend="AND" property="codigoPeriodo"> 
		  	c.cod_peri = #codigoPeriodo# 
		  </isNotEmpty>
		  and c.cod_venta is null
  </select>		

	<parameterMap id="executeCierreCampanhaParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="codigoUsuario"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>

    <procedure id="executeCierreCampanha" 
   			  parameterMap="executeCierreCampanhaParams" >
		{call CUP_PKG_PROG_NUEVAS.CUP_PR_ANULA_PEDID_CIERR_MULTI(?,?,?)}
    </procedure> 		
	
	<insert id="insertLoveCuponDefault" parameterClass="equivalenciaMatriz">
		INSERT INTO LOV_CUPON_DEFEC
			(COD_PAIS, 
		     COD_PERI, 
		     COD_CUPO, 
		     COD_TIPO_CLAS, 
		     COD_NIVEL,
		     COD_PROG)
		VALUES(#codigoPais#, 
		       #codigoPeriodo#, 
		       #codigoCupon#, 
		       '01', 
		       #codigoNivel#,
		       #codigoPrograma#)
	</insert>
	
	<update id="updateLoveCuponDefault" parameterClass="equivalenciaMatriz">
          UPDATE lov_cupon_defec
		     SET cod_cupo = #codigoCupon#
		   WHERE cod_pais  = #codigoPais#
		     AND cod_peri  = #codigoPeriodo#
		     AND cod_nivel = #codigoNivel#	 
		     AND COD_PROG = #codigoPrograma#
	</update>
	
	<delete id="deleteLoveCuponDefault" parameterClass="equivalenciaMatriz">
         DELETE from lov_cupon_defec
		   WHERE cod_pais  = #codigoPais#
		     AND cod_peri  = #codigoPeriodo#
		     AND cod_nivel = #codigoNivel#
		     AND COD_CUPO  = #codigoCupon# 	 
		     AND COD_PROG = #codigoPrograma# 	 
	</delete>
	
	<insert id="insertLoveEquivalenciaMatriz" parameterClass="equivalenciaMatriz">
		INSERT INTO LOV_EQUIV_MATR  (
            COD_PAIS, 
       		cod_prog, 
       		cod_peri, 
			cod_venta, 
       		cod_nivel, 
            VAL_PREC , 
            DES_PROD, 
            COD_PROD, 
            COD_CUPON,
			VAL_PRIO,
			IND_PROD_KIT,
			USU_DIGI,
			FEC_DIGI
		)	  
		VALUES(
			#codigoPais#,
			#codigoPrograma#,	
			#codigoPeriodo#,	
			#codigoVenta#,
			#codigoNivel#,
		    to_number(#valorUnitario#, '99999999.99'),
			#descripcionProducto#,
			#codigoProducto#,	
      		#codigoCupon#,
			to_number(#valorPrioridad#  , '99999'),
			#indicadorKit#,
			#codigoUsuario#,
			SYSDATE
    	)
	</insert>
	
	<update id="updateLoveEquivalenciaMatriz" parameterClass="equivalenciaMatriz">
          update LOV_EQUIV_MATR
             set COD_VENTA = #codigoVenta#,
				 COD_PROD = #codigoProducto#,
				 DES_PROD = #descripcionProducto#,
				 VAL_PREC = to_number(#valorUnitario#, '99999999.99') ,
				 VAL_PRIO = to_number(#valorPrioridad#  , '99999'),
				 IND_PROD_KIT = #indicadorKit#,
				 USU_MODI = #codigoUsuario#,
				 FEC_MODI = SYSDATE
           where cod_pais = #codigoPais#
				 and cod_prog  = #codigoPrograma#
				 and cod_peri  = #codigoPeriodo#
				 and cod_nivel = #codigoNivel#
				 and cod_cupon = #codigoCupon#			 
	</update>
	
	<delete id="deleteLoveEquivalenciaMatriz" parameterClass="equivalenciaMatriz">
          delete FROM LOV_EQUIV_MATR                           		
           where cod_pais = #codigoPais#
				 and cod_prog = #codigoPrograma#
				 and cod_peri = #codigoPeriodo#
				 and cod_nivel = #codigoNivel#
				 and cod_cupon = #codigoCupon#
	</delete>
	
	<resultMap id="excepcionesResult" class="java.util.HashMap">
      <result property="codigoPais" 	      column="COD_PAIS"/>
      <result property="codigoPrograma"       column="COD_PROG"/>
      <result property="codigoPeriodo" 	      column="COD_PERI"/>
      <result property="codigoRegion" 	      column="COD_REGI"/>
      <result property="descripcionRegion" 	  column="DES_REGI"/>
      <result property="codigoZona" 	      column="COD_ZONA"/>
      <result property="descripcionZona" 	  column="DES_ZONA"/>      
   </resultMap>
	
	<select id="getExcepciones" parameterClass="java.util.Map" resultMap="excepcionesResult">
		  SELECT pe.cod_pais,
	             pe.cod_prog,
	             pe.cod_peri,
	             zr.cod_regi,
	             zr.des_regi,
	             zz.cod_zona,
	             zz.des_zona 
	        FROM cup_param_excep pe,
	             zon_zona zz,
	             zon_regio zr
	       WHERE pe.cod_regi = zr.cod_regi
	         AND pe.cod_zona = zz.cod_zona
	         AND pe.cod_pais = #codigoPais#
	         AND pe.cod_prog = #codigoPrograma#
	         AND pe.cod_peri = #codigoPeriodo#				
		  <isNotEmpty property="codigoRegion">	
		    <iterate prepend="AND" property="codigoRegion" open=" pe.COD_REGI IN (" close=")" conjunction=",">
        	 	#codigoRegion[]#
        	</iterate>    
		  </isNotEmpty>
		  <isNotEmpty property="codigoZona">	
		    <iterate prepend="AND" property="codigoZona" open=" pe.COD_ZONA IN (" close=")" conjunction=",">
        	 	#codigoZona[]#
        	</iterate>    
		  </isNotEmpty>	
			ORDER BY pe.cod_regi,pe.cod_zona
	</select>
	
	<insert id="insertExcepciones" parameterClass="java.util.Map">
		INSERT INTO cup_param_excep(cod_pais, 
		                            cod_prog, 
		                            cod_peri, 
		                            cod_regi, 
		                            cod_zona)
		   (SELECT #codigoPais#,
			       #codigoPrograma#,
			       #codigoPeriodo#,
			       zr.cod_regi,
			       zz.cod_zona
			  FROM zon_zona zz,
			       zon_regio zr
			 WHERE zz.zorg_oid_regi = zr.oid_regi 
		       <isNotEmpty property="codigoRegion">	
			     <iterate prepend="AND" property="codigoRegion" open=" zr.cod_regi IN (" close=")" conjunction=",">
	        	 	 #codigoRegion[]#
	        	 </iterate>    
			   </isNotEmpty>			   
			   <isNotEmpty property="codigoZona">	
			     <iterate prepend="AND" property="codigoZona" open=" zz.cod_zona IN (" close=")" conjunction=",">
	        	  	 #codigoZona[]#
	        	 </iterate>    
			   </isNotEmpty>
			   AND NOT EXISTS(SELECT NULL
				                FROM cup_param_excep pe
				               WHERE pe.cod_pais = #codigoPais#
				                 AND pe.cod_prog = #codigoPrograma#
				                 AND pe.cod_peri = #codigoPeriodo#
				                 AND pe.cod_regi = zr.cod_regi
				                 AND pe.cod_zona = zz.cod_zona)	
			)
	</insert>
	
	<delete id="deleteExcepciones" parameterClass="java.util.Map">
          delete FROM cup_param_excep                           		
           where cod_pais = #codigoPais#
			 AND cod_prog = #codigoPrograma#
			 AND cod_peri = #codigoPeriodo#
			 AND cod_regi = #codigoRegion#
			 AND cod_zona = #codigoZona#
	</delete>
	
	<select  id="getCuponesPeriodo" parameterClass="java.util.Map" resultClass="string">
         SELECT em.cod_cupon
		   FROM cup_equiv_matr em
		  WHERE em.cod_pais = #codigoPais#
		    and em.cod_peri = #codigoPeriodo#
		    and em.cod_prog != #codigoPrograma#
		    <iterate prepend="AND" property="cuponesAsignados" open="(" close=")" conjunction="OR">
		  	    em.cod_cupon = #cuponesAsignados[]#
		    </iterate>
    </select>
	
	<select  id="getCodigoVentaPeriodo" parameterClass="java.util.Map" resultClass="string">
		   SELECT COUNT(1)
			 FROM cup_equiv_matr em
			WHERE em.cod_pais  = #codigoPais#
			  AND em.cod_peri  = #codigoPeriodo#
			  AND em.cod_venta = #codigoVenta#
			  AND em.cod_prog != #codigoPrograma#
	</select>
	
	<select id="getEquivalenciaMatrizByIdLove" parameterClass="java.util.Map" resultMap="equivalenciaMatrizResult">
  		SELECT 
	       COD.COD_PAIS || '-' || COD.COD_PERI 	|| '-' || COD.COD_PROG || '-' || COD.COD_NIVEL 	|| '-' || COD.COD_CUPON AS "ID" ,
  	       COD.COD_PAIS as pais,        
	       COD.COD_PERI as periodo,        
		   COD.COD_PROG,
	       COD.COD_CUPON as cupon,        
		   COD.COD_NIVEL ,
	       COD.VAL_PREC,        
	       COD.DES_PROD,        
	       COD.COD_PROD,        
	       COD.COD_VENTA,
		   COD.VAL_PRIO,
		   cod.val_unid_maxi,
       	   NULL AS is_love,
           NULL AS is_default,
           COD.IND_PROD_KIT,
           NULL NUM_VIGE                      
    	FROM  CUP_EQUIV_MATR COD                        
		WHERE
			COD.COD_PAIS = #codigoPais#                             
    		AND COD.COD_PERI = #codigoPeriodo#                           		
    		AND COD.COD_PROG = #codigoPrograma#                          
    		AND COD.COD_NIVEL = #codigoNivel#  
			AND COD.COD_CUPON != #codigoCupon#                              		  
			AND COD.COD_VENTA = #codigoVenta#                             		                         
 	</select>
	
	<resultMap id="produtoPrimerPedidoResult" class="java.util.HashMap">      
    	<result property="codigoPais"			column="cod_pais"/>        
    	<result property="codigoPrograma"		column="cod_prog"/>        
    	<result property="codigoPeriodo"		column="cod_peri"/> 
    	<result property="codigoVenta"   		column="cod_vent"/>  
    	<result property="codigoProducto"		column="cod_prod"/>  
    	<result property="descripcionProducto"  column="des_prod"/> 
    	<result property="precioProducto"		column="val_prec"/>  
    	<result property="estado"       		column="sta_regi"/>  
    </resultMap>
	
	<select id="getProdutoPrimerPedidoList" parameterClass="java.util.Map" resultMap="produtoPrimerPedidoResult">
		select cod_pais, 
		       cod_prog, 
		       cod_peri, 
		       cod_vent, 
		       cod_prod, 
		       des_prod, 
		       val_prec, 
		       sta_regi
		from cup_prod_solic
	   where cod_pais = #codigoPais#
		 <isNotEmpty prepend="AND" property="codigoPrograma">
			cod_prog = #codigoPrograma#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="codigoPeriodo">
			cod_peri = #codigoPeriodo#
		 </isNotEmpty>			
		 <isNotEmpty prepend="AND" property="codigoVenta">
		 	cod_vent = #codigoVenta#
		 </isNotEmpty>	
		 <isNotEmpty prepend="AND" property="estado">
		 	sta_regi = #estado#
		 </isNotEmpty>  		
	</select>
	
	<update id="updateProdutoPrimerPedido" parameterClass="java.util.Map">
		update cup_prod_solic
		   set cod_pais = #codigoPais#,
		       cod_prog = #codigoPrograma#,
		       cod_peri = #codigoPeriodo#,
		       cod_vent = #codigoVenta#,
		       usu_modi = #codigoUsuario#,
		       fec_modi = SYSDATE   
		       <isNotEmpty prepend="," property="codigoProducto">
		       	cod_prod = #codigoProducto#
		       </isNotEmpty>
		       <isNotEmpty prepend="," property="descripcionProducto">
		       	des_prod = #descripcionProducto#
		       </isNotEmpty>
		       <isNotEmpty prepend="," property="precioProducto">
		       	val_prec = #precioProducto#
		       </isNotEmpty>
		       <isNotEmpty prepend="," property="estado">
		       	sta_regi = #estado#
		       </isNotEmpty>		       		       
		 where cod_pais = #codigoPais#
		   and cod_prog = #codigoPrograma#
		   and cod_peri = #codigoPeriodo#
		   and cod_vent = #codigoVenta#
	</update>
	
	<insert id="insertProductoPrimerPedido" parameterClass="java.util.Map">
		insert into cup_prod_solic
			  (cod_pais,
			   cod_prog,
			   cod_peri,
			   cod_vent,
			   cod_prod,
			   des_prod,
			   val_prec,
			   sta_regi,
			   usu_digi,
			   fec_digi)
			values
			  (#codigoPais#,
			   #codigoPrograma#,
			   #codigoPeriodo#,
			   #codigoVenta#,
			   #codigoProducto#,
			   #descripcionProducto#,
			   #valorUnitario#,
			   '1',
			   #codigoUsuario#,
			   SYSDATE)
	</insert>
	
	<select id="getIndicadorDigitable" parameterClass="java.util.Map" resultClass="string">
		select od.ind_digi
		  from PRE_OFERT_DETAL od 
		 where  od.val_codi_vent = #codigoVenta#
		   and od.oid_deta_ofer in (select OFDE_OID_DETA_OFER
		                              from PRE_MATRI_FACTU
		                             where MFCA_OID_CABE = (select oid_cabe
		                                                      from PRE_MATRI_FACTU_CABEC mfc
		                                                     where mfc.perd_oid_peri = (select cp.oid_peri
		                                                                                  from cra_perio cp, 
		                                                                                       SEG_PERIO_CORPO pc
		                                                                                 where cp.peri_oid_peri = pc.oid_peri
		                                                                                   and pc.cod_peri = #codigoPeriodo#)))
	</select>	
	
	<select id="getValorNivelPremiosElectivos" parameterClass="java.util.Map" resultClass="string">
		    SELECT trim(to_char(VAL_UNID_PREM_ELEC, '99999'))
      FROM CUP_PERIO_NIVEL
     WHERE COD_PAIS = #codigoPais#
       AND COD_PROG = #codigoPrograma#
       AND COD_PERI = #codigoPeriodo#
       AND COD_NIVE = #codigoNivel#
	</select>
	
	<resultMap id="getLogrosListResult" class="java.util.HashMap">      
    	<result property="codigoPais"			column="cod_pais"/>
		<result property="codigoCliente"		column="cod_clie"/>
		<result property="nombreApellidoCliente" column="nom_ape_clie"/>
		<result property="codigoTipoLogro"   	column="cod_tipo_logr"/>
		<result property="tipoLogro"			column="des_tipo_logr"/>
		<result property="montoLogro"			column="imp_logr"/>
		<result property="campanaInicio"		column="cmp_inic"/>
		<result property="campanaFin"			column="cmp_fina"/>		
		<result property="codigoMedioCaptura"	column="cod_medi_capt"/>
		<result property="medioCaptura"			column="des_medi_capt"/>  		  
    <result property="estado"				 column="des_esta"/>
    </resultMap>
	
	<select id="getLogrosList" parameterClass="java.util.Map" resultMap="getLogrosListResult">
		
		select n.cod_pais,
		       n.cod_clie,
		       m.val_ape1||' '||m.val_ape2||' '||m.val_nom1||' '||m.val_nom2 nom_ape_clie, 
		       n.cod_tipo_logr,       
		       t.des_tipo_logr,
		       n.imp_logr,
		       n.cmp_inic,
		       n.cmp_fina,
		       n.cod_medi_capt,
		       c.des_medi_capt,
		       DECODE(n.est_logr,'1','OK','2','ERROR','') des_esta
		  from nvs_consu_logro n,  
		       nvs_tipo_logro t, 
		       nvs_medio_captu_logro c, 
		       mae_clien m
		 where n.cod_tipo_logr = t.cod_tipo_logr
		   and c.cod_medi_capt(+) = n.cod_medi_capt
		   and n.cod_clie = m.cod_clie
		   and n.est_regi != '9'
		   and n.cod_pais = #codigoPais#
		   <isNotEmpty prepend="AND" property="codigoPeriodo">
		   <![CDATA[
		       n.cmp_inic <= #codigoPeriodo# AND #codigoPeriodo# <= n.cmp_fina
		   ]]>     
		   </isNotEmpty>
		   <isNotEmpty prepend="AND" property="codigoTipoLogro">
		   	  n.cod_tipo_logr = #codigoTipoLogro#
		   </isNotEmpty>
		   <isNotEmpty prepend="AND" property="codigoCliente">
		   	  n.cod_clie = #codigoCliente#
		   </isNotEmpty>
	<isNotEmpty prepend="AND" property="estado">
		   	  n.est_logr = #estado#
		   </isNotEmpty>
		   
	</select>	
		
	<update id="deleteLogros" parameterClass="java.util.Map">
		update nvs_consu_logro
		   set usu_modi = #codigoUsuario#,
		       fec_modi = sysdate,
		       est_regi = '9'
		 where cod_pais      = #codigoPais#
		   and cod_clie      = #codigoCliente#
		   and cod_tipo_logr = #codigoTipoLogro#
		   and cmp_inic      = #campanaInicio#
	</update>	
		
	<!-- OBTIENE LOS TIPOS DE LOGRO -->
 	<select id="getTiposLogro" resultMap="baseResult">
        select l.cod_tipo_logr AS CODIGO, 
		       l.cod_tipo_logr || ' - ' || l.des_tipo_logr AS DESCRIPCION  
	      from nvs_tipo_logro l 
		 where l.est_regi = '1'    
 	</select>
 	
 	<!-- OBTIENE LOS MEDIOS DE CAPTURA -->
 	<select id="getMediosCaptura" resultMap="baseResult">
       select m.cod_medi_capt AS CODIGO,  
              m.des_medi_capt AS DESCRIPCION  
         from nvs_medio_captu_logro m
	    where m.est_regi = '1'
 	</select>	
	
	<update id="updateLogros" parameterClass="java.util.Map">
	update nvs_consu_logro
	   set cod_pais = #codigoPais#,
	       cod_clie = #codigoCliente#,
	       cod_tipo_logr = #codigoTipoLogro#,
	       cod_medi_capt = #codigoMedioCaptura#,
	       imp_logr = #montoLogro#,
	       cmp_inic = #campanaInicio#,
	       cmp_fina = #campanaFin#,
	       ori_regi = #codigoOrigen#,
	       usu_modi = #codigoUsuario#,
	       fec_modi = sysdate,	       
	       des_larg = #descripcionLarga#
	 where cod_pais = #codigoPais#
	   and cod_clie = #codigoCliente#
	   and cod_tipo_logr = #codigoTipoLogro#
	   and cmp_inic = #campanaInicio#	
   </update>
		
	<insert id="insertLogros" parameterClass="java.util.Map">
		  insert into nvs_consu_logro
			    (cod_pais,
			     cod_clie,
			     cod_tipo_logr,
			     cod_medi_capt,
			     imp_logr,
			     cmp_inic,
			     cmp_fina,
			     ori_regi,
			     est_regi,
			     des_larg,
			     usu_modi,
			     fec_modi)
		values  (#codigoPais#,
			     #codigoCliente#,
			     #codigoTipoLogro#,
			     #codigoMedioCaptura#,
			     #montoLogro#,
			     #campanaInicio#,
			     #campanaFin#,
			     #codigoOrigen#,
			     '1',
			     #descripcionLarga#,
			     #codigoUsuario#,
	             sysdate)
	</insert>	 		  
	
	<resultMap id="getLogrosByIdListResult" class="java.util.HashMap">      
    	<result property="codigoPais"			column="cod_pais"/>
		<result property="codigoCliente"		column="cod_clie"/>
		<result property="codigoTipoLogro"   	column="cod_tipo_logr"/>
		<result property="codigoMedioCaptura"	column="cod_medi_capt"/>
		<result property="montoLogro"			column="imp_logr"/>
		<result property="campanaInicio"		column="cmp_inic"/>
		<result property="campanaFin"			column="cmp_fina"/>				
		<result property="origenRegistro"		column="ori_regi"/>
		<result property="descripcionLarga"		column="des_larg"/>
    </resultMap>
	
	<select id="getLogrosByIdList" parameterClass="java.util.Map" resultMap="getLogrosByIdListResult">
		     select cod_pais,
		            cod_clie,
		            cod_tipo_logr,
		            cod_medi_capt,
		            imp_logr,
		            cmp_inic,
		            cmp_fina,
		            ori_regi,
		            usu_modi,
		            fec_modi,
		            est_regi,
		            des_larg
		       from nvs_consu_logro
		      where cod_pais      = #codigoPais#
			    and cod_clie      = #codigoCliente#
			    and cod_tipo_logr = #codigoTipoLogro#
			    and cmp_inic      = #campanaInicio#
	</select>
	
	<select id="getPeriodoIngresoConsultora" parameterClass="string" resultClass="string">
	   select gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(m.perd_oid_peri)
		 from MAE_CLIEN_PRIME_CONTA m 
		where m.clie_oid_clie = gen_pkg_gener.GEN_FN_DEVUELVE_ID_CLIENTE(#value#)
	</select>
	
	<resultMap id="getValidaMontoLogroResult" class="java.util.HashMap">      
    	<result property="cantidad"		column="cantidad"/>
		<result property="rango"		column="rango"/>
    </resultMap>
	
	<select id="getValidaMontoLogro" parameterClass="java.util.Map" resultMap="getValidaMontoLogroResult">
		<![CDATA[ 
		select
			(select count(1) cantidad 
					  from nvs_tipo_logro l 
					 where l.cod_tipo_logr = #codigoTipoLogro#
					   and (nvl(l.imp_mini_logr,0) <= #montoLogro#)
					   and (l.imp_maxi_logr >= #montoLogro# or nvl(l.imp_mini_logr,0)=0)
					   and l.est_regi = '1') cantidad ,
			 '('||lo.imp_mini_logr || ' - ' || lo.imp_maxi_logr||')' rango
		from nvs_tipo_logro lo
		 where lo.cod_tipo_logr = #codigoTipoLogro#
		]]>
	</select>
	
	<select id="getCantidadCruceRangoLogro" parameterClass="java.util.Map" resultClass="string">
		 select count(1) 
		  from nvs_consu_logro cl
		 where cl.cod_clie = #codigoCliente#
		   and (#campanaInicio# between cl.cmp_inic and cl.cmp_fina or #campanaFin# between cl.cmp_inic and cl.cmp_fina)
		   and cl.est_regi = '1'	
	</select>
	
	<select id="getParametroNuevasLogro" parameterClass="java.util.Map" resultClass="string">
		 select ind_nuev from NVS_PARAM_LOGRO where cod_pais = #codigoPais#
	</select>      
	
	<select id="getIndicadorActivoConsultora" parameterClass="java.util.Map" resultClass="string">
		select da.ind_acti
		  from mae_clien mc ,
		       mae_clien_datos_adici da
		where mc.oid_clie = da.clie_oid_clie
		  and mc.cod_clie = #codCliente#
	</select>
	
	<select id="verificaCruce" parameterClass="java.util.Map" resultClass="string">
		SELECT COUNT(1)
		  FROM cup_prog_nueva_cupon a
		 WHERE a.cod_pais = #codigoPais#
           AND a.est_prog = 'S'
           AND a.cod_prog != #codigoPrograma#
           AND a.cam_fin >= #periodoActual#
           AND (#periodoInicio# BETWEEN a.cam_inic AND a.cam_fin
             OR #periodoFin# BETWEEN a.cam_inic AND a.cam_fin 
             OR a.cam_inic BETWEEN #periodoInicio# AND #periodoFin#)
	</select>
	
	<select id="getloadRegionesDisponibles" parameterClass="java.util.Map" resultMap="baseResult">
		WITH tmp AS(
  			SELECT DISTINCT
         		   z.zorg_oid_regi OID_REGION
    		  FROM zon_zona z
   		     WHERE z.ind_acti = '1'
     		   AND z.oid_zona NOT IN ( 
     		   							SELECT a.zzon_oid_zona
                                         FROM nvs_param_progr_unadm a,
                                    		  cup_prog_nueva_cupon b
                              		    WHERE b.cod_prog = a.pnvs_cod_prog
                                          AND b.cam_fin >= #codigoPeriodo#
                                          AND a.zorg_oid_regi IS NOT NULL
                                          AND a.zzon_oid_zona IS NOT NULL
                                          AND a.est_regi = '1'
                                          AND b.cam_fin >= #periodoInicial#
                                          AND #periodoFinal# >= b.cam_inic
                                        UNION
                                       SELECT zz.oid_zona
                                         FROM nvs_param_progr_unadm c,
                                              cup_prog_nueva_cupon d,
                                              zon_zona zz
                                        WHERE d.cod_prog = c.pnvs_cod_prog
                                          AND d.cam_fin >= #codigoPeriodo#
                                          AND zz.ind_acti = '1'
                                          AND c.est_regi = '1'
                                          AND zz.zorg_oid_regi = c.zorg_oid_regi
                                          AND c.zorg_oid_regi IS NOT NULL
                                          AND c.zzon_oid_zona IS NULL
                                          AND d.cam_fin >= #periodoInicial#
                                          AND #periodoFinal# >= d.cam_inic
										)
        )
        SELECT zr.oid_regi  AS CODIGO,
       		   zr.des_regi  AS DESCRIPCION
          FROM zon_regio zr,
               tmp
         WHERE zr.ind_acti = '1'
           AND zr.oid_regi = tmp.oid_region
      ORDER BY zr.des_regi
 	</select>
 	
 	<select id="getZonasDisponiblesRegion" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT z.oid_zona   CODIGO,
       		   z.des_zona	DESCRIPCION
          FROM zon_zona z
         WHERE z.ind_acti = '1'
           AND z.oid_zona NOT IN ( SELECT a.zzon_oid_zona
                                     FROM nvs_param_progr_unadm a,
                                          cup_prog_nueva_cupon b
                                    WHERE b.cod_prog = a.pnvs_cod_prog
                                      AND b.cam_fin >= #codigoPeriodo#
                                      AND a.zorg_oid_regi IS NOT NULL
                                      AND a.zzon_oid_zona IS NOT NULL
                                      AND a.est_regi = '1'
                                      AND b.cam_fin >= #periodoInicial#
                                      AND #periodoFinal# >= b.cam_inic
                                    UNION
                                   SELECT zz.oid_zona
                                     FROM nvs_param_progr_unadm c,
                                          cup_prog_nueva_cupon d,
                                          zon_zona zz
                                    WHERE d.cod_prog = c.pnvs_cod_prog
                                      AND d.cam_fin >= #codigoPeriodo#
                                      AND zz.ind_acti = '1'
                                      AND c.est_regi = '1'
                                      AND zz.zorg_oid_regi = c.zorg_oid_regi
                                      AND c.zorg_oid_regi IS NOT NULL
                                      AND c.zzon_oid_zona IS NULL
                                      AND d.cam_fin >= #periodoInicial#
                                      AND #periodoFinal# >= d.cam_inic )

           <iterate prepend="AND" property="oidRegion" open="(" close=")" conjunction="OR">
           		(z.zorg_oid_regi = #oidRegion[]#)
           </iterate>

       ORDER BY z.cod_zona
 	</select>

 	<select id="devuelveDescripcionRegion" parameterClass="java.util.Map" resultClass="string">
 		SELECT cod_regi || '__' || des_regi
 		  FROM zon_regio
 		 WHERE oid_regi = #oidRegion#
 	</select>

 	<select id="devuelveDescripcionZona" parameterClass="java.util.Map" resultClass="string">
 		SELECT zz.zorg_oid_regi || '__' || zz.cod_zona || '__' || zz.des_zona
 		  FROM zon_zona zz
 		 WHERE zz.ind_acti = '1'
           AND zz.oid_zona = #oidZona#
 	</select>
 	
 	<insert id="insertUnidadAdministrativa" parameterClass="unidadAdm">
    	INSERT INTO nvs_param_progr_unadm (
        	cor_progr_unadm,
        	pais_cod_pais,
        	pnvs_cod_prog,
        	perd_oid_peri,
        	cod_camp,
        	zorg_oid_regi,
        	cod_regi,
        	zzon_oid_zona,
        	cod_zona,
        	usu_crea,
        	fec_crea,
        	est_regi,
        	ind_esta 
        )
      	VALUES(	
			#oid#,
			#codigoPais#,
			#codigoPrograma#,
			#oidPeriodo#,
			#codigoPeriodo#,
			#oidRegion#,
			#codigoRegion#,
			#oidZona#,
			#codigoZona#,
			#usuario#,
			SYSDATE,
			'1',
			'A'
		)
	</insert>
	
	<select id="getNextOidUAS" resultClass="string">
 		SELECT nvl(MAX(a.cor_progr_unadm),0)+1
 		  FROM nvs_param_progr_unadm a
 	</select>

 	<resultMap id="unidadesAdministrativasResult"   class="unidadAdm">
		<result property="oid"				  		column="OID_UA"/>
		<result property="codigoPais"			    column="COD_PAIS"/>
		<result property="codigoPrograma"			column="COD_PROGRAMA"/>
		<result property="descripcionPeriodo"		column="COD_PERIODO"/>
		<result property="oidRegion"				column="OID_REGION"/>
		<result property="codigoRegion"				column="COD_REGION"/>
		<result property="descripcionRegion"		column="DES_REGION"/>
		<result property="oidZona"					column="OID_ZONA"/>
		<result property="codigoZona"				column="COD_ZONA"/>
		<result property="descripcionZona"			column="DES_ZONA"/>
    </resultMap>
	<select id="getListUnidadesAdministrativas" parameterClass="java.util.Map" resultMap="unidadesAdministrativasResult">
	   SELECT a.cor_progr_unadm 	OID_UA,
	          a.pais_cod_pais       COD_PAIS,
       		  a.pnvs_cod_prog  		COD_PROGRAMA,
              a.cod_camp  			COD_PERIODO,
              a.zorg_oid_regi  		OID_REGION,
       	      a.cod_regi       		COD_REGION,
             (SELECT zr.des_regi FROM zon_regio zr WHERE zr.oid_regi = a.zorg_oid_regi) DES_REGION,
              a.zzon_oid_zona  		OID_ZONA,
              a.cod_zona       		COD_ZONA,
             (SELECT zz.des_zona FROM zon_zona zz WHERE zz.oid_zona = a.zzon_oid_zona)  DES_ZONA
		 FROM nvs_param_progr_unadm a
		WHERE a.pais_cod_pais = #codigoPais#
		  AND a.pnvs_cod_prog = #codigoPrograma#
		  AND a.est_regi = '1'
		ORDER BY a.cor_progr_unadm
 	</select>
 	
 	<insert id="insertDescuentos" parameterClass="descuentos">
    	INSERT INTO NVS_PARAM_DESCU (
        	PAIS_COD_PAIS,
        	PROG_COD_PROG,
        	NIVE_COD_NIVE,
        	CAM_INIC_VIGE,
        	CAM_FINA_VIGE,
        	MON_VENT_EXIG,
        	MON_DESC,
        	COD_VENT,
        	USU_CREA,
        	FEC_CREA,
        	EST_REGI 
        )
      	VALUES(	
			#codigoPais#,
			#codigoPrograma#,
			#nivel#,
			#campanhaInicio#,
			#campanhaFin#,
			TO_NUMBER(#montoVentaExigencia#,'999999999999.99'),
			TO_NUMBER(#montoDescuento#,'999999999999.99'),
			#codigoVenta#,
			#usuario#,
			SYSDATE,
			'1'
		)
	</insert>
	
	<select id="getExisteDescuento" parameterClass="java.util.Map" resultClass="string">
		SELECT count(1)
		  FROM NVS_PARAM_DESCU a  
		 where a.pais_cod_pais = #codigoPais#
		   and a.prog_cod_prog = #codigoPrograma#
		   and a.nive_cod_nive = #codigoNivel#
		   and a.cam_inic_vige = #campanhaInicio#
		   and a.est_regi='1'
  </select>
  
  <select id="getExisteDescuentoTotal" parameterClass="java.util.Map" resultClass="string">
		SELECT count(1)
		  FROM NVS_PARAM_DESCU a  
		 where a.pais_cod_pais = #codigoPais#
		   and a.prog_cod_prog = #codigoPrograma#
		   and a.nive_cod_nive = #codigoNivel#
		   and a.cam_inic_vige = #campanhaInicio#
  </select>
	
 	<resultMap id="descuentosResult"   class="descuentos">
		<result property="codigoPais"			    column="pais_cod_pais"/>
		<result property="codigoPrograma"			column="prog_cod_prog"/>
		<result property="nivel"					column="nive_cod_nive"/>
		<result property="campanhaInicio"			column="cam_inic_vige"/>
		<result property="campanhaFin"				column="cam_fina_vige"/>
		<result property="montoVentaExigencia"		column="mon_vent_exig"/>
		<result property="montoDescuento"			column="mon_desc"/>
		<result property="codigoVenta"				column="COD_VENT"/>
		<result property="estadoRegistro"			column="est_regi"/>
    </resultMap>
	<select id="getListDescuentos" parameterClass="java.util.Map" resultMap="descuentosResult">
		SELECT a.pais_cod_pais,
		       a.prog_cod_prog,
		       a.nive_cod_nive,
		       a.cam_inic_vige,
		       a.cam_fina_vige,
		       TRIM(TO_CHAR(a.mon_vent_exig,'9999999999.99')) AS mon_vent_exig,
               TRIM(TO_CHAR(a.mon_desc,'9999999999.99')) AS mon_desc,
		       a.COD_VENT,
		       a.est_regi
		  FROM NVS_PARAM_DESCU a  
		 where a.pais_cod_pais = #codigoPais#
		   and a.prog_cod_prog = #codigoPrograma#
		   and a.est_regi='1'
		order by a.nive_cod_nive
 	</select>
 	
 	<update id="updateDescuentos" parameterClass="java.util.Map">
    	UPDATE	NVS_PARAM_DESCU
           SET 	mon_vent_exig = TO_NUMBER(#montoVentaExigido#,'999999999999.99'),
           		mon_desc = TO_NUMBER(#montoDescuento#,'999999999999.99'),
           		usu_modi = #usuario#,
           		fec_modi = SYSDATE,
           		COD_VENT= #codigoVenta#,
           		cam_inic_vige=#campanhaInicio#,
           		cam_fina_vige=#campanhaFin#,
           		est_regi=#estadoRegistro#
         where 	pais_cod_pais = #codigoPais#
		   and 	prog_cod_prog = #codigoPrograma#
		   and 	nive_cod_nive = #codigoNivel#           
		   and  cam_inic_vige = #campanhaInicio#           
	</update>
 	<update id="deleteDescuentos" parameterClass="java.util.Map">
    	UPDATE	NVS_PARAM_DESCU
           SET  usu_modi = #usuario#,
           		fec_modi = SYSDATE,
           		est_regi=#estadoEliminado#
         where 	pais_cod_pais = #codigoPais#
		   and 	prog_cod_prog = #codigoPrograma#
		   and 	nive_cod_nive = #codigoNivel#           
		   and  cam_inic_vige = #campanhaInicio#           
	</update>
 	<select id="verificaConsultoraPrograma" parameterClass="java.util.Map" resultClass="string">
 		SELECT COUNT(1)
 		  FROM cup_consu_nueva a
 		 WHERE a.cod_prog = #codigoPrograma#
 	</select>

 	<update id="updateProgramaDscto2" parameterClass="java.util.Map">
    	UPDATE 	cup_prog_nueva_cupon
           SET	cam_fin  = #campanaFin#,  
			    usu_modi = #usuario#, 
			    fec_modi = SYSDATE
         WHERE 	cod_pais = #codigoPais#
           AND 	cod_prog = #codigoPrograma#
	</update>
	
	<update id="updateUnidadAdministrativa" parameterClass="java.util.Map">
    	UPDATE	nvs_param_progr_unadm
           SET 	usu_modi = #usuario#,
           		fec_modi = SYSDATE,
           		est_regi = #estadoEliminado#
         WHERE	pais_cod_pais = #codigoPais# 
           AND  pnvs_cod_prog = #codigoPrograma#
           
		<isNotEmpty prepend="AND" property="oidRegion">
			zorg_oid_regi = #oidRegion#
    	</isNotEmpty>    	
		<isNotEmpty prepend="AND" property="oidZona">
			zzon_oid_zona = #oidZona#
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="estadoEliminadoTemporal">
			est_regi = #estadoEliminadoTemporal#
    	</isNotEmpty>           
	</update>

	<select id="getPeriodosPrograma" parameterClass="java.util.Map" resultClass="java.lang.String">
 		SELECT a.cam_inic|| '__' ||a.cam_fin
 		  FROM cup_prog_nueva_cupon a
 		 WHERE a.cod_prog = #codigoPrograma#
	</select>

 	<select id="getPeriodoSiguiente" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT GEN_PKG_GENER.gen_fn_perio_nsigu(#codigoPais#, #codigoPeriodo#, #nperiodo#) FROM DUAL
   	</select>

 	<select id="validarMatrizFacturacion" parameterClass="java.util.Map" resultClass="string">
 		SELECT COUNT(1)
 		  FROM pre_matri_factu_cabec a
 		 WHERE a.perd_oid_peri = #oidPeriodo#
 	</select>

 	<resultMap id="getDetalleProductoByIdOfertaResult"   class="java.util.HashMap">
		<result property="codigoProducto"	  		column="COD_PROD"/>
		<result property="descriProducto"		    column="DES_PROD"/>
		<result property="valPrecio"				column="VAL_PREC"/>
    </resultMap>
 	<select id="getDetalleProductoByIdOferta" parameterClass="java.util.Map" resultMap="getDetalleProductoByIdOfertaResult">
  		SELECT	OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(DET.PROD_OID_PROD) AS COD_PROD,
       			OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(DET.PROD_OID_PROD) AS DES_PROD,
       			nvl(DET.IMP_PREC_CATA,0) AS VAL_PREC
	      FROM  PRE_OFERT_DETAL  DET
	     WHERE DET.OID_DETA_OFER = #oidDetalleOferta#
  	</select>

  	<insert id="insertaRegaloxPedido" parameterClass="java.util.Map">
		INSERT INTO cup_desp_prod (
            cod_pais,
       		cod_prog,
       		cod_peri,
			cod_venta,
       		cod_nivel,
       		ind_rega_pedi,
       		cod_prod,
       		des_prod,
       		val_prec,
            sta_reg,
            USU_DIGI,
            FEC_DIGI
		)
		VALUES(
			#codigoPais#,
			#codigoPrograma#,
			#codigoPeriodo#,
			#codigoVenta#,
			#codigoNivel#,
			'1',
			#codigoProducto#,
			#descripcionProducto#,
		    to_number(#valorUnitario#, '99999999.99'),
			#estadoRegistro#,
      		#usuario#,
      		SYSDATE
    	)
	</insert>

	<select id="getNumeroNiveles" parameterClass="java.util.Map" resultClass="string">
 		SELECT val_para
          FROM nvs_param_gener
         WHERE cod_para = '02'
 	</select>

 	<select id="getNivelesPermitidos" parameterClass="java.util.Map" resultMap="baseResult">
         SELECT	n.cod_nivel AS CODIGO,
                n.des_nivel AS DESCRIPCION
           FROM	cup_nivel n
          WHERE	n.cod_nivel != '00'
          <![CDATA[
            AND n.cod_nivel <= #niveles#
          ]]>
 	</select>

 	<parameterMap id="executeEntregaRxPParams" class="map" >
		<parameter property="codigoPais"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoUsuario"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeEntregaRxP" parameterMap="executeEntregaRxPParams" >
		{call CUP_PKG_PROG_NUEVAS.CUP_PR_DESPA_REGAL_PEDID(?, ?, ?)}
    </procedure>

	<select id="getProgramaPrimerPedido" parameterClass="java.util.Map" resultClass="string">
  		SELECT COUNT(1)
 		  FROM CUP_PROG_NUEVA_CUPON 
	     WHERE COD_PAIS = #codigoPais#
		   AND COD_PROG = #codigoPrograma#
		   AND IND_CUPO = '1'
 	</select>

	<select id="getCuponConIndicadorKit" parameterClass="java.util.Map" resultClass="string">
  		SELECT COUNT(1) 
    	  FROM CUP_EQUIV_MATR                         
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_PROG = #codigoPrograma#
		   AND COD_PERI = #codigoPeriodo#
		   AND IND_PROD_KIT = '1'                             		                         
 	</select>
    
	<select id="getDespachoConIndicadorKit" parameterClass="java.util.Map" resultClass="string">
  		SELECT COUNT(1) 
    	  FROM CUP_DESP_PROD                        
		 WHERE COD_PAIS = #codigoPais#    
		   AND COD_PROG = #codigoPrograma#                         
		   AND COD_PERI = #codigoPeriodo#                         
    	   AND IND_PROD_KIT = '1'                             		                         
 	</select>
    
  <!-- OBTIENE DESPACHO DE PRODUCTOS SEGUN LOS CRITERIOS  -->
  <select id="getDespachoProductosById" parameterClass="java.util.Map" resultMap="despachoProductoResult">
  		SELECT 
	       COD.COD_PAIS || '-' || COD.COD_PERI 	|| '-' || COD.COD_PROG || '-' || COD.COD_NIVEL 	|| '-' || COD.COD_VENTA AS "ID",
  	       COD.COD_PAIS,
	       COD.COD_PERI,
		   COD.COD_PROG,
	       COD.COD_VENTA,
		   COD.COD_NIVEL,
	       COD.VAL_PREC,
	       COD.DES_PROD,
	       COD.COD_PROD,
	       COD.STA_REG,
	       COD.USU_DIGI,
	       COD.FEC_DIGI,
	       COD.USU_MODI,
	       COD.FEC_MODI,
	       NVL(COD.IND_REGA_PEDI,0) AS IND_REGA,
           COD.IND_PROD_KIT IND_KIT,
           COD.TIDE_TIPO_DESP
    	FROM CUP_DESP_PROD COD
	   WHERE COD.COD_PAIS = #codigoPais#
		 AND COD.COD_PERI = #codigoPeriodo#
		 AND COD.COD_VENTA = #codigoVenta#
         AND COD.COD_PROG = #codigoPrograma#
         AND COD.COD_NIVEL = #codigoNivel#
  </select>

  <parameterMap id="verificaCruceProgramaUAResult" class="java.util.Map">
		<parameter property="codigoPais"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPrograma"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="periodoActual"     jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="periodoInicial"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="periodoFinal"      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="region"           	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="zona"           	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="resultado"      	jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT" />
	</parameterMap>
	<procedure id="verificaCruceProgramaUA" parameterMap="verificaCruceProgramaUAResult">
		{call CUP_PKG_PROG_NUEVAS.cup_pr_verif_cruce_proga(?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>

	<select id="getPeriodo" parameterClass="java.util.Map" resultClass="string">
  		SELECT COD_PERI 
  		FROM CUP_PROG_PERIO 
  		WHERE COD_PERI=#codigoPeriodo# 
  		AND COD_PROG=#codigoPrograma#
  		AND COD_PAIS=#codigoPais#
  		AND EST_PROG_PERI = '1'
 	</select>

 	<insert id="insertPeriodo" parameterClass="java.util.Map">
	 Insert into CUP_PROG_PERIO (
	 COD_PAIS,
	 COD_PROG,
	 COD_PERI,
	 EST_PROG_PERI) 
	 values 
	 (#codigoPais#,
	  #codigoPrograma#,
	  #codigoPeriodo#,
	  '1')
	</insert>

	<select id="getParametroPrograma" resultClass="string">
  		SELECT 
  		val_para 
  		FROM NVS_PARAM_GENER 
  		where cod_para=#value#
 	</select>

 	<select id="validarPeriodoCampahnaFin" parameterClass="java.util.Map" resultClass="integer">
 		<![CDATA[
  		SELECT COUNT(*)
		FROM DUAL
		WHERE   #codigoPeriodo# <= PER_PKG_REPOR_PERCE.PER_FN_OBTIE_PERIO ( 
    	#campanhafinal#, 
    	GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#), 
    	GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_MARCA('T'), 
    	GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CANAL('VD'), #parametrosistema# ) 
		]]>
 	</select>

 	<select id="getRegaloPorPedido" parameterClass="java.util.Map" resultClass="string">
  		SELECT NVL(COD.IND_REGA_PEDI,0) AS IND_REGA
    	FROM CUP_DESP_PROD COD,
    		MAE_PRODU M
	   		WHERE COD.COD_PAIS =  #codigoPais#
         	AND M.COD_SAP = COD.COD_PROD
			AND COD.COD_PERI = #codigoPeriodo#
         	AND COD.COD_VENTA = #codigoVenta#
         	AND COD.COD_PROG = #codigoPrograma#
         	AND COD.COD_NIVEL = #codigoNivel#
 	</select>

 	<delete id="eliminarDespachoProducto" parameterClass="despachoProducto">
        DELETE cup_desp_prod t
    	WHERE
		      t.COD_PAIS  = #codigoPais# AND
          	  t.COD_PERI  = #codigoPeriodo# AND
			  t.COD_VENTA = #codigoVenta# AND
			  t.COD_PROG  = #codigoPrograma#  AND                        
			  t.COD_NIVEL = #codigoNivel#                          

    </delete>

 <select id="validaTipoOferta" resultClass="integer">
	   select count(1) 
        from pre_ofert_detal o, pre_tipo_ofert d
        where o.TOFE_OID_TIPO_OFER = d.OID_TIPO_OFER
        and o.OID_DETA_OFER = #oidOferta#
        and d.COD_TIPO_OFER = '91'
        and o.VAL_CODI_VENT = #codigoVenta#
    </select>
    
    <select id="validaTipoOfertaDuplicado" resultClass="integer">
	   select count(1) 
       from CUP_DESP_PROD cdp
       where cod_peri  = #codigoPeriodo# and 
             cod_venta = #codigoVenta# and 
             cod_nivel = #codigoNivel# and
             cod_prog   = #codigoPrograma#
    </select>

    <select id="getCantZonasxRegion" resultClass="integer">
        SELECT count(*) FROM zon_zona z
  		WHERE z.ind_acti = '1'
              <iterate prepend="AND" property="oidRegion" open="(" close=")" conjunction="OR">
           		(z.zorg_oid_regi = #oidRegion[]#)
           </iterate>
           
	</select>      
		
    
    <resultMap id="consultaSOAProgramaNuevasResult" class="java.util.HashMap">
      <result property="codigoConsultora" 	      column="COD_CONS"/>
      <result property="nombre"                   column="VAL_NOM1"/>
      <result property="apellidoPaterno" 	      column="VAL_APE1"/>
      <result property="apellidoMaterno" 	      column="VAL_APE2"/>
      <result property="codigoRegion" 	          column="COD_REGI"/>
      <result property="codigoZona" 	          column="COD_ZONA"/>
      <result property="codigoSeccion" 	          column="COD_SECC"/>
      <result property="campannaIngreso" 	      column="CAMP_INI_CCC"/>
      <result property="indicadorConstancia" 	  column="IND_CONS"/>
      <result property="estadoEntregaKit" 	      column="EST_ENTR_KITT"/>       
   </resultMap>
	
	 <select id="getConsultaSOAProgramaNuevas" parameterClass="java.util.Map" resultMap="consultaSOAProgramaNuevasResult">
		select 
		   nv.cod_cons,
	       mc.val_nom1,
	       mc.val_ape1,
	       mc.val_ape2,
	       I.COD_REGI,
	       H.COD_ZONA,
	       G.COD_SECC,
	       nv.camp_ini_ccc,
	       decode(fc.ind_cons, 0, 'SI', 'NO') IND_CONS,
	       'SI' EST_ENTR_KITT
	  from cup_consu_nueva nv, mae_clien mc, cup_consu_factu fc,
	       MAE_CLIEN_UNIDA_ADMIN D,
	       ZON_TERRI_ADMIN E,
	       ZON_TERRI F,
	       ZON_SECCI G,
	       ZON_ZONA  H,
	       ZON_REGIO I
	
	 where nv.cod_prog = #codigoPrograma#
	   and nv.cod_cons = mc.cod_clie
	   and nv.cod_cons = fc.cod_cons
	   and nv.cod_prog = fc.cod_prog
	   AND MC.OID_CLIE = D.CLIE_OID_CLIE
	   AND E.OID_TERR_ADMI = D.ZTAD_OID_TERR_ADMI 
	   AND D.IND_ACTI = '1'
	   AND F.OID_TERR = E.TERR_OID_TERR
	   AND G.OID_SECC = E.ZSCC_OID_SECC
	   AND H.OID_ZONA = G.ZZON_OID_ZONA
	   AND I.OID_REGI = H.ZORG_OID_REGI
	   AND I.COD_REGI = #codigoRegion#
	   AND H.COD_ZONA = #codigoZona#	
	   ORDER BY I.COD_REGI, H.COD_ZONA, G.COD_SECC, nv.cod_cons
	</select>
    
    
    <resultMap id="consultaSOAIncentivosResult" class="java.util.HashMap">
      <result property="codigoCliente" 	          column="COD_CLIE"/>
      <result property="nombre"                   column="VAL_NOM1"/>
      <result property="apellidoPaterno" 	      column="VAL_APE1"/>
      <result property="apellidoMaterno" 	      column="VAL_APE2"/>
      <result property="codigoRegion" 	          column="COD_REGI"/>
      <result property="codigoZona" 	          column="COD_ZONA"/>
      <result property="codigoSeccion" 	          column="COD_SECC"/>
      <result property="puntajeUltimaCampanna" 	  column="PUNTAJE"/>
      <result property="puntajeAdicionalUltimaCampanna" 	      column="PTJE_ADIC"/>
      <result property="puntajeAcumulado" 	      column="PTJE_ACUM"/>
      <result property="nivelActual" 	          column="NUM_NIVE"/>
      <result property="numeroRotacion" 	      column="NUM_ROTA"/>
      <result property="cantidadInicialPuntaje"   column="NUM_CANT_INIC_PUNT"/>       
      <result property="cantidadFinalPuntaje" 	  column="NUM_CANT_FINA_PUNT"/>
      <result property="cantidadPremios" 	      column="NUM_PREM"/>       
   </resultMap>
	
	 <select id="getConsultaSOAIncentivos" parameterClass="java.util.Map" resultMap="consultaSOAIncentivosResult">
		SELECT DISTINCT cli.cod_clie,
	       cli.val_nom1,
	       cli.val_ape1,
	       cli.val_ape2,
	       I.COD_REGI,
	       H.COD_ZONA,
	       secc.cod_secc,
	       (SELECT SUM(cta.num_punt)
	          FROM inc_cuent_corri_punto cta
	         WHERE cta.copa_oid_para_gral = copa.oid_para_gral
	           AND cta.clie_oid_clie = canga.clie_oid_clie
	           AND cta.perd_oid_peri = copa.perd_oid_peri_hast) AS PUNTAJE,
	       (SELECT SUM(cta.num_punt)
	          FROM inc_cuent_corri_punto cta
	         WHERE cta.tmov_oid_tipo_movi = 1
	           AND (cta.val_desc LIKE 'PUNTOS_POR_VENTA_ECM%' OR
	               cta.val_desc LIKE 'Puntos por Venta Retail%')
	           AND cta.copa_oid_para_gral = copa.oid_para_gral
	           AND cta.clie_oid_clie = canga.clie_oid_clie
	           AND cta.perd_oid_peri = copa.perd_oid_peri_hast) AS PTJE_ADIC,
	      <![CDATA[	     
	       (SELECT SUM(cta.num_punt)
	          FROM inc_cuent_corri_punto cta
	         WHERE cta.copa_oid_para_gral = copa.oid_para_gral
	           AND cta.clie_oid_clie = canga.clie_oid_clie
	           AND cta.val_desc <> 'Entrega de Premio') AS PTJE_ACUM,
	      ]]>     
	       pgp.num_nive,
	       pgp.num_rota,
	       pnp.num_cant_inic_punt,
	       pnp.num_cant_fina_punt,
	       (SELECT count(IAL.Oid_Arti_Lote)
	          FROM INC_PARAM_GENER_PREMI IPGP,
	               INC_PARAM_NIVEL_PREMI IPNP,
	               INC_PREMI_ARTIC       IPA,
	               INC_LOTE_PREMI_ARTIC  ILPA,
	               INC_ARTIC_LOTE        IAL
	         WHERE IPGP.COPA_OID_PARA_GRAL = copa.oid_para_gral
	           AND IPGP.OID_PARA_GENE_PREM = IPNP.PAGP_OID_PARA_GENE_PREM
	           AND IPNP.OID_PARA_NIVE_PREM = IPA.PANP_OID_PARA_NIVE_PREM
	           AND IPA.OID_PREM_ARTI = ILPA.PRAR_OID_PREM_ARTI
	           AND ILPA.OID_LOTE_PREM_ARTI = IAL.LOPA_OID_LOTE_PREM_ARTI) AS NUM_PREM
	  FROM inc_concu_param_gener copa,
	       inc_versi_concu       versi,
	       inc_candi_ganad       canga,
	       mae_clien             cli,
	       mae_clien_unida_admin uadm,
	       zon_terri_admin       adm,
	       zon_secci             secc,
	       ZON_TERRI F,
	       ZON_ZONA  H,
	       ZON_REGIO I,
	       inc_param_gener_premi pgp,
	       inc_param_nivel_premi pnp
	 WHERE copa.OID_PARA_GRAL = #oidConcurso#
	   AND copa.ind_acti = 1
	   AND uadm.ind_acti = 1
	   AND versi.vico_oid_vige_conc = 1
	   AND versi.esc2_oid_esta_conc = 2
	   AND copa.oid_para_gral = versi.copa_oid_para_gral
	   AND copa.oid_para_gral = canga.copa_oid_para_gral
	   AND canga.clie_oid_clie = cli.oid_clie
	   AND cli.oid_clie = uadm.clie_oid_clie
	   AND uadm.ztad_oid_terr_admi = adm.oid_terr_admi
	   AND adm.zscc_oid_secc = secc.oid_secc
	   AND F.OID_TERR = adm.TERR_OID_TERR
	   AND H.OID_ZONA = secc.ZZON_OID_ZONA
	   AND I.OID_REGI = H.ZORG_OID_REGI
	   AND uadm.IND_ACTI = '1'
	   AND pgp.copa_oid_para_gral = copa.oid_para_gral
	   AND pgp.oid_para_gene_prem = pnp.pagp_oid_para_gene_prem
	   AND I.COD_REGI = #codigoRegion#
	   AND H.COD_ZONA = #codigoZona#	   
	   ORDER BY I.COD_REGI, H.COD_ZONA, SECC.COD_SECC, cli.cod_clie
	</select>
    
    <select id="getDevuelveOidConcurso" parameterClass="java.util.Map" resultClass="long">
	  SELECT copa.OID_PARA_GRAL
	  FROM inc_concu_param_gener copa
	 WHERE copa.num_conc = #codigoIncentivo#
	</select>
	
    <select id="existenDespachoConIndicadorKitSegundoPedido" resultClass="string" parameterClass="java.util.Map">
		 SELECT COUNT (1)
		  FROM cup_desp_prod desp, CUP_PROG_NUEVA_CUPON cupon 
		 WHERE desp.cod_nivel = '02'
		   AND desp.cod_prog = #codigoPrograma#
		   AND desp.cod_peri = #codigoPeriodo#
		   AND desp.ind_prod_kit = '2'
		   AND cupon.COD_PROG = desp.COD_PROG
		   and cupon.IND_PROG_OBLI = '1'
		   and desp.COD_PAIS = #codigoPais#
    </select>
    
    <select id="validaProductosKitSegundoPedido" resultClass="integer" parameterClass="java.util.Map">
    	SELECT COUNT(1) FROM CUP_DESP_PROD
			WHERE COD_PAIS = #codigoPais#
			AND COD_PROG = #codigoPrograma#
			AND COD_PERI = #codigoPeriodo#
		<isNull property="difCodigoVenta" prepend="AND"> COD_VENTA = #codigoVenta#</isNull>
		<isNotNull property="difCodigoVenta" prepend="AND">
			<![CDATA[ COD_VENTA <> #codigoVenta#]]>
		</isNotNull>	
			AND COD_NIVEL = '02'
			AND IND_PROD_KIT = '2'

    </select>
    
    <select id="getTipoPedidoCUP" resultMap="baseResult">
  		SELECT COD_ORIG CODIGO,
		       DES_ORIG DESCRIPCION
		  FROM STO_ORIGE_DOCUM
		 WHERE COD_TIPO_DOCU = 'OCC'
		 ORDER BY 1
    </select>
    
    <parameterMap id="executeValidacionRegistroMetaParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoConsultora"	         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoError"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
    <procedure id="executeValidacionRegistroMeta" parameterMap="executeValidacionRegistroMetaParams">
    	{call cup_pkg_prog_nuevas.cup_pr_valida_regis_metas(?,?,?)}
    </procedure>
    
    <select id="getPedidoCuponExistenteByCriteria" parameterClass="java.util.Map" resultClass="string">
		select U.Nom_Usua || ' ' || U.Ape_Usua ||'|'|| to_char(a.FEC_PROC,'dd/MM/yyyy - dd:mi:ss')||'|'||trim(to_char(a.IMP_VALO, '999999999.99'))
		from int_solic_conso_cupon_pago a , STO_DOCUM_DIGIT B, SEG_USUAR U
		where a.cod_clie = #codigoConsultora# and
      		  a.COD_PAIS = #codigoPais# and
      		  b.COD_TIPO_DOCU = #tipoDocumento# and
      		  trunc(a.fec_proc) = TO_DATE(#fechaFacturacion#, 'DD/MM/YYYY') and
      		  a.imp_valo = TO_NUMBER(#valorPagado#,'9999999999.00') and
      		  b.SEC_NUME_DOCU =  a.SEC_NUME_DOCU and
      		  b.NUM_LOTE = a.NUM_LOTE and
      		  b.COD_PAIS = a.COD_PAIS and
      		  U.Use_Usua = b.usu_digi
	</select>
	
    <resultMap id="getProgramaNivelMapResult" class="java.util.HashMap">
      <result property="codigoPais" 		column="COD_PAIS"/>
      <result property="codigoPrograma"     column="COD_PROG"/>
      <result property="codigoNivel" 	    column="COD_NIVE"/>
      <result property="vigencia" 	      	column="NUM_VIGE"/>
   </resultMap>
	
	<select id="getProgramaNivel" parameterClass="java.util.Map" resultMap="getProgramaNivelMapResult">
		SELECT
		COD_PAIS, 
		COD_PROG, 
		COD_NIVE, 
		NUM_VIGE 
		FROM NVS_PROGR_NIVEL
		WHERE COD_PAIS = #codigoPais#
		AND COD_PROG = #codigoPrograma#
		AND COD_NIVE = #nivel#
		AND EST_REGI = '1'
	</select>
	
	<insert id="insertProgramaNivel" parameterClass="map">
		INSERT INTO NVS_PROGR_NIVEL(
			COD_PAIS,
			COD_PROG,
			COD_NIVE,
			NUM_VIGE,
			USU_CREA,
			FEC_CREA,
			EST_REGI)
		VALUES(
			#codigoPais#,
			#codigoPrograma#,
			#nivel#,
			#numVigencia#,
			#loginUsuario#,
			SYSDATE,
			'1')
	</insert>
	
	<update id="updateProgramaNivel" parameterClass="map">
		UPDATE NVS_PROGR_NIVEL
		SET NUM_VIGE = #numVigencia#,
		USU_MODI = #loginUsuario#,
		FEC_MODI = SYSDATE
		WHERE COD_PAIS = #codigoPais#
		AND COD_PROG = #codigoPrograma#
		AND COD_NIVE = #nivel#
	</update>
	
  	<resultMap id="cuponLoveDefaultMapResult" class="java.util.HashMap">      
	    <result property="codigoPais"				column="COD_PAIS"/>        
	    <result property="codigoPeriodo" 			column="COD_PERI"/> 
	    <result property="codigoCupon"				column="COD_CUPO"/>        
	    <result property="codigoTipoClasificacion"	column="COD_TIPO_CLAS"/>        
	    <result property="codigoNivel"				column="COD_NIVEL"/>        
	    <result property="codigoPrograma"			column="COD_PROG"/>        
  	</resultMap>
	<select id="getCuponLoveDefault" parameterClass="equivalenciaMatriz" resultMap="cuponLoveDefaultMapResult">
		SELECT
			COD_PAIS, 
		    COD_PERI, 
		    COD_CUPO, 
		    COD_TIPO_CLAS, 
		    COD_NIVEL,
		    COD_PROG
		FROM LOV_CUPON_DEFEC
		WHERE COD_PAIS = #codigoPais# 
		AND COD_PERI = #codigoPeriodo#
		AND COD_CUPO = #codigoCupon#
		AND COD_TIPO_CLAS = '01'
		AND COD_NIVEL = #codigoNivel#
		AND COD_PROG = #codigoPrograma#		
	</select>
	
	<select id="getIndicadorCuponReutilizable" parameterClass="java.util.Map" resultClass="string">
		select ind_cupo_reut
		  from CUP_PROG_NUEVA_CUPON
		 where cod_pais = #codigoPais#
		   and cod_prog = #codigoPrograma#
 	</select>		
</sqlMap>