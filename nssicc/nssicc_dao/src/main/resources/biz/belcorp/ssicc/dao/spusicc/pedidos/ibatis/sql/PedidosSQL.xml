<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="spusicc.pedidos.PedidosSQL">
 
  <typeAlias alias="pedidoAnuladoFacturado" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.PedidoAnuladoFacturado"/>
  <typeAlias alias="pedidoControlFacturacion" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.PedidoControlFacturacion"/>
  <typeAlias alias="solicConsolidadoCabecera" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.SolicitudConsolidadoCabecera"/>
  <typeAlias alias="productoAgregacion" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.ProductoAgregacion"/>
  <typeAlias alias="consultoraPedidoCabecera" type="biz.belcorp.ssicc.dao.model.LabelDatosConsultoraValue" />
  <typeAlias alias="cabeceraConsultora" type="biz.belcorp.ssicc.dao.model.LabelDatosConsultoraValue"/>
  <typeAlias alias="detallePedidosConsultora" type="biz.belcorp.ssicc.dao.model.LabelPedidosValue"/>
  <typeAlias alias="solicitudesZona" type="biz.belcorp.ssicc.dao.model.LabelSolicitudesCreditoValue"/>
  <typeAlias alias="detallePedidosActualizacion" type="biz.belcorp.ssicc.dao.model.LabelPedidosConsoDetalValue"/>
  <typeAlias alias="detalladoAptas" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.DetalladoAptas"/>

  <typeAlias alias="plantilla" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.Plantilla"/>
   <typeAlias alias="recepcionPedido" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.RecepcionPedido"/>
   <typeAlias alias="detallePedido" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.DetallePedido"/>
    <typeAlias alias="preAlternativosAutomaticos" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.PreAlternativosAutomaticos"/>
  <typeAlias alias="preProductosICE" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.PreProductosICE"/>
  <typeAlias alias="origenChequeo" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.OrigenChequeo"/>
  <typeAlias alias="tipoChequeo" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.TipoChequeo"/>
  <typeAlias alias="resultadoChequeo" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.ResultadoChequeo"/>
  <typeAlias alias="clasificacionesChequeo" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.ClasificacionesChequeo"/>
  <typeAlias alias="baseGenericoOID"  type="biz.belcorp.ssicc.dao.sisicc.model.BaseOID"/>
  <typeAlias alias="montoMinimo" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.MontoMinimo"/>
  <typeAlias alias="flete" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.Flete"/>
  <typeAlias alias="fleteDet" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.FleteDetalle"/>
  <typeAlias alias="gestionStock" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.GestionStock"/>
  <typeAlias alias="detalleCuvExistencia" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.DetalleCuvExistencia"/>
  <typeAlias alias="carParamCarte" 	type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.CarParamCarte" />
  <typeAlias alias="carAsignCodigConfi"	type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.CarAsignCodigConfi" />
  <typeAlias alias="matrizFacturacion"	type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.MatrizFacturacion" />
  <typeAlias alias="oferta"	type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.Oferta" />
  <typeAlias alias="grupoOferta" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.GrupoOferta" />
  <typeAlias alias="detalleOfertaType" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.DetalleOferta" />
  <typeAlias alias="condicionOferta" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.CondicionOferta" />
  <typeAlias alias="rangoPromocion" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.RangoPromocion" />    
     
  <resultMap id="listaCUVsResult" class="detallePedidosConsultora">                            
    <result property="codigoVta"      		column="COD_VENT" />                              
    <result property="descripcion"   		column="DES_PROD" /> 
    <result property="precioCat"   		    column="VAL_PREC_PROD" />          
  </resultMap>


  <resultMap id="consultoraCabeceraSimpleResult" class="consultoraPedidoCabecera">	 
	<result property="nombreConsultora"           column="NOM_CLI" />       
	<result property="region"                     column="DES_REGI" />             
	<result property="zona"                       column="DES_ZONA" />
    <result property="indicadorActiva"            column="INDICADOR_ACTIVA" />
	<result property="estadoConsultora"           column="ESTADO_CONSULTORA" />
	<result property="indicadorBloqueo"           column="INDICADOR_BLOQUEO" />           	
  </resultMap> 

 <resultMap id="detallePedidosValidacionResult" class="detallePedidosConsultora">                            
    <result property="unidades"      		column="VAL_UNID_DEM" />                              
    <result property="indicadorOCS"   		column="IND_OCS_DETAL" />           
  </resultMap>

  <resultMap id="detalladoAptasResult" class="detalladoAptas">
  	<result property="codigoCliente"      column="COD_CLIE"/>
	<result property="nombreCliente"      column="NOM_CLIE"/>
	<result property="codigoRegion"	      column="COD_REGI"/>
	<result property="descripcionRegion"  column="DES_REGI"/>
	<result property="codigoZona"         column="COD_ZONA"/>
	<result property="descripcionZona"    column="DES_ZONA"/>
	<result property="codigoPais"         column="COD_PAIS"/>
	<result property="codigoPeriodo"      column="COD_PERI"/>
	<result property="tipoSolicitud"      column="TIPO_SOLI"/>
	<result property="fechaSolicitud"     column="FEC_SOLI"/>
  </resultMap>    

  <resultMap id="consultoraPedidoCabeceraResult" class="consultoraPedidoCabecera">
	<result property="codigoConsultora"       		 column="COD_CLIE" />    
	<result property="nombreConsultora"                       column="NOM_CLI" />    
	<result property="codRegion"                       column="COD_REGI" />          
	<result property="region"                       column="DES_REGI" />             
	<result property="codZona"                       column="COD_ZONA" />            
	<result property="zona"                       column="DES_ZONA" />               
	<result property="primerPedido"                       column="CAM_PRIM" />       
	<result property="telefono"                       column="NUM_TEL" />            
	<result property="ultimoPedido"                       column="CAMP_ULT" />       
	<result property="estatus"                       column="COD_EST" />     
  </resultMap> 

  <resultMap id="consultoraDatosTipoResult" class="consultoraPedidoCabecera">
	<result property="codigoConsultora"       		 column="COD_CLIE" />    
	<result property="nombreConsultora"              column="NOM_CLI" />             
	<result property="region"                        column="DES_REGI" />             
	<result property="zona"                          column="DES_ZONA" />               
	<result property="estatus"                       column="COD_EST" />     
	<result property="indicador"                     column="IND" />     
  </resultMap>                                                                      

  <resultMap id="productoAgregacionResult" class="productoAgregacion">       
    <result property="id"					column="ID"/> 
    <result property="codigoPais"              	column="COD_PAIS" />         
    <result property="codigoPeriodo"           	column="COD_PERI" />         
    <result property="codigoVenta"             	column="COD_VENT" />         
    <result property="valorUnitario"           	column="VAL_UNIT" />         
    <result property="descripcionProducto"     	column="DES_PROD"  />        
    <result property="codigoProducto"          	column="COD_PROD" />         
    <result property="nivelPriorizacion"       	column="NIV_PRIOR"  />        
    <result property="estadoRegistro"          	column="STA_REG"	   />
    <result property="auditInfo.createdBy" 	column="USU_DIGI"		/>       
    <result property="auditInfo.created" 	column="FEC_DIGI"	/>       
    <result property="auditInfo.updatedBy" 	column="USU_MODI"	/>       
    <result property="auditInfo.lastUpdated" 	column="FEC_MODI"	/>   
  </resultMap>        

  <resultMap id="detalleProductoResult" class="productoAgregacion">                    
    <result property="codigoVenta"             	column="COD_VENT" />                  
    <result property="descripcionProducto"     	column="DES_PROD"  />   
    <result property="valorUnitario"           	column="VAL_PREC_PROD" />                
  </resultMap>                                                            

  <resultMap id="pedidoControlFacturacionResult" class="pedidoControlFacturacion">       
    <result property="id"					column="ID"												/> 
    <result property="codigoPais"			column="COD_PAIS"            			/> 
    <result property="codigoPeriodo"		column="COD_PERI"            			/> 
    <result property="fechaProceso"			column="FEC_PROC"             				/> 
    <result property="montoMinimoFact"		column="VAL_MNT_MIN_FACT"     	/> 
    <result property="montoMinimoAcept" 	column="VAL_MNT_MIN_ACEPT" /> 
    <result property="montoMinimoDeuda" 	column="VAL_MNT_MIN_DEUD" /> 
    <result property="montoMaximo"			column="VAL_MNT_MAX"          				/> 
    <result property="unidadesMaximo"		column="VAL_UNID_MAX"         			/> 
    <result property="estadoCampanha"		column="STA_CAMP"             /> 
    <result property="codigoMarca"				column="COD_MARC"             	/> 
    <result property="descripcionMarca"			column="DES_MARC"           /> 
    <result property="codigoCanal"				column="COD_CANA"             	/> 
    <result property="descripcionCanal"			column="DES_CANA"           /> 
    <result property="auditInfo.createdBy" 	column="USU_DIGI"		/>       
    <result property="auditInfo.created" 	column="FEC_DIGI"	/>       
    <result property="auditInfo.updatedBy" 	column="USU_MODI"	/>       
    <result property="auditInfo.lastUpdated" 	column="FEC_MODI"	/>   
	<result property="numeroLote" 	column="NUM_LOTE"	/>   
	<result property="campaniaActiva" 	column="IND_CAMP_ACT"	/>
	
	
  </resultMap>                 

  <resultMap id="envioConsolidadoCabecResult" class="java.util.HashMap">                     
    <result property="fecharecepcion"		 			column="FECREC" 		/>  
    <result property="pedidos" 				column="PEDIDOS"/>
    <result property="descRegion"					column="DESCREG"				/>  
    <result property="descZona" 				column="DESZONA" 		/>      
    <result property="codigoPais" 				column="CODPAIS" />
    <result property="codigoPeriodo" 		 			column="CODPERI"		/>  
    <result property="territorio" 		 			column="CODTERR"		/>  
  </resultMap> 

  <resultMap id="pedidoFacturadoAnuladoResult" class="pedidoAnuladoFacturado">                  
    <result property="codigoPais"		 	column="COD_PAIS"	/>         
    <result property="codigoPeriodo" 				column="COD_PERI"	/> 
    <result property="codigoCliente"			column="COD_CLIE"	/>         
    <result property="nombreCliente"			column="NOM_CLIE"	/>         
    <result property="numeroLote" 			column="NUM_LOTE"	/>         
    <result property="fechaFacturacion" 			column="FEC_FACT"	/> 
    <result property="numeroBoleta" 		 	column="VAL_NUME_SOLI"	/>         
    <result property="fechaAnulacion" 		 	column="FEC_ANUL"	/>         
    <result property="indicadorAnulacion"		        column="IND_ANUL"	/> 
    <result property="auditInfo.createdBy" 	column="USU_DIGI"		/>         
    <result property="auditInfo.created" 	column="FEC_DIGI"	/>                 
    <result property="auditInfo.updatedBy" 	column="USU_MODI"	/>                 
    <result property="auditInfo.lastUpdated" 	column="FEC_MODI"	/>                 
  </resultMap>   

  <resultMap id="consultorasInactivasResult" class="java.util.HashMap">                     
    <result property="fecharecepcion"		 			column="FECREC" 		/>  
    <result property="codigoPais" 				column="CODPAIS" />
    <result property="codigoPeriodo" 		 			column="CODPERI"		/>  
    <result property="descZona" 		 			column="DESZONA"		/>  
    <result property="territorio" 		 			column="CODTERR"		/>  
    <result property="tipoCliente" 		 			column="TIPOCLIENTE"		/>  
    <result property="subTipoCliente" 		 			column="SUBTIPOCLIENTE"		/>  
    <result property="documento" 		 			column="NUMDOC"		/>  
    <result property="descUnidadGeo" 		 			column="UNIDADGEO"		/>  
    <result property="direccion" 		 			column="DIRECCION"		/>  
    <result property="observaciones" 		 			column="OBSERVACIONES"		/>  
    <result property="nombreCliente" 		 			column="CLIENTE"		/>  
    <result property="codigoCliente" 		 			column="CODCLIENTE"		/>  
  </resultMap> 

  <resultMap id="solicConsolidadoCabeceraResult" class="solicConsolidadoCabecera">                      
    <result property="id"															column="ID"			/>                                
    <result property="codigoPais"			column="COD_PAIS"            			/> 
    <result property="codigoPeriodo"									column="COD_PERI"			/>                          
    <result property="codigoCliente"									column="COD_CLIE"			/>                          
    <result property="fechaSolicitud"									column="FEC_SOLI"			/>                          
    <result property="numeroClientes"									column="NUM_CLIE"			/>                          
    <result property="tipoSolicitud" 									column="TIPO_SOLI"			/>                        
    <result property="subAcceso"											column="COD_SBAC"			/>                          
    <result property="acceso"													column="COD_ACCE"			/>                          
    <result property="tipoDespacho"										column="TIP_DESP"			/>                          
    <result property="estadoProceso"									column="STA_PROC"			/>                          
    <result property="nombreCliente"									column="NOM_CLIE"			/>                          
    <result property="codigoRegion"										column="COD_REGI"			/>                          
    <result property="descripcionRegion"							column="DES_REGI"			/>                          
    <result property="codigoZona" 										column="COD_ZONA"			/>                          
    <result property="descripcionZona" 								column="DES_ZONA"			/>                          
    <result property="codigoTerritorio" 							column="COD_TERR"			/>                          
    <result property="tipoOrden" 											column="TIP_ORDE"			/>                          
    <result property="valorMontoPedido"												column="VAL_MONT_PEDI"	/>                
    <result property="valorSaldoDeudor"												column="VAL_SALD_DEUD"	/>                
    <result property="indErrorRechazada"											column="IND_ERRO_RECH"	/>                
    <result property="indErrorDeuda"													column="IND_ERRO_DEUD"	/>                
    <result property="indErrorMontoMinimo"										column="IND_ERRO_MTMI"	/>                
    <result property="indErrorMontoMaximo" 										column="IND_ERRO_MTMA"	/>                
    <result property="indErrorUnidadMaximo"										column="IND_ERRO_UNMA"	/>                
    <result property="indErrorSegundoPedido"									column="IND_ERROR_SGPE"/>                 
    <result property="indErrorCabecSinDetalle"								column="IND_ERRO_NODE"	/>                
    <result property="indErrorOCSProcesada"										column="IND_OCS_PROC"	/>                  
    <result property="indErrorOCSBloqueoAdmin"								column="IND_BLOQ_ADMI"	/>                
    <result property="indErrorOCSBloqueada"										column="IND_OCS_BLOQ"	/>                  
    <result property="indErrorAdminCartera"										column="IND_ADMI_CART"	/>                
    <result property="indErrorOCSBloqueoFinanciero" 					column="IND_BLOQ_FINA"	/>                
    <result property="indErrorCompMontoMin" 										column="IND_COMP_MONT"	/>              
    <result property="auditInfo.createdBy" 											column="USU_DIGI"	    />                
    <result property="auditInfo.created" 												column="FEC_DIGI"	    />                
    <result property="auditInfo.updatedBy" 											column="USU_MODI"	    />                
    <result property="auditInfo.lastUpdated"										column="FEC_MODI"	    />                
    <result property="codigoMarca"															column="COD_MARC"	    />                
    <result property="descripcionMarca" 												column="DES_MARC"	    />                
    <result property="codigoCanal" 															column="COD_CANA"	    />                
    <result property="descripcionCanal" 												column="DES_CANA"	    />                
    <result property="observaciones" 												column="OBS_PRUB"	    />   
    <result property="numeroLote" 												column="NUM_LOTE"	    />               
  </resultMap>    

  <resultMap id="pedidosResult"              class="java.util.HashMap">                      
	<result property="codigoPais"			                column="COD_PAIS"     /> 
    <result property="codigoPeriodo"						column="COD_PERI"	/>                          
    <result property="codigoCliente"						column="COD_CLIE"	/>                                                      
    <result property="nombreCliente"						column="NOM_CLIE"	/>                          
    <result property="numeroLote"						    column="NUM_LOTE"	/>                          	
    <result property="fechaSolicitud"						column="FEC_SOLI"	/>      
    <result property="codigoRegion"							column="COD_REGI"	/>                          
    <result property="descripcionRegion"					column="DES_REGI"	/>                          
    <result property="codigoZona" 							column="COD_ZONA"	/>                          
    <result property="descripcionZona" 						column="DES_ZONA"	/>                          
    <result property="indErrorRechazada"					column="IND_ERRO_RECH"	/>                    
    <result property="indErrorOCSProcesada"					column="IND_OCS_PROC"	/>                  
    <result property="indErrorProcGp2"						column="IND_PROC_GP2"	/>
    <result property="indErrorProcAnul"						column="IND_ANUL"	/>    
  </resultMap> 

  <resultMap id="pedidosAEliminarResult"              class="java.util.HashMap">                      
	<result property="codigoPais"			                column="COD_PAIS"     /> 
    <result property="codigoPeriodo"						column="COD_PERI"	/>                          
    <result property="codigoCliente"						column="COD_CLIE"	/>                                                      
    <result property="nombreCliente"						column="NOM_CLIE"	/>                          
    <result property="numeroLote"						    column="NUM_LOTE"	/>                          	
    <result property="fechaSolicitud"						column="FEC_SOLI"	/>      
    <result property="fechaFacturacion"						column="FEC_PROG_FACT"	/>      
    <result property="codigoRegion"							column="COD_REGI"	/>                          
    <result property="descripcionRegion"					column="DES_REGI"	/>                          
    <result property="codigoZona" 							column="COD_ZONA"	/>                          
    <result property="descripcionZona" 						column="DES_ZONA"	/>                          
    <result property="indErrorRechazada"					column="IND_ERRO_RECH"	/>                    
    <result property="indErrorOCSProcesada"					column="IND_OCS_PROC"	/>                  
    <result property="indErrorProcGp2"						column="IND_PROC_GP2"	/>
  </resultMap>                                                                                         

  <resultMap id="listadoVerificacionResult" class="java.util.HashMap">                     
    <result property="digitador"		 	column="USUARIO" 		/>  
    <result property="numeroIngresadas" 	column="NUM_INGRESADAS" />
    <result property="numeroVerificadas" 	column="NUM_VERIFICADAS"/>  
  </resultMap>  

  <resultMap id="reporteIngresadasVerificadasResult" class="java.util.HashMap">                     
    <result property="codigoCliente"		column="COD_CLIE" 		/>  
    <result property="nombreCliente" 	    column="NOM_CLIE" />
    <result property="region" 				column="DES_REGI"/>  
	<result property="zona"		 			column="DES_ZONA" 		/>  
    <result property="numeroLote" 			column="NUM_LOTE" />
    <result property="montoPedido" 			column="VAL_MONT_PEDI"/>  
    <result property="codigoPeriodo"    	column="COD_PERI"/>
  </resultMap> 	

  <resultMap id="listadoDetallesPedidoResult" class="java.util.HashMap">                     
    <result property="codigoVenta"			column="COD_VENT"/>  
    <result property="descripcion" 	    	column="DES_PROD"/>
    <result property="precioCatalogo" 		column="VAL_PREC_CATA"/>  
    <result property="numeroUnidades" 		column="VAL_UNID_DEM"/>
	<result property="indicadorVerificado" 	column="IND_ESTA"/>
  </resultMap> 		


    <resultMap id="baseResult"          class="baseGenerico">
    	<result property="codigo" 		column="CODIGO" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
    
 <resultMap id="plantillaResult" class="plantilla">                  
    <result property="codigoPlantilla"		 	 column="COD_PLAN_MONI"	/>         
    <result property="descripcionPlantilla" 	 column="VAL_I18N"	/> 
    <result property="codigoZona"			     column="COD_ZONA"	/>         
    <result property="numeroSecuencia"			 column="NUM_SECU"	/>         
    <result property="grupoProceso" 			 column="GRPR_OID_GRUP_PROC"	/>               
  </resultMap>	
    
   <resultMap id="recepcionPedidoResult" class="recepcionPedido">                  
		    <result property="codigoCliente"		 	 column="COD_CLIE"	/>         
		    <result property="numeroLote" 	 			 column="NUM_LOTE"	/> 
		    <result property="nombreCliente"			 column="NOM_CLIE"	/>         
		    <result property="descripcionRegion"		 column="DES_REGI"	/>         
		    <result property="descripcionZona" 			 column="DES_ZONA"	/>    
		    <result property="codigoTerritorio"		 	 column="COD_TERR"	/>         
		    <result property="fechaSolicitud" 	 	     column="FEC_SOLI"	/> 
		    <result property="facturado"			     column="FACTURADO"	/>         
		    <result property="fechaFacturacion"			 column="FEC_FACT"	/>         
		    <result property="rechazoOCR" 			 	 column="RECHAZO_OCR"	/>   
		    <result property="bloqueoControl"		 	 column="BLOQUEO_CONTROL"	/>         
		    <result property="bloqueoDeuda" 	 		 column="BLOQUEO_DEUDA"	/> 
		    <result property="deuda"			     	 column="SALDO"	/>         
		    <result property="levantamiento"			 column="LEVANTAMIENTO"	/>         
		    <result property="bloqueoMontoMaximo" 		 column="BLOQUEO_MTO_MAX"	/>    
		    <result property="bloqueoMontoMinimo"		 column="BLOOQUEO_MTO_MIN"	/>         
		    <result property="montoPedido" 	 			 column="MONTO_PEDIDO"	/> 
		    <result property="recepcionDirecta"			 column="RECEP_DD"	/>         
		    <result property="recepcionWeb"			 	 column="RECEP_WEB"	/>         
		    <result property="recepcionOCR" 			 column="RECEP_OCR"	/>       
		    <result property="codigoPeriodo"			 column="COD_PERI"	/>         
		    <result property="tipoConsulta" 			 column="TIP_CONS"	/>
		    <result property="descripcionSeccion" 		 column="DES_SECC"	/>   
		    <result property="fechaRecepcion" 			 column="FEC_DIGI"	/>         
  </resultMap>	
    
     <resultMap id="detallePedidoResult" class="detallePedido">                  
		    <result property="codigoCliente"		 	 column="COD_CLIE"	/>         
		    <result property="numeroLote" 	 			 column="NUM_LOTE"	/> 
		    <result property="codigoVenta"			 	 column="COD_VENT"	/>         
		    <result property="numeroUnidades"		     column="NUM_UNID_DEMA"	/>         
		    <result property="indRecepDD" 			     column="IND_RECE_DD"	/>    
		    <result property="indRecepWEB"		 	     column="IND_RECE_WEB"	/>         
		    <result property="indRecepOCR" 	 	         column="IND_RECE_OCR"	/>    
  </resultMap>	

   <resultMap id="preAlternativosAutomaticosResult" class="preAlternativosAutomaticos">                         
		    <result property="codigoSAPPrincipal" 	 			 column="COD_SAP_PPAL"	/> 
		    <result property="codigoSAPAlternativo"			 	 column="COD_SAP_ALTE"	/>         
  </resultMap>	
  
  
   <resultMap id="preProductosICEResult" class="preProductosICE">                  
		    <result property="oidImpuesto"		 	 column="OID_IMPU_PROD_NACI"	/>         
		    <result property="codigoSAP" 	 			 column="COD_SAP"	/> 
		    <result property="oidProducto"			 	 column="PROD_OID_PROD"	/>   
		    <result property="valorImpuesto" 	 			 column="VAL_IMPU_PROD_NACI"	/> 
		    <result property="fechaCarga"			 	 column="FEC_CARG"	/>         
  </resultMap>
  
  <resultMap id="origenChequeoResult" class="origenChequeo">
  			<result property="codigoPais"               column="COD_PAIS"/>
  			<result property="codigoOrigenChequeo"      column="COD_ORIG_CHEQ"/>
  			<result property="descripcionOrigenChequeo" column="DES_ORIG_CHEQ"/>
  			<result property="secuenciaEvaluacion"      column="SEC_EVAL"/>
  			<result property="nombreProcesoEjecutar"    column="NOM_PROC_EJEC"/>
  </resultMap>
  
  <resultMap id="tipoChequeoResult" class="tipoChequeo">
  			<result property="codigoPais"                       column="COD_PAIS"/>
  			<result property="codigoTipoChequeo"                column="COD_TIPO_CHEQ"/>
  			<result property="descripcionTipoChequeo"           column="DES_TIPO_CHEQ"/>
  			<result property="indicadorConsultorasReincidentes" column="IND_CONS_REIN"/>
  			<result property="numeroDiasAtrasFaltantes"         column="NUM_DIAS_ATRA_EVAL"/>
  			<result property="minumoReclamosFaltante"           column="MIN_RECL_FALT"/>
  			<result property="minimoIndicadorNuevas"            column="IND_NUEV"/>
  </resultMap>
  
  <resultMap id="resultadoChequeoResult" class="resultadoChequeo">
  			<result property="codigoPais" column="COD_PAIS"/>
  			<result property="codigoResultadoChequeo" column="COD_RESU_CHEQ"/>
  			<result property="descripcionResultadoChequeo" column="DES_RESU_CHEQ"/>
  </resultMap>
  
  <resultMap id="clasificacionesChequeoResult" class="clasificacionesChequeo">
  			<result property="codigoPais"           column="COD_PAIS"/>
  			<result property="codigoTipoChequeo"    column="COD_TIPO_CHEQ"/>
  			<result property="oidTipoCliente"       column="OID_TIPO_CLIE"/>
  			<result property="oidSubTipoCliente"    column="OID_SUBT_CLIE"/>
  			<result property="oidTipoClasificacion" column="OID_TIPO_CLAS"/>
  			<result property="oidClasificacion"     column="OID_CLAS"/>
  </resultMap>
  
	<resultMap id="ofertaListMapResult" class="java.util.HashMap">
		<result property="oidOferta" column="OID" />
		<result property="periodo" column="COD_PERI" />
		<result property="catalogo" column="DES_CATA" />
		<result property="pagina" column="NUM_PAGI" />
		<result property="tipoNivel" column="TIP_NIVE" />
		<result property="tipoCuadre" column="TIP_CUAD" />
		<result property="oidCatalogo" column="OID_CATA" />
		<result property="codigoTipoPrograma" column="COD_TIP_NIVE" />
		<result property="codigoTipoCuadre" column="COD_TIP_CUAD" />
		<result property="numeroLotePlan" column="NUM_LOTE_PLAN" />
	</resultMap>    
  
	<resultMap id="rangoListMapResult" class="java.util.HashMap">
		<result property="oidRango" column="OID" />
		<result property="oidOferta" column="OID_OFER" />
		<result property="factorRepeticion" column="VAL_FACT_REPE" />
		<result property="rangoInferior" column="VAL_RANG_INFE" />
		<result property="rangoSuperior" column="VAL_RANG_SUPE" />
		<result property="precioUnitario" column="VAL_PREC_UNIT" />
	</resultMap>    
    
	 <resultMap id="cuvMapResult" class="java.util.HashMap">	    	    	    	    	
	    <result property="oidDetalleOferta"			column="OID_DETA_OFER"/> 	  	   	    	    	    	
	    <result property="cuv"						column="VAL_CODI_VENT"/>
	    <result property="codigoSap"				column="COD_SAP"/>
	    <result property="descripcionProducto"		column="DES_PROD"/>
	    <result property="numeroPaginaCatalogo"		column="NUM_PAGI_CATA"/>
	    <result property="codigoTipoOferta"			column="COD_TIPO_OFER"/>
	    <result property="precioUnitario"			column="PRECIO_UNITARIO"/>
    </resultMap>    
    
	 <resultMap id="monedaMapResult" class="java.util.HashMap">	    	    	    	    	
	    <result property="simboloMoneda"		column="VAL_SIMB_MONE"/> 	  	   	    	    	    	
	    <result property="descripcionMoneda"	column="DES_MONED"/>
	    <result property="numeroDecimales"		column="NUM_DECI"/>
    </resultMap>        
    
    <resultMap id="rangoGratisListMapResult" class="java.util.HashMap" extends="cuvMapResult">
	    <result property="oidGratis"		column="OID"/> 	  	   	    	    	    	
    	<result property="unidades"			column="VAL_UNID"/>    	
    </resultMap>
  
	<resultMap id="criterioListMapResult" class="java.util.HashMap">
		<result property="oidCriterio" column="OID" />
		<result property="catalogo" column="DES_CATA" />
		<result property="tipoRango" column="TIP_RANG" />
		<result property="numeroPaginaInicial" column="NUM_PAGI_DESD" />
		<result property="numeroPaginaFinal" column="NUM_PAGI_HAST" />
		<result property="producto" column="DES_PROD" />
		<result property="indicadorExclusionRango" column="IND_EXCL" />
	</resultMap>    
  
	<resultMap id="productoListMapResult" class="java.util.HashMap">
		<result property="oidDetalleOferta" column="OID_DETA_OFER" />
		<result property="cuv" column="VAL_CODI_VENT" />
		<result property="codigoSap" column="COD_SAP" />
		<result property="descripcionProducto" column="DES_PROD" />
		<result property="descripcionCatalogo" column="DES_CATA" />
		<result property="numeroPagina" column="NUM_PAGI_CATA" />
		<result property="tipoOferta" column="TIP_OFER" />
		<result property="factorRepeticion" column="VAL_FACT_REPE" />
	</resultMap>    
  
	<resultMap id="estimadosMatrizFacturacionMapResult" class="matrizFacturacion">                     
    	<result property="oidMatriz"		 	column="OID_CABE"/>  
    	<result property="codigoPeriodo" 	column="COD_PERI" />
    	<result property="oidPeriodo" 	column="PERD_OID_PERI" />
    	<result property="pedidosEstimados" 	column="NUM_PEDI_ESTI"/>  
    	<result property="unidadesEstimadas" 	column="NUM_UNID_ESTI"/>  
    	<result property="clientesEstimados" 	column="NUM_CLIE_ESTI"/>  
    	<result property="ventaNetaEstimada" 	column="TOTA_MONT_VENT_NETA"/>  
    	<result property="tipoCambioPromedio" 	column="VAL_TIPO_CAMB"/>  
	</resultMap>  

  	<resultMap id="estrategiaMapResult" class="java.util.HashMap">                            
    	<result property="oid" column="OID" />                              
    	<result property="oidTipo" column="OID_TIPO" /> 
    	<result property="descripcion" column="DESCRIPCION" />          
  	</resultMap>
  
	<resultMap id="productoAsociadoMapResult" class="java.util.HashMap">
		<result property="oidProducto" column="PROD_OID_PROD"/>
		<result property="oidTipoOferta" column="OID_TIPO_OFER"/>
		<result property="codigoSap" column="COD_SAP"/>
		<result property="descripcion" column="DES_PROD"/>
		<result property="tipoOferta" column="TIP_OFER"/>
		<result property="catalogo" column="DES_CATA"/>
		<result property="numeroPaginaCatalogo" column="NUM_PAGI_CATA"/>
		<result property="unidadesEstimadas" column="NUM_UNID_ESTI"/>
		<result property="precioCatalogo" column="IMP_PREC_CATA"/>
		<result property="ventaNetaEstimada" column="IMP_VENT_NETA_ESTI"/>
		<result property="precioPosicionamiento" column="IMP_PREC_POSI"/>
		<result property="costoEstandar" column="VAL_COST_ESTA"/>	
	</resultMap>
  
  <!-- OBTIENE ARCHIVOS CONTROL FACTURACION SEGUN LOS CRITERIOS  -->
  <select id="getControlFacturacionByCriteria" parameterClass="java.util.Map" resultMap="pedidoControlFacturacionResult">
		SELECT  CTRL.COD_PAIS || '-' || CTRL.COD_PERI   "ID"		,    
				CTRL.COD_PAIS					,                                
				CTRL.COD_PERI					,                                
				TO_CHAR(CTRL.FEC_PROC,'DD/MM/YYYY') AS "FEC_PROC" ,
				CTRL.VAL_MNT_MIN_FACT	,                                
				CTRL.VAL_MNT_MIN_ACEPT	,                              
				CTRL.VAL_MNT_MIN_DEUD	,                              
				CTRL.VAL_MNT_MAX				,                              
				CTRL.VAL_UNID_MAX			,                                
				CTRL.STA_CAMP					,                                
				CTRL.USU_DIGI					,                                
				CTRL.FEC_DIGI					,                                
				CTRL.USU_MODI					,                                
				CTRL.FEC_MODI					,                                
				CTRL.COD_MARC					,                                
				CTRL.DES_MARC					,                                
				CTRL.COD_CANA					,                                
				CTRL.DES_CANA					,
                CTRL.NUM_LOTE  ,
                CTRL.IND_CAMP_ACT
		FROM BAS_CTRL_FACT CTRL                                    
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			CTRL.COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			CTRL.COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="estadoCampanha">        
			CTRL.sta_camp = #estadoCampanha#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="indicadorActiva">        
			CTRL.ind_camp_act = #indicadorActiva#                          
    	</isNotEmpty>                                            

	</dynamic>                                                   
		ORDER BY CTRL.COD_PERI DESC                                         
  </select>

  <!-- OBTIENE PRODUCTOS PARA PEDIDO MINIMO SEGUN LOS CRITERIOS  -->
  <select id="getProductoAgregacionByCriteria" parameterClass="java.util.Map" resultMap="productoAgregacionResult">
  		SELECT 
	       COD.COD_PAIS || '-' || COD.COD_PERI 	|| '-' || COD.COD_VENT AS "ID" ,
  	       COD.COD_PAIS,        
	       COD.COD_PERI,        
	       COD.COD_VENT,        
	       COD.VAL_UNIT,        
	       COD.DES_PROD,        
	       COD.COD_PROD,        
	       COD.NIV_PRIOR,                               
	       COD.STA_REG,                                 
	       COD.USU_DIGI,                                
	       COD.FEC_DIGI,                                
	       COD.USU_MODI,                                
	       COD.FEC_MODI                                 
    	FROM  PED_COD_VENT_AGREG COD                        
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD.COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD.COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoVenta">        
			COD.COD_VENT = #codigoVenta#                          
    	</isNotEmpty>                                            
	</dynamic>                                                   
		ORDER BY          
			COD.COD_PAIS ,
			COD.COD_PERI ,
		    COD.COD_VENT
  </select>

  <!-- OBTIENE DETALLE OFERTA DE LA MATRIZ DE FACTURACION POR OID  -->
  <select id="getOfertaDetalleById" parameterClass="java.util.Map" resultMap="productoAgregacionResult">
  		SELECT 
	         '' "ID" ,
             #codigoPais#  	       AS COD_PAIS,        
	         #codigoPeriodo#          AS COD_PERI,                     
             DET.VAL_CODI_VENT AS COD_VENT ,
             OCR_SOLIC_PEDIDOS.GEN_FN_CODSAP_PROD(DET.PROD_OID_PROD) AS COD_PROD ,
             OCR_SOLIC_PEDIDOS.GEN_FN_DESC_PROD(DET.PROD_OID_PROD) AS DES_PROD,
             DET.IMP_PREC_CATA AS VAL_UNIT,
    	       ''                AS NIV_PRIOR,                               
    	       ''                AS STA_REG,                                 
    	       ''                AS USU_DIGI,                                
    	       ''                AS FEC_DIGI,                                
    	       ''                AS USU_MODI,                                
    	       ''                AS FEC_MODI                                 
        FROM PRE_OFERT_DETAL  DET
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="idDetalleOferta">           
			DET.OID_DETA_OFER = #idDetalleOferta#
		</isNotEmpty>
	</dynamic>                                                   
  </select>

  <!-- OBTIENE SOLICITUD CABECERA POR ID - SOLICUTD CABECERA SEGUN LOS CRITERIOS  -->
  <select id="getSolicitudCabeceraById" parameterClass="java.util.Map" resultMap="solicConsolidadoCabeceraResult">
		SELECT                                                     
		  COD_PAIS || '|' || COD_CLIE	|| '|' || COD_PERI || '|' || TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS	  "ID"		,    
          COD_PAIS			,
          COD_PERI			,
          COD_CLIE			,
          TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS 	FEC_SOLI	,
          NUM_CLIE			,
          TIPO_SOLI			,
          COD_SBAC			,
          COD_ACCE			,
          TIP_DESP			,
          STA_PROC			,
          NOM_CLIE			,
          COD_REGI			,
          DES_REGI			,
          COD_ZONA			,
          DES_ZONA			,
          COD_TERR			,
          TIP_ORDE			,
          VAL_MONT_PEDI	,
          VAL_SALD_DEUD	,
          IND_ERRO_RECH	,
          IND_ERRO_DEUD	,
          IND_ERRO_MTMI	,
          IND_ERRO_MTMA	,
          IND_ERRO_UNMA	,
          IND_ERROR_SGPE,
          IND_ERRO_NODE	,
          IND_OCS_PROC	,
          IND_BLOQ_ADMI	,
          IND_OCS_BLOQ	,
          IND_ADMI_CART	,
          IND_BLOQ_FINA	,
          IND_COMP_MONT	,
          USU_DIGI	    ,
          FEC_DIGI	    ,
          USU_MODI	    ,
          FEC_MODI	    ,
          COD_MARC	    ,
          DES_MARC	    ,
          COD_CANA	    ,
          DES_CANA	    ,
          OBS_PRUB	    ,
          NUM_LOTE
      FROM INT_SOLIC_CONSO_CABEC 
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoCliente">        
			COD_CLIE = #codigoCliente#                          
    	</isNotEmpty>        
		<isNotEmpty prepend="AND" property="fechaSolicitud">        
			FEC_SOLI = TO_DATE(#fechaSolicitud#,'DD/MM/YYYY')  
    	</isNotEmpty>  
    	<isNotEmpty prepend="AND" property="numeroLote">        
			NUM_LOTE = #numeroLote#                          
    	</isNotEmpty>                                          
	</dynamic>
  </select>

  <!-- OBTIENE PEDIDOS CON DEUDA - SOLICUTD CABECERA SEGUN LOS CRITERIOS  -->
  <select id="getDeudaPedidosByCriteria" parameterClass="java.util.Map" resultMap="solicConsolidadoCabeceraResult">
		SELECT                                                     
		  COD_PAIS || '|' || COD_CLIE	|| '|' || COD_PERI || '|' || TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS	  "ID"		,    
          COD_PAIS			,
          COD_PERI			,
          COD_CLIE			,
          TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS 	FEC_SOLI	,
          NUM_CLIE			,
          TIPO_SOLI			,
          COD_SBAC			,
          COD_ACCE			,
          TIP_DESP			,
          STA_PROC			,
          NOM_CLIE			,
          COD_REGI			,
          DES_REGI			,
          COD_ZONA			,
          DES_ZONA			,
          COD_TERR			,
          TIP_ORDE			,
          VAL_MONT_PEDI	,
          VAL_SALD_DEUD	,
          IND_ERRO_RECH	,
          IND_ERRO_DEUD	,
          IND_ERRO_MTMI	,
          IND_ERRO_MTMA	,
          IND_ERRO_UNMA	,
          IND_ERROR_SGPE,
          IND_ERRO_NODE	,
          IND_OCS_PROC	,
          IND_BLOQ_ADMI	,
          IND_OCS_BLOQ	,
          IND_ADMI_CART	,
          IND_BLOQ_FINA	,
          IND_COMP_MONT	,
          USU_DIGI	    ,
          FEC_DIGI	    ,
          USU_MODI	    ,
          FEC_MODI	    ,
          COD_MARC	    ,
          DES_MARC	    ,
          COD_CANA	    ,
          DES_CANA	    ,
          OBS_PRUB	     ,
          NUM_LOTE
      FROM INT_SOLIC_CONSO_CABEC 
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoCliente">        
			COD_CLIE = #codigoCliente#                          
    	</isNotEmpty>
    	<isNotEmpty prepend="AND" property="numeroLote">        
			NUM_LOTE = #numeroLote#
    	</isNotEmpty>        
		<isNotEmpty prepend="AND" property="fechaInicio">        
			FEC_SOLI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
    	</isNotEmpty>    	
		<isNotEmpty prepend="AND" property="fechaFin">        
	<![CDATA[  
			FEC_SOLI <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
	]]>
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoRegion">        
			COD_REGI = #codigoRegion#
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoZona">        
			COD_ZONA = #codigoZona#
    	</isNotEmpty>                                            

		<isNotEmpty prepend="AND" property="indicador">        
			IND_ERRO_RECH = 0 
			AND IND_ERRO_NODE = 0 
			AND IND_ANUL = 0
			AND IND_ERRO_REMP = 0 
			AND IND_ERROR_SGPE = 0 
			AND IND_OCS_PROC = 0
		AND IND_ERRO_DEUD = 2 
    	</isNotEmpty>  
    	     
    	 <isEmpty prepend="AND" property="indicador">   
    	     IND_ERRO_DEUD = 2 
		AND	IND_ERRO_RECH = 0 
		AND IND_OCS_PROC = 0
		AND	IND_ERROR_SGPE = 0 
		AND IND_OCS_BLOQ = 0
		AND	IND_ERRO_NODE = 0 
		AND IND_BLOQ_ADMI = 0 
		AND	IND_BLOQ_FINA = 0 
		AND IND_ERRO_REMP = 0 
    	 </isEmpty> 
		
		<iterate prepend="AND" property="clienteFile" open=" COD_CLIE IN (" close=")" conjunction=",">
			#clienteFile[]#
		</iterate>

	</dynamic>                                                   
		ORDER BY                                                   
			COD_PERI                                            
  </select>

  <!-- OBTIENE BOLSA DE PEDIDOS - SOLICUTD CABECRA SEGUN LOS CRITERIOS  -->
  <select id="getBolsaPedidosByCriteria" parameterClass="java.util.Map" resultMap="solicConsolidadoCabeceraResult">
		SELECT                                                     
		  COD_PAIS || '|' || COD_CLIE	|| '|' || COD_PERI || '|' || TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS	  "ID"		,    
          COD_PAIS			,
          COD_PERI			,
          COD_CLIE			,
          TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS 	FEC_SOLI	,
          NUM_CLIE			,
          TIPO_SOLI			,
          COD_SBAC			,
          COD_ACCE			,
          TIP_DESP			,
          STA_PROC			,
          NOM_CLIE			,
          COD_REGI			,
          DES_REGI			,
          COD_ZONA			,
          DES_ZONA			,
          COD_TERR			,
          TIP_ORDE			,
          VAL_MONT_PEDI	,
          VAL_SALD_DEUD	,
          IND_ERRO_RECH	,
          IND_ERRO_DEUD	,
          IND_ERRO_MTMI	,
          IND_ERRO_MTMA	,
          IND_ERRO_UNMA	,
          IND_ERROR_SGPE,
          IND_ERRO_NODE	,
          IND_OCS_PROC	,
          IND_BLOQ_ADMI	,
          IND_OCS_BLOQ	,
          IND_ADMI_CART	,
          IND_BLOQ_FINA	,
          IND_COMP_MONT	,
          USU_DIGI	    ,
          FEC_DIGI	    ,
          USU_MODI	    ,
          FEC_MODI	    ,
          COD_MARC	    ,
          DES_MARC	    ,
          COD_CANA	    ,
          DES_CANA	    ,
          OBS_PRUB	     ,
          NUM_LOTE
      FROM INT_SOLIC_CONSO_CABEC 
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoCliente">        
			COD_CLIE = #codigoCliente#                          
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaInicio">        
			FEC_SOLI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFin">        
	<![CDATA[  
			FEC_SOLI <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
	]]>
    	</isNotEmpty>
 
		<isNotEmpty prepend="AND" property="fechaFinSolicitud">  
		 <![CDATA[      
			FEC_SOLI <= TO_DATE(#fechaFinSolicitud#,'DD/MM/YYYY')  
			]]>
    	</isNotEmpty> 
		<isNotEmpty prepend="AND" property="fechaInicialSolicitud">        
			FEC_SOLI >= TO_DATE(#fechaInicialSolicitud#,'DD/MM/YYYY')  
    	</isNotEmpty>                
		<isNotEmpty prepend="AND" property="codigoRegion">        
			COD_REGI = #codigoRegion#
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoZona">        
			COD_ZONA = #codigoZona#
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoTerritorio">        
			COD_TERR = #codigoTerritorio#
    	</isNotEmpty>                                            

                         
       <isNotEmpty prepend="AND" property="indicador">        
			    IND_ERRO_RECH = 0 
			AND IND_ERRO_NODE = 0 
			AND IND_ANUL = 0
			AND IND_ERRO_REMP = 0 
			AND IND_ERROR_SGPE = 0 
			AND IND_OCS_PROC = 0

    	</isNotEmpty>                                         
                         
                         
        <isEmpty prepend="AND" property="indicador">        
				IND_ERRO_RECH = 0 
		AND IND_OCS_PROC = 0
    	AND IND_ERRO_MTMA = 0
    	AND (IND_ERRO_MTMI = 0 or (IND_ERRO_MTMI=0 AND IND_COMP_MONT = 1))
		AND	IND_ERROR_SGPE = 0 
		AND	IND_ERRO_NODE = 0 
		AND IND_ERRO_REMP = 0 
    	</isEmpty>     
		

	</dynamic>                                                   
		ORDER BY                                                   
			COD_PERI  ,
			COD_REGI ,
			COD_ZONA ,
			COD_TERR ,
			COD_CLIE 
                                          
  </select>
  
  <update id="updateControlFacturacion" parameterClass="pedidoControlFacturacion">
    	UPDATE BAS_CTRL_FACT t
    	SET 
          t.VAL_MNT_MIN_FACT	= #montoMinimoFact#			  ,
          t.VAL_MNT_MIN_ACEPT	= #montoMinimoAcept# 		  ,
          t.VAL_MNT_MIN_DEUD	= #montoMinimoDeuda# 		  ,
          t.VAL_MNT_MAX				= #montoMaximo#					  ,
          t.VAL_UNID_MAX			= #unidadesMaximo#				,
          t.cod_marc					= #codigoMarca#					  ,
          t.des_marc					= #descripcionMarca#			,
          t.cod_cana					= #codigoCanal#					  ,
          t.des_cana					= #descripcionCanal#			,
		  t.USU_DIGI					= #auditInfo.createdBy# 	,
		  t.FEC_DIGI				  = #auditInfo.created# 		,
		  t.USU_MODI				  = #auditInfo.updatedBy# 	,
		  t.FEC_MODI				  = #auditInfo.lastUpdated#,
		  t.FEC_PROC                  = TO_DATE(#fechaProceso#,'DD/MM/YYYY')
    	WHERE
		      t.COD_PAIS = #codigoPais# AND 
          t.COD_PERI = #codigoPeriodo# 

	</update>

    <insert id="insertControlFacturacion" parameterClass="pedidoControlFacturacion">
    	INSERT INTO BAS_CTRL_FACT(
    		COD_PAIS,
			COD_PERI,
			FEC_PROC,
			VAL_MNT_MIN_FACT,
			VAL_MNT_MIN_ACEPT,
			VAL_MNT_MIN_DEUD,
			VAL_MNT_MAX,
			VAL_UNID_MAX,
			STA_CAMP,
      		COD_MARC,
            DES_MARC,
      		COD_CANA,
      		DES_CANA,
			USU_DIGI,
			FEC_DIGI,
			USU_MODI,
			FEC_MODI,
			IND_CAMP_ACT,
            NUM_LOTE
        ) 
	VALUES(
	  		#codigoPais#,
	  		#codigoPeriodo#,
      		TO_DATE(#fechaProceso#,'DD/MM/YYYY'), 
      		#montoMinimoFact#, 
      		#montoMinimoAcept#, 
      		#montoMinimoDeuda#, 
      		#montoMaximo#, 
      		#unidadesMaximo#, 
      		#estadoCampanha#, 
      		#codigoMarca#, 
      		#descripcionMarca#, 
      		#codigoCanal#, 
      		#descripcionCanal#, 
      		#auditInfo.createdBy#, 
      		#auditInfo.created#,
      		#auditInfo.updatedBy#,
      		#auditInfo.lastUpdated#,
	  		#campaniaActiva#,
      #numeroLote#
    	)
	</insert>

	<insert id="insertCabeceraPedido" parameterClass="cabeceraConsultora">
    	INSERT INTO ped_solic_digit_cabec(
    		COD_PAIS,
			COD_PERI,
			COD_CLIE,
            NUM_LOTE,
			FEC_SOLI,
			NOM_CLIE,
			CAM_PRIM_PEDI,
			CAM_ULTI_PEDI,
			COD_ESTA,
			DES_ESTA,
      		NUM_ITEM,
            NUM_UNID,
      		COD_REGI,
      		DES_REGI,
			COD_ZONA,
			DES_ZONA,
			VAL_MONT_PEDI,
			IND_BLOQ,
			USU_DIGI,
			FEC_DIGI,
			USU_MODI,
			FEC_MODI,
			NUM_TELE,
			IND_OCS,
			IND_PROC)
	VALUES(
	  		#codPais#,
	  		#periodoFacturacion#,
      		#codigoConsultora#, 
      		#numLote#,
	  		to_date(#fechaFacturacion#,'dd/mm/yyyy'),
      		#nombreConsultora#, 
      		#primerPedido#, 
      		#ultimoPedido#, 
      		#codEtatus#, 
      		#estatus#, 
      		#numeroPedidosRegistrado#, 
      		#totalUnidades#, 
      		GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoConsultora#, 'COD_REGI'),
      		GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoConsultora#, 'DES_REGI'),
      		GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoConsultora#, 'COD_ZONA'),
      		GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoConsultora#, 'DES_ZONA'),
      		(select to_number(#totalTotal#, '99999999.99') from dual),
	  		#bloqueado#,
	  		#auditInfo.createdBy#,
      		#auditInfo.created#,
      		#auditInfo.updatedBy#,
      		#auditInfo.lastUpdated#,
      #telefono#,
      		'0',
      		'G')
	</insert>

	<insert id="insertDetallePedido" parameterClass="detallePedidosConsultora">
    	INSERT INTO ped_solic_digit_detal(
    		COD_PAIS, 
			COD_PERI, 
			COD_CLIE, 
			FEC_SOLI, 
            NUM_LOTE,
			COD_VENT, 
			NUM_POSIC, 
			DES_PROD, 
			VAL_UNID_DEM, 
			VAL_PREC_CATA, 
      		VAL_PREC_TOTA,
            USU_DIGI,
			FEC_DIGI,
			USU_MODI,
			FEC_MODI,
			IND_OCS_DETAL) 
	VALUES(
	  #codPais# ,
	  #codPeriodo#	,
      #codCliente#			  , 
	  to_date(#fechaSolicitud#,'dd/mm/yyyy')	  , 
      #numLote#,
      #codigoVta# 		  , 
      #numPosicion#					  , 
      #descripcion#				, 
      #unidades#				, 
      to_number(#precioCat#, '99999999.99') ,
      to_number(#total#, '99999999.99') ,	  
	  #auditInfo.createdBy# 	, 
      #auditInfo.created# 		, 
      #auditInfo.updatedBy# 	, 
      #auditInfo.lastUpdated# ,
      '0' )
	</insert>

  <update id="updateDetallePedido" parameterClass="detallePedidosConsultora">
    <![CDATA[
	  update ped_solic_digit_detal
         set cod_pais = 		  #codPais# ,                                            
             cod_peri = 		  #codPeriodo#	,                                        
             cod_clie = 	      #codCliente#			  ,                      
             fec_soli = 		  to_date(#fechaSolicitud#,'dd/mm/yyyy')	  ,      
             cod_vent = 	      #codigoVta# 		  ,   
             NUM_LOTE =           #numLote#,                           
             des_prod = 	      #descripcion#				,                
             val_unid_dem = 	      #unidades#				,                
             val_prec_cata =	  to_number(#precioCat#, '99999999.99') ,     
             val_prec_tota =	  to_number(#total#, '99999999.99') ,	 
             usu_modi = 	      #auditInfo.updatedBy# 	,                                
             fec_modi = 	      #auditInfo.lastUpdated#                                    
  where cod_pais = 	  #codPais#                              
   and cod_peri = 	  #codPeriodo#	                         
   and cod_clie =       #codCliente#			         
   and num_lote =       #numLote#	
   and cod_vent =       #codigoVta# 		                 

    ]]>
  </update> 


    <insert id="insertProductoPedidoMinimo" parameterClass="productoAgregacion">
		INSERT INTO PED_COD_VENT_AGREG  (
            COD_PAIS, 
            COD_PERI, 
            COD_VENT, 
            VAL_UNIT, 
            DES_PROD, 
            COD_PROD, 
            NIV_PRIOR, 
            STA_REG, 
            USU_DIGI, 
            FEC_DIGI, 
            USU_MODI, 
            FEC_MODI)	  
		VALUES(
			#codigoPais#     	,
			#codigoPeriodo#     ,	
			#codigoVenta#     	,
		    to_number(#valorUnitario#, '99999999.99') ,
			#descripcionProducto#,
			#codigoProducto#     ,	
			#nivelPriorizacion#  ,
			#estadoRegistro#     ,
      		#auditInfo.createdBy# 	, 
      		#auditInfo.created# 		, 
      		#auditInfo.updatedBy# 	, 
      		#auditInfo.lastUpdated# 
    	)
	</insert>

    <delete id="deleteControlFacturacion" parameterClass="pedidoControlFacturacion">
        DELETE FROM BAS_CTRL_FACT t
    	WHERE
		      t.COD_PAIS = #codigoPais# AND 
          	  t.COD_PERI = #codigoPeriodo# 
    </delete>

    <update id="cerrarCampanaControlFacturacion" parameterClass="pedidoControlFacturacion">
       UPDATE BAS_CTRL_FACT T
          SET T.STA_CAMP     = #estadoCampanha#,
              T.IND_CAMP_ACT = '0'
    	WHERE T.COD_PAIS = #codigoPais#
          AND T.COD_PERI = #codigoPeriodo#
    </update>

    <update id="updateCampanaFacturacionPais" parameterClass="pedidoControlFacturacion">
	    UPDATE BAS_PAIS B
	     SET B.COD_ULTI_PERI_PROC = #codigoPeriodo#   
	 	WHERE COD_PAIS = #codigoPais#
    </update>

    <update id="desactivarProductoPedidoMinimo" parameterClass="productoAgregacion">
        UPDATE PED_COD_VENT_AGREG t
		SET
          		t.STA_REG = #estadoRegistro#
    	WHERE
		      t.COD_PAIS = #codigoPais# AND
          	  t.COD_PERI = #codigoPeriodo# AND
			  t.COD_VENT = 	#codigoVenta#
    </update>

  <update id="updateDeuda" parameterClass="solicConsolidadoCabecera">
    	UPDATE int_solic_conso_cabec t
    	SET 
          		t.IND_ADMI_CART = #indErrorAdminCartera# ,
          		t.OBS_PRUB = #observaciones# ,
      			t.USU_ADMI_CART = #auditInfo.updatedBy# 	, 
      			t.FEC_ADMI_CART = #auditInfo.lastUpdated# 
    	WHERE
		      	t.COD_PAIS = #codigoPais# AND 
          		t.COD_PERI = #codigoPeriodo# AND
				t.COD_CLIE = #codigoCliente# AND
				t.FEC_SOLI = TO_DATE(#fechaSolicitud#,'DD/MM/YYYY')
  </update>

  <update id="updateDeudaGeneralMasiva" parameterClass="solicConsolidadoCabecera">

    	UPDATE int_solic_conso_cabec t
    	SET 
          		t.IND_ADMI_CART = #indErrorAdminCartera# ,
          		t.OBS_PRUB = #observaciones# ,
      			t.USU_ADMI_CART = #auditInfo.updatedBy# 	, 
      			t.FEC_ADMI_CART = #auditInfo.lastUpdated# 
		where exists (select null from int_tmp_conso_cabec ca where
                          ca.cod_pais = t.cod_pais and
                          ca.cod_peri = t.cod_peri and
                          ca.cod_clie = t.cod_clie and
                          ca.num_lote = t.num_lote )
  </update>

  <update id="updateDeudaGeneral" parameterClass="solicConsolidadoCabecera">

    	UPDATE int_solic_conso_cabec t
    	SET 
          		t.IND_ADMI_CART = #indErrorAdminCartera# ,
          		t.OBS_PRUB = #observaciones# ,
      			t.USU_ADMI_CART = #auditInfo.updatedBy# 	, 
      			t.FEC_ADMI_CART = #auditInfo.lastUpdated# 
		<dynamic prepend="WHERE">
			<iterate prepend="AND" property="codigos" open="(" close=")" conjunction="OR">
      	 		(t.cod_pais || '|' || t.cod_clie || '|' || t.cod_peri || '|' || to_char(t.fec_soli,'dd-mm-yyyy') || '|' || t.IND_ADMI_CART || '|' || t.NUM_LOTE) = 
            		#codigos[]#
            </iterate>                                   
		</dynamic>
  </update>

  <update id="updatePedidoAnuladoFacturado" parameterClass="pedidoAnuladoFacturado">

    	UPDATE int_solic_conso_cabec t
    	SET 
          		t.IND_ANUL = #indicadorAnulacion# 
		WHERE
		      	t.COD_PAIS = #codigoPais# AND 
          		t.COD_PERI = #codigoPeriodo# AND
				t.COD_CLIE = #codigoCliente# AND
				t.NUM_LOTE = #numeroLote# 
  </update>

  <update id="updatePedidosAnuladoConsultora" parameterClass="pedidoAnuladoFacturado">

    	UPDATE int_solic_conso_cabec t
    	SET 
				t.IND_OCS_PROC	= '0' ,
				t.IND_PROC_GP2	= '0'
		WHERE
		      	t.COD_PAIS = #codigoPais# AND 
          		t.COD_PERI = #codigoPeriodo# AND
				t.COD_CLIE = #codigoCliente# 
  </update>

  <update id="updatePedidosAnulaciones" parameterClass="pedidoAnuladoFacturado">

    	UPDATE PED_SOLIC_CABEC_ANULA t
    	SET 
          		t.IND_ANUL = #indicadorAnulacion# ,
      			t.USU_MODI = #auditInfo.updatedBy# 	, 
      			t.FEC_MODI = #auditInfo.lastUpdated# 
		WHERE
		      	t.COD_PAIS = #codigoPais# AND 
          		t.COD_PERI = #codigoPeriodo# AND
				t.COD_CLIE = #codigoCliente# AND
				t.NUM_LOTE = #numeroLote# 
  </update>

  <update id="updateBloqueoGeneral" parameterClass="solicConsolidadoCabecera">

    	UPDATE int_solic_conso_cabec t
    	SET 
          		t.IND_OCS_BLOQ = #indErrorOCSBloqueada# 
		where exists (select null from int_tmp_conso_cabec_bloq ca where
                          ca.cod_pais = t.cod_pais and
                          ca.cod_peri = t.cod_peri and
                          ca.cod_clie = t.cod_clie and
                          ca.num_lote = t.num_lote )
  </update>

  <update id="updateBolsaPedidosBloqueo" parameterClass="solicConsolidadoCabecera">

    	UPDATE int_solic_conso_cabec t
    	SET 
          		t.IND_OCS_BLOQ = #indErrorOCSBloqueada# 
		<dynamic prepend="WHERE">
			<iterate prepend="AND" property="codigos" open="(" close=")" conjunction="OR">
      	 		(t.cod_pais || '|' || t.cod_clie || '|' || t.cod_peri || '|' || to_char(t.fec_soli,'dd-mm-yyyy')) = 
            		#codigos[]#
            </iterate>                                   
		</dynamic>
  </update>

	<select id="getPedidosNSiguienteCampanha" parameterClass="java.util.Map" resultClass="string">
		SELECT CUP_PKG_PROG_NUEVAS.GEN_FN_DEV_NSGTE_CAMPA(#codigoPeriodo#,#numCampanhas#) FROM dual
	</select>

	<select id="getPedidosSiguienteCampanha" parameterClass="java.util.Map" resultClass="string">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_SGTE_CAMPA(#codigoPais#) FROM dual
	</select>

	<select id="getOfertaDetalleByPeriodoCodigoVenta" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_DEV_OID_OFER_DETAL(#codigoPeriodo#,#codigoVenta#) FROM dual
	</select>

	<select id="getMatrizFacturacionByPeriodo" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_DEV_OID_MATR_FACT(#codigoPeriodo#) FROM dual
	</select>

	<select id="getDetOfertaIndicaDigitableById" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_DEV_OFER_IND_DIG(#idDetalleOferta#) FROM dual
	</select>

	<select id="getDetOfertaPrecioCatalogoById" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_DEV_OFER_PREC_CATA(#idDetalleOferta#) FROM dual
	</select>

	<select id="getDetOfertaEstrategiaIndividualById" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_DEV_OFER_ESTR_INDIV(#idDetalleOferta#) FROM dual
	</select>

	<select id="getCodVentaAgregacById" parameterClass="java.util.Map" resultClass="decimal">
		SELECT OCR_SOLIC_PEDIDOS.GEN_FN_EXIS_PED_COD_AGREG(#codigoPais#, #codigoPeriodo#, #codigoVenta#) FROM dual
	</select>

    <parameterMap id="executeActualizaPrioridadParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeActualizaPrioridad" 
   			  parameterMap="executeActualizaPrioridadParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_ACT_COD_AREG_PRIOR(?,?)}
    </procedure>  


  <update id="updateBolsaPedidosBloqueoIndividual" parameterClass="solicConsolidadoCabecera">
    	UPDATE int_solic_conso_cabec t
    	SET 
          		t.IND_OCS_BLOQ = #indErrorOCSBloqueada# 
    	WHERE
		      	t.COD_PAIS = #codigoPais# AND 
          		t.COD_PERI = #codigoPeriodo# AND
				t.COD_CLIE = #codigoCliente# AND
				t.FEC_SOLI = TO_DATE(#fechaSolicitud#,'DD/MM/YYYY')
  </update>

    <parameterMap id="executeProcesoOCRProcesosEspecialesOCSParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="periodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFact"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    	<parameter property="psusuario"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeProcesoOCRProcesosEspecialesOCS" 
   			  parameterMap="executeProcesoOCRProcesosEspecialesOCSParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_COMP_MONT_MINIMO(?,?,?,?)}
    </procedure>  

    <parameterMap id="executeProcesoOCRActualizaGP2Params" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="periodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFact"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeProcesoOCRActualizaGP2" 
   			  parameterMap="executeProcesoOCRActualizaGP2Params" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_ACTU_INDI_GP2(?,?,?)}
    </procedure>  

	<parameterMap id="executeCalculoDeudaParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	  
    </parameterMap>
    <procedure id="executeCalculoDeuda" 
   			  parameterMap="executeCalculoDeudaParams" >
		{call GEN_PKG_GENER.GEN_PR_ACTUA_VALOR_SALDO_DEUDO(?)}
    </procedure>  

	<parameterMap id="actualizaOCSHistoricoCabeceraParams" class="map" >
        <parameter property="codigoPais"   		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="codigoPeriodo"   		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
    </parameterMap>

    <procedure id="actualizaOCSHistoricoCabecera" parameterMap="actualizaOCSHistoricoCabeceraParams" >
        {call OCR_SOLIC_PEDIDOS.OCR_PR_HIST_SOLIC_CONSO_CABEC(?,?)}
    </procedure>

	<parameterMap id="actualizaOCSHistoricoDetalleParams" class="map" >
        <parameter property="codigoPais"   		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="codigoPeriodo"   		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
    </parameterMap>

    <procedure id="actualizaOCSHistoricoDetalle" parameterMap="actualizaOCSHistoricoDetalleParams" >
        {call OCR_SOLIC_PEDIDOS.OCR_PR_HIST_SOLIC_CONSO_DETAL(?,?)}
    </procedure>


    <!-- OBTIENE LOS ENVIOS DE OCS SEGUN LOS CRITERIOS  -->
  <select id="getOCREnviaOCSList" parameterClass="java.util.Map" resultMap="envioConsolidadoCabecResult">
    SELECT  
           a.COD_PAIS	AS CODPAIS,
           a.COD_PERI 	AS CODPERI,
           to_char(a.fec_soli,'dd-mm-yyyy') 	AS FECREC,
           a.des_regi 	AS DESCREG, 
	<isNotEmpty property="zona">
           a.des_zona	AS DESZONA,             
    </isNotEmpty>	 
	<isNull property="zona">
           ' '	AS DESZONA,
    </isNull>	 
           ' ' AS CODTERR, 
           count(*) AS PEDIDOS
    FROM   INT_SOLIC_CONSO_CABEC A
    WHERE  A.COD_PAIS = #codigoPais#
           AND A.COD_PERI = #periodo#
           AND A.IND_BLOQ_ADMI = '0'
           AND A.IND_BLOQ_FINA = '0'
           AND A.IND_CONT_ACT = '0'
           AND A.IND_ERRO_NODE = '0'
           AND ((A.IND_ERRO_DEUD = '0') OR (A.IND_ERRO_DEUD='1') OR ( A.Ind_Erro_Deud = '2'and  A.IND_ADMI_CART='1'))
           AND A.IND_OCS_PROC = '0'
           AND A.IND_ERROR_SGPE = '0'
           AND A.IND_OCS_BLOQ = '0'
           AND A.IND_ERRO_RECH = '0'
           AND (A.IND_ERRO_MTMI = '0' OR (A.IND_ERRO_MTMI =  '0' AND A.IND_COMP_MONT = '1')) 
           AND A.IND_ERRO_MTMA = '0'
           AND A.IND_ERRO_REMP = '0'   
           AND A.IND_ORIG_CABE = '1'
    group by 	a.des_regi,  
	<isNotEmpty property="zona">
           		a.des_zona	,
    </isNotEmpty>	 
				a.COD_PAIS,
           		a.COD_PERI ,
           		a.fec_soli 
    order by 1,2,3,4

  </select>

    <!-- OBTIENE LOS PEDIDOS CONSULTORAS INACTIVAS SEGUN LOS CRITERIOS  -->
  <select id="getOCRConsultorasInactivasList" parameterClass="java.util.Map" resultMap="consultorasInactivasResult">
    SELECT  
           a.COD_PAIS	AS CODPAIS,
           a.COD_PERI 	AS CODPERI,
		   a.NOM_CLIE	AS CLIENTE ,  	
		   a.COD_CLIE	AS CODCLIENTE ,  	
		   a.DES_ZONA	AS DESZONA ,  	
		   a.COD_TERR	AS CODTERR ,  	
           to_char(a.fec_soli,'dd-mm-yyyy') 	AS FECREC,
             (select OCR_SOLIC_PEDIDOS.GEN_FN_DESC_GENER(MIN(tpc.oid_tipo_clie),'MAE_TIPO_CLIEN' ) from mae_clien_tipo_subti ctst, mae_tipo_clien tpc
                     where ctst.clie_oid_clie =  k.oid_clie and
                           tpc.oid_tipo_clie = ctst.ticl_oid_tipo_clie ) TIPOCLIENTE ,
             (select OCR_SOLIC_PEDIDOS.GEN_FN_DESC_GENER(stpc.oid_subt_clie, 'MAE_SUBTI_CLIEN') from mae_clien_tipo_subti ctst, mae_subti_clien stpc
                     where ctst.clie_oid_clie =  k.oid_clie and
                           ctst.ticl_oid_tipo_clie =
                           (select MIN(ts.ticl_oid_tipo_clie) from mae_clien_tipo_subti ts, mae_tipo_clien tpc
                                   where ts.clie_oid_clie = ctst.clie_oid_clie ) and
                           stpc.oid_subt_clie = ctst.sbti_oid_subt_clie  ) SUBTIPOCLIENTE,
       (select tdoc.val_sigl from MAE_CLIEN_IDENT doc, mae_tipo_docum tdoc where doc.clie_oid_clie = k.oid_clie and
                                                           doc.tdoc_oid_tipo_docu = tdoc.oid_tipo_docu and
                          	                         doc.VAL_IDEN_DOCU_PRIN = 1)   || '-' ||
       (select doc.num_docu_iden from MAE_CLIEN_IDENT doc where doc.clie_oid_clie = k.oid_clie and
                          	                         doc.VAL_IDEN_DOCU_PRIN = 1)  NUMDOC ,    
    	 (select zona.des_geog from MAE_CLIEN_DIREC direc, ZON_VALOR_ESTRU_GEOPO ZONA  
                      where direc.clie_oid_clie =  k.oid_clie 
                            AND   direc.IND_DIRE_PPAL = 1
		                        AND    direc.IND_ELIM = 0
    		                    AND    ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,1,6))) 
                  		      AND   ZONA.ORDE_2  IS NULL
                  		      AND   ZONA.ORDE_3  IS NULL
                  		      AND   ZONA.ORDE_4  IS NULL   
                             )   || ',' ||
    	 (select zona.des_geog from MAE_CLIEN_DIREC direc, ZON_VALOR_ESTRU_GEOPO ZONA  
                      where direc.clie_oid_clie =  k.oid_clie 
                            AND   direc.IND_DIRE_PPAL = 1
		                        AND    direc.IND_ELIM = 0
    		                    AND    ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,1,6))) 
    		                    AND   ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,7,6)))
                  		      AND   ZONA.ORDE_3  IS NULL
                  		      AND   ZONA.ORDE_4  IS NULL   
                             ) || ',' ||
    	 (select zona.des_geog from MAE_CLIEN_DIREC direc, ZON_VALOR_ESTRU_GEOPO ZONA  
                      where direc.clie_oid_clie =  k.oid_clie 
                            AND   direc.IND_DIRE_PPAL = 1
		                        AND    direc.IND_ELIM = 0
    		                    AND    ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,1,6))) 
    		                    AND   ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,7,6)))
    		                    AND   ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,13,6)))
                  		      AND   ZONA.ORDE_4  IS NULL   
                             ) || ',' ||
    	 (select zona.des_geog from MAE_CLIEN_DIREC direc, ZON_VALOR_ESTRU_GEOPO ZONA  
                      where direc.clie_oid_clie =  k.oid_clie 
                            AND   direc.IND_DIRE_PPAL = 1
		                        AND    direc.IND_ELIM = 0
    		                    AND    ZONA.ORDE_1 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,1,6))) 
    		                    AND   ZONA.ORDE_2 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,7,6)))
    		                    AND   ZONA.ORDE_3 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,13,6)))
    		                    AND   ZONA.ORDE_4 = LTRIM(RTRIM(SUBSTR(direc.COD_UNID_GEOG,19,6)))
    		                    AND   ZONA.ORDE_5  IS NULL                               
                             ) UNIDADGEO,
    	 (select via.des_abrv_tipo_via from MAE_CLIEN_DIREC direc, seg_tipo_via via
                      where direc.clie_oid_clie =  k.oid_clie 
                            and via.oid_tipo_via = direc.tivi_oid_tipo_via
                            AND   direc.IND_DIRE_PPAL = 1
		                        AND    direc.IND_ELIM = 0
                      )     || 
    	 (select direc.val_nomb_via from MAE_CLIEN_DIREC direc
                      where direc.clie_oid_clie =  k.oid_clie 
                            AND   direc.IND_DIRE_PPAL = 1
		                        AND    direc.IND_ELIM = 0
                      )     DIRECCION ,
    	 (select direc.val_obse from MAE_CLIEN_DIREC direc
                      where direc.clie_oid_clie =  k.oid_clie 
                            AND   direc.IND_DIRE_PPAL = 1
		                        AND    direc.IND_ELIM = 0
                      )     OBSERVACIONES 
		

    FROM   INT_SOLIC_CONSO_CABEC A , mae_clien k
    WHERE  A.COD_PAIS = #codigoPais#
           AND A.COD_PERI = #periodo#
		   AND A.cod_clie = k.cod_clie
           AND A.IND_OCS_PROC =   '0'
           AND A.IND_ERROR_SGPE = '0'
           AND A.IND_ERRO_RECH =  '0'
           AND A.IND_ERRO_REMP = '0'
           AND A.IND_ERRO_NODE = '0'
		   AND a.IND_CONT_ACT = '1'
		<isNotEmpty prepend="AND" property="fechaInicio">        
			a.FEC_SOLI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFin">        
	<![CDATA[  
			a.FEC_SOLI <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
	]]>
    	</isNotEmpty>


  </select>

    <!-- OBTIENE LOS PEDIDOS PARA DEUDA MASIVA  -->
  <select id="getDeudaPedidosMasivaByCriteria" parameterClass="java.util.Map" resultMap="envioConsolidadoCabecResult">
    SELECT  
           a.COD_PAIS	AS CODPAIS,
           a.COD_PERI 	AS CODPERI,
	<isNotEmpty property="fecha">
           to_char(a.fec_soli,'dd-mm-yyyy') 	AS FECREC,
    </isNotEmpty>	 
	<isNull property="fecha">
           ' ' 	AS FECREC,
    </isNull>	 
           a.des_regi 	AS DESCREG, 
	<isNotEmpty property="zona">
           a.des_zona	AS DESZONA,             
    </isNotEmpty>	 
	<isNull property="zona">
           ' '	AS DESZONA,             
    </isNull>	 
		   ' ' AS CODTERR ,
           count(*)  	AS PEDIDOS
    FROM   INT_SOLIC_CONSO_CABEC A
    WHERE  A.COD_PAIS = #codigoPais#
           AND A.COD_PERI = #codigoPeriodo#
           
           <isNotEmpty prepend="AND" property="indicador">        
			         A.Ind_Erro_Deud = '2'
                    AND A.IND_ADMI_CART='0'
			        AND A.IND_ERRO_RECH = 0 
			        AND A.IND_ERRO_NODE = 0 
				    AND A.IND_ANUL = 0
				    AND A.IND_ERRO_REMP = 0 
					AND A.IND_ERROR_SGPE = 0 
					AND A.IND_OCS_PROC = 0
			     
    	</isNotEmpty>
    	
    	 <isEmpty prepend="AND" property="indicador">        
			 A.IND_BLOQ_ADMI =      '0'
           AND A.IND_BLOQ_FINA =  '0'
           AND A.Ind_Erro_Deud = '2'
			and  A.IND_ADMI_CART='0'
           AND A.IND_OCS_PROC =   '0'
           AND A.IND_ERROR_SGPE = '0'
           AND A.IND_OCS_BLOQ =   '0'
           AND A.IND_ERRO_RECH =  '0'
           AND A.IND_ERRO_REMP = '0'
           AND A.IND_ERRO_NODE = '0'
    	</isEmpty>
           
		<isNotEmpty prepend="AND" property="fechaInicio">        
			FEC_SOLI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFin">        
	<![CDATA[  
			FEC_SOLI <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
	]]>
    	</isNotEmpty>
		<isNotEmpty property="regionList">        
			<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
            	A.COD_REGI = #regionList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty property="zonaList">        
			<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="AND">
            	A.COD_ZONA != #zonaList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="montoMaximoDeuda">        
	<![CDATA[  
			A.VAL_SALD_DEUD  <= #montoMaximoDeuda#
	]]>
    	</isNotEmpty>

    group by 	a.des_regi,  
	<isNotEmpty property="zona">
           		a.des_zona	,
    </isNotEmpty>	 
				a.COD_PAIS,
	<isNotEmpty property="fecha">
           		a.fec_soli ,
    </isNotEmpty>	 
           		a.COD_PERI 

  </select>

    <!-- OBTIENE LOS PEDIDOS ANULADOS PARA REFACTURACION  -->
  <select id="getPedidosFacturadosAnuladosByCriteria" parameterClass="java.util.Map" resultMap="pedidoFacturadoAnuladoResult">
            select anul.cod_pais,                                            
                   anul.cod_peri,                                            
                   anul.cod_clie,                                            
                   anul.nom_clie,                                            
                   anul.num_lote,                                            
                   to_char(anul.fec_fact,'dd-mm-yyyy') 	AS fec_fact, 
                   anul.val_nume_soli,                                       
                   to_char(anul.fec_anul,'dd-mm-yyyy') 	AS fec_anul, 
                   anul.ind_anul,                                            
                   anul.usu_digi,                                            
                   anul.fec_digi,                                            
                   anul.usu_modi,                                            
                   anul.fec_modi                                             
  			from ped_solic_cabec_anula anul
    		where  anul.COD_PAIS = #codigoPais# 	
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
					anul.COD_PERI =	#codigoPeriodo#	
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="codigoCliente">        
					anul.cod_clie =	#codigoCliente#	
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFacturacion">        
					anul.FEC_FACT = TO_DATE(#fechaFacturacion#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaAnulacion">        
					anul.FEC_ANUL = TO_DATE(#fechaAnulacion#,'DD/MM/YYYY')
    	</isNotEmpty>
  </select>

	<delete id="deleteTemporalDeudaMasiva">
        TRUNCATE TABLE INT_TMP_CONSO_CABEC
    </delete>

    <!-- INSERTA TEMPORAL DEUDA MASIVA  -->
	<insert id="insertTemporalDeudaMasiva" parameterClass="java.util.Map">

    	insert into INT_TMP_CONSO_CABEC B
        	(	B.COD_PAIS,
				B.COD_PERI,
				B.COD_CLIE,
				B.NUM_LOTE
			)
		SELECT                                                     
		  	A.COD_PAIS	, 
			A.COD_PERI 	,
			A.COD_CLIE	,
			A.NUM_LOTE
    FROM   INT_SOLIC_CONSO_CABEC A
    WHERE  A.COD_PAIS = #codigoPais#
           AND A.COD_PERI = #codigoPeriodo#
           AND A.IND_BLOQ_ADMI =      '0'
           AND A.IND_BLOQ_FINA =  '0'
           AND A.Ind_Erro_Deud = '2'
			and  A.IND_ADMI_CART='0'
           AND A.IND_OCS_PROC =   '0'
           AND A.IND_ERROR_SGPE = '0'
           AND A.IND_OCS_BLOQ =   '0'
           AND A.IND_ERRO_RECH =  '0'
           AND A.IND_ERRO_REMP = '0'
           AND A.IND_ERRO_NODE = '0'
		<isNotEmpty prepend="AND" property="fechaInicio">        
			FEC_SOLI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFin">        
	<![CDATA[  
			FEC_SOLI <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
	]]>
    	</isNotEmpty>
		<isNotEmpty property="regionList">        
			<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
            	A.COD_REGI = #regionList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty property="zonaList">        
			<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="AND">
            	A.COD_ZONA != #zonaList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="montoMaximoDeuda">        
	<![CDATA[  
			A.VAL_SALD_DEUD  <= #montoMaximoDeuda#
	]]>
    	</isNotEmpty>                                            

	</insert>

    <!-- OBTIENE LOS PEDIDOS PARA BLOQUEO MASIVO POR CONTROL  -->
  <select id="getBloqueoPedidosMasivoByCriteria" parameterClass="java.util.Map" resultMap="envioConsolidadoCabecResult">
    SELECT  
           a.COD_PAIS	AS CODPAIS,
           a.COD_PERI 	AS CODPERI,
	<isNotEmpty property="fecha">
           to_char(a.fec_soli,'dd-mm-yyyy') 	AS FECREC,
    </isNotEmpty>	 
	<isNull property="fecha">
           ' ' 	AS FECREC,
    </isNull>	 
           a.des_regi 	AS DESCREG, 
	<isNotEmpty property="zona">
           a.des_zona	AS DESZONA,             
    </isNotEmpty>	 
	<isNull property="zona">
           ' '	AS DESZONA,             
    </isNull>	 
	<isNotEmpty property="territorio">
           a.cod_terr	AS CODTERR,             
    </isNotEmpty>	 
	<isNull property="territorio">
           ' '	AS CODTERR,             
    </isNull>	 

           count(*)  	AS PEDIDOS
    FROM   INT_SOLIC_CONSO_CABEC A
    WHERE  A.COD_PAIS = #codigoPais#
           AND A.COD_PERI = #codigoPeriodo#
           
           <isNotEmpty prepend="AND" property="indicador">        
				IND_ERRO_RECH = 0 
				AND A.IND_ERRO_NODE = 0 
				AND A.IND_ANUL = 0
				AND A.IND_ERRO_REMP = 0 
				AND A.IND_ERROR_SGPE = 0 
				AND A.IND_OCS_PROC = 0

    	</isNotEmpty>
    	<isEmpty prepend="AND" property="indicador">        
				A.IND_ERRO_RECH = 0 
		AND A.IND_OCS_PROC = 0
    	AND IND_ERRO_MTMA = 0
    	AND (A.IND_ERRO_MTMI = 0 or (A.IND_ERRO_MTMI=0 AND A.IND_COMP_MONT = 1))
		AND	A.IND_ERROR_SGPE = 0 
		AND	A.IND_ERRO_NODE = 0 
		AND A.IND_ERRO_REMP = 0 
    	</isEmpty>
		

		<isNotEmpty prepend="AND" property="fechaInicio">        
			A.FEC_SOLI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFin">        
	<![CDATA[  
			A.FEC_SOLI <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
	]]>
    	</isNotEmpty>
		<isNotEmpty property="regionList">        
			<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
            	A.COD_REGI = #regionList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty property="zonaList">        
			<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
            	A.COD_ZONA = #zonaList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty property="territorioList">        
			<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
            	A.COD_TERR = #territorioList[]#
			</iterate>  
    	</isNotEmpty>                                            

    group by 	a.des_regi,  
	<isNotEmpty property="zona">
           		a.des_zona	,
    </isNotEmpty>	 
	<isNotEmpty property="territorio">
           		a.cod_terr	,
    </isNotEmpty>	 
				a.COD_PAIS,
	<isNotEmpty property="fecha">
           		a.fec_soli ,
    </isNotEmpty>	 
           		a.COD_PERI 

  </select>

	<delete id="deleteTemporalBloqueoMasivo">
        TRUNCATE TABLE INT_TMP_CONSO_CABEC_BLOQ
    </delete>

    <!-- INSERTA TEMPORAL BLOQUEO MASIVO  -->
	<insert id="insertTemporalBloqueoMasivo" parameterClass="java.util.Map">

    	insert into INT_TMP_CONSO_CABEC_BLOQ B
        	(	B.COD_PAIS,
				B.COD_PERI,
				B.COD_CLIE,
				B.NUM_LOTE
			)
		SELECT                                                     
		  	A.COD_PAIS	, 
			A.COD_PERI 	,
			A.COD_CLIE	,
			A.NUM_LOTE
    FROM   INT_SOLIC_CONSO_CABEC A
    WHERE  A.COD_PAIS = #codigoPais#
           AND A.COD_PERI = #codigoPeriodo#
		AND	A.IND_ERRO_RECH = 0 
		AND A.IND_OCS_PROC = 0
    	AND IND_ERRO_MTMA = 0
    	AND (A.IND_ERRO_MTMI = 0 or (A.IND_ERRO_MTMI=0 AND A.IND_COMP_MONT = 1))
		AND	A.IND_ERROR_SGPE = 0 
		AND	A.IND_ERRO_NODE = 0 
		AND A.IND_ERRO_REMP = 0 

		<isNotEmpty prepend="AND" property="fechaInicio">        
			A.FEC_SOLI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFin">        
	<![CDATA[  
			A.FEC_SOLI <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
	]]>
    	</isNotEmpty>
		<isNotEmpty property="regionList">        
			<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
            	A.COD_REGI = #regionList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty property="zonaList">        
			<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
            	A.COD_ZONA = #zonaList[]#
			</iterate>  
    	</isNotEmpty>                                            
		<isNotEmpty property="territorioList">        
			<iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
            	A.COD_TERR = #territorioList[]#
			</iterate>  
    	</isNotEmpty>                                            

	</insert>

    <!-- INSERTA PEDIDO FACTURADO ANULADO  -->
	<insert id="insertPedidoFacturadoAnulado" parameterClass="java.util.Map">
insert into ped_solic_cabec_anula
  (cod_pais, cod_peri, cod_clie, num_lote, fec_fact, val_nume_soli, 
  fec_anul, ind_anul, usu_digi, fec_digi, nom_clie)
  
select * from
( 
 select #codigoPais# ,
        #codigoPeriodo#,
        (select c.cod_clie from mae_clien c where c.oid_clie = t.clie_oid_clie ) CLIEN,         
        (select k.num_lote from int_solic_conso_cabec k 
                  where k.cod_pais = #codigoPais# and 
                        k.cod_peri = #codigoPeriodo# and 
                        exists (select null from mae_clien cl 
                                     where cl.oid_clie = t.clie_oid_clie  and                                 
                                           k.cod_clie = cl.cod_clie ) and
                        k.ind_ocs_proc = 1 and 
                        k.ind_proc_gp2 = 1 ) NUMLOTE ,
        t.fec_fact FECFACT ,
         t.val_nume_soli NUMBOLETA ,
        (select max(k.fec_fact) from ped_solic_cabec k where k.tspa_oid_tipo_soli_pais=2028 and
                              k.perd_oid_peri = t.perd_oid_peri and 
                              k.soca_oid_docu_refe = t.oid_soli_cabe and 
                              k.clie_oid_clie = t.clie_oid_clie ) FECANUL , 
        '0'  , 
        'ADMIN' ,
        sysdate ,
        (select TRIM(cl.VAL_NOM1)||' '||TRIM(cl.VAL_NOM2)||' '||TRIM(cl.VAL_APE1)||' '||TRIM(cl.VAL_APE2)        
        from mae_clien cl where cl.oid_clie = t.clie_oid_clie ) NOMBCLIE
      from ped_solic_cabec t
      where 
            t.perd_oid_peri = OCR_SOLIC_PEDIDOS.GEN_FN_DEVUELVE_OID_CRA_PERIO(#codigoPeriodo#)
            and exists ( select gr.oid_grup_proc from ped_grupo_proce gr where t.grpr_oid_grup_proc = gr.oid_grup_proc and  gr.cod_grup_proc='GP5'  )
             and t.esso_oid_esta_soli = 4  
             and t.tspa_oid_tipo_soli_pais = 2001 
             and t.num_unid_aten_tota > 0 
             and t.ind_inte_lari_gene =1     
             and exists (select null from mae_clien k where k.oid_clie = t.clie_oid_clie   
			 		<isNotEmpty prepend="AND" property="codigoCliente">        
						k.cod_clie = #codigoCliente#
					</isNotEmpty>                                
						)
                      
      and exists (select null from ped_solic_cabec k where k.tspa_oid_tipo_soli_pais=2028 and
                              k.perd_oid_peri = t.perd_oid_peri and 
                              k.soca_oid_docu_refe = t.oid_soli_cabe and
                              k.clie_oid_clie = t.clie_oid_clie
                              )      
                               
      and exists (select null from ped_solic_cabec g 
                  where g.tspa_oid_tipo_soli_pais = 2037 and
                         g.perd_oid_peri = t.perd_oid_peri and 
                         g.grpr_oid_grup_proc=5 and 
                         t.oid_soli_cabe = g.soca_oid_soli_cabe and 
                         g.ind_oc=1 and
                         g.clie_oid_clie = t.clie_oid_clie
                         )       
           
	and exists (select null from int_solic_conso_cabec k 
                  where k.cod_pais = #codigoPais# and 
                        k.cod_peri = #codigoPeriodo# and 
                        exists (select null from mae_clien cl 
                                     where cl.oid_clie = t.clie_oid_clie  and                                 
                                           k.cod_clie = cl.cod_clie ) and
                        k.ind_ocs_proc = 1 and 
                        k.ind_proc_gp2 = 1 )      
	
    and t.clie_oid_clie is not null
) tab
where not exists (select null from ped_solic_cabec_anula a 
                         where a.cod_pais=#codigoPais#
                               and a.cod_peri=#codigoPeriodo#
                               and a.cod_clie=tab.clien
                               and a.num_lote=tab.numlote)
           
	</insert>

    <!-- ELIMINA PEDIDO MASIVO FACTURADO ANULADO  -->
    <delete id="deletePedidoMasivoFacturadoAnulado" parameterClass="java.util.Map">
		DELETE FROM ped_tmp_solic_cabec_anula
    </delete>

    <!-- INSERTA PEDIDO MASIVO FACTURADO ANULADO  -->
	<insert id="insertPedidoMasivoFacturadoAnulado" parameterClass="java.util.Map">

	insert into ped_tmp_solic_cabec_anula
  		(cod_pais, cod_peri, cod_clie, fec_fact, val_nume_soli, fec_anul, nom_clie)
 	select #codigoPais# ,
        #codigoPeriodo#,
        (select c.cod_clie from mae_clien c where c.oid_clie = t.clie_oid_clie ) CLIEN,         
        t.fec_fact FECFACT ,
         t.val_nume_soli NUMBOLETA ,
        (select max(k.fec_fact) from ped_solic_cabec k where k.tspa_oid_tipo_soli_pais=2028 and
                              k.perd_oid_peri = t.perd_oid_peri and 
                              k.soca_oid_docu_refe = t.oid_soli_cabe and 
                              k.clie_oid_clie = t.clie_oid_clie ) FECANUL , 
        (select TRIM(cl.VAL_NOM1)||' '||TRIM(cl.VAL_NOM2)||' '||TRIM(cl.VAL_APE1)||' '||TRIM(cl.VAL_APE2)        
        from mae_clien cl where cl.oid_clie = t.clie_oid_clie ) NOMBCLIE
      from ped_solic_cabec t
      where 
            t.perd_oid_peri = OCR_SOLIC_PEDIDOS.GEN_FN_DEVUELVE_OID_CRA_PERIO(#codigoPeriodo#)
            and exists ( select gr.oid_grup_proc from ped_grupo_proce gr where t.grpr_oid_grup_proc = gr.oid_grup_proc and  gr.cod_grup_proc='GP5'  )
             and t.esso_oid_esta_soli = 4  
             and t.tspa_oid_tipo_soli_pais = 2001 
             and t.num_unid_aten_tota > 0 
             and t.ind_inte_lari_gene =1     
                      
      		and exists (select null from ped_solic_cabec k where k.tspa_oid_tipo_soli_pais=2028 and
                              k.perd_oid_peri = t.perd_oid_peri and 
                              k.soca_oid_docu_refe = t.oid_soli_cabe and
                              k.clie_oid_clie = t.clie_oid_clie and
                              k.fec_fact = to_date(#fechaAnulacion#,'dd/mm/yyyy')
                              )      
                               
      		and exists (select null from ped_solic_cabec g 
                  where g.tspa_oid_tipo_soli_pais = 2037 and
                         g.perd_oid_peri = t.perd_oid_peri and 
                         g.grpr_oid_grup_proc=5 and 
                         t.oid_soli_cabe = g.soca_oid_soli_cabe and 
                         g.ind_oc=1 and
                         g.clie_oid_clie = t.clie_oid_clie
                         )       
	</insert>

    <parameterMap id="updateCargaPedidosMasivoAnuladosParams" class="map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codusuario"             	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>

    <procedure id="updateCargaPedidosMasivoAnulados" 
   			  parameterMap="updateCargaPedidosMasivoAnuladosParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_CARGA_PEDID_ANULA(?,?,?)}
    </procedure>  

    <select id="getConsultoraPedidoCabeceraByCriteria" parameterClass="java.util.Map" resultMap="consultoraPedidoCabeceraResult">
       SELECT  cl.COD_CLIE  ,
               GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cl.COD_CLIE, 'COD_REGI') COD_REGI,
               GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cl.COD_CLIE, 'DES_REGI') DES_REGI,
               GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cl.COD_CLIE, 'COD_ZONA') COD_ZONA,
               GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cl.COD_CLIE, 'DES_ZONA') DES_ZONA,
               nvl((select 
                      (select co.cod_peri from seg_perio_corpo co
                          where  exists (select null from cra_perio cra 
                                                where cra.peri_oid_peri = co.oid_peri and 
                                                      cra.oid_peri = t.perd_oid_peri ))
                from mae_clien_prime_conta t where t.clie_oid_clie = cl.oid_clie ),'-') CAM_PRIM,
               nvl((select trim(val_text_comu) from mae_clien_comun c, mae_tipo_comun tc 
                       where c.ticm_oid_tipo_comu = tc.oid_tipo_comu and 
                             c.clie_oid_clie = cl.oid_clie and 
                             tc.cod_tipo_comu = 'TF' ),'-') NUM_TEL ,
                nvl((select co.cod_peri from seg_perio_corpo co
                        where  exists (select null from cra_perio cra 
                                            where cra.peri_oid_peri = co.oid_peri and 
                                                  cra.oid_peri = 
                                                   (select max(cab.perd_oid_peri)
                                                      from ped_solic_cabec cab
                                                      where cab.clie_oid_clie = cl.oid_clie 
                                                            and exists ( select gr.oid_grup_proc from ped_grupo_proce gr where cab.grpr_oid_grup_proc = gr.oid_grup_proc and  gr.cod_grup_proc='GP5'  )
                                                            and cab.ind_oc = 1
                                                            and cab.tspa_oid_tipo_soli_pais = 2037 ) )),'-') CAMP_ULT ,
               (select (select gen.val_i18n from gen_i18n_sicc_comun gen 
                           where gen.attr_enti = 'MAE_ESTAT_CLIEN' and
                                 gen.val_oid = ad.esta_oid_esta_clie )               
                       from mae_clien_datos_adici ad where ad.clie_oid_clie = cl.oid_clie ) COD_EST ,
			         TRIM(cl.VAL_APE1) || ' ' ||
		           TRIM(cl.VAL_APE2) || ', ' || 
			         TRIM(cl.VAL_NOM1) as NOM_CLI
		  FROM MAE_CLIEN cl,
		  	   SEG_PAIS pa
		 WHERE pa.COD_PAIS = #codigoPais#
			   <isNotEmpty prepend="AND" property="codigo">
			      cl.COD_CLIE LIKE #codigo#
			   </isNotEmpty>
          AND   cl.PAIS_OID_PAIS = pa.OID_PAIS


	</select>

    <!-- OBTIENE Pedidos cabecera Consultora  -->
	<resultMap id="consultorasResult" class="cabeceraConsultora">       
			<result property="codPais"			    column="COD_PAIS"/>
			<result property="periodoFacturacion"   column="COD_PERI"/>
			<result property="codigoConsultora"	    column="COD_CLIE"/>
			<result property="nombreConsultora"		column="NOM_CLIE"/>
			<result property="numItems" 	        column="NUM_ITEM"/>
			<result property="totalUnidades" 	    column="NUM_UNID"/>
			<result property="totalTotal"			column="VAL_MONT_PEDI"/>
			<result property="fechaFacturacion"		column="FEC_SOLI"/> 
			<result property="estadoRegistro"		column="EST_REGI"/> 
			<result property="numLote"   		    column="NUM_LOTE"/>
			<result property="indicador"   		    column="IND_OCS"/>
			<result property="zona"   		    	column="DES_ZONA"/>
	  </resultMap>
	  
	  <!-- OBTIENE PEDIDOS SEGUN LOS CRITERIOS PERIODO,FECHA FACTURACION -->
  	<select id="getSearchPedidosByCriteria" parameterClass="java.util.Map" resultMap="consultorasResult">
			SELECT                                                 
					CTRL.COD_PAIS                   ,    
					CTRL.COD_PERI					,                                        
					CTRL.COD_CLIE					,                                
					CTRL.NOM_CLIE					,                                
					CTRL.NUM_ITEM					,                                
					CTRL.NUM_UNID					,                                
					CTRL.VAL_MONT_PEDI		,
					to_char(CTRL.fec_soli, 'dd/mm/yyyy')	FEC_SOLI,
					CTRL.est_regi,
                    CTRL.NUM_LOTE,
                    CTRL.IND_OCS    
,CTRL.DES_ZONA                            
			FROM PED_SOLIC_DIGIT_CABEC CTRL                                    
		<dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoPaisSearch">           
				CTRL.COD_PAIS = #codigoPaisSearch#                             
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="periodoSearch">        
				CTRL.COD_PERI = #periodoSearch#                          
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="fechaFacturacionSearch">        
				CTRL.FEC_SOLI = to_Date(#fechaFacturacionSearch#, 'dd/mm/yyyy')                          
			</isNotEmpty>  
			<isNotEmpty prepend="AND" property="indicadorOCS">        
				CTRL.IND_OCS = #indicadorOCS#                          
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="codigoConsultora">        
				CTRL.COD_CLIE = #codigoConsultora#                          
			</isNotEmpty>
			
		<isNotEmpty prepend="AND" property="flag">        
			CTRL.IND_OCS = '1' 
		                                          
      		and exists (select null from PED_SOLIC_DIGIT_detal det
                        where  det.cod_pais = CTRL.COD_PAIS  and
				   			   det.cod_peri = CTRL.COD_PERI  and
				               det.cod_clie = CTRL.COD_CLIE and
                               det.num_lote = CTRL.num_lote and
                               det.IND_OCS_DETAL = '0' 
                        )
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="check">        
				CTRL.VAL_MONT_PEDI > #maximo#                          
		</isNotEmpty>  

		<isNotEmpty prepend="AND" property="region">        
				CTRL.COD_REGI = #region#                          
		</isNotEmpty> 
		
		<isNotEmpty prepend="AND" property="zona">        
				CTRL.COD_ZONA = #zona#                          
		</isNotEmpty> 
		
		</dynamic>                                                   

			ORDER BY                                                   
				CTRL.COD_PERI                                            
	  </select>    


	  <!-- Insercion de Solicitudes de credito por zona-->
	  
	  <insert id="insertSolicitudesxZona" parameterClass="solicitudesZona">
    	INSERT INTO INT_EVI_RECEP_PRIME_PEDID(
    		COD_ZONA, 
			FEC_RECE, 
			COD_PERI, 
			NUM_PRIM_PEDI,
			NUM_LOTE
		) 
		VALUES(
		  #codigoZona# ,
		  to_date(#fechaFacturacion#, 'dd/mm/yyyy')	,
		  #codigoPeriodo#		, 
		  #numSolicitudes#      ,
		  #numLote#
        )
	</insert>    

    <!-- OBTIENE Pedidos detalle Pedido Consultora  -->
 <resultMap id="detallePedidosConsultorasResult" class="detallePedidosConsultora">       
    <result property="codigoVta"     		column="COD_VENT" />				
    <result property="descripcion"   		column="DES_PROD" />                            
    <result property="precioCat"     		column="VAL_PREC_CATA" />                       
    <result property="unidades"      		column="VAL_UNID_DEM" />                        
    <result property="total"         		column="VAL_PREC_TOTA" />                       
    <result property="codPais"       		column="COD_PAIS"  />                           
    <result property="codPeriodo"    		column="COD_PERI" />                            
    <result property="codCliente"    		column="COD_CLIE"  />                           
    <result property="fechaSolicitud"		column="FEC_SOLI"	   />                   
    <result property="numPosicion"   		column="NUM_POSIC"		/>  
	<result property="numLote"   			column="NUM_LOTE"		/>  
    <result property="indicadorOCS"   			column="IND_OCS_DETAL" />
           
 </resultMap>

<resultMap id="detallePedidosActualizacionResult" class="detallePedidosActualizacion">       
  		  <result property="codigoPais"     		column="COD_PAIS" />
          <result property="codigoPeriodo"     		column="COD_PERI" />
          <result property="codigoCliente"     		column="COD_CLIE" />
          <result property="codigoVta"     		    column="COD_VENT" />
          <result property="tipoPosicion"     		column="TIP_POSIC" />
          <result property="descProd"     		    column="DES_PROD" />
          <result property="valUnidadDemanda"     	column="VAL_UNID_DEM" />
          <result property="estado"     		    column="STA_PROC" />
          <result property="indCompl"     		    column="IND_COMP_MTMI" />
          <result property="valUnidadCompletadas"  	column="VAL_UNID_COMP" />
          <result property="fechaSolicitud"     	column="FEC_SOLI" />
          <result property="indErrRech"     		column="IND_ERRO_RECH" />
          <result property="numLote"     		    column="NUM_LOTE" />
          <result property="valorLimiteVent"     	column="VAL_LIMI_CTRL_VENT" />
          <result property="indErrorSSE"     		column="IND_ERRO_SSE" />
		  <result property="codZona"     		    column="COD_ZONA" />          
		  <result property="zona"     		        column="ZONA" />
		  <result property="region"     		    column="REGION" />
		  <result property="nombreCliente"     		column="NOM_CLIEN" />
		  <result property="telefonoCliente"     	column="TEL_CLIEN" />

 </resultMap>

 <resultMap id="getSearchDetallesByCriteriaResult" class="java.util.HashMap">       
  		  <result property="codigoPais"     		column="COD_PAIS" />
          <result property="codigoPeriodo"     		column="COD_PERI" />
          <result property="codigoCliente"     		column="COD_CLIE" />
          <result property="codigoVta"     		    column="COD_VENT" />
          <result property="tipoPosicion"     		column="TIP_POSIC" />
          <result property="descProd"     		    column="DES_PROD" />
          <result property="valUnidadDemanda"     	column="VAL_UNID_DEM" />
		  <result property="factorRepeticion"     	column="VAL_FACT_REPE" />
		  <result property="totalUnidades"     		column="TOTAL_UNIDADES" />
          <result property="estado"     		    column="STA_PROC" />
          <result property="indCompl"     		    column="IND_COMP_MTMI" />
          <result property="valUnidadCompletadas"  	column="VAL_UNID_COMP" />
          <result property="fechaSolicitud"     	column="FEC_SOLI" />
          <result property="indErrRech"     		column="IND_ERRO_RECH" />
          <result property="numLote"     		    column="NUM_LOTE" />
          <result property="valorLimiteVent"     	column="VAL_LIMI_CTRL_VENT" />
          <result property="indErrorSSE"     		column="IND_ERRO_SSE" />
		  <result property="codZona"     		    column="COD_ZONA" />          
		  <result property="zona"     		        column="ZONA" />
		  <result property="region"     		    column="REGION" />
		  <result property="nombreCliente"     		column="NOM_CLIEN" />
		  <result property="telefonoCliente"     	column="TEL_CLIEN" />
		  <result property="fechaFacturacion"     	column="FEC_PROG_FACT" />
		  <result property="precio"     			column="VAL_PREC" />
		  <result property="origen"		column="VAL_ORIG" />
		  <result property="indicadorPROL"			column="IND_PROL" />
		  <result property="totalPedidoGestion"			column="VAL_PEDI_GEST" />
		  <result property="tipoCUV"			column="TIP_CUV" />
		  <result property="numDocu"			column="DOCU_NUM_DOCU" />
		  <result property="repeticion"			column="VAL_FACT_REPE" />
 </resultMap>

 <!-- OBTIENE pedidoxZona segun su pk: codigoZona, CodigoPeriodo, FechaFacturacion, Numero Lote  -->
	  <resultMap id="solicitudesZonaResult" class="solicitudesZona">       
				<result property="codigoZona"			    column="COD_ZONA"            			/> 
				<result property="fechaFacturacion"         column="FEC_RECE"            			/> 
				<result property="codigoPeriodo"	        column="COD_PERI"             				/> 
				<result property="numSolicitudes"		    column="NUM_PRIM_PEDI"     	/> 
				<result property="numLote" 	                column="NUM_LOTE" /> 
	  </resultMap>
	  
	  <!-- OBTIENE DETLLE PEDIDOS SEGUN LOS CRITERIOS -->
  	<select id="getDetallePedidosConsultoraByCriteria" parameterClass="java.util.Map" resultMap="detallePedidosConsultorasResult">
        SELECT DET.COD_PAIS,             
               DET.COD_PERI,             
               DET.COD_CLIE,             
               DET.FEC_SOLI,             
               DET.COD_VENT,             
               DET.NUM_POSIC,            
               DET.DES_PROD,             
               DET.VAL_UNID_DEM,         
               DET.VAL_PREC_CATA,        
               DET.VAL_PREC_TOTA,
               DET.NUM_LOTE,
			   DET.IND_OCS_DETAL
          FROM PED_SOLIC_DIGIT_DETAL DET 
		<dynamic prepend="where">     
		  
		                               
			<isNotEmpty prepend="AND" property="codigoPais">           
				DET.COD_PAIS = #codigoPais#                             
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoPeriodo">        
				DET.COD_PERI = #codigoPeriodo#                          
			</isNotEmpty>                                            
			                                           
			<isNotEmpty prepend="AND" property="numLote">        
				DET.NUM_LOTE = #numLote#
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoVenta">        
				DET.COD_VENT = #codigoVenta#                          
			</isNotEmpty>    
             AND DET.COD_CLIE = #codigoCliente#                                                 
		</dynamic>                                                   
	  </select>    

  <select id="getPedidosxZonaByPK" parameterClass="java.util.Map" resultMap="solicitudesZonaResult">
			SELECT                                                     
			  COD_ZONA			,
			  TO_CHAR(FEC_RECE,'dd/MM/YYYY') AS FEC_RECE , 
			  COD_PERI          , 
			  NUM_PRIM_PEDI     ,
			  NUM_LOTE
		  FROM INT_EVI_RECEP_PRIME_PEDID
		<dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoZona">           
				COD_ZONA = #codigoZona#                             
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="fechaFacturacion">        
				FEC_RECE = TO_DATE(#fechaFacturacion#,'dd/mm/yyyy')                          
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoPeriodo">        
				COD_PERI = #codigoPeriodo#                          
			</isNotEmpty>        
			<isNotEmpty prepend="AND" property="numLote">        
				NUM_LOTE = #numLote#
			</isNotEmpty>                                            
		</dynamic>
	  </select>

    <delete id="deleteDetallePedido" parameterClass="java.util.Map">
        DELETE FROM ped_solic_digit_detal DET
		<dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoPais">           
				DET.COD_PAIS = #codigoPais#                             
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoPeriodo">        
				DET.COD_PERI = #codigoPeriodo#                          
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoCliente">        
				DET.COD_CLIE = #codigoCliente#                          
			</isNotEmpty>                                            
			<!--<isNotEmpty prepend="AND" property="fechaSolicitud">        
				DET.FEC_SOLI = to_date(#fechaSolicitud#,'dd/mm/yyyy')	   
			</isNotEmpty>-->                                            
			<isNotEmpty prepend="AND" property="numLote">        
				DET.NUM_LOTE = #numLote#                          
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoVenta">        
				DET.COD_VENT = #codigoVenta#                          
			</isNotEmpty>                                            
		</dynamic>                                                   
    </delete>

	<update id="removeCabeceraPedido" parameterClass="cabeceraConsultora">

        update ped_solic_digit_cabec
           set usu_modi = #auditInfo.updatedBy# 	, 
               fec_modi = #auditInfo.lastUpdated# ,  
               est_regi = #estadoRegistro#
         where cod_pais =  #codPais# 
           and cod_peri =  #periodoFacturacion#	
           and cod_clie =  #codigoConsultora#			  
		   and num_lote = #numLote#	
           <!--and fec_soli =  to_date(#fechaFacturacion#,'dd/mm/yyyy')	-->

	</update>	

	<!-- obtiene listado de pedidos por zona por criterio: codpais,codPeriodo,zona,fecha  -->
	  <select id="getCapturaSolicitudesCreditoByCriteria" parameterClass="java.util.Map" resultMap="solicitudesZonaResult">
			SELECT                                                     
			  COD_ZONA			,
			  TO_CHAR(FEC_RECE,'dd/MM/YYYY') AS FEC_RECE , 
			  COD_PERI          , 
			  NUM_PRIM_PEDI     ,
			  NUM_LOTE				
			FROM INT_EVI_RECEP_PRIME_PEDID   INTEVI                                  
		<dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="periodoSearch">        
				INTEVI.COD_PERI = #periodoSearch#                          
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="fechaFacturacionSearch">        
				INTEVI.FEC_RECE = TO_DATE(#fechaFacturacionSearch#,'dd/mm/yyyy')                          
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="zonaSearch">        
				INTEVI.COD_ZONA = #zonaSearch#                          
			</isNotEmpty>                                            
	
		</dynamic>                                                   
			ORDER BY                                                   
				INTEVI.COD_PERI                                            
	  </select>	 
		 
		<!-- Actualiza de Solicitudes de credito por zona-->
		<update id="updateCapturaSolicitudCredito" parameterClass="solicitudesZona">
			UPDATE INT_EVI_RECEP_PRIME_PEDID INTEVI
			SET 
				 INTEVI.NUM_PRIM_PEDI	= #numSolicitudes#			 
			WHERE
				 INTEVI.COD_ZONA    = #codigoZona# AND 
			     INTEVI.FEC_RECE    = TO_DATE(#fechaFacturacion#,'dd/mm/yyyy') AND
				 INTEVI.COD_PERI	= #codigoPeriodo# 	AND
			     INTEVI.NUM_LOTE	= #numLote#		
		</update>

				<!-- Devuelve el numero de lotes segun el periodo -->
        <select id="getNumLotesByPeriodo" parameterClass="java.util.Map" resultClass="string">
			select t.NUM_LOTE from bas_ctrl_fact t where t.cod_pais = #pais# and t.cod_peri = #periodo#
		</select>

		<select id="getNumLotesByPais" parameterClass="java.util.Map" resultClass="string">
			select LPAD((to_number(num_lote)+1),8,0)
			from BAS_CTRL_FACT BAS
			where BAS.cod_peri = (select max(cod_peri) from BAS_CTRL_FACT) and 
			      BAS.cod_pais = #codigoPais#
		</select>

	 <!-- OBTIENE DETLLE PEDIDOS SEGUN ID tomando el munero de lotes -->
  	<select id="getDetallePedidoByFilter" parameterClass="java.util.Map" resultMap="detallePedidosConsultorasResult">
        SELECT DET.COD_PAIS,             
               DET.COD_PERI,             
               DET.COD_CLIE,             
               DET.FEC_SOLI,             
               DET.COD_VENT,             
               DET.NUM_POSIC,            
               DET.DES_PROD,             
               DET.VAL_UNID_DEM,         
               DET.VAL_PREC_CATA,        
               DET.VAL_PREC_TOTA,
			   DET.NUM_LOTE,
               DET.IND_OCS_DETAL 
          FROM PED_SOLIC_DIGIT_DETAL DET 
		<dynamic prepend="where">                                    
			<!--<isNotEmpty prepend="AND" property="codigoPais">-->           
				DET.COD_PAIS = #codigoPais# AND                            
			<!--</isNotEmpty>-->                                            
			<!--<isNotEmpty prepend="AND" property="codigoPeriodo">-->        
				DET.COD_PERI = #codigoPeriodo# AND                         
			<!--</isNotEmpty>-->                                            
			<!--<isNotEmpty prepend="AND" property="codigoCliente">-->        
				DET.COD_CLIE = #codigoCliente# AND                         
			<!--</isNotEmpty>-->                                            
			<!--<isNotEmpty prepend="AND" property="numLote">-->        
				DET.NUM_LOTE = #numLote# AND
			<!--</isNotEmpty>-->            
                DET.IND_OCS_DETAL = '0'                                
		</dynamic>                                                   
	  </select>

	<parameterMap id="executeProcessParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeEnviarDetallesDigitados" 
   			  parameterMap="executeProcessParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_DIGIT_CONSO_DETAL(?,?,?)}
    </procedure> 

     <parameterMap id="executeConsolidadoPedidosDigitadosParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoDocumento"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
   </parameterMap>
   
  <procedure id="executeConsolidadoPedidosDigitados" parameterMap="executeConsolidadoPedidosDigitadosParams" >											
		{call INT_PKG_OCCRR.OCR_PR_SOLIC_CONSO_PEDID(?,?,?,?)}												
  </procedure>

	<select id="getCodConsultora" parameterClass="java.util.Map" resultClass="string">
		select a.cod_clie
		from PED_SOLIC_DIGIT_CABEC a 
		where a.cod_clie=#codCliente# and
		      a.cod_pais =#codPais# and
		      a.cod_peri =#periodo# and
		      a.num_lote = #numeroLote#	 
	</select>

	<update id="updateCabeceraPedido" parameterClass="cabeceraConsultora">
    <![CDATA[
	  update ped_solic_digit_cabec
         set num_item = (select count(distinct cod_vent) 
							from PED_SOLIC_DIGIT_DETAL det where det.cod_clie=#codigoConsultora# AND det.cod_peri = #periodoFacturacion# ) ,                                            
             num_unid = (select sum(det.val_unid_dem) 
							from PED_SOLIC_DIGIT_DETAL det where det.cod_clie=#codigoConsultora# AND det.cod_peri = #periodoFacturacion# )	,                                        
             val_mont_pedi  = (select sum(det.val_unid_dem*det.val_prec_cata) 
								  from PED_SOLIC_DIGIT_DETAL det where det.cod_clie=#codigoConsultora# AND det.cod_peri = #periodoFacturacion# )  ,
			 ind_ocs = (select decode(count(det.ind_ocs_detal), 0, ind_ocs, '0') from ped_solic_digit_detal det where det.cod_clie = #codigoConsultora# and det.ind_ocs_detal = '1' AND det.cod_peri = #periodoFacturacion# ),					  
             usu_modi = 	      #auditInfo.updatedBy# 	,                                
             fec_modi = 	      #auditInfo.lastUpdated#  
			
  		where cod_pais = 	  #codPais#                              
		   and cod_peri = 	  #periodoFacturacion#	                         
		   and cod_clie =     #codigoConsultora#			         
		   and num_lote =     #numLote#	 		                 
   		 ]]>
	</update>
	
	<select id="getNumeroUnidades" parameterClass="java.util.Map" resultClass="string">
		SELECT a.VAL_UNID_MAX FROM BAS_CTRL_FACT a where a.cod_pais = #pais# and a.cod_peri = #periodo#
	</select>

	<select id="getSearchDetallesByCriteria" parameterClass="java.util.Map" resultMap="getSearchDetallesByCriteriaResult">
        select  det.COD_PAIS,
          det.COD_PERI,
          det.COD_CLIE,
          det.COD_VENT,
          det.TIP_POSIC,
          det.DES_PROD,
          det.VAL_UNID_DEM,
		  det.VAL_FACT_REPE,
          det.VAL_UNID_DEM * DET.VAL_FACT_REPE TOTAL_UNIDADES,
          det.STA_PROC,
          det.IND_COMP_MTMI,
          det.VAL_UNID_COMP,
          to_char(cab.FEC_SOLI,'dd/mm/yyyy') as FEC_SOLI,
          det.IND_ERRO_RECH,
          det.NUM_LOTE,
          '' as VAL_LIMI_CTRL_VENT, <!-- det.VAL_LIMI_CTRL_VENT, --> 
          det.IND_ERRO_SSE,
		  cab.cod_zona as COD_ZONA,
          cab.des_zona as ZONA,	
          cab.des_regi as REGION,
		  nvl(gen_pkg_gener.gen_fn_clien_datos(det.COD_CLIE,'NOM_CLIE'),'-') AS NOM_CLIEN,    
          nvl(gen_pkg_gener.gen_fn_clien_datos_oid(OCR_SOLIC_PEDIDOS.GEN_FN_DEVUELVE_ID_CLIENTE(det.COD_CLIE),'NUM_TELE'),'-') AS TEL_CLIEN,
		  to_char(cab.FEC_PROG_FACT,'dd/mm/yyyy') as FEC_PROG_FACT,
		  det.VAL_PREC_CATA_UNIT_LOCA as VAL_PREC,
		  SAC_PKG_REPOR.SAC_FN_DEVUE_TIPO_ORIGE_DOCUM(cab.sec_nume_docu) AS VAL_ORIG,
	      DECODE(cab.ind_vali_prol,'1','SI','NO') IND_PROL,
	      (select sum(val_unid_dem*val_prec_cata_unit_loca) from int_solic_conso_detal where sec_nume_docu_cabe=det.sec_nume_docu_cabe) AS VAL_PEDI_GEST,
		(SELECT (SELECT v.val_i18n FROM gen_i18n_sicc_pais v WHERE v.attr_enti = 'PRE_ESTRA' AND v.idio_oid_idio = 1 AND v.val_oid = a.oid_estr) des_estra
		  FROM pre_estra a, pre_ofert b, pre_ofert_detal c
		 WHERE a.oid_estr = b.coes_oid_estr
		   AND b.oid_ofer = c.ofer_oid_ofer
		   AND c.oid_deta_ofer = det.ofde_oid_deta_ofer) AS TIP_CUV,
	      cab.docu_num_docu
  		from int_solic_conso_detal det,
	         int_solic_conso_cabec cab
  		where
			cab.cod_pais = det.cod_pais and
	        cab.cod_peri = det.cod_peri and
            cab.cod_clie = det.cod_clie and
            cab.num_lote = det.num_lote and     
            det.cod_pais = #codigoPaisSearch#
             			
			<isNotEmpty prepend="AND" property="periodoSearch">           
        		det.cod_peri = #periodoSearch# 
			</isNotEmpty>			
		    <isNotEmpty prepend="AND" property="codConsultora">           
		        det.cod_clie = #codConsultora# 
			</isNotEmpty>
		    <isNotEmpty prepend="AND" property="unidades">           
        		det.VAL_UNID_DEM > #unidades# 
			</isNotEmpty>    
			<isNotEmpty prepend="AND" property="repeticion">           
        		det.VAL_FACT_REPE = #repeticion# 
			</isNotEmpty>
			<isNotEmpty property="arrCodigoVenta">        
				<iterate prepend="AND" property="arrCodigoVenta" open="(" close=")" conjunction="OR">
			       	det.COD_VENT = #arrCodigoVenta[]#
				</iterate>  
			</isNotEmpty>          
			
			<![CDATA[
			  AND ocr_solic_pedidos.ocr_fn_devue_grupo_proce(nvl(cab.soca_oid_soli_cabe_refe,0)) <= 1
			]]>
        	
        		and exists( select null from int_solic_conso_cabec cabe
                		        where cabe.cod_pais = det.cod_pais and
                        		      cabe.cod_peri = det.cod_peri and
                              		cabe.cod_clie = det.cod_clie and
                              		cabe.num_lote = det.num_lote                  
									<isNotEmpty prepend="AND" property="fechaFacturacionSearch">           
								        cabe.fec_soli = to_date(#fechaFacturacionSearch#,'dd/mm/yyyy')
									</isNotEmpty>               
                                    <isNotEmpty prepend="AND" property="region">             
	                              		cabe.cod_regi = #region# 
									</isNotEmpty>
									<isNotEmpty property="zona">        
										<iterate prepend="AND" property="zona" open="(" close=")" conjunction="OR">
							            	cabe.cod_zona = #zona[]#
										</iterate>  
							    	</isNotEmpty>
                      )                                           
  	</select>
  	    
	<select id="getDetalleById" parameterClass="java.util.Map" resultMap="detallePedidosActualizacionResult">
		select det.COD_PAIS,
          det.COD_PERI,
          det.COD_CLIE,
          det.COD_VENT,
          det.TIP_POSIC,
          det.DES_PROD,
          det.VAL_UNID_DEM,
          det.STA_PROC,
          det.IND_COMP_MTMI,
          det.VAL_UNID_COMP,
          det.FEC_SOLI,
          det.IND_ERRO_RECH,
          det.NUM_LOTE,
          '' as VAL_LIMI_CTRL_VENT, <!-- det.VAL_LIMI_CTRL_VENT, --> 
          det.IND_ERRO_SSE,
          cab.cod_zona as COD_ZONA,
		  cab.des_zona as ZONA,
          cab.des_regi as REGION,
		  nvl(gen_pkg_gener.gen_fn_clien_datos(det.COD_CLIE,'NOM_CLIE'),'-') AS NOM_CLIEN,    
          nvl(gen_pkg_gener.gen_fn_clien_datos_oid(OCR_SOLIC_PEDIDOS.GEN_FN_DEVUELVE_ID_CLIENTE(det.COD_CLIE),'NUM_TELE'),'-') AS TEL_CLIEN
   
		from int_solic_conso_detal det,
	         int_solic_conso_cabec cab
		where cab.cod_pais = det.cod_pais and
          	  cab.cod_peri = det.cod_peri and
              cab.cod_clie = det.cod_clie and
              cab.num_lote = det.num_lote and     
              det.COD_PAIS = #codigoPais# and
		      det.COD_PERI = #codigoPeriodo# and
		      det.COD_CLIE = #codigoCliente# and
		      det.NUM_LOTE = #numLote# and
		      det.COD_VENT = #codigoVta#	
	</select>

	<update id="updateUnidades" parameterClass="java.util.Map">
			update int_solic_conso_detal det 
   			set det.val_unid_dem = #unidades#,
		        det.usu_modi     = #usuario# ,
		        det.fec_modi     = sysdate 
 			where det.COD_PAIS = #codigoPais# and
		    	  det.COD_PERI = #codigoPeriodo# and
		    	  det.COD_CLIE = #codigoCliente# and
		    	  det.NUM_LOTE = #numLote# and
		     	  det.COD_VENT = #codigoVta#
	</update>

	<parameterMap id="executeActualizaNumeroLoteParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>

    <procedure id="executeActualizaNumeroLote" 
   			  parameterMap="executeActualizaNumeroLoteParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_ACTUA_LOTE_PERIO(?,?)}
    </procedure>
   
	<select id="getCuponEquivalente" parameterClass="java.util.Map" resultClass="string">
		SELECT ocr_solic_pedidos.gen_fn_remp_cupon(#codigoPais#,#codigoPeriodo#,#codCupon#) FROM dual
	</select>

	<!-- OBTIENE LISTA DE CAMPANHAS ACTIVAS -->
	<select id="getCampanhasActivasByCriteria" parameterClass="java.util.Map" resultClass="string">
		SELECT  ctrl.cod_peri  
		FROM BAS_CTRL_FACT CTRL                                    
		<dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoPais">           
				CTRL.COD_PAIS = #codigoPais#                             
    		</isNotEmpty>                                            		
			<isNotEmpty prepend="AND" property="estadoCampanha">        
				CTRL.sta_camp = #estadoCampanha#                          
    		</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="indicadorActiva">        
				CTRL.ind_camp_act = #indicadorActiva#                          
    		</isNotEmpty>                                            
		</dynamic>                                                   
		ORDER BY                                                   
			CTRL.COD_PERI                                            
    </select>
	
	<select id="getOCRDetalladoAptasList" parameterClass="java.util.Map" resultMap="detalladoAptasResult">
	       SELECT  A.COD_CLIE COD_CLIE,
		           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.COD_CLIE, 'NOM_CLIE') NOM_CLIE,
		           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.COD_CLIE, 'COD_REGI') COD_REGI,
		           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.COD_CLIE, 'DES_REGI') DES_REGI,
		           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.COD_CLIE, 'COD_ZONA') COD_ZONA,
		           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.COD_CLIE, 'DES_ZONA') DES_ZONA,
		           A.COD_PAIS COD_PAIS,
		           A.COD_PERI COD_PERI,
		           A.TIPO_SOLI TIPO_SOLI,
		           TO_CHAR(A.FEC_SOLI,'dd/MM/yyyy') FEC_SOLI
		    FROM   INT_SOLIC_CONSO_CABEC A
		    WHERE  A.COD_PAIS = #codigoPais#
		           AND A.COD_PERI = #periodo#
		           AND A.IND_BLOQ_ADMI = '0'
		           AND A.IND_BLOQ_FINA = '0'
		           AND A.IND_CONT_ACT = '0'
		           AND A.IND_ERRO_NODE = '0'
		           AND ((A.IND_ERRO_DEUD = '0') OR (A.IND_ERRO_DEUD='1') OR ( A.Ind_Erro_Deud = '2'and  A.IND_ADMI_CART='1'))
		           AND A.IND_OCS_PROC =   '0'		          
		           AND A.IND_ERROR_SGPE = '0'
		           AND A.IND_OCS_BLOQ =   '0'
		           AND A.IND_ERRO_RECH =  '0'
		           AND (A.IND_ERRO_MTMI =  '0' OR (A.IND_ERRO_MTMI =  '0' AND A.IND_COMP_MONT = '1')) 
		           AND A.IND_ERRO_MTMA = '0'
		           AND A.IND_ERRO_REMP = '0'	          
		           and a.ind_anul = 0
		    	   AND A.IND_ORIG_CABE = '1'
		           <isNotEmpty prepend="AND" property="region">        
						A.COD_REGI = #region#                          
		    	   </isNotEmpty>
		          <isNotEmpty property="zona">        
					<iterate prepend="AND" property="zona" open="(" close=")" conjunction="OR">
						A.COD_ZONA = #zona[]#
					</iterate>  
				  </isNotEmpty>		          
		           <isNotEmpty prepend="AND" property="codConsultora">        
						A.COD_CLIE = #codConsultora#                          
		    	   </isNotEmpty>    	
	</select>
	
	<select id="getOCRPedidosDuplicadosList" parameterClass="java.util.Map" resultMap="detalladoAptasResult">
	      select cons.COD_CLIE COD_CLIE,
	             GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cons.COD_CLIE, 'NOM_CLIE') NOM_CLIE,
	             GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cons.COD_CLIE, 'COD_REGI') COD_REGI,
	             GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cons.COD_CLIE, 'DES_REGI') DES_REGI,
	             GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cons.COD_CLIE, 'COD_ZONA') COD_ZONA,
	             GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cons.COD_CLIE, 'DES_ZONA') DES_ZONA,
	             cons.COD_PAIS COD_PAIS,
	             cons.COD_PERI COD_PERI,
	             cons.TIPO_SOLI TIPO_SOLI,
	             cons.FEC_SOLI FEC_SOLI      
	      from   ped_solic_digit_cabec dig,
	             int_solic_conso_cabec cons
	      where  dig.fec_soli  = to_date(#fechaFacturacion#, 'dd/mm/yyyy')
	         and cons.fec_soli = dig.fec_soli
	         and dig.cod_peri  = #periodo#
	         and cons.cod_peri = dig.cod_peri
	         and dig.cod_pais  = #codigoPais# 
             and cons.cod_pais = dig.cod_pais
             and dig.cod_clie  = cons.COD_CLIE
	         
	</select>
	
	<select id="getCodigoCuponInicioRango" parameterClass="java.util.Map" resultClass="decimal">
		select cod_cupon_inic from cup_prog_nueva_cupon
	</select>
	
	<select id="getCodigoCuponFinRango" parameterClass="java.util.Map" resultClass="decimal">
		select cod_cupon_fin from cup_prog_nueva_cupon
	</select>
	
	<select id="getDetallePedidoCupon" parameterClass="java.util.Map" resultClass="productoAgregacion">
		    select COD_VENTA codigoVenta, 
		    	   DES_PROD  descripcionProducto, 
		    	   VAL_PREC  valorUnitario 
			from cup_equiv_matr
			where COD_PERI = #codigoPeriodo#
			  AND COD_CUPON  = #codCupon#	         
	</select>

	<select id="getExistePedidoConsultora" parameterClass="java.util.Map" resultClass="string">
		select U.Nom_Usua || ' ' || U.Ape_Usua ||'|'|| to_char(a.fec_digi,'dd/MM/yyyy - dd:mi:ss')||'|'||trim(to_char(a.val_mont_pedi, '999999999.99'))
		from ped_solic_digit_cabec a ,SEG_USUAR U
		where U.Use_Usua = a.usu_digi AND 
			  a.cod_clie = #codigoConsultora# and
      		  a.COD_PAIS = #codigoPais# and
      		  a.COD_PERI = #codigoPeriodo# and
      		  a.NUM_LOTE = #numeroLote#
	</select>

	<parameterMap id="executeOCRActualizacionMatrizFacturacionParams" class="map" >
		<parameter property="codigoPais"                  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMarca"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
    </parameterMap>
	
	  <procedure id="executeOCRActualizacionMatrizFacturacion" parameterMap="executeOCRActualizacionMatrizFacturacionParams" >
        {call OCR_SOLIC_PEDIDOS.OCR_PR_ACTUA_MATRI_FACTU(?,?,?) }
    </procedure>

	<select id="getDetalleProductoById" parameterClass="java.util.Map" resultMap="detalleProductoResult">
		  select COD_VENT, 
		         DES_PROD, 
		         VAL_PREC_PROD
		  FROM PED_MATRI_FACTU A
		  WHERE COD_PAIS = #codigoPais# AND 
		        COD_PERI = #codigoPeriodo# AND
		        COD_VENT = #codigoVenta#
	</select>

  <parameterMap id="executeProcesoMontoMinimoMaximoParams" class="map" >
		<parameter property="codigoPais"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFact"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="psusuario"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeProcesoMontoMinimoMaximo" 
   			  parameterMap="executeProcesoMontoMinimoMaximoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_ACTUA_MONTO_MINIM_MAXIM(?,?,?)} 
    </procedure>  
    
    <parameterMap id="executeProcesoRevertirCambiosGP1STOParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeProcesoRevertirCambiosGP1STO" 
   			  parameterMap="executeProcesoRevertirCambiosGP1STOParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_REVIE_CAMBI_GPSTO(?)}  
    </procedure> 

    <select id="getMaximoUnidades" parameterClass="map" resultClass="string">
        select val_param 
		from   sto_param_gener_occrr 
		where  COD_PAIS = #pais# and
		       COD_PARA = 'OCR_MAXI_UNID'
    </select>
    
    <select id="getLongitudMaximoUnidades" parameterClass="map" resultClass="string">
        select val_param 
		from   sto_param_gener_occrr 
		where  COD_PAIS = #pais# and
		       COD_PARA = 'OCR_LONG_MAXI_UNID'
    </select>

    <parameterMap id="executeActualizarContrarioIndicadoresParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeActualizarContrarioIndicadores" parameterMap="executeActualizarContrarioIndicadoresParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_ACTUA_CONTRA_INDIC(?,?)}  
    </procedure>

      	<!-- OBTIENE PEDIDOS -->
    <select id="getPedidosByCriteria" parameterClass="java.util.Map" resultMap="pedidosResult">
		SELECT                                                     		  
          COD_PAIS			,
          COD_PERI			,
          COD_CLIE			,
          NOM_CLIE			,
		  NUM_LOTE          , 
          TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS 	FEC_SOLI	,
          COD_REGI			,
          DES_REGI			,
          COD_ZONA			,
          DES_ZONA			,
          IND_ERRO_RECH	,
          IND_OCS_PROC	,
		  IND_PROC_GP2,
		  IND_ANUL
      FROM INT_SOLIC_CONSO_CABEC 
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoCliente">        
			COD_CLIE = #codigoCliente#                         
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaSolicitud">        
			FEC_SOLI = TO_DATE(#fechaSolicitud#,'DD/MM/YYYY')
    	</isNotEmpty>	
		<isNotEmpty prepend="AND" property="fechaFacturacion">        
			FEC_PROG_FACT = TO_DATE(#fechaFacturacion#,'DD/MM/YYYY')
    	</isNotEmpty>	    	          
			AND	IND_ERRO_RECH = 0
    	<isNotEmpty prepend="AND" property="indicadorAnulado">        
			IND_ANUL = #indicadorAnulado#	
    	</isNotEmpty>		 
    	<isNotEmpty prepend="AND" property="indicadorFacturado">        
			IND_PROC_GP2 = #indicadorFacturado#
    	</isNotEmpty>	
    	<isEmpty prepend="AND" property="indicadorBusqueda">        
			( (IND_ANUL = 0  AND IND_PROC_GP2 = 1) OR  (IND_ANUL = 1  AND IND_PROC_GP2 = 0 ))
    	</isEmpty>	    	    	
    	<isNotEmpty prepend="AND" property="numLote">        
			NUM_LOTE = #numLote#
    	</isNotEmpty>    		
	</dynamic>                                                   
		ORDER BY                                                   
			COD_PERI  ,
			COD_CLIE 			                                          
  </select> 
	
  	<parameterMap id="anularPedidoFacturadoParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCliente"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroLote"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>						
    </parameterMap>
	
	<!-- ANULA PEDIDOS -->
    <procedure id="anularPedidoFacturado" parameterMap="anularPedidoFacturadoParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_ANULA_PEDID(?,?,?,?,?)}  
    </procedure>

	<!-- ELIMINA PEDIDOS -->
    <procedure id="eliminarPedidoDigitado" parameterMap="anularPedidoFacturadoParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_ELIMI_PEDID_DIGIT(?,?,?,?,?)}  
    </procedure>
	
	<!-- INSERTA PEDIDO FACTURADO ELIMINADO  -->
	<insert id="grabarEliminacionPedidoDigitado" parameterClass="java.util.Map">
	insert into PED_SOLIC_PEDID_ELIMI
	  (cod_pais, cod_peri, cod_clie, num_lote, fec_fact, 
	  fec_elim, usu_digi, fec_digi, nom_clie)  
	SELECT CA.COD_PAIS,
       CA.COD_PERI,
       CA.COD_CLIE,
       CA.NUM_LOTE,
       CA.FEC_PROG_FACT,
       SYSDATE,
       #codigoUsuario#,
	   SYSDATE,
       CA.NOM_CLIE
	 FROM INT_SOLIC_CONSO_CABEC CA
	 WHERE CA.COD_PAIS = #codigoPais#
       AND CA.COD_PERI=#codigoPeriodo#
       AND CA.COD_CLIE = #codigoCliente#
       AND CA.NUM_LOTE = #numeroLote#           
	</insert> 
	
	<update id="updateGrabarEliminacionPedidoDigitado" parameterClass="java.util.Map">
		UPDATE PED_SOLIC_PEDID_ELIMI
		SET 
		  fec_elim = SYSDATE, 
		  usu_digi = #codigoUsuario#, 
		  fec_digi = SYSDATE 
		WHERE COD_PAIS = #codigoPais#
	      AND COD_PERI = #codigoPeriodo#
	      AND COD_CLIE = #codigoCliente#
	      AND NUM_LOTE = #numeroLote# 
	</update> 
	
	<!-- OBTIENE PEDIDOS -->
    <select id="getPedidosAEliminarByCriteria" parameterClass="java.util.Map" resultMap="pedidosAEliminarResult">
		SELECT                                                     		  
          COD_PAIS			,
          COD_PERI			,
          COD_CLIE			,
          NOM_CLIE			,
		  NUM_LOTE          , 
          TO_CHAR(FEC_SOLI,'DD-MM-YYYY')	AS 	FEC_SOLI	,
		  TO_CHAR(FEC_PROG_FACT,'DD-MM-YYYY')	AS 	FEC_PROG_FACT,
          COD_REGI			,
          DES_REGI			,
          COD_ZONA			,
          DES_ZONA			,
          IND_ERRO_RECH	,
          IND_OCS_PROC	,
		  IND_PROC_GP2
      FROM INT_SOLIC_CONSO_CABEC 
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoPeriodo">        
			COD_PERI = #codigoPeriodo#                          
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoCliente">        
			COD_CLIE = #codigoCliente#                         
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaSolicitud">        
			FEC_SOLI = TO_DATE(#fechaSolicitud#,'DD/MM/YYYY')
    	</isNotEmpty>
		<isNotEmpty prepend="AND" property="fechaFacturacion">        
			FEC_PROG_FACT = TO_DATE(#fechaFacturacion#,'DD/MM/YYYY')
    	</isNotEmpty>		             
		AND	IND_ERRO_RECH = 0 
		AND IND_PROC_GP2 = 0
		AND IND_OCS_PROC = 0
	</dynamic>                                                   
		ORDER BY                                                   
			COD_PERI  ,
			COD_CLIE 			                                          
  </select> 

    <insert id="insertDetallePedidoCaptura" parameterClass="detallePedidosConsultora">
    	INSERT INTO ped_solic_digit_detal(
    		COD_PAIS,
			COD_PERI,
			COD_CLIE,
			FEC_SOLI,
            NUM_LOTE,
			COD_VENT,
			NUM_POSIC,
			DES_PROD,
			VAL_UNID_DEM,
			VAL_PREC_CATA,
      		VAL_PREC_TOTA,
            USU_DIGI,
			FEC_DIGI,
			USU_MODI,
			FEC_MODI,
			IND_OCS_DETAL,
			IND_PROC)
		VALUES(
		  #codPais#,
		  #codPeriodo#,
	      	#codCliente#,
		  	to_date(#fechaSolicitud#,'dd/mm/yyyy'),
	      #numLote#,
	      	#codigoVta#,
	      	(select count(1)+1
			from ped_solic_digit_detal
			where COD_PAIS = #codPais# AND
			      COD_PERI = #codPeriodo# AND
			      COD_CLIE = #codCliente# AND
			      	NUM_LOTE = #numLote#),
	      (select des_prod
			from ped_matri_factu
			where COD_PAIS = #codPais# and
				  COD_PERI = #codPeriodo# and
				  	COD_VENT = #codigoVta#),
	      	#unidades#,
	      (select val_prec_prod
			from ped_matri_factu
			where COD_PAIS = #codPais# and
				  COD_PERI = #codPeriodo# and
				  COD_VENT = #codigoVta#),
	      (#unidades# * (select val_prec_prod
			from ped_matri_factu
			where COD_PAIS = #codPais# and
				  COD_PERI = #codPeriodo# and
				  			      COD_VENT = #codigoVta#)),
		  	#auditInfo.createdBy#,
	      	#auditInfo.created#,
	      	#auditInfo.updatedBy#,
	      #auditInfo.lastUpdated#,
	      	'0',
	      	'G')
	</insert>
	
	<update id="updateDetallePedidoCaptura" parameterClass="detallePedidosConsultora">
	    <![CDATA[
		  update ped_solic_digit_detal
	         set val_unid_dem  =  (val_unid_dem + #unidades#)				,                	                  
	             val_prec_tota =  (val_prec_tota + (#unidades# * (select val_prec_prod
										from ped_matri_factu
										where COD_PAIS = #codPais# and
											  COD_PERI = #codPeriodo# and
											  COD_VENT = #codigoVta#))),	 
	             usu_modi = 	      #auditInfo.updatedBy# 	,                                
	             fec_modi = 	      #auditInfo.lastUpdated#                                    
		  where cod_pais = 	  #codPais#                              
		   and cod_peri = 	  #codPeriodo#	                         
		   and cod_clie =     #codCliente#			         
		   and num_lote =     #numLote#	
		   and cod_vent =     #codigoVta# 		                 
		
		    ]]>
	  </update> 

	<select id="validaCodigoVenta" parameterClass="java.util.Map" resultMap="detallePedidosValidacionResult">
        select nvl(b.val_unid_dem,'0')  VAL_UNID_DEM,
		       nvl(b.ind_ocs_detal,'0') IND_OCS_DETAL
		from ped_matri_factu a,
		     ped_solic_digit_detal b
		where a.COD_PAIS = #codigoPais# and
		      a.COD_PERI = #codigoPeriodo# and
		      a.COD_VENT = ocr_solic_pedidos.gen_fn_remp_cupon(#codigoPais#,#codigoPeriodo#,#codigoVenta#) and  
		      a.COD_PAIS = b.COD_PAIS(+) and   
		      a.COD_PERI = b.COD_PERI(+) and 
		      a.COD_VENT = b.COD_VENT(+) and      
		      b.num_lote(+) = #numLote# and
		      b.cod_clie(+) = #codigoCliente#                                                
	  </select>  
	  
	  <select id="getConsultoraCabeceraSimpleByCriteria" parameterClass="java.util.Map" resultMap="consultoraCabeceraSimpleResult">
       SELECT  GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cl.COD_CLIE, 'DES_REGI') DES_REGI,               
               GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(cl.COD_CLIE, 'DES_ZONA') DES_ZONA,
               TRIM(cl.VAL_APE1) || ' ' ||TRIM(cl.VAL_APE2) || ', ' ||TRIM(cl.VAL_NOM1) as NOM_CLI,               
		     (SELECT  DECODE(C.VAL_I18N,'RETIRADA', C.VAL_I18N || 'REQUIERE DOCUMENTACION DE CONSULTORA NUEVA', C.VAL_I18N)
	            FROM MAE_CLIEN_DATOS_ADICI A,
	                 MAE_ESTAT_CLIEN B,
	                 (SELECT VAL_I18N,VAL_OID FROM GEN_I18N_SICC_COMUN D WHERE D.ATTR_ENTI = 'MAE_ESTAT_CLIEN') C
	           WHERE A.ESTA_OID_ESTA_CLIE = B.OID_ESTA_CLIE
	             AND C.VAL_OID = B.OID_ESTA_CLIE
	             AND A.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigo#)) AS INDICADOR_ACTIVA,
	         (SELECT DECODE(A.IND_ACTI, 1 ,'ACTIVA', 'INACTIVA') AS ACTI
	            FROM MAE_CLIEN_DATOS_ADICI A
	           WHERE A.CLIE_OID_CLIE  = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigo#)) AS ESTADO_CONSULTORA,
	         (SELECT DECODE(COUNT(*),0,'NO','SI') AS BLOQ
	            FROM (SELECT A.CLIE_OID_CLIE,D.COD_PROC_BLOQ , C.COD_ACCI_BLOQ
	                    FROM MAE_CLIEN_BLOQU A,
	                         MAE_ACCIO_PROCE_BLOQU B,
	                         MAE_ACCIO_BLOQU C,
	                         MAE_PROCE_BLOQU D
	                   WHERE A.FEC_DESB IS NULL
	                     AND A.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigo#)
	                     AND A.TIBQ_OID_TIPO_BLOQ = B.TIBQ_OID_TIPO_BLOQ (+)
	                     AND B.MABL_OID_ACCI_BLOQ = C.OID_ACCI_BLOQ (+)
	                     AND B.MAPB_OID_PROC_BLOQ = D.OID_PROC_BLOQ (+)
	                  )) INDICADOR_BLOQUEO
		  FROM MAE_CLIEN cl,
		  	   SEG_PAIS pa
		 WHERE pa.COD_PAIS = #codigoPais#
			   <isNotEmpty prepend="AND" property="codigo">
			      cl.COD_CLIE LIKE #codigo#
			   </isNotEmpty>
          AND   cl.PAIS_OID_PAIS = pa.OID_PAIS          
	</select>  	
	
	<select id="getListaCodigosVentaMatriz" parameterClass="java.util.Map" resultMap="listaCUVsResult">
			SELECT COD_VENT ,DES_PROD,VAL_PREC_PROD 
			FROM PED_MATRI_FACTU 
			WHERE COD_PAIS = #pais#
			  AND COD_PERI = #periodo#
			ORDER BY COD_VENT 
	</select>

	<parameterMap id="anularPedidoFacturadoSTOParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCliente"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroLote"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>						
    </parameterMap>
	
	<!-- ANULA PEDIDOS STO -->
    <procedure id="anularPedidoFacturadoSTO" parameterMap="anularPedidoFacturadoSTOParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_ANULA_PEDID_STO(?,?,?,?,?)}  
    </procedure>

	<delete id="deleteOCSClasificaciones">
        DELETE FROM MAE_CLIEN_CLASI
        WHERE TCCL_OID_TIPO_CLASI in (SELECT OID_TIPO_CLAS FROM MAE_TIPO_CLASI_CLIEN WHERE COD_TIPO_CLAS=#constantePedido#)
    </delete>
    
    <select id="getListaCodigoPlantilla" parameterClass="java.util.Map" resultMap="baseResult">
       SELECT T.COD_PLAN_MONI CODIGO,
         T.DES_PLAN_MONI DESCRIPCION
		  FROM PED_PLANT_MONIT T
		 WHERE T.PAIS_OID_PAIS = #oidPais#
		 ORDER BY  T.OID_PLAN_MONI DESC
	</select>
	
	 <select id="getListaPlantillas" parameterClass="java.util.Map" resultMap="plantillaResult">
       SELECT a.cod_plan_moni,f.val_i18n, c.COD_ZONA, b.NUM_SECU, b.GRPR_OID_GRUP_PROC 
	   FROM  PED_PLANT_MONIT a, PED_PLANT_MONIT_DETAL b, zon_zona c, ped_tipo_solic_pais d, ped_tipo_solic e, gen_i18n_sicc_comun f
	   WHERE a.OID_PLAN_MONI=b.PLSM_OID_PLAN_MONI
		   AND a.COD_PLAN_MONI=#codigoPlantilla#
	       AND b.ZZON_OID_ZONA=c.OID_ZONA
	       AND b.TSPA_OID_TIPO_SOLI_PAIS=d.OID_TIPO_SOLI_PAIS
	       AND d.TSOL_OID_TIPO_SOLI=e.OID_TIPO_SOLI
	       AND b.GRPR_OID_GRUP_PROC = #grupoProceso#
	       AND e.OID_TIPO_SOLI=f.VAL_OID 
	       AND f.ATTR_ENTI='PED_TIPO_SOLIC'
	       <isNotEmpty property="codigoRegion">
	       AND b.zorg_oid_regi=GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_REGION( #codigoPais#,'T','VD', #codigoRegion#)
	      </isNotEmpty>
       ORDER BY 3 
	</select>
	
	<insert id="insertPlantillas" parameterClass="java.util.Map">
    	INSERT INTO PED_PLANT_MONIT 
    	(COD_PLAN_MONI, 
    	 DES_PLAN_MONI, 
    	 PAIS_OID_PAIS,
		 OID_PLAN_MONI ) 
		VALUES 
		( #codigoPlantilla#,
		  #descripcionPlantilla#,
		  #oidPais#,
		  PED_PLSM_SEQ.nextval)

	</insert>
	
	 <parameterMap id="executeRegeneraPlantillasParams" class="map" >
		<parameter property="codigoPais"                 	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPlantilla"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="tipoSolicitud"	             	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="exclusionSolicitud"	         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"	             	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="grupoProceso"	             	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="indicadorBorrado"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeRegeneraPlantillas" 
   			  parameterMap="executeRegeneraPlantillasParams" >
		{call OCR_SOLIC_PEDIDOS.OCR_PR_REGEN_PLANT(?,?,?,?,?,?,?)}
    </procedure>  
    
    <select id="getListaSolicitudes" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT c.val_i18n as CODIGO,
           UPPER(c.val_i18n) AS DESCRIPCION    
    FROM  ped_tipo_solic_pais a, ped_tipo_solic b, gen_i18n_sicc_comun c      
    WHERE a.TSOL_OID_TIPO_SOLI=b.OID_TIPO_SOLI and b.OID_TIPO_SOLI=c.val_oid     and c.attr_enti='PED_TIPO_SOLIC'       
      AND UPPER(c.val_i18n) like '%' || #tipoSolicitud# || '%' 
	  AND UPPER(c.val_i18n) not like decode(#exclusionSolicitud#,'T','XYZ','%' || #exclusionSolicitud#  || '%')
	</select>
	
	 <resultMap id="todosDetallePedidosResult" class="detallePedidosConsultora">       
	    <result property="codPais"       		column="COD_PAIS"/>
	    <result property="codPeriodo"    		column="COD_PERI"/>
	    <result property="codCliente"    		column="COD_CLIE"/>
	    <result property="nombreCliente"   		column="NOM_CLIE"/>
	    <result property="codigoZona"     		column="COD_ZONA"/>
	    <result property="fechaSolicitud"		column="FEC_SOLI"/>
	    <result property="indicadorOCS"   		column="IND_OCS_DETAL"/>
	    <result property="codigoVta"     		column="COD_VENT"/>	
	    <result property="unidades"      		column="VAL_UNID_DEM"/>
	    <result property="precioCat"     		column="VAL_PREC_CATA"/>                       	                            
	    <result property="total"         		column="VAL_PREC_TOTA"/>
	 </resultMap>

	 <select id="getTodosDetallesPedidoByFilter" parameterClass="java.util.Map" resultMap="todosDetallePedidosResult">
        SELECT DET.COD_PAIS,             
               DET.COD_PERI,             
               DET.COD_CLIE,             
               gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(DET.COD_CLIE,'NOM_CLIE') NOM_CLIE,
               gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(DET.COD_CLIE,'DES_ZONA') COD_ZONA,
               TO_CHAR(DET.FEC_SOLI,'DD/MM/YYYY') FEC_SOLI,
               decode( DET.IND_OCS_DETAL,'0','No Enviado','Enviado') IND_OCS_DETAL,             
               DET.COD_VENT,   
               DET.VAL_UNID_DEM,         
               DET.VAL_PREC_CATA,        
               DET.VAL_PREC_TOTA
          FROM PED_SOLIC_DIGIT_DETAL DET 
		  WHERE DET.COD_PAIS = #codigoPais# AND                            
				DET.COD_PERI = #codigoPeriodo# AND                         
				DET.COD_CLIE = #codigoCliente# AND                         
				DET.NUM_LOTE = #numLote#			                                		                             
	 </select>
	
         <parameterMap id="anularPedidoFacturadoCUPParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCliente"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoUsuario"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>						
    </parameterMap>
	
	<!-- ANULA PEDIDOS CUP -->
    <procedure id="anularPedidoFacturadoCUP" parameterMap="anularPedidoFacturadoCUPParams" >
		{call CUP_PKG_PROG_NUEVAS.CUP_PR_ANULA_PEDID_MULTI(?,?,?,?)}  
    </procedure>
	
	 <select id="getListaRecepcionPedidosActual" parameterClass="java.util.Map" resultMap="recepcionPedidoResult">
        SELECT a.COD_CLIE, 
        	   a.NUM_LOTE, 
        	   a.NOM_CLIE, 
        	   a.DES_REGI, 
        	   a.DES_ZONA, 
        	   a.COD_TERR,
        	   to_char(a.FEC_SOLI,'DD/MM/YYYY') FEC_SOLI, 
        	   decode(nvl(a.IND_OCS_PROC,0),'1', 'SI','NO') FACTURADO, 
        	   decode(a.IND_PROC_GP2,1,TO_CHAR(a.FEC_PROG_FACT,'DD/MM/YYYY'),null) FEC_FACT, 
        	   decode(nvl(a.IND_ERRO_RECH,0),'1', 'SI','NO') RECHAZO_OCR, 
        	   decode(nvl(a.IND_OCS_BLOQ,0),'1', 'SI','NO') BLOQUEO_CONTROL, 
        	   decode(nvl(a.IND_ERRO_DEUD,0),'2', 'SI','NO') BLOQUEO_DEUDA, 
        	   a.VAL_SALD_DEUD SALDO, 
        	   a.USU_ADMI_CART LEVANTAMIENTO, 
        	   decode(nvl(a.IND_ERRO_MTMA,0),'1', 'SI','NO') BLOQUEO_MTO_MAX, 
        	   decode(nvl(a.IND_ERRO_MTMI,0),'1', 'SI','NO') BLOOQUEO_MTO_MIN, 
        	   a.VAL_MONT_PEDI MONTO_PEDIDO, 
        	   decode(nvl(a.IND_RECE_DD,0),'1', 'SI','NO') RECEP_DD, 
        	   decode(nvl(a.IND_RECE_WEB,0),'1', 'SI','NO') RECEP_WEB, 
        	   decode(nvl(a.IND_RECE_OCR,0),'1', 'SI','NO') RECEP_OCR,
        	   a.COD_PERI,
        	   #tipoConsulta# TIP_CONS,
        	   gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(a.COD_CLIE,'DES_SECC') DES_SECC,
        	   TO_CHAR(a.FEC_DIGI,'DD/MM/YYYY') FEC_DIGI
		FROM  int_solic_conso_cabec a 
		WHERE (a.IND_ERRO_REMP=0 or (a.IND_ERRO_REMP=1 and a.ind_ocs_proc = 1)) 
          and a.IND_ERROR_SGPE = 0
          and a.COD_PERI=#codigoPeriodo#
		      <isNotEmpty property="indBloqueo">
			   AND ( a.IND_OCS_BLOQ=NVL(#indBloqueo#,a.IND_OCS_BLOQ))
			   </isNotEmpty> 
			   <isNotEmpty property="indFacturacion">
			   AND ( a.IND_OCS_PROC=NVL(#indFacturacion#,a.IND_OCS_PROC))
			   </isNotEmpty> 
			   <isNotEmpty property="indRechazo">
			   AND ( a.IND_ERRO_RECH=NVL(#indRechazo#,a.IND_ERRO_RECH))
			   </isNotEmpty> 
			   <isNotEmpty property="regionList">	
				<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				              				 a.COD_REGI  = #regionList[]#
			    </iterate> 
			    </isNotEmpty> 
			    <isNotEmpty property="zonaList">
				<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				              				 a.COD_ZONA   = #zonaList[]#
			    </iterate>  
			    </isNotEmpty>   
			     <isNotEmpty property="codigoOrigen">
				   AND EXISTS (
			                   SELECT 1
			                     FROM STO_ORIGE_DOCUM       O,
			                          STO_COMBI_ORIGE_DOCUM C
			                    WHERE O.COD_PAIS = a.COD_PAIS
			                      AND O.COD_TIPO_DOCU = #tipoDocumento#
			                      AND O.COD_PAIS = C.COD_PAIS
			                      AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
			                      AND O.COD_ORIG = C.COD_ORIG
			                      AND C.IND_RECE_OCR =  a.IND_RECE_OCR 
			                      AND C.IND_RECE_WEB =  a.IND_RECE_WEB
			                      AND C.IND_RECE_DD = a.IND_RECE_DD
			                      AND C.IND_RECE_DIGI = a.IND_RECE_DIGI
			                      AND C.IND_RECE_CC = a.IND_RECE_CC
			                      AND C.IND_RECE_MENS = a.IND_RECE_MENS
			                      AND C.IND_RECE_ONLI = a.IND_RECE_ONLI
			                      AND C.IND_RECE_IVR = a.IND_RECE_IVR
			                      AND C.COD_ORIG = #codigoOrigen#
			       )
	   			</isNotEmpty>
	
		                                		                             
	 </select>
	 
	 <select id="getListaRecepcionPedidosHistorico" parameterClass="java.util.Map" resultMap="recepcionPedidoResult">
	         SELECT a.COD_CLIE, 
	                a.NUM_LOTE, 
	                a.NOM_CLIE, 
	                a.DES_REGI, 
	                a.DES_ZONA, 
	                a.COD_TERR,
	                TO_CHAR(a.FEC_SOLI,'DD/MM/YYYY') FEC_SOLI, 
	                decode(nvl(a.IND_OCS_PROC,0),'1', 'SI','NO') FACTURADO, 
	                decode(a.IND_PROC_GP2,1,TO_CHAR(a.FEC_PROG_FACT,'DD/MM/YYYY'),null) FEC_FACT, 
	                decode(nvl(a.IND_ERRO_RECH,0),'1', 'SI','NO') RECHAZO_OCR, 
	                decode(nvl(a.IND_OCS_BLOQ,0),'1', 'SI','NO') BLOQUEO_CONTROL, 
	                decode(nvl(a.IND_ERRO_DEUD,0),'2', 'SI','NO') BLOQUEO_DEUDA, 
	                a.VAL_SALD_DEUD SALDO, 
	                a.USU_ADMI_CART LEVANTAMIENTO, 
	                decode(nvl(a.IND_ERRO_MTMA,0),'1', 'SI','NO') BLOQUEO_MTO_MAX, 
	                decode(nvl(a.IND_ERRO_MTMI,0),'1', 'SI','NO') BLOOQUEO_MTO_MIN, 
	                a.VAL_MONT_PEDI MONTO_PEDIDO, 
	                decode(nvl(a.IND_RECE_DD,0),'1', 'SI','NO') RECEP_DD, 
	                decode(nvl(a.IND_RECE_WEB,0),'1', 'SI','NO') RECEP_WEB, 
	                decode(nvl(a.IND_RECE_OCR,0),'1', 'SI','NO') RECEP_OCR,
	                a.COD_PERI,
        	        #tipoConsulta# TIP_CONS,
        	        gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(a.COD_CLIE,'DES_SECC') DES_SECC,
        	   	    TO_CHAR(a.FEC_DIGI,'DD/MM/YYYY') FEC_DIGI
			  FROM  ped_histo_solic_conso_cabec a 
			WHERE (a.IND_ERRO_REMP=0 or (a.IND_ERRO_REMP=1 and a.ind_ocs_proc = 1)) 
              and a.IND_ERROR_SGPE = 0
		      and a.COD_PERI=#codigoPeriodo#
		      <isNotEmpty property="indBloqueo">
			   AND ( a.IND_OCS_BLOQ=NVL(#indBloqueo#,a.IND_OCS_BLOQ))
			   </isNotEmpty> 
			   <isNotEmpty property="indFacturacion">
			   AND ( a.IND_OCS_PROC=NVL(#indFacturacion#,a.IND_OCS_PROC))
			   </isNotEmpty> 
			   <isNotEmpty property="indRechazo">
			   AND ( a.IND_ERRO_RECH=NVL(#indRechazo#,a.IND_ERRO_RECH))
			   </isNotEmpty> 
			   <isNotEmpty property="regionList">	
				<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				              				 a.COD_REGI  = #regionList[]#
			    </iterate> 
			    </isNotEmpty> 
			    <isNotEmpty property="zonaList">
				<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				              				 a.COD_ZONA   = #zonaList[]#
			    </iterate>  
			    </isNotEmpty>   
			     <isNotEmpty property="codigoOrigen">
				   AND EXISTS (
			                   SELECT 1
			                     FROM STO_ORIGE_DOCUM       O,
			                          STO_COMBI_ORIGE_DOCUM C
			                    WHERE O.COD_PAIS = a.COD_PAIS
			                      AND O.COD_TIPO_DOCU = #tipoDocumento#
			                      AND O.COD_PAIS = C.COD_PAIS
			                      AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
			                      AND O.COD_ORIG = C.COD_ORIG
			                      AND C.IND_RECE_OCR =  a.IND_RECE_OCR 
			                      AND C.IND_RECE_WEB =  a.IND_RECE_WEB
			                      AND C.IND_RECE_DD = a.IND_RECE_DD
			                      AND C.IND_RECE_DIGI = a.IND_RECE_DIGI
			                      AND C.IND_RECE_CC = a.IND_RECE_CC
			                      AND C.IND_RECE_MENS = a.IND_RECE_MENS
			                      AND C.IND_RECE_ONLI = a.IND_RECE_ONLI
			                      AND C.IND_RECE_IVR = a.IND_RECE_IVR
			                      AND C.COD_ORIG = #codigoOrigen#
			       )
	   			</isNotEmpty>
	
                                		                             
	 </select>
	
	<select id="getDetalleRecepcionPedidosActual" parameterClass="java.util.Map" resultMap="detallePedidoResult">
	        SELECT a.COD_CLIE, 
	               a.NUM_LOTE, 
	               a.COD_VENT, 
	               a.NUM_UNID_DEMA, 
	               a.IND_RECE_DD, 
	               a.IND_RECE_WEB, 
	               a.IND_RECE_OCR 
		    FROM  int_solic_conso_detal a 
	        WHERE a.cod_clie=#codigoCliente# 
	              and a.COD_PERI=#codigoPeriodo#
	              and a.NUM_LOTE= #numeroLote#		                                		                             
	 </select>
	 
	 <select id="getDetalleRecepcionPedidosHistorico" parameterClass="java.util.Map" resultMap="detallePedidoResult">
            SELECT a.COD_CLIE, 
                   a.NUM_LOTE, 
                   a.COD_VENT, 
                   a.NUM_UNID_DEMA, 
                   a.IND_RECE_DD, 
                   a.IND_RECE_WEB, 
                   a.IND_RECE_OCR 
			FROM  ped_histo_solic_conso_detal a 
		    WHERE a.cod_clie=#codigoCliente# 
	              and a.COD_PERI=#codigoPeriodo#
	              and a.NUM_LOTE= #numeroLote#	
		                                		                             
	 </select>
	 
	  <select id="getListaAlternativosAutomaticos" parameterClass="java.util.Map" resultMap="preAlternativosAutomaticosResult">
            SELECT a.COD_SAP_PPAL, 
                   a.COD_SAP_ALTE
			FROM  PRE_PROD_ALTER_ICE  a 
		    <dynamic prepend="WHERE">
	           <isNotEmpty prepend="AND" property="codigoSAPPrincipal">
			     ( a.COD_SAP_PPAL=NVL(#codigoSAPPrincipal#,a.COD_SAP_PPAL))
			   </isNotEmpty>  
	           <isNotEmpty  prepend="AND"  property="codigoSAPAlternativo">
			    ( a.COD_SAP_ALTE=NVL(#codigoSAPAlternativo#,a.COD_SAP_ALTE))
			   </isNotEmpty>   
			</dynamic> 		                                		                             
	 </select>
	 
	 <delete id="deleteAlternativosAutomaticos" parameterClass="java.util.Map">
        DELETE PRE_PROD_ALTER_ICE t
    	WHERE t.COD_SAP_PPAL = #codigoSAPPrincipal#  AND
          	  t.COD_SAP_ALTE = #codigoSAPAlternativo#
    </delete>
    
    <insert id="insertPreAlternativosAutomaticos" parameterClass="java.util.Map">
    	
	    INSERT INTO PRE_PROD_ALTER_ICE
			  (
			   COD_SAP_PPAL,
			   COD_SAP_ALTE
			  )
			VALUES
			  (
			   #codigoSAPPrincipal#,
			   #codigoSAPAlternativo#)
	   
	</insert>
	
    <insert id="insertPreAlternativosAutomaticosAuditoria" parameterClass="java.util.Map">
    	
	    INSERT INTO PRE_AUDIT_PROD_ALTER_ICE
			  (OID_PRE_AUDIT_PROD_ALTER_ICE,
			   COD_SAP_PPAL,
			   COD_SAP_ALTE,
			   TIP_ACCI,
			   COD_USUA,
			   FEC_ACCI
			  )
			VALUES
			  (PRE_AUPA_SEQ.NEXTVAL,
			   #codigoSAPPrincipal#,
			   #codigoSAPAlternativo#,
			   #tipoAccion#,
			   #usuario#,
			   SYSDATE)
	   
	</insert>	
	
	 <parameterMap id="executeProcesoCrearOfertasParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeProcesoCrearOfertas" 
   			  parameterMap="executeProcesoCrearOfertasParams" >
		{call PRE_PKG_PROCE.PRE_PR_CREA_OFERT_ALTER(?,?)}
    </procedure>  
    
	<select id="verificaPreAlternativosAutomaticos" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		SELECT A.COD_SAP_PPAL
		  FROM PRE_PROD_ALTER_ICE A
		 WHERE   A.COD_SAP_PPAL = #codigoSAPPrincipal#  AND
          	  A.COD_SAP_ALTE = #codigoSAPAlternativo#
	</select>
	
	<select id="getListaProductosICE" parameterClass="java.util.Map" resultMap="preProductosICEResult">
            SELECT a.OID_IMPU_PROD_NACI, 
                   b.cod_sap,
                   a.PROD_OID_PROD,
                   a.VAL_IMPU_PROD_NACI,
                   to_char(a.FEC_CARG,'dd/mm/yyyy') fec_carg
			FROM  INT_IMPUE_PRODU_NACIO  a ,
				  mae_produ b
		    WHERE a.prod_oid_prod=b.OID_PROD
	            <isNotEmpty property="codigoSAP">
			    AND ( b.COD_SAP=NVL(#codigoSAP#,b.COD_SAP))
			   </isNotEmpty> 
			  
	             <isNotEmpty property="fechaCarga">
			    AND ( a.FEC_CARG=NVL(TO_DATE(#fechaCarga#,'DD/MM/YYYY'),a.FEC_CARG))
			   </isNotEmpty>  
	 </select>
	 
	 <delete id="deleteProductosICE" parameterClass="java.util.Map">
        DELETE INT_IMPUE_PRODU_NACIO t
    	WHERE
		      t.OID_IMPU_PROD_NACI = #oidImpuesto# 
    </delete>
    <select id="getProductoICEbyOid" parameterClass="java.util.Map" resultMap="preProductosICEResult">
            SELECT a.OID_IMPU_PROD_NACI, 
                   b.cod_sap,
                   a.PROD_OID_PROD,
                   a.VAL_IMPU_PROD_NACI,
                   to_char(a.FEC_CARG,'dd/mm/yyyy') fec_carg
			FROM  INT_IMPUE_PRODU_NACIO  a ,
				  mae_produ b
		    WHERE a.prod_oid_prod=b.OID_PROD AND
	              a.OID_IMPU_PROD_NACI=#oidImpuesto#
	 </select>
	 
    <update id="updateProductoICE" parameterClass="java.util.Map">
    	UPDATE INT_IMPUE_PRODU_NACIO a
    	SET 
         a.VAL_IMPU_PROD_NACI=TO_NUMBER(#valorImpuesto#,'9999999999999.99')
    	WHERE
		      a.OID_IMPU_PROD_NACI=#oidImpuesto#
	</update>
	
	<insert id="insertProductoICE" parameterClass="java.util.Map">
    	
	    INSERT INTO INT_IMPUE_PRODU_NACIO
			  (OID_IMPU_PROD_NACI,
			   PROD_OID_PROD,
			   VAL_IMPU_PROD_NACI,
			   FEC_CARG)
			VALUES
			  (INT_IPNA_SEQ.nextval,
			   (select oid_prod from mae_produ where cod_sap=#codigoSAP#),
			   TO_NUMBER(#valorImpuesto#,'9999999999999.99'),
			   TO_DATE(#fechaCarga#,'DD/MM/YYYY'))
	   
	</insert>
	
	<select id="getOrigenChequeo" resultMap="origenChequeoResult">
		SELECT COD_PAIS,COD_ORIG_CHEQ,DES_ORIG_CHEQ,SEC_EVAL,NOM_PROC_EJEC FROM PED_ORIGE_CHEQU
	</select>
	
	<update id="updateOrigenChequeo" parameterClass="java.util.Map">
		update PED_ORIGE_CHEQU 
		set    SEC_EVAL = #secuenciaEval# ,
		       FEC_MODI = sysdate,
		       USU_MODI = #usuario#  
		where COD_ORIG_CHEQ = #codigoOrigenChequeo#
	</update>
	
	<select id="getTipoChequeo" resultMap="tipoChequeoResult">
		select COD_PAIS,COD_TIPO_CHEQ,DES_TIPO_CHEQ,IND_CONS_REIN,NUM_DIAS_ATRA_EVAL,MIN_RECL_FALT,IND_NUEV from ped_tipo_chequ
	</select>
	
	<update id="updateTipoChequeo" parameterClass="java.util.Map">
		update PED_TIPO_CHEQU set IND_CONS_REIN = #indicadorConsultorasReincidentes#,
		                          NUM_DIAS_ATRA_EVAL = #numeroDiasAtrasFaltantes#,
		                          MIN_RECL_FALT = #minumoReclamosFaltante#,
		                          IND_NUEV = #minimoIndicadorNuevas#,
		                          FEC_MODI = sysdate,
		                          USU_MODI = #usuario#  
		                     where COD_TIPO_CHEQ = #codigoTipoChequeo#
	</update>
	
	<select id="getResultadosChequeoList" resultMap="resultadoChequeoResult" parameterClass="java.util.Map">
		select COD_PAIS,COD_RESU_CHEQ,DES_RESU_CHEQ from PED_RESUL_CHEQU 
		<isNotEmpty property="codigoResultadoChequeo"> where COD_RESU_CHEQ = #codigoResultadoChequeo#</isNotEmpty> 
	</select>
	
	<delete id="deleteResultadosChequeo" parameterClass="java.util.Map">
		delete PED_RESUL_CHEQU where COD_RESU_CHEQ 
		<iterate property="selectedItems" open="(" close=")" conjunction="," prepend="IN">
			#selectedItems[]#
		</iterate>
	</delete>
	
	<select id="getResultadoChequeoObject" resultMap="resultadoChequeoResult" parameterClass="java.lang.String">
		select COD_PAIS,COD_RESU_CHEQ,DES_RESU_CHEQ from PED_RESUL_CHEQU where COD_RESU_CHEQ = #value#
	</select>
	
	<insert id="insertResultadoChequeo" parameterClass="java.util.Map">
		insert into PED_RESUL_CHEQU (COD_PAIS,COD_RESU_CHEQ,DES_RESU_CHEQ) values (#codigoPais#,#codigoResultadoChequeo#,#descripcionResultadoChequeo#)
	</insert>
	
	<update id="updateResultadoChequeo" parameterClass="java.util.Map">
		update PED_RESUL_CHEQU set COD_PAIS = #codigoPais#,COD_RESU_CHEQ = #codigoResultadoChequeo#, DES_RESU_CHEQ = #descripcionResultadoChequeo# where COD_RESU_CHEQ = #idOld# 
	</update>
	
	<resultMap class="java.util.HashMap" id="tipoClienteResult">
		<result property="oidtipoCliente" column="oid"/>
		<result property="valI18n" column="descripcion"/>
	</resultMap>
	
	<select id="getTipoCliente" resultMap="tipoClienteResult">
		select a.oid_tipo_clie as oid,b.val_i18n as descripcion
		from mae_tipo_clien a,gen_i18n_sicc_comun b
		where a.oid_tipo_clie=b.val_oid
		and b.attr_enti='MAE_TIPO_CLIEN'
	</select>
	
	<resultMap id="baseResultOID"       class="baseGenericoOID">
    	<result property="oid" 		    column="OID" 	/>		
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
	
	<select id="getSubTipoClienteByOidTipoCliente" parameterClass="java.lang.String" resultMap="baseResultOID">
		select c.oid_subt_clie as oid,b.val_i18n as descripcion
		from mae_subti_clien c,gen_i18n_sicc_comun b
		where c.oid_subt_clie=b.val_oid
		and b.attr_enti='MAE_SUBTI_CLIEN'
		and c.ticl_oid_tipo_clie = #value#
	</select>
	
	<select id="getTipoClasificacionByOidSubTipoCliente" parameterClass="java.lang.String" resultMap="baseResultOID">
		select d.oid_tipo_clas as oid,b.val_i18n as descripcion
		from mae_tipo_clasi_clien d,gen_i18n_sicc_comun b
		where d.oid_tipo_clas = b.val_oid
		and b.attr_enti = 'MAE_TIPO_CLASI_CLIEN'
		and d.sbti_oid_subt_clie = #value#
	</select>
	
	<select id="getClasificacionByOidTipoClasificacion" parameterClass="java.lang.String" resultMap="baseResultOID">
		select e.oid_clas as oid,b.val_i18n as descripcion
		from mae_clasi e,gen_i18n_sicc_comun b
		where e.oid_clas = b.val_oid
		and b.attr_enti = 'MAE_CLASI'
		and e.tccl_oid_tipo_clas = #value#
	</select>
	
	<resultMap id="resultadosChequeoResultList" class="java.util.HashMap">
		<result property="codTipoChequeo"        column="codtipochequeo"/>
		<result property="oidTipoCliente"        column="oidtipocliente"/>
		<result property="oidSubTipoCliente"     column="oidsubtipocliente"/>
		<result property="oidTipoClasificacion" column="oidtipoclasificacion"/>
		<result property="oidClasificacion"      column="oidclasificacion"/>
		<result property="desTipoChequeo"        column="desTipochequeo"/>
		<result property="desTipoCliente"        column="destipocliente"/>
		<result property="deSubtipoCliente"     column="dessubtipocliente"/>
		<result property="desTipoClasificacion"  column="destipoclasificacion"/>
		<result property="desClasificacion"      column="desclasificacion"/>
	</resultMap>
	
	<select id="getClasificacionChequeo" parameterClass="java.util.Map" resultMap="resultadosChequeoResultList">
		select a.cod_tipo_cheq as codtipochequeo , a.oid_tipo_clie as oidtipocliente, a.oid_subt_clie as oidsubtipocliente, a.oid_tipo_clas as oidtipoclasificacion, a.oid_clas as oidclasificacion,
        j.des_tipo_cheq as desTipochequeo,f.val_i18n as destipocliente,g.val_i18n as dessubtipocliente,h.val_i18n as destipoclasificacion,i.val_i18n as desclasificacion
		from PED_CLASI_CHEQU a, mae_tipo_clien b, mae_subti_clien c,
		     mae_tipo_clasi_clien d, mae_clasi e, gen_i18n_sicc_comun f ,
		     gen_i18n_sicc_comun g , gen_i18n_sicc_comun h , gen_i18n_sicc_comun i , PED_TIPO_CHEQU j
		where b.oid_tipo_clie = f.val_oid
		and   c.oid_subt_clie = g.val_oid
		and   d.oid_tipo_clas = h.val_oid
		and   e.oid_clas      = i.val_oid
		and   f.attr_enti     = 'MAE_TIPO_CLIEN'
		and   g.attr_enti     = 'MAE_SUBTI_CLIEN'
		and   h.attr_enti     = 'MAE_TIPO_CLASI_CLIEN'
		and   i.attr_enti     = 'MAE_CLASI'
		and   a.cod_tipo_cheq = j.cod_tipo_cheq
		and   a.oid_tipo_clie = b.oid_tipo_clie
		and   a.oid_subt_clie = c.oid_subt_clie
		and   a.oid_tipo_clas = d.oid_tipo_clas
		and   a.oid_clas      = e.oid_clas
		<isNotEmpty property="codTipoChequeo">
			and a.cod_tipo_cheq = #codTipoChequeo#
		</isNotEmpty>
		
		<isNotEmpty property="oidTipoCliente">
			and a.oid_tipo_clie = #oidTipoCliente#
		</isNotEmpty>
		
		<isNotEmpty property="oidSubTipoCliente">
			and a.oid_subt_clie = #oidSubTipoCliente#
		</isNotEmpty>
		
		<isNotEmpty property="oidTipoClasificacion">
			and a.oid_tipo_clas = #oidTipoClasificacion#
		</isNotEmpty>
		
		<isNotEmpty property="oidClasificacion">
			and a.oid_clas = #oidClasificacion#
		</isNotEmpty>
	</select>
	
	<delete id="deleteClasificacionChequeo" parameterClass="java.util.Map">
		delete from PED_CLASI_CHEQU 
		where COD_PAIS = #codigoPais# 
		and COD_TIPO_CHEQ = #codTipoChequeo# 
		and OID_TIPO_CLIE = #oidTipoCliente#
		and OID_SUBT_CLIE = #oidSubTipoCliente#
		and OID_TIPO_CLAS = #oidTipoClasificacion#
		and OID_CLAS      = #oidClasificacion# 
	</delete>
	
	<insert id="insertClasificacionChequeo" parameterClass="java.util.Map">
		insert into 
		PED_CLASI_CHEQU (COD_PAIS,
		                 COD_TIPO_CHEQ,
		                 OID_TIPO_CLIE,
		                 OID_SUBT_CLIE,
		                 OID_TIPO_CLAS,
		                 OID_CLAS)
		VALUES(#codigoPais#,
		       #codTipoChequeo#,
		       #oidTipoCliente#,
		       #oidSubTipoCliente#,
		       #oidTipoClasificacion#,
		       #oidClasificacion#)
	</insert>
	
	<select id="getClasificacionChequeoObject" parameterClass="java.util.Map" resultMap="clasificacionesChequeoResult">
		select COD_PAIS, COD_TIPO_CHEQ, OID_TIPO_CLIE, OID_SUBT_CLIE, OID_TIPO_CLAS, OID_CLAS
		from PED_CLASI_CHEQU
		where COD_PAIS    = #codigoPais#
		and COD_TIPO_CHEQ = #codTipoChequeo#
		and OID_TIPO_CLIE = #oidTipoCliente#
		and OID_SUBT_CLIE = #oidSubTipoCliente#
		and OID_TIPO_CLAS = #oidTipoClasificacion#
		and OID_CLAS      = #oidClasificacion#
	</select>
	
	<update id="updateClasificacionChequeo" parameterClass="java.util.Map">
		update PED_CLASI_CHEQU 
		set   COD_PAIS      = #codigoPais#,
		      COD_TIPO_CHEQ = #codTipoChequeo#,
		      OID_TIPO_CLIE = #oidTipoCliente#,
		      OID_SUBT_CLIE = #oidSubTipoCliente#,
		      OID_TIPO_CLAS = #oidTipoClasificacion#,
		      OID_CLAS      = #oidClasificacion#
		where COD_PAIS      = #codigoPaisOld#
		and   COD_TIPO_CHEQ = #codTipoChequeoOld#
		and   OID_TIPO_CLIE = #oidTipoClienteOld#
		and   OID_SUBT_CLIE = #oidSubTipoClienteOld#
		and   OID_TIPO_CLAS = #oidTipoClasificacionOld#
		and   OID_CLAS      = #oidClasificacionOld# 
	</update>
	
	<!-- OBTIENE LOS TIPOS DE CHEQUEO -->
    <select id="getTipoChequeoPais" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT  tc.cod_tipo_cheq AS CODIGO, 
				tc.des_tipo_cheq AS DESCRIPCION 
		FROM    ped_tipo_chequ tc
    	WHERE   tc.cod_pais = #codigoPais#    
	    ORDER BY 1      
	</select>
	
	<insert id="insertConsultoraChequear" parameterClass="java.util.Map">
    	INSERT INTO PED_CONSU_CHEQU
    	( COD_PAIS, 
  		  COD_TIPO_CHEQ, 
  		  COD_PERI, 
  		  COD_CLIE  ) 
		VALUES 
		( #codigoPais#,
		  #codigoTipoChequeo#,
		  #codigoPeriodo#,
		  #codigoConsultora#
		  )
	</insert>
	
	<select id="getExisteConsultoraChequear" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(1)
		  from PED_CONSU_CHEQU
		 where COD_PAIS = #codigoPais#
		   and COD_TIPO_CHEQ = #codigoTipoChequeo#
		   and COD_PERI = #codigoPeriodo#
		   and COD_CLIE = #codigoConsultora#
	</select>
	
	<delete id="deleteConsultoraChequear" parameterClass="java.util.Map">
        DELETE FROM PED_CONSU_CHEQU
         WHERE COD_PAIS=#codigoPais#
           AND COD_PERI=#codigoPeriodo#
           AND COD_TIPO_CHEQ=#codigoTipoChequeo#
           AND COD_CLIE=#codigoConsultora#      	
    </delete>
	
	<resultMap id="consultoraChequearResult" class="java.util.HashMap">
		<result property="codigoPeriodo"		column="CAMPANA" />
		<result property="codigoTipoChequeo"	column="COD_TIPO_CHEQUEO" />
		<result property="tipoIngreso"			column="TIPO_CHEQUEO" />
		<result property="codigoConsultora"		column="COD_CONSULTORA" />      
		<result property="nombre"				column="NOMBRE" />
		<result property="region"				column="REGION" />  
		<result property="zona"					column="ZONA" />   
		<result property="seccion"				column="SECCION" />
		<result property="territorio"			column="TERRITORIO" />
	</resultMap>
	
	<select id="getConsultoraChequear" resultMap="consultoraChequearResult">
		SELECT 	PCC.COD_PERI CAMPANA,
			    PCC.COD_TIPO_CHEQ COD_TIPO_CHEQUEO,
       			PTC.DES_TIPO_CHEQ TIPO_CHEQUEO,
       			MC.COD_CLIE COD_CONSULTORA,
       			TRIM(MC.VAL_NOM1) || ' ' || TRIM(MC.VAL_APE1) || ' '||TRIM(MC.VAL_APE2) NOMBRE,
       			ZR.DES_REGI REGION, 
       			ZZ.DES_ZONA ZONA, 
       			ZS.DES_SECCI SECCION, 
       			ZT.COD_TERR TERRITORIO
  		  FROM 	MAE_CLIEN_UNIDA_ADMIN MCUA,
       			MAE_CLIEN             MC,
       			ZON_TERRI_ADMIN       ZTA,
       			ZON_SECCI             ZS,
       			ZON_ZONA              ZZ,
       			ZON_REGIO             ZR,
       			ZON_TERRI             ZT,
       			PED_TIPO_CHEQU        PTC,
       			PED_CONSU_CHEQU       PCC
         WHERE  PTC.COD_PAIS = #codigoPais#
           AND 	PCC.COD_TIPO_CHEQ = #codigoTipoChequeo#
           AND 	PCC.COD_PERI = #codigoPeriodo#
           <isNotEmpty property="codigoConsultora">
				AND 	MC.COD_CLIE = #codigoConsultora# 
		   </isNotEmpty>
   		   AND 	MC.OID_CLIE = MCUA.CLIE_OID_CLIE
   		   AND 	MCUA.IND_ACTI = 1
   		   AND 	MCUA.ZTAD_OID_TERR_ADMI = ZTA.OID_TERR_ADMI
   		   AND 	ZTA.ZSCC_OID_SECC = ZS.OID_SECC
   		   AND 	ZS.ZZON_OID_ZONA = ZZ.OID_ZONA
   		   AND 	ZZ.ZORG_OID_REGI = ZR.OID_REGI
   		   AND 	ZTA.TERR_OID_TERR = ZT.OID_TERR
   		   AND 	PTC.COD_PAIS = PCC.COD_PAIS
   		   AND 	PTC.COD_TIPO_CHEQ = PCC.COD_TIPO_CHEQ
   		   AND 	MC.COD_CLIE = PCC.COD_CLIE
	</select>
	
	<resultMap class="java.util.HashMap" id="unidadesAdministrativasChequeoListResult">
		<result property="codigoPais" 				column="cod_pais"/>
		<result property="codigoTipoChequeo" 		column="cod_tipo_cheq"/>
		<result property="codigoPeriodo" 			column="cod_peri"/>
		<result property="codigoRegion" 			column="cod_regi"/>
		<result property="codigoZona" 				column="cod_zona"/>
		<result property="codigoSeccion" 			column="cod_secc"/>
		<result property="codigoTerritorio" 		column="cod_terr"/>
		<result property="desTipoChequeo" 			column="des_tipo_cheq"/>
		<result property="desRegion" 				column="des_regi"/>
		<result property="desZona" 					column="des_zona"/>
		<result property="desSeccion" 				column="des_secci"/>
		<result property="oidUnidAdmiCheq" 			column="OID_UNID_ADMI_CHEQ"/>
	</resultMap>
	
	<select id="getUnidadesAdministrativasChequeoList" resultMap="unidadesAdministrativasChequeoListResult">
		select ca.cod_pais,
	       ca.cod_tipo_cheq,
	       ca.cod_peri,
	       ca.cod_regi,
	       ca.cod_zona,
	       ca.cod_secc,
	       decode(ca.cod_terr, 0, ' ', ca.cod_terr) cod_terr,
	       ct.des_tipo_cheq,
	       (select DES_REGI from zon_regio where COD_REGI = ca.cod_regi) as des_regi,
	       (select DES_ZONA from zon_zona where COD_ZONA = ca.cod_zona) as des_zona,
	       decode(ca.cod_zona,
	              ' ',
	              ' ',
	              (select zs.des_secci
	                 from zon_secci zs, zon_zona zz
	                where zs.cod_secc = ca.cod_secc
	                  and zs.zzon_oid_zona = zz.oid_zona
	                  and zz.cod_zona = ca.cod_zona
	                  and zs.ind_acti = '1'
	                  and zs.ind_borr = '0')) as des_secci,
	       ca.OID_UNID_ADMI_CHEQ
	  from PED_UNIDA_ADMIN_CHEQU ca, ped_tipo_chequ ct
	 where ca.cod_tipo_cheq = ct.cod_tipo_cheq
	 and ca.cod_tipo_cheq = #codigoTipoChequeo#
	 		
		<isNotEmpty property="codigoPeriodo">
			and ca.cod_peri = #codigoPeriodo#
		</isNotEmpty>
		
		<isNotEmpty property="codigoRegion">
			and ca.cod_regi = #codigoRegion# 
		</isNotEmpty>
						
		<isNotEmpty property="codigoZona">
			and ca.cod_zona = #codigoZona#
		</isNotEmpty>
		
		<isNotEmpty property="codigoSeccion">
			and ca.cod_secc = #codigoSeccion#
		</isNotEmpty>
		
		<isNotEmpty property="codigoTerritorio">
			and ca.cod_terr = #codigoTerritorio#
		</isNotEmpty>		 
		ORDER BY 
		       ca.cod_peri,
		       ca.cod_tipo_cheq,
		       ca.cod_regi,
		       ca.cod_zona,
		       ca.cod_secc,
		       ca.cod_terr
	</select>
	
	<insert id="insertUnidadesAdministrativasChequeo" parameterClass="java.util.Map">
		insert into PED_UNIDA_ADMIN_CHEQU (COD_PAIS,COD_TIPO_CHEQ,COD_PERI,COD_REGI,COD_ZONA,COD_SECC,COD_TERR,OID_UNID_ADMI_CHEQ)
		values (#codigoPais#,#codigoTipoChequeo#,#codigoPeriodo#,#codigoRegion#,#codigoZona#,#codigoSeccion#,#codigoTerritorio#, PED_UACH_SEQ.nextval)
	</insert>
	
	<delete id="deleteUnidadesAdministrativasChequeo" parameterClass="java.util.Map">
		delete from PED_UNIDA_ADMIN_CHEQU 
		where cod_pais = #codigoPais# 
		and OID_UNID_ADMI_CHEQ = #oidUnidAdmiCheq#
	</delete>
	
	<select id="getTiposSolicitud" resultMap="baseResultOID">
		 SELECT oid_tipo_soli as oid,
                (SELECT c.val_i18n
                 FROM ped_tipo_solic      a,
                      ped_tipo_solic_pais b,
                      gen_i18n_sicc_comun c
					            WHERE b.tsol_oid_tipo_soli = a.oid_tipo_soli
	             AND b.oid_tipo_soli_pais = t.oid_tipo_soli
	             AND c.attr_enti = 'PED_TIPO_SOLIC'
	             AND c.val_oid = a.oid_tipo_soli) as descripcion
 		FROM sto_tipo_solic_pais t 
	</select>
	
	<select id="getTiposSolicitudOcr" resultMap="baseResultOID">
		 SELECT oid_tipo_soli as oid,
                (SELECT c.val_i18n
                 FROM ped_tipo_solic      a,
                      ped_tipo_solic_pais b,
                      gen_i18n_sicc_comun c
                 WHERE b.tsol_oid_tipo_soli = a.oid_tipo_soli
	             AND b.oid_tipo_soli_pais = t.oid_tipo_soli
	             AND c.attr_enti = 'PED_TIPO_SOLIC'
	             AND c.val_oid = a.oid_tipo_soli) as descripcion
 		FROM ocr_tipo_solic_pais t 
	</select>
	
	<select id="getSolicitudesGP2ByPeriodoTipoSoliFecha" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(1) from ped_solic_cabec a,PED_GRUPO_PROCE b
		where  a.PERD_OID_PERI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodo#)
		<iterate prepend="AND" property="tipoSolicitud" open=" a.TSPA_OID_TIPO_SOLI_PAIS IN (" close=")" conjunction=",">
			#tipoSolicitud[]#
		</iterate>
		<![CDATA[ 
		and    a.fec_prog_fact >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
		and    a.fec_prog_fact <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
		]]>
		and    b.oid_grup_proc = a.grpr_oid_grup_proc
		and    b.cod_grup_proc = 'GP2'
	</select>
	
	<select id="getRegistroByPeriodoTipoSoliFecha" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT count(1) 
		  FROM ped_solic_cabec a
		 WHERE a.perd_oid_peri = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodo#)
		   AND a.tspa_oid_tipo_soli_pais = #tipoSolicitud#
		   AND a.fec_prog_fact = TO_DATE(#fecha#,'DD/MM/YYYY')
		   AND a.grpr_oid_grup_proc in (1, 2, 3)
		   AND a.ESSO_OID_ESTA_SOLI = 1
	</select>

	<select id="getRegistroByPeriodoTipoSoliFecha2" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT count(1) 
		  FROM ped_solic_cabec a
		 WHERE a.perd_oid_peri = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodo#)
		   AND a.tspa_oid_tipo_soli_pais = #tipoSolicitud#
		   AND a.fec_prog_fact = TO_DATE(#fecha#,'DD/MM/YYYY')
		   AND a.grpr_oid_grup_proc = #grupoProceso#
		   AND a.ESSO_OID_ESTA_SOLI = 1
	</select>
	
	<update id="updateGrupoProceso" parameterClass="java.util.Map">
		UPDATE PED_SOLIC_CABEC A
		   SET A.GRPR_OID_GRUP_PROC = 3,
		       A.PROC_OID_PROC = 1	      
		 WHERE A.PERD_OID_PERI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodo#)
		<iterate prepend="AND" property="tipoSolicitud" open=" a.TSPA_OID_TIPO_SOLI_PAIS IN (" close=")" conjunction=",">
			#tipoSolicitud[]#
		</iterate>
		<![CDATA[ 
		   AND A.FEC_PROG_FACT >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
		   AND A.FEC_PROG_FACT <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
		]]>
		   AND A.GRPR_OID_GRUP_PROC = 2
		
	</update>
	
	<update id="updateFechaProgramada" parameterClass="java.util.Map">
		UPDATE ped_solic_cabec a
		   SET a.fec_prog_fact = TO_DATE(#nuevaFecha#,'DD/MM/YYYY')
		 WHERE a.perd_oid_peri = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodo#)
		   AND a.tspa_oid_tipo_soli_pais = #tipoSolicitud#
		   AND a.fec_prog_fact = TO_DATE(#fecha#,'DD/MM/YYYY')
		   <isNotEmpty property="grupoProceso">
		   AND a.grpr_oid_grup_proc = #grupoProceso#
		   </isNotEmpty>
		   AND a.ESSO_OID_ESTA_SOLI = 1
		   
	</update>
	
	<select id="getNomMetodoProcFecha" parameterClass="java.util.Map" resultClass="java.lang.String">
		select EXE_PROC_FECH from ocr_tipo_solic_pais where OID_TIPO_SOLI = to_number(#tipoSolicitud#)
	</select>
	
	<update id="executeOCRFecha" parameterClass="java.util.Map">
		UPDATE INT_SOLIC_CONSO_CABEC I
		   SET I.FEC_PROG_FACT = TO_DATE(#nuevaFecha#, 'DD/MM/YYYY')
		 WHERE EXISTS (SELECT 1
		          FROM PED_SOLIC_CABEC P
		         WHERE P.PERD_OID_PERI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#periodo#)
		           AND P.TSPA_OID_TIPO_SOLI_PAIS = #tipoSolicitud#
		           AND P.FEC_PROG_FACT = TO_DATE(#fecha#,'DD/MM/YYYY')
		           		  <isNotEmpty property="grupoProceso">
		           		  	AND P.GRPR_OID_GRUP_proc = #grupoProceso#
						  </isNotEmpty>
		           AND P.ESSO_OID_ESTA_SOLI = 1
		           AND P.OID_SOLI_CABE = I.SOCA_OID_SOLI_CABE_REFE)
	</update>
	
	<select id="getTipoDocumentoContableAllList" resultMap="baseResultOID">
		select oid_tipo_docu as oid, des_tipo_docu as descripcion from fac_tipo_docum
	</select>
	
	<resultMap class="java.util.HashMap" id="getCantDocImprResult">
		<result property="cantDocImp" column="CANT_DOC_IMP"/>
		<result property="numRegNoNulo" column="NUM_REG_NONULO"/>
	</resultMap>
	
	<select id="getCantDocImpr" parameterClass="java.util.Map" resultMap="getCantDocImprResult">
		SELECT 	SUM (cant_doc_impr) cant_doc_imp,
       			SUM (num_reg_nonulos) num_reg_nonulo
		FROM (SELECT COUNT (*) AS cant_doc_impr, 
		             0 AS cant_doc_noimpr,
		             0 AS num_reg_nonulos
		      FROM fac_docum_conta_cabec dcc,
		           SEG_SUBAC S
		      WHERE dcc.sbac_oid_sbac = s.oid_sbac
		      AND s.cod_sbac = #codigoSubacceso#
		      AND dcc.tido_oid_tipo_docu = #tipoDocumentoContable#
		      AND dcc.val_ejer_docu_inte = #ejercicio#
		      AND dcc.num_docu_cont_inte BETWEEN #rangoDesdeDocInterno# AND #rangoHastaDocInterno#
		      <![CDATA[
		      AND dcc.NUM_UNID_ATEN_TOTA<>0
		      ]]>
		      UNION
		      SELECT 0 AS cant_doc_impr, 
		             0 AS cant_doc_noimpr,
		             COUNT (*) AS num_reg_nonulos
		      FROM fac_docum_conta_cabec dcc,
		           SEG_SUBAC S
		      WHERE dcc.sbac_oid_sbac = s.oid_sbac
		      AND s.cod_sbac = #codigoSubacceso#
		      AND dcc.tido_oid_tipo_docu = #tipoDocumentoContable#
		      AND dcc.val_ejer_docu_inte = #ejercicio#
		      AND dcc.num_docu_cont_inte BETWEEN #rangoDesdeDocInterno# AND #rangoHastaDocInterno#
		      <![CDATA[  
		      AND dcc.NUM_UNID_ATEN_TOTA <>0
		      ]]>
		      AND dcc.num_docu_lega IS NOT NULL
		      <isEqual property="indSoporteCaracteres" compareValue="0">
		      	AND lpad(dcc.val_seri_docu_lega,10,'0') = lpad(#serieDocLegal#,10,'0')                               
		      </isEqual>
		      <isNotEqual property="indSoporteCaracteres" compareValue="0">
		      	AND dcc.val_seri_docu_lega = #serieDocLegal# 
		      </isNotEqual>
		      )
	</select>
	
	<parameterMap class="map" id="executeReasignacionDocumentosLegalesParams">
		<parameter property="tipoDocumentoContable"                jdbcType="NUMBER" 	javaType="java.lang.Integer"  	mode="IN"/>
		<parameter property="codigoSubacceso" 					   jdbcType="VARCHAR" 	javaType="java.lang.String"  	mode="IN"/>
		<parameter property="ejercicio" 						   jdbcType="VARCHAR" 	javaType="java.lang.String"  	mode="IN"/>
		<parameter property="rangoDesdeDocLegal"                   jdbcType="NUMBER" 	javaType="java.lang.Integer"  	mode="IN"/>
		<parameter property="rangoDesdeNrControl"                  jdbcType="NUMBER" 	javaType="java.lang.Integer"  	mode="IN"/>
		<parameter property="indicadorNumeroControlDocumentoLegal" jdbcType="VARCHAR" 	javaType="java.lang.String"  	mode="IN"/>
		<parameter property="rangoDesdeDocInterno" 				   jdbcType="NUMBER" 	javaType="java.lang.Integer"  	mode="IN"/>
		<parameter property="rangoHastaDocInterno" 				   jdbcType="NUMBER" 	javaType="java.lang.Integer"  	mode="IN"/>
		<parameter property="serieDocLegal" 					   jdbcType="VARCHAR" 	javaType="java.lang.String"  	mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReasignacionDocumentosLegales" parameterMap="executeReasignacionDocumentosLegalesParams">
		{call PED_PKG_PROCE.PED_PR_PROCE_REASI_DOCUM_LEGAL(?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap class="map" id="executeResecuenciacionPedidosParams">
		<parameter property="codigoPais" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFacturacion" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="login" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	
	<procedure id="executeResecuenciacionPedidos" parameterMap="executeResecuenciacionPedidosParams">
		{call APP_PKG_PROCE.APP_PR_PROCE_SECUE(?,?,?,?)}
	</procedure>
	
	<resultMap id="listadoReemplazosResult" class="java.util.HashMap">
		<result property="oidMatrizReemp"         column="oid_matr_reem"/>
		<result property="cuvOriginal" 			  column="CUV_ORIGINAL"/>
		<result property="producto" 			  column="PRODUCTO"/>
		<result property="descripcion" 			  column="DESCRIPCION"/>
		<result property="precioCatalogoOriginal" column="PRECIO_CATALOGO_ORIGINAL"/>
		<result property="factorRepeticion" 	  column="FACTOR_REPETICION"/>
		<result property="tipoOfertaOriginal"     column="TIPO_OFERTA_ORIGINAL"/>
		<result property="cuvReemplazo"           column="CUV_REEMPLAZO"/>
		<result property="productoReemp"          column="PRODUCTO1"/>
		<result property="descripcionReemp"       column="DESCRIPCION1"/>
		<result property="precioCatalogoReemp"    column="PRECIO_CATALOGO_REEMPLAZO"/>
		<result property="factorRepeticionReemp"  column="FACTOR_REPETICION"/>
		<result property="tipoOfertaReemp"        column="TIPO_OFERTA_REEMPLAZO"/>
		<result property="zona" 			      column="ZONA"/>
		<result property="region"                 column="REGION"/>
		<result property="tipoCliente"            column="TIPO_CLIEN"/>
		<result property="subtipoCliente"         column="SUBTIPO_CLIEN"/>
		<result property="tipoClasificacion"      column="TIPO_CLASI"/>
		<result property="clasificacion"          column="CLASI"/>
		<result property="indicadorActivo"        column="ACTIVO"/>
		<result property="indicadorReemplazo"     column="IND_REEM_ANTE_CUAD"/>
		<result property="tipoReemplazo"     column="TIPO_REEM"/>
	</resultMap>
	
	<select id="getReemplazosByPeriodo" parameterClass="java.util.Map" resultMap="listadoReemplazosResult">
		select i.oid_matr_reem,
		       c.VAL_CODI_VENT CUV_ORIGINAL,
		       j.COD_SAP PRODUCTO,
		       l.VAL_I18N DESCRIPCION,
		       c.imp_prec_cata PRECIO_CATALOGO_ORIGINAL,
		       c.val_fact_repe FACTOR_REPETICION,
		       u.cod_tipo_ofer TIPO_OFERTA_ORIGINAL,
		       g.VAL_CODI_VENT CUV_REEMPLAZO,
		       k.COD_SAP PRODUCTO1,
		       m.VAL_I18N DESCRIPCION1,
		       g.imp_prec_cata PRECIO_CATALOGO_REEMPLAZO,
		       g.val_fact_repe FACTOR_REPETICION,
		       t.cod_tipo_ofer TIPO_OFERTA_REEMPLAZO,
		       n.COD_ZONA ZONA,
		       o.COD_REGI REGION,
		       (select val_i18n
		          from gen_i18n_sicc_comun
		         where attr_enti = 'MAE_TIPO_CLIEN'
		           and val_oid = r.OID_TIPO_CLIE) TIPO_CLIEN,
		       (select val_i18n
		          from gen_i18n_sicc_comun
		         where attr_enti = 'MAE_SUBTI_CLIEN'
		           and val_oid = s.OID_SUBT_CLIE) SUBTIPO_CLIEN,
		       (select val_i18n
		          from gen_i18n_sicc_comun
		         where attr_enti = 'MAE_TIPO_CLASI_CLIEN'
		           and val_oid = p.OID_TIPO_CLAS) TIPO_CLASI,
		       (select val_i18n
		          from gen_i18n_sicc_comun
		         where attr_enti = 'MAE_CLASI'
		           and val_oid = q.OID_CLAS) CLASI,
		           i.IND_ACTI ACTIVO,
                   i.IND_REEM_ANTE_CUAD,
               (select des_tipo_reem
                  from pre_tipo_reemp
                 where oid_tipo_reem = i.oid_tipo_reem) TIPO_REEM
		  from pre_matri_factu_cabec a,
		       pre_ofert             b,
		       pre_ofert_detal       c,
		       pre_matri_factu       d,
		       cra_perio             e,
		       seg_perio_corpo       f,
		       pre_ofert_detal       g,
		       pre_matri_factu       h,
		       pre_matri_reemp       i,
		       mae_produ             j,
		       mae_produ             k,
		       gen_i18n_sicc_pais    l,
		       gen_i18n_sicc_pais    m,
		       zon_zona              n,
		       zon_regio             o,
		       mae_tipo_clasi_clien  p,
		       mae_clasi             q,
		       mae_tipo_clien        r,
		       mae_subti_clien       s,
		       pre_tipo_ofert        t,
		       pre_tipo_ofert        u
		 where a.OID_CABE = b.MFCA_OID_CABE
		   and b.OID_OFER = c.OFER_OID_OFER
		   and c.OID_DETA_OFER = d.OFDE_OID_DETA_OFER
		   and a.PERD_OID_PERI = e.OID_PERI
		   and i.MAFA_OID_COD_PPAL = d.OID_MATR_FACT
		   and i.MAFA_OID_COD_REEM = h.OID_MATR_FACT
		   and h.OFDE_OID_DETA_OFER = g.OID_DETA_OFER
		   and f.OID_PERI = e.PERI_OID_PERI
		   and f.COD_PERI = #codigoPeriodo#
		   and c.PROD_OID_PROD = j.OID_PROD
		   and j.OID_PROD = l.VAL_OID
		   and l.ATTR_ENTI = 'MAE_PRODU'
		   and g.PROD_OID_PROD = k.OID_PROD
		   and k.OID_PROD = m.VAL_OID
		   and m.ATTR_ENTI = 'MAE_PRODU'
		   and g.tofe_oid_tipo_ofer = t.oid_tipo_ofer
		   and c.tofe_oid_tipo_ofer = u.oid_tipo_ofer
		   and i.ZZON_OID_ZONA = n.OID_ZONA(+)
		   and i.ZORG_OID_REGI = o.OID_REGI(+)
		   and i.TCCL_OID_TIPO_CLAS = p.OID_TIPO_CLAS(+)
		   and i.CLAS_OID_CLAS = q.OID_CLAS(+)
		   and i.TICL_OID_TIPO_CLIE = r.OID_TIPO_CLIE(+)
		   and i.SBTI_OID_SUBTI_CLIEN = s.OID_SUBT_CLIE(+)
		 <isNotEmpty property="codigoVentaPrincipal">  
		   and c.VAL_CODI_VENT = #codigoVentaPrincipal#
		 </isNotEmpty>
		 <isNotEmpty property="codigoVentaReemplazo">  
           and g.VAL_CODI_VENT = #codigoVentaReemplazo#
         </isNotEmpty>  
          <isNotEmpty property="indicadorActivo">  
            and i.IND_ACTI = #indicadorActivo#
         </isNotEmpty>  
          <isNotEmpty property="oidTipoReemplazo">  
            and i.OID_TIPO_REEM = #oidTipoReemplazo#
         </isNotEmpty> 
	</select>
	
	<delete id="deleteReemplazos" parameterClass="java.util.Map">	
		delete from pre_matri_reemp 
		 where oid_matr_reem = #oidMatrizReemp#
	</delete>	
	
	<select id="getInformacionCUV" parameterClass="java.util.Map" resultClass="productoAgregacion">
		select j.COD_SAP codigoProducto,
		       l.VAL_I18N descripcionProducto,
		       d.oid_matr_fact id
		  from pre_matri_factu_cabec a,
		       pre_ofert             b,
		       pre_ofert_detal       c,
		       pre_matri_factu       d,
		       cra_perio             e,
		       seg_perio_corpo       f,
		       mae_produ             j,
		       gen_i18n_sicc_pais    l
		 where a.OID_CABE = b.MFCA_OID_CABE
		   and b.OID_OFER = c.OFER_OID_OFER
		   and c.OID_DETA_OFER = d.OFDE_OID_DETA_OFER
		   and a.PERD_OID_PERI = e.OID_PERI
		   and f.OID_PERI = e.PERI_OID_PERI
		   and f.COD_PERI = #codigoPeriodo#
		   and c.PROD_OID_PROD = j.OID_PROD
		   and l.ATTR_ENTI = 'MAE_PRODU'
		   and l.VAL_OID = j.OID_PROD
		   and c.VAL_CODI_VENT = #codigoVenta#  
	
	</select>
	
	<select id="validaCUVPrincipal" parameterClass="java.util.Map" resultClass="java.lang.String">
		select count(1)		
		  from pre_matri_factu_cabec a,
		       pre_ofert             b,
		       pre_ofert_detal       c,
		       pre_matri_factu       d,
		       cra_perio             e,
		       seg_perio_corpo       f,
		       mae_produ             j,
		       gen_i18n_sicc_pais    l,
		       pre_matri_reemp       i
		 where a.OID_CABE = b.MFCA_OID_CABE
		   and b.OID_OFER = c.OFER_OID_OFER
		   and c.OID_DETA_OFER = d.OFDE_OID_DETA_OFER
		   and a.PERD_OID_PERI = e.OID_PERI
		   and f.OID_PERI = e.PERI_OID_PERI
		   and f.COD_PERI = #codigoPeriodo#
		   and c.PROD_OID_PROD = j.OID_PROD
		   and l.ATTR_ENTI = 'MAE_PRODU'
		   and l.VAL_OID = j.OID_PROD
		   and i.MAFA_OID_COD_PPAL = d.OID_MATR_FACT
		   and c.VAL_CODI_VENT = #codigoVenta#
	</select>
	
	<insert id="insertOCRReemplazos" parameterClass="java.util.Map">
		Insert into pre_matri_reemp(oid_matr_reem,
		                            mafa_oid_cod_ppal,
		                            mafa_oid_cod_reem,
		                            ind_mens,
		                            ind_reem_ante_cuad,
		                            fec_ulti_actu,
		                            <isNotEmpty property="region">
		                            	zorg_oid_regi,
		                            </isNotEmpty>
		                            <isNotEmpty property="zona">
		                            	zzon_oid_zona,
		                            </isNotEmpty>
		                            ticl_oid_tipo_clie,
		                            sbti_oid_subti_clien,
		                            tccl_oid_tipo_clas,
		                            clas_oid_clas,
		                            ind_acti,
		                            usu_crea,
		                            fec_crea,
		                            fec_acti,
		                            oid_tipo_reem)
		values (pre_mtrz_seq.nextval,
		        #oidProductoPrincipal#,
		        #oidProductoReemplazo#,
		        #indicadorMensaje#,
		        #tipoReemplazo#,
		        sysdate,
		        <isNotEmpty property="region">
		        	gen_pkg_gener.GEN_FN_DEVUELVE_ID_REGION(#codigoPais#,'T', 'VD', #region#) ,
		        </isNotEmpty>
		        <isNotEmpty property="zona">
		        	gen_pkg_gener.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#, 'T', 'VD', #region#, #zona#),
		        </isNotEmpty>
		        #tipoCliente#,
		        #subtipoCliente#,
		        #tipoClasificacion#,
		        #clasificacion#,
		        nvl2(#fechaActivacion#,'0','1'),
		        #usuario#,
		        SYSDATE,
		        to_date(#fechaActivacion#,'dd/mm/yyyy'),
		        #oidTipoReemplazo#)
	</insert>
	
	<parameterMap id="executeReemplazoProdImpNacParams" class="map">
		<parameter property="codigoPeriodo" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	
	<procedure id="executeReemplazoProdImpNac" parameterMap="executeReemplazoProdImpNacParams">
		{call PED_PKG_PROCE.PED_PR_PROCE_REEMP_PRODU_IMPOR(?)}
	</procedure>
	
	<insert id="insertControlFacturacionAudit" parameterClass="pedidoControlFacturacion">
    	insert into bas_ctrl_fact_audi
			  (cod_pais,
			   cod_peri,
			   num_secu,
			   fec_proc,
			   val_mnt_min_fact,
			   val_mnt_min_acept,
			   val_mnt_max,
			   val_unid_max,
			   sta_camp,
			   usu_digi,
			   fec_digi,
			   usu_modi,
			   fec_modi,
			   cod_marc,
			   des_marc,
			   cod_cana,
			   des_cana,
			   val_mnt_min_deud,
			   ind_camp_act,
			   num_lote)
			 (select cod_pais,
			       cod_peri,
			       BAS_SEQ_CTRL.nextval,
			       fec_proc,
			       val_mnt_min_fact,
			       val_mnt_min_acept,
			       val_mnt_max,
			       val_unid_max,
			       sta_camp,
			       nvl(usu_digi,#usuario#),
			       nvl(fec_digi,sysdate),
			       #usuario#,
			       sysdate,
			       cod_marc,
			       des_marc,
			       cod_cana,
			       des_cana,
			       val_mnt_min_deud,
			       ind_camp_act,
			       num_lote
			  from bas_ctrl_fact
			  where cod_pais = #codigoPais#
			    and cod_peri = #codigoPeriodo#)				   
	</insert>	
	
	<select id="getNumeroLoteByPk" parameterClass="java.util.Map" resultClass="java.lang.String">
		select ba.num_lote
		 from bas_ctrl_fact  ba
		where ba.cod_pais = #codigoPais#   
		  and ba.cod_peri = #codigoPeriodo#		   
	</select>
	
	<select id="getNumeroPedidosByLote" parameterClass="java.util.Map" resultClass="java.lang.String">
		select count(1)
		 from int_solic_conso_cabec ca,                     
		      bas_ctrl_fact  ba
		where ba.cod_pais = #codigoPais#   
		  and ba.cod_peri = #codigoPeriodo#
		  and ba.num_lote = ca.num_lote		   
	</select>
	
	<select id="getIndicadorPedidosFacturadosPeriodo" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		  SELECT DECODE(COUNT(1), 0, 'N', 'S') IND_FACT
		    FROM PED_SOLIC_CABEC     A,
		         PED_TIPO_SOLIC_PAIS B,
		         PED_TIPO_SOLIC      C,
		         CRA_PERIO           D,
		         SEG_PERIO_CORPO     E
		   WHERE A.TSPA_OID_TIPO_SOLI_PAIS = B.OID_TIPO_SOLI_PAIS
		     AND B.TSOL_OID_TIPO_SOLI = C.OID_TIPO_SOLI
		     AND C.COD_TIPO_SOLI = 'SOC'
		     AND A.PERD_OID_PERI = D.OID_PERI
 		     AND D.PERI_OID_PERI = E.OID_PERI
 		     AND E.COD_PERI = #codigoPeriodo#
		     AND ROWNUM = 1
    </select>
    <select id="getRegistrosProcesadosReemplazoProdImpNac" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		  SELECT COUNT(1) NUM_REGI_PROC
		    FROM PRE_PROD_ALTER_ICE 		 
    </select>
	
	<select id="getConsolidadoCabeceraByPK" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		 SELECT COUNT(1)
		   FROM INT_SOLIC_CONSO_CABEC C,
		        BAS_PAIS              BA
		  WHERE C.COD_PAIS =  #codigoPais#
		    AND COD_PERI = #codigoPeriodo#
		    AND COD_CLIE = #codigoCliente#  
		    AND NUM_LOTE = #numeroLote#  
		    AND (C.IND_PROC_GP2 = '1' OR C.IND_ERRO_RECH = '1' OR EXISTS
		         (SELECT 1
		            FROM PED_SOLIC_CABEC P
		           WHERE OID_SOLI_CABE = SOCA_OID_SOLI_CABE_REFE
		             AND P.GRPR_OID_GRUP_PROC > 1))
		    AND BA.COD_PAIS = C.COD_PAIS
		    AND BA.IND_CONS_PEDI_MULT_LOTE = 'N'
    </select>
	
    <parameterMap id="executeAsignacionStockParams" class="map" >
		<parameter property="codigoPais"   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFact"	   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    	<parameter property="psusuario"	   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	<procedure id="executeAsignacionStock" parameterMap="executeAsignacionStockParams">
		{call ped_pkg_cuadr_ofert.PED_PR_PROCE_ASIGN_STOCK(?,?,?)}
	</procedure>

	<procedure id="executeHistoricoPedidos">
		{call PED_PKG_PROCE.PED_PR_PROCE_HISTO_PEDID}
	</procedure>	

    <update id="updateReemplazos" parameterClass="java.util.Map">	
		 update pre_matri_reemp
		 set ind_acti=#indicadorActivo# 
		 where oid_matr_reem = #oidMatrizReemp#
	</update>	
	
	<insert id="insertOCRReemplazosAuditoria" parameterClass="java.util.Map">	
	 
		 INSERT INTO PRE_AUDIT_MATRI_REEMP (
   				OID_AUDI_MATRI_REEM, 
   				OID_MATR_REEM, 
   				USU_CREA, 
   				FEC_CREA, 
   				VAL_ACCI) 
		 VALUES ( PRE_AUMR_SEQ.NEXTVAL,
		 		#oidMatrizReemp#,
		  		#usuario#,
    			SYSDATE, 
    			#accion#)
	</insert>	
	
	<update id="updateLevantarRetornarDeuda" parameterClass="java.util.Map">
		update int_solic_conso_cabec
		   set ind_admi_cart = #indicador#,  
		       <isNotEmpty property="usuario">    
		      		usu_admi_cart = #usuario#,
		       </isNotEmpty>
		       <isEmpty property="usuario">
		       		usu_admi_cart = null, 
		       </isEmpty>
		       <isNotEmpty property="fecha">
		        	fec_admi_cart = sysdate
		       </isNotEmpty>
		       <isEmpty property="fecha">
		       		fec_admi_cart = null
		       </isEmpty>		       
		 where cod_pais = #codigoPais#  
		   and cod_peri = #codigoPeriodo#
		   and cod_clie = #codigoCliente#
		   and num_lote = #numeroLote#
  </update>
  
  <resultMap id="getNivelRiesgoResult" class="java.util.HashMap">                     
    <result property="codigo"		column="codigo" />  
    <result property="descripcion" 	column="descripcion" />
  </resultMap> 

  <select id="getNivelRiesgo" resultMap="getNivelRiesgoResult">
		select    a.OID_NIVE_RIES as codigo, 
		          b.VAL_I18N as descripcion
		from      car_nivel_riesg a, 
		          gen_i18n_sicc_comun b 
		where     a.OID_NIVE_RIES=b.VAL_OID
		  and     b.ATTR_ENTI='CAR_NIVEL_RIESG'
		order by  2  	
  </select>
	
  <resultMap id="getListaPEDNivelesRiesgoChequearResult" class="java.util.HashMap">                     
    <result property="cod_tipo_cheq"	column="cod_tipo_cheq" />  
    <result property="cod_nive_ries" 	column="cod_nive_ries" />
    <result property="des_tipo_cheq" 	column="des_tipo_cheq" />
    <result property="des_nive_ries" 	column="des_nive_ries" />
  </resultMap> 

  <select id="getListaPEDNivelesRiesgoChequear" resultMap="getListaPEDNivelesRiesgoChequearResult">
		select    /*+ PUSH_SUBQ */ 
		          cod_tipo_cheq,
		          cod_nive_ries,
		          (
		            select    DES_TIPO_CHEQ 
		            from      ped_tipo_chequ 
		            where     cod_tipo_cheq=p.cod_tipo_cheq
		          ) as des_tipo_cheq,
		          (
		            select    VAL_I18N 
		            from      gen_i18n_sicc_comun 
		            where     ATTR_ENTI='CAR_NIVEL_RIESG' 
		              and     VAL_OID=p.cod_nive_ries
		          ) as des_nive_ries          
		from      ped_nivel_riesg_chequ p
		order by  1,2
  </select>

  <delete id="deletePEDNivelesRiesgoChequear" parameterClass="java.util.Map">	
		delete    
		from      ped_nivel_riesg_chequ
		where     cod_tipo_cheq = #codigoTipoChequeo#
	  	  and     cod_nive_ries =  #codigoNivelRiesgo#
  </delete>	

 <insert id="insertPEDNivelesRiesgoChequear" parameterClass="java.util.Map">	
     INSERT INTO PED_NIVEL_RIESG_CHEQU
        (COD_TIPO_CHEQ,
         COD_NIVE_RIES)
      VALUES
        (#codigoTipoChequeo#,
         #codigoNivelRiesgo#)
  </insert>	
	  
  
  <select id="validarPedidoMayorGP1" parameterClass="java.util.Map" resultClass="java.lang.String">
		select count(1)
		  from int_solic_conso_cabec ca,
		       ped_solic_cabec pc
		 where ca.soca_oid_soli_cabe_refe = pc.oid_soli_cabe
		   and ca.COD_PAIS = #codigoPais#
		   and ca.COD_PERI = #codigoPeriodo#
		   and ca.cod_clie = #codigoCliente#
		   and pc.grpr_oid_grup_proc > 1   
   </select>
  
  <update id="updateUnidadesSicc" parameterClass="java.util.Map">
	 update ped_solic_posic psp
	    set psp.num_unid_dema      = #unidades#,
	        psp.num_unid_por_aten  = #unidades#,
	        psp.num_unid_dema_real = #unidades#,
	        psp.num_unid_compr     = #unidades#
	  where psp.oid_soli_posi = (select pp.oid_soli_posi
	                               from int_solic_conso_cabec ca, 
	                                    ped_solic_cabec pc,
	                                    ped_solic_posic pp
	                              where ca.soca_oid_soli_cabe_refe = pc.oid_soli_cabe
	                                and pp.soca_oid_soli_cabe = pc.oid_soli_cabe
	                                and PC.GRPR_OID_GRUP_PROC = 1
	                                and ca.COD_PAIS = #codigoPais#
	                                and ca.COD_PERI = #codigoPeriodo#
	                                and ca.cod_clie = #codigoCliente#
	                                and pp.val_codi_vent = #codigoVta#)
	</update>
  
  	<typeAlias alias="codigoVentaLabelValue" type="biz.belcorp.ssicc.dao.model.LabelValueCUV"/>
  	
  	<select id="getDatosCUVByCodigoSAP" parameterClass="java.lang.String" resultClass="codigoVentaLabelValue">
  		select oid_prod as value, val_i18n as label, cod_unic_vent as precio
		from mae_produ, gen_i18n_sicc_pais 
		where oid_prod=val_oid 
		and attr_enti='MAE_PRODU' 
		and cod_sap=#value#
  	</select>
  	
  	<update id="updateCodVentaByOidProducto" parameterClass="java.util.Map">
  		Update mae_produ set cod_unic_vent=#cuvNuevo# where oid_prod=#oidProducto#
  	</update>
  	
  	<insert id="saveAuditoria" parameterClass="java.util.Map">
	  	INSERT INTO PED_AUDIT_PRODU(
	  	            OID_AUDI_PROD,
	  	            OID_PROD,
	  	            COD_UNIC_VENT_ANTE,
	  	            COD_UNIC_VENT_NUEV,
	  	            USU_MODI,
	  	            FEC_MODI)
  	 	VALUES(PAPR_SEQ.nextval,
  	 	       #oidProducto#,
  	 	       #cuvAnterior#,
  	 	       #cuvNuevo#,
  	 	       #codigoUsuario#,
  	 	       sysdate)
  	</insert>
	
	
	<select id="getValidaBloqueoDigitacionPedidos" parameterClass="java.util.Map" resultClass="string">
		SELECT OCR_SOLIC_PEDIDOS.OCR_FN_VALID_BLOQU_DIGIT_PEDID(#codCliente#) FROM DUAL
	</select>
	
	<parameterMap id="cerrarPeriodoParams" class="map" >
        <parameter property="codigoPais"   				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="codigoPeriodo"   			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="usuario.login"   				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="codigoTipoDocumento"   	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
    </parameterMap>

    <procedure id="cerrarPeriodo" parameterMap="cerrarPeriodoParams" >
        {call PED_PKG_PROCE.PED_PR_CIERR_PERIO(?,?,?,?)}
    </procedure>
	
    
     <delete id="deleteSolicitudesTransferidas" parameterClass="java.util.Map">
	  	delete from OCR_SOLIC_CREDI_TRANS
	  	where COD_CLIE= #codigoConsultora#	  	 
  	 </delete>    
    
     <insert id="saveSolicitudesTransferidas" parameterClass="java.util.Map">
	  	INSERT INTO OCR_SOLIC_CREDI_TRANS(
	  	            COD_CLIE,
	  	            FEC_TRAN,
	  	            USU_DIGI,
	  	            FEC_DIGI)
  	 	VALUES(#codigoConsultora#,
  	 	       TO_DATE(#fechaTransferencia#,'dd/MM/yyyy'),
  	 	       #login#,
  	 	       sysdate)
  	</insert>

	<resultMap id="listaDetallePedidoResult" class="java.util.HashMap">                     
    	<result property="codPais" 		column="COD_PAIS" />
    	<result property="numLote" 		column="NUM_LOTE" />
    	<result property="codCliente" 	column="COD_CLIENTE" />
    	<result property="codPeriodo" 	column="COD_PERIODO" />
    	<result property="codigoVenta"	column="COD_VENTA" />  
    	<result property="producto" 	column="DES_PRODUCTO" />
    	<result property="preCatalogo" 	column="PRE_CATALOGO" />
    	<result property="uniDemanda" 	column="UNI_DEMANDA" />
    	<result property="preTotal" 	column="PRE_TOTAL" />
  	</resultMap>
  	
  	
	<select id="getListaDetallePedido" parameterClass="java.util.Map" resultMap="listaDetallePedidoResult">
		SELECT  p.cod_pais		 COD_PAIS,
			    p.num_lote		 NUM_LOTE,
       			p.cod_clie		 COD_CLIENTE,
       			p.cod_peri		 COD_PERIODO,
			    p.cod_vent       COD_VENTA,
       			p.des_prod       DES_PRODUCTO,
       			p.val_prec_cata  PRE_CATALOGO,
       			p.val_unid_dem	 UNI_DEMANDA,
       			p.val_prec_tota  PRE_TOTAL
		  FROM  ped_solic_digit_detal p
		 WHERE 	p.cod_pais = #codigoPais#
   		   AND 	p.cod_peri = #codigoPeriodo#
   		   AND 	p.cod_clie = #codigoConsultora#
	  ORDER BY  1
	</select>
	
	<select id="getSumaTotalPedidoListaDetallePedido" parameterClass="java.util.Map" resultClass="string">
		SELECT  TRIM(TO_CHAR(NVL(sum(p.val_prec_tota),0), '999999999.00'))
		  FROM  ped_solic_digit_detal p
		 WHERE 	p.cod_pais = #codigoPais#
   		   AND 	p.cod_peri = #codigoPeriodo#
   		   AND 	p.cod_clie = #codigoConsultora#
	</select>
	
	<delete id="deleteDetallePedidoOnLine" parameterClass="java.util.Map">
		DELETE FROM ped_solic_digit_detal
         WHERE cod_pais = #codigoPais#
   		   AND cod_peri = #codigoPeriodo#
   		   AND cod_clie = #codigoConsultora#
   		   AND num_lote = #numLote#
   		   AND cod_vent = #codigoVenta#
    </delete>
    
    <select id="verificarDetallePedido" parameterClass="java.util.Map" resultClass="string">
		SELECT COUNT(1)
  		  FROM ped_solic_digit_detal p
 		 WHERE p.cod_pais = #codigoPais#
   		   AND p.cod_peri = #codigoPeriodo#
   		   AND p.cod_clie = #codigoConsultora#
   		   AND p.num_lote = #numLote#
	</select>
	
	<delete id="deleteCabeceraPedidoOnLine" parameterClass="java.util.Map">
		DELETE FROM ped_solic_digit_cabec
         WHERE cod_pais = #codigoPais#
   		   AND cod_peri = #codigoPeriodo#
   		   AND cod_clie = #codigoConsultora#
   		   AND num_lote = #numLote#
    </delete>
    
	<select id="getBloqueoOnline" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT sto_pkg_proce_valid_occ.sto_fn_valid_bloqu_onlin(#codigoPeriodo#,#codigoCliente#)
		  FROM DUAL
	</select>

	<update id="actualizaIndicadorOCS" parameterClass="java.util.Map">
		UPDATE	ped_solic_digit_cabec
           SET  ind_ocs = '1',
           		ind_proc = 'L'
  		 WHERE 	cod_pais = #codigoPais#
		   AND 	cod_peri = #codigoPeriodo#
		   AND 	cod_clie = #codCliente#
		   AND 	num_lote = #numLote#
	</update>
	
	<select id="getFechaFacturacion" parameterClass="java.util.Map" resultClass="string">
		SELECT to_char(a.fec_proc,'dd/MM/yyyy')
  		  FROM bas_ctrl_fact a
 		 WHERE a.cod_pais = #codigoPais#
   		   AND a.cod_peri = #codigoPeriodo#
	</select>

	<select id="getNumeroSecuenciaDocumento" parameterClass="java.util.Map" resultClass="string">
		SELECT a.sec_nume_docu
  		  FROM int_solic_conso_cabec a
 		 WHERE a.cod_pais = #codigoPais#
   		   AND a.cod_peri = #codigoPeriodo#
   		   AND a.cod_clie = #codCliente#
   		   AND a.num_lote = #numLote#
	</select>
	
	<select id="getOidSolicitud" parameterClass="java.util.Map" resultClass="string">
		SELECT soca_oid_soli_cabe_refe
  	      FROM int_solic_conso_cabec c,
       		   ped_solic_cabec       p
 		 WHERE p.oid_soli_cabe = c.soca_oid_soli_cabe_refe
   		   AND c.sec_nume_docu = #secNumDoc#
   		   AND c.num_lote = #numLote#
   		   AND c.cod_pais = #codigoPais#
	</select>

	<update id="actualizaIndicadorProcDetal" parameterClass="java.util.Map">
		UPDATE	ped_solic_digit_detal
           SET  ind_proc = 'L'
  		 WHERE 	cod_pais = #codigoPais#
		   AND 	cod_peri = #codigoPeriodo#
		   AND 	cod_clie = #codCliente#
		   AND 	num_lote = #numLote#
	</update>

	<select id="getIndicadorActivaNuevaCampana" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT COUNT(1)
  		  FROM bas_param_pais a
         WHERE a.cod_pais = #codigoPais#
   		   AND a.cod_sist = #codigoSistema#
           AND a.cod_para = '013'
           AND nvl(a.val_para,'S') = 'N'
   	</select>
   	
   	<select id="getExistePeriodoActivo" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT COUNT(1)
  		  FROM BAS_CTRL_FACT CTRL
 		 WHERE CTRL.COD_PAIS =  #codigoPais#
           AND CTRL.STA_CAMP = 0
           AND CTRL.IND_CAMP_ACT = 1
      ORDER BY CTRL.COD_PERI
   	</select>

	<parameterMap id="executeCargaPedidosDigitadosParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"       	     jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="numLoteSTO"	             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indOrigen"	         		 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoInterfaz"	         jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroLote"	             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeCargaPedidosDigitados" parameterMap="executeCargaPedidosDigitadosParams" >											
		{call INT_PKG_OCCRR.OCR_PR_CARGA_TEMPO_PEDID_DIGIT(?,?,?,?,?,?)}												
	</procedure>

	<parameterMap id="executeConsolidadoPedidosParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codTipoDocu"       	     jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"		         jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numLoteSTO"	             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indOrigen"	         		 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeConsolidadoPedidos" parameterMap="executeConsolidadoPedidosParams" >
		{call INT_PKG_OCCRR.OCR_PR_SOLIC_CONSO_PEDID(?,?,?,?,?)}
	</procedure>

   	<select id="getPeriodoInicioHistorico" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT GEN_FN_PERIO_ATRAS(#codPeriodo#,#numCampanas#) FROM dual
   	</select>

   	<resultMap id="getListaPeriodosHistoricosResult" class="java.util.HashMap">
		<result property="codigoPeriodo"      	column="COD_PERI"/>
	</resultMap>
  	<select id="getListaPeriodosHistoricos" parameterClass="java.util.Map" resultMap="getListaPeriodosHistoricosResult">
  	  SELECT COD_PERI
        FROM STO_DOCUM_DIGIT
       WHERE COD_PAIS = #codigoPais#
         AND COD_TIPO_DOCU = #codigoTipo#
           <![CDATA[  
         AND COD_PERI <= #codigoPeriodo#
			]]>
    GROUP BY COD_PERI	    
	</select>
	
	  <!-- OBTIENE PEDIDOS SEGUN LOS CRITERIOS PERIODO,FECHA FACTURACION -->
  	<select id="getPedidosDigitadosByCriteria" parameterClass="java.util.Map" resultMap="consultorasResult">
		SELECT CTRL.COD_PAIS,    
		       CTRL.COD_PERI,                                        
		       CTRL.COD_CLIE,                                
		       CTRL.NOM_CLIE,                                
		       CTRL.NUM_ITEM,                                
		       CTRL.NUM_UNID,                                
		       CTRL.VAL_MONT_PEDI,
		       to_char(CTRL.fec_soli, 'dd/mm/yyyy')	FEC_SOLI,
		       CTRL.EST_REGI,
		       CTRL.NUM_LOTE,
		       CTRL.IND_OCS,
		       CTRL.DES_ZONA                            
		  FROM PED_SOLIC_DIGIT_CABEC CTRL                                    
		<dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoPais">           
				CTRL.COD_PAIS = #codigoPais#                             
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoPeriodo">        
				CTRL.COD_PERI = #codigoPeriodo#                          
			</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="fechaFacturacion">        
				CTRL.FEC_SOLI = to_Date(#fechaFacturacion#, 'dd/mm/yyyy')                          
			</isNotEmpty>  
			<isNotEmpty prepend="AND" property="indicadorOCS">        
				CTRL.IND_OCS = #indicadorOCS#                          
			</isNotEmpty>			
			<isNotEmpty prepend="AND" property="codigoConsultora">        
				CTRL.COD_CLIE = #codigoConsultora#                          
			</isNotEmpty>			
			<isNotEmpty prepend="AND" property="indicadorCarga">        
				EXISTS (SELECT NULL FROM PED_SOLIC_DIGIT_DETAL DET
                         WHERE DET.COD_PAIS = CTRL.COD_PAIS  and
				   			   DET.COD_PERI = CTRL.COD_PERI  and
				               DET.COD_CLIE = CTRL.COD_CLIE and
                               DET.NUM_LOTE = CTRL.NUM_LOTE and
                               DET.IND_OCS_DETAL = '0')
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="indOrigen">        
				CTRL.IND_PROC = #indOrigen#                          
			</isNotEmpty>  
			<isNotEmpty prepend="AND" property="region">        
				CTRL.COD_REGI = #region#                          
			</isNotEmpty> 
			<isNotEmpty prepend="AND" property="zona">        
				CTRL.COD_ZONA = #zona#                          
			</isNotEmpty> 
		</dynamic>                                                   
	  </select>

	<parameterMap id="executeConsolidaPedidoOnlineParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"       	     jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codCliente"		         jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numLoteSTO"	             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indOrigen"	         		 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeConsolidaPedidoOnline" parameterMap="executeConsolidaPedidoOnlineParams" >
		{call OCR_SOLIC_PEDIDOS.ocr_pr_conso_pedid_onlin(?,?,?,?,?)}
	</procedure>
	
	<select id="getIndicadorActividadPROL" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT a.ind_acti_prol
  		  FROM bas_ctrl_fact a
 		 WHERE a.cod_peri = #codigoPeriodo#
   	</select>
   	
   	<procedure id="executeInicializaStock">
		{call ped_pkg_cuadr_ofert.ped_pr_ini_stock}
	</procedure>

	<procedure id="executeEnvioPortalSICCFinDia">
		{call  PED_PKG_PROCE.PED_PR_ENVIO_PORTAL_FINDI}
	</procedure>

	<parameterMap id="insertaArchivoEntradaPROLParams" class="map" >
		<parameter property="archivoEntrada"	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indOrigen"	    	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="oidTemporal"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	</parameterMap>
	<procedure id="insertaArchivoEntradaPROL" parameterMap="insertaArchivoEntradaPROLParams" >
		{call PED_PKG_PROCE.ped_pr_inser_archi_prol(?, ?, ?)}
	</procedure>

    <resultMap id="getPedidoTemporalByIdResult" class="java.util.HashMap">                     
    	<result property="oidTemporal" 		column="OID_CAB" />
    	<result property="codigoPais"		column="COD_PAIS" />
    	<result property="codigoPeriodo" 	column="CAM_SOLI" />
    	<result property="codigoCliente"	column="COD_CLIE" />
    	<result property="numeroLote" 		column="NUM_LOTE" />
    	<result property="numLoteSTO"		column="NUM_LOTE_STO" />
    	<result property="fechaProceso" 	column="FEC_SOLI" />
    	<result property="accion"			column="VAL_ACCI" />
    	<result property="oidSolicitud"		column="SOCA_OID_SOLI_CABE" />
  	</resultMap>
	<select id="getPedidoTemporalById" parameterClass="java.util.Map" resultMap="getPedidoTemporalByIdResult">
		SELECT OID_CAB,
		       COD_PAIS,
		       CAM_SOLI,
		       COD_CLIE,		       
		       NUM_LOTE,
		       NUM_LOTE_STO,
		       FEC_SOLI,
		       VAL_ACCI,
               SOCA_OID_SOLI_CABE
		  FROM INT_SOLIC_CABEC
		 WHERE OID_CAB = #oidTemporal#
	</select>

	<select id="getOidSolicitudPROL" parameterClass="java.util.Map" resultClass="string">
		SELECT c.soca_oid_soli_cabe_refe
  		  FROM int_solic_cabec       t,
       		   int_solic_conso_cabec c
         WHERE t.cam_soli = c.cod_peri
   		   AND t.cod_clie = c.cod_clie
   		   AND t.num_lote = c.num_lote
   		   AND t.oid_cab  = #oidTemporal#
	</select>

	<select id="getCadenaResultadoPROL" parameterClass="java.util.Map" resultClass="string">
		SELECT xml_pedi_sali
		  FROM int_solic_cabec
		 where oid_cab = #oidTemporal#
	</select>
	
	<parameterMap id="generaArchivoSalidaPROLParams" class="map" >
		<parameter property="oidTemporal"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	
	<procedure id="generaArchivoSalidaPROL" parameterMap="generaArchivoSalidaPROLParams" >
		{call PED_PKG_PROCE.ped_fn_gener_archi_prol(?)}
	</procedure>

	<select id="existePedido" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT COUNT(1)
  		  FROM ped_solic_digit_cabec a
         WHERE a.cod_pais = #codigoPais#
   		   AND a.cod_peri = #codPeriodo#
   		   AND a.cod_clie = #codigoCliente#
	</select>
	


	<resultMap id="getPaisFechaResult" class="java.util.HashMap">                     
    	<result property="codPais" 		column="COD_PAIS" />
    	<result property="fecFactu"		column="FEC_FACTU" />
  	</resultMap>
	<select id="getPaisFecha" parameterClass="java.util.Map" resultMap="getPaisFechaResult">
		SELECT 	a.cod_pais   COD_PAIS,
       			to_char(a.fec_proc, 'dd/mm/yyyy') FEC_FACTU
  		  FROM 	bas_ctrl_fact a
 		 WHERE 	a.cod_peri = #codigoPeriodo#
	</select>
	
	<resultMap id="getTotalesPROLResult" class="java.util.HashMap">                     
    	<result property="totCUV" 		column="TOT_CUV" />
    	<result property="totUni"		column="TOT_UNI" />
  	</resultMap>
	<select id="getTotalesPROL" parameterClass="java.util.Map" resultMap="getTotalesPROLResult">
		SELECT 	COUNT(a.cod_vent)   TOT_CUV,
       			SUM(a.num_unid)		TOT_UNI
  		  FROM ped_produ_origi a
 		 WHERE a.cod_peri = #codPeriodo#
   		   AND a.cod_clie = #codConsultora#
	</select>
	
	<resultMap id="getDetallePedidoPROLResult" class="java.util.HashMap">                     
    	<result property="codCUV" 		column="COD_CUV" />
    	<result property="numUni"		column="NUM_UNI" />
  	</resultMap>
	<select id="getDetallePedidoPROL" parameterClass="java.util.Map" resultMap="getDetallePedidoPROLResult">
		SELECT 	a.cod_vent   COD_CUV,
       			a.num_unid   NUM_UNI
  		  FROM ped_produ_origi a
 		 WHERE a.cod_peri = #codPeriodo#
   		   AND a.cod_clie = #codConsultora#
	</select>
	<typeAlias alias="documentoDigitadoPK" type="biz.belcorp.ssicc.dao.spusicc.sto.model.DocumentoDigitadoPK"/>
    <resultMap id="documentoDigitadoPKResult" class="documentoDigitadoPK">                                      
    	<result property="codPais"         column="COD_PAIS" />                    
    	<result property="codTipoDocu"     column="COD_TIPO_DOCU" />              
    	<result property="numLote"         column="NUM_LOTE" />     
    	<result property="secNumeDocu"     column="SEC_NUME_DOCU" />                  
	</resultMap>   

	<select id="getPedidoDocumentoDigitadoPKByCriteria" parameterClass="java.util.Map" resultMap="documentoDigitadoPKResult">
		SELECT D.COD_PAIS,
			   D.COD_TIPO_DOCU,		       
		       D.NUM_LOTE,
		       D.SEC_NUME_DOCU
		  FROM INT_SOLIC_CONSO_CABEC P,
		       STO_DOCUM_DIGIT       D
		 WHERE P.SEC_NUME_DOCU = D.SEC_NUME_DOCU
		   AND P.NUM_LOTE = D.NUM_LOTE	
		<isNotEmpty property="codigoCliente">	    
		   	AND P.COD_CLIE = #codigoCliente#
		</isNotEmpty>
		<isNotEmpty property="codigoPeriodo">
		   AND P.COD_PERI = #codigoPeriodo#
		</isNotEmpty>
		<isNotEmpty property="indProcGp2">
		   AND IND_PROC_GP2 = #indProcGp2#
		</isNotEmpty>
		<isNotEmpty property="codigoOrigen">
		   AND EXISTS (SELECT 1
		          FROM STO_ORIGE_DOCUM       O,
		               STO_COMBI_ORIGE_DOCUM C
		         WHERE O.COD_PAIS = D.COD_PAIS
		           AND O.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		           AND O.COD_PAIS = C.COD_PAIS
		           AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
		           AND O.COD_ORIG = C.COD_ORIG
		           AND C.IND_RECE_OCR = D.IND_RECE_OCR
		           AND C.IND_RECE_WEB = D.IND_RECE_WEB
		           AND C.IND_RECE_DD = D.IND_RECE_DD
		           AND C.IND_RECE_DIGI = D.IND_RECE_DIGI
		           AND C.IND_RECE_CC = D.IND_RECE_CC
		           AND C.IND_RECE_MENS = D.IND_RECE_MENS
		           AND C.IND_RECE_ONLI = D.IND_RECE_ONLI
		           AND C.IND_RECE_IVR = D.IND_RECE_IVR
		           AND C.COD_ORIG = #codigoOrigen#)
		</isNotEmpty>
	</select>

	<update id="executeActualizaIndicadorPROL" parameterClass="java.util.Map">
  		UPDATE  bas_ctrl_fact 
  		   SET  ind_acti_prol = #indicador#
  		 WHERE  cod_pais = #codigoPais#
  		   AND  cod_peri = #codigoPeriodo#
  	</update>
  	
  	<select id="getIndicadorActividadPROL2" resultClass="java.lang.String">
		SELECT ind_acti_prol
  		  FROM bas_ctrl_fact
 		 WHERE ind_camp_act = 1
   		   AND sta_camp = '0'
   	</select>

   	<select id="getTiposCargaStock" parameterClass="java.util.Map" resultMap="baseResult">
    	SELECT T.COD_INTE CODIGO,
       		   T.DES_INTE DESCRIPCION
	      FROM BAS_INTER T
	     WHERE EST_INTE = 1
	       AND T.COD_INTE IN ('SAM-10', 'SAM-12')
	  ORDER BY T.COD_INTE
	</select>

	<select id="getTipoSolicitud" parameterClass="java.util.Map" resultMap="baseResult">
    	SELECT oid_tipo_soli_pais CODIGO,
       		   val_i18n DESCRIPCION
	      FROM ped_tipo_solic_pais a,
       		   ped_tipo_solic b,
       		   ped_clase_solic c,
       		   gen_i18n_sicc_comun d
         WHERE a.tsol_oid_tipo_soli = b.oid_tipo_soli
   		   AND b.ind_soli_nega = 0
   		   AND b.clso_oid_clas_soli = c.oid_clas_soli
   		   AND c.ind_orde_comp = 1
   		   AND b.oid_tipo_soli = d.val_oid
   		   AND d.attr_enti = 'PED_TIPO_SOLIC'
   		   AND a.ind_pedi_gt_zona = 1
	</select>

	<resultMap id="getMontoMinimoResult" class="java.util.HashMap">                     
    	<result property="oidMontoMinimo" 		column="OID_MONTO_MINIMO" />
    	<result property="valNivel1"			column="VAL_NIVEL1" />
    	<result property="valNivel2" 			column="VAL_NIVEL2" />
    	<result property="valNivel3"			column="VAL_NIVEL3" />
    	<result property="valRecargo" 			column="VAL_RECARGO" />
    	<result property="valNominal"			column="VAL_NOMINAL" />
    	<result property="oidTipoSolicitud" 	column="OID_TSP" />
    	<result property="desTipoSolicitud"		column="DES_TSP" />
    	<result property="oidTipoCliente"		column="OID_TCL" />
    	<result property="desTipoCliente"		column="DES_TCL" />
    	<result property="oidSubTipoCliente"	column="OID_SCL" />
    	<result property="desSubTipoCliente"	column="DES_SCL" />
    	<result property="oidTipoClasificacion"	column="OID_TCA" />
    	<result property="desTipoClasificacion"	column="DES_TCA" />
    	<result property="oidClasificacion"		column="OID_CLA" />
    	<result property="desClasificacion"		column="DES_CLA" />
    	<result property="oidRegion"			column="OID_REGION" />
    	<result property="desRegion"			column="DES_REGION" />
    	<result property="oidZona"				column="OID_ZONA" />
    	<result property="desZona"				column="DES_ZONA" />
  	</resultMap>
  	  	
	<select id="getMontominimoList" parameterClass="java.util.Map" resultMap="getMontoMinimoResult">
		SELECT 	p.oid_mont_mini                                            OID_MONTO_MINIMO,
       			p.val_niv1                                                 VAL_NIVEL1,
       			p.val_niv2                                                 VAL_NIVEL2,
       			p.val_niv3                                                 VAL_NIVEL3,
       			p.val_reca                                                 VAL_RECARGO,
       			p.val_mont_mini_nomi                                       VAL_NOMINAL,
       			p.tspa_oid_tipo_soli_pais                                  OID_TSP,
      			(SELECT val_i18n
         		   FROM ped_tipo_solic_pais a,
              			ped_tipo_solic b,
              			ped_clase_solic c,
              			gen_i18n_sicc_comun d
        		  WHERE a.tsol_oid_tipo_soli = b.oid_tipo_soli
          		    AND b.ind_soli_nega = 0
          		    AND b.clso_oid_clas_soli = c.oid_clas_soli
          			AND c.ind_orde_comp = 1
          			AND b.oid_tipo_soli = d.val_oid
          			AND d.attr_enti = 'PED_TIPO_SOLIC'
          			AND a.ind_pedi_gt_zona = 1
          			AND a.oid_tipo_soli_pais =  p.tspa_oid_tipo_soli_pais)  DES_TSP,
       			p.ticl_oid_tipo_clie                                        OID_TCL,
      			(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =  p.ticl_oid_tipo_clie
	        		AND b.attr_enti = 'MAE_TIPO_CLIEN')                     DES_TCL,
       			p.sbti_oid_subt_clie                                        OID_SCL,
      			(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =   p.sbti_oid_subt_clie
	        		AND b.attr_enti = 'MAE_SUBTI_CLIEN')                    DES_SCL,
       			p.tccl_oid_tipo_clas                                       OID_TCA,
      			(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =   p.tccl_oid_tipo_clas
	        		AND b.attr_enti = 'MAE_TIPO_CLASI_CLIEN')               DES_TCA,
       			p.clas_oid_clas                                             OID_CLA,
      			(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =   p.clas_oid_clas
	        		AND b.attr_enti = 'MAE_CLASI')                          DES_CLA,
       			p.zorg_oid_regi                                             OID_REGION,
       			(SELECT r.des_regi
          		   FROM zon_regio r
         		  WHERE r.oid_regi = p.zorg_oid_regi)                       DES_REGION,
       			p.zzon_oid_zona                                             OID_ZONA,
      			(SELECT z.des_zona
         		   FROM zon_zona z
        		  WHERE z.oid_zona = p.zzon_oid_zona)                       DES_ZONA
  		  FROM	ped_monto_minim p
		 WHERE 	1=1
		 <isNotEmpty property="oidTipoSolicitud">	    
		   	AND p.tspa_oid_tipo_soli_pais = #oidTipoSolicitud#
		 </isNotEmpty>
		 <isNotEmpty property="oidTipoCliente">	    
		   	AND p.ticl_oid_tipo_clie = #oidTipoCliente#
		 </isNotEmpty>
		 <isNotEmpty property="oidSubTipoCliente">	    
		   	AND p.sbti_oid_subt_clie = #oidSubTipoCliente#
		 </isNotEmpty>
		 <isNotEmpty property="oidTipoClasificacion">	    
		   	AND p.tccl_oid_tipo_clas = #oidTipoClasificacion#
		 </isNotEmpty>
		 <isNotEmpty property="oidClasificacion">	    
		   	AND p.clas_oid_clas = #oidClasificacion#
		 </isNotEmpty>
		 <isNotEmpty property="codigoRegion">	    
		   	AND p.zorg_oid_regi = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_REGION( #codigoPais#,'T','VD', #codigoRegion#)
		 </isNotEmpty>
		 <isNotEmpty property="codigoZona">	    
		   	AND p.zzon_oid_zona = gen_pkg_gener.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#, 'T', 'VD', #codigoRegion#, #codigoZona#)
		 </isNotEmpty>
	</select>

	<resultMap id="montoMinimoResult" class="montoMinimo">
  			<result property="oidTipoSolicitud"         column="OID_TIPO_SOLICITUD"/>
  			<result property="oidTipoCliente"    		column="OID_TIPO_CLIENTE"/>
  			<result property="oidSubTipoCliente"       	column="OID_SUB_TIPO_CLIENTE"/>
  			<result property="oidTipoClasificacion"    	column="OID_TIPO_CLASIFICACION"/>
  			<result property="oidClasificacion" 		column="OID_CLASIFICACION"/>
  			<result property="oidRegion"     			column="OID_REGION"/>
  			<result property="codigoRegion"   			column="COD_REGION"/>
  			<result property="oidZona"     				column="OID_ZONA"/>
  			<result property="codigoZona"     			column="COD_ZONA"/>
  			<result property="nivel1"     				column="NIVEL1"/>
  			<result property="nivel2"     				column="NIVEL2"/>
  			<result property="nivel3"     				column="NIVEL3"/>
  			<result property="recargo"     				column="RECARGO"/>
  			<result property="nominal"     				column="NOMINAL"/>
  	</resultMap>
	<select id="getMontoMinimoObject" parameterClass="java.util.Map" resultMap="montoMinimoResult">
		SELECT 	p.tspa_oid_tipo_soli_pais             OID_TIPO_SOLICITUD,
       			p.ticl_oid_tipo_clie                  OID_TIPO_CLIENTE,
       			p.sbti_oid_subt_clie                  OID_SUB_TIPO_CLIENTE,
       			p.tccl_oid_tipo_clas                  OID_TIPO_CLASIFICACION,
       			p.clas_oid_clas                       OID_CLASIFICACION,
       			p.zorg_oid_regi						  OID_REGION,
      		   (SELECT r.cod_regi
         		  FROM zon_regio r
        		 WHERE r.oid_regi = p.zorg_oid_regi)  COD_REGION,
        	    p.zzon_oid_zona						  OID_ZONA,
      		   (SELECT z.cod_zona
         		  FROM zon_zona z
        		 WHERE z.oid_zona = p.zzon_oid_zona)  COD_ZONA,
       			p.val_niv1                            NIVEL1,
       			p.val_niv2                            NIVEL2,
       			p.val_niv3                            NIVEL3,
       			p.val_reca                            RECARGO,
       			p.val_mont_mini_nomi                  NOMINAL
  		  FROM 	ped_monto_minim p
 		 WHERE 	p.oid_mont_mini = #oidMontoMinimo#
	</select>

	<insert id="insertMontoMinimo" parameterClass="java.util.Map">
    	INSERT INTO PED_MONTO_MINIM(
    		OID_MONT_MINI,
    		VAL_NIV1,
    		VAL_NIV2,
    		VAL_NIV3,
    		VAL_RECA,
    		VAL_MONT_MINI_NOMI,
    		CLAS_OID_CLAS,
    		TSPA_OID_TIPO_SOLI_PAIS,
    		SBTI_OID_SUBT_CLIE,
    		TICL_OID_TIPO_CLIE,
    		TCCL_OID_TIPO_CLAS,
    		ZORG_OID_REGI,
    		ZZON_OID_ZONA
        ) 
		VALUES(
			#oidMontoMinimo#,
	  		#nivel1#,
	  		#nivel2#,
	  		#nivel3#,
	  		#recargo#,
	  		#nominal#,
	  		#oidClasificacion#,
	  		#oidTipoSolicitud#,
	  		#oidSubTipoCliente#,
	  		#oidTipoCliente#,
	  		#oidTipoClasificacion#,
	  		(SELECT z.oid_regi FROM zon_regio z WHERE z.cod_regi = #codigoRegion#),
	  		(SELECT a.oid_zona FROM zon_zona a WHERE a.cod_zona = #codigoZona#)
    	)
	</insert>
	
	<update id="updateMontoMinimo" parameterClass="java.util.Map">
  		UPDATE  PED_MONTO_MINIM 
  		   SET  VAL_NIV1 = #nivel1#,
    			VAL_NIV2 = #nivel2#,
    			VAL_NIV3 = #nivel3#,
    			VAL_RECA = #recargo#,
    			VAL_MONT_MINI_NOMI = #nominal#,
    			CLAS_OID_CLAS = #oidClasificacion#,
    			TSPA_OID_TIPO_SOLI_PAIS = #oidTipoSolicitud#,
    			SBTI_OID_SUBT_CLIE = #oidSubTipoCliente#,
    			TICL_OID_TIPO_CLIE = #oidTipoCliente#,
    			TCCL_OID_TIPO_CLAS = #oidTipoClasificacion#,
    			ZORG_OID_REGI = (SELECT z.oid_regi FROM zon_regio z WHERE z.cod_regi = #codigoRegion#),
    			ZZON_OID_ZONA = (SELECT a.oid_zona FROM zon_zona a WHERE a.cod_zona = #codigoZona#)
  		 WHERE  OID_MONT_MINI = #oidMontoMinimo#
  	</update>
  	
  	<delete id="deleteMontoMinimo" parameterClass="java.util.Map">
        DELETE FROM PED_MONTO_MINIM t
    	WHERE t.OID_MONT_MINI = #oidMontoMinimo# 
    </delete>
    
    <select id="getIndicadorActualizaMontominimo" parameterClass="java.util.Map" resultClass="string">
		SELECT a.val_para
  		  FROM bas_param_pais a
 		 WHERE a.cod_pais = #codigoPais#
   		   AND a.cod_sist = 'PED'
   		   AND a.ind_acti = 1
   		   AND a.cod_para = '009'
	</select>

	<update id="updateErrorMontoMinimo" parameterClass="java.util.Map">
  		UPDATE int_solic_conso_cabec a
           SET a.ind_erro_mtmi = '0'
         WHERE a.ind_erro_mtmi = '1'
            AND EXISTS ( SELECT 1
                           FROM sto_docum_digit b
                          WHERE b.ind_envi = '0'
                            AND b.ind_rech = '0'
                            AND b.num_lote = a.num_lote
                            AND b.sec_nume_docu = a.sec_nume_docu)
  	</update>
  	
  	<insert id="insertAuditoriaMontoMinimo" parameterClass="java.util.Map">
    	INSERT INTO ped_audit_monto_minim(
    		OID_AUDI_MONT_MINI,
    		PMM_OID_MONT_MINI,
    		VAL_NIV1,
    		VAL_NIV2,
    		VAL_NIV3,
    		VAL_RECA,
    		VAL_MONT_MINI_NOMI,
    		CLAS_OID_CLAS,
    		TSPA_OID_TIPO_SOLI_PAIS,
    		SBTI_OID_SUBT_CLIE,
    		TICL_OID_TIPO_CLIE,
    		TCCL_OID_TIPO_CLAS,
    		ZORG_OID_REGI,
    		ZZON_OID_ZONA,
    		USU_MODI,
    		FEC_MODI,
			CAM_MODI,
			COD_ACCI,
			COD_STAT_REGI
        ) 
		VALUES(
			ped_amm_seq.nextval,
	  		#oidMontoMinimo#,
	  		#nivel1#,
	  		#nivel2#,
	  		#nivel3#,
	  		#recargo#,
	  		#nominal#,
	  		#oidClasificacion#,
	  		#oidTipoSolicitud#,
	  		#oidSubTipoCliente#,
	  		#oidTipoCliente#,
	  		#oidTipoClasificacion#,
	  		(SELECT z.oid_regi FROM zon_regio z WHERE z.cod_regi = #codigoRegion#),
	  		(SELECT a.oid_zona FROM zon_zona a WHERE a.cod_zona = #codigoZona#),
	  		#usuario#,
	  		sysdate,
	  		GEN_PKG_GENER.GEN_FN_DEVUELVE_PERIO_FECHA(#codigoPais#,'T','VD',sysdate),
	  		#codigoAccion#,
	  		#codigoStatusRegistro#
    	)
	</insert>

	<select id="getNextOidMontoMinimo" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT ped_momi_seq.nextval
		  FROM dual
	</select>
	
	
	<select id="getOidAuditoriaPROL" resultClass="java.math.BigDecimal">
		SELECT ped_prol_seq.nextval  FROM dual
	</select>
	
 	<insert id="insertarAuditoriaPROL" parameterClass="java.util.Map">
    	INSERT INTO PED_AUDIT_PROL(
    		OID_AUDI_PROL,
    		COD_PAIS,
    		COD_CLIE,
    		FEC_INIC,
			XML_ENTR,
			OID_PROC,
			OID_COLA			
		) 
		VALUES(
			#oidAuditoriaPROL#,
			#codigoPais#,
			#codigoCliente#,
			SYSDATE,
	  		(SELECT xml_pedi_entr FROM int_solic_cabec WHERE oid_cab = #oidTemporal# ),
	  		#oidProceso#,
	  		#oidCola#
    	)
	</insert>

	<update id="updateAuditoriaPROL" parameterClass="java.util.Map">
		UPDATE PED_AUDIT_PROL 
        SET 
        	<isNotEmpty property="indFecInicio">
				FEC_INIC                = SYSDATE,        
			</isNotEmpty>
			<isNotEmpty property="indFecBorrado">
				FEC_BORR                = SYSDATE,        
			</isNotEmpty>
			<isNotEmpty property="indFecConsolidado">
				FEC_CONS                = SYSDATE,        
			</isNotEmpty>
			<isNotEmpty property="indFecValidacion">
				FEC_VALI                = SYSDATE,        
			</isNotEmpty>
			<isNotEmpty property="indFecSicc">
				FEC_SICC               = SYSDATE,        
			</isNotEmpty>
			<isNotEmpty property="indFecFin">
				FEC_FIN               = SYSDATE,
				XML_SALI			  = (SELECT xml_pedi_sali FROM int_solic_cabec WHERE oid_cab = #oidTemporal#),
				VAL_MENSA =	#mensajeError#,				        
			</isNotEmpty>			 
			COD_ERRO  =	#codigoError#		
		WHERE OID_AUDI_PROL = #oidAuditoriaPROL#
	</update>
	
	<select id="getProcesoPROL" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT COUNT(1)
		FROM PED_AUDIT_PROL
		WHERE FEC_FIN IS NULL
	      <isNotEmpty property="oidProceso">	    
		   	AND OID_PROC = #oidProceso#
		 </isNotEmpty>
	      <isNotEmpty property="oidCola">	    
		   	AND OID_COLA = #oidCola#
		 </isNotEmpty>
		 <isNotEmpty property="codigoCliente">	    
		   	AND COD_CLIE = #codigoCliente#
		 </isNotEmpty>
			
	</select>	
	
		
	<resultMap id="getProcesoColaPROLResult" class="java.util.HashMap">
			<result property="oidAuditoriaPROL"     column="OID_AUDI_PROL"  />
  			<result property="codigoError"          column="COD_ERRO"  />
  			<result property="mensajeError"    		column="VAL_MENSA" />
  			<result property="cadResultado"       	column="XML_SALI"  javaType="java.lang.String"/>
  			
  	</resultMap>
	<select id="getProcesoColaPROL" parameterClass="java.util.Map" resultMap="getProcesoColaPROLResult">
		SELECT 	OID_AUDI_PROL,
				COD_ERRO,
				VAL_MENSA,
				XML_SALI			
  		  FROM 	PED_AUDIT_PROL
 		 WHERE 	OID_PROC =  #oidProceso#
 		  AND OID_COLA =#oidCola#
 		  AND FEC_FIN is not null
	</select>
	  	

 <parameterMap id="paramSendMailOcr" class="map">
		<parameter property="codigoPais" 	 jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoInterfaz" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
        <parameter property="completado" 	 jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
        <parameter property="mensaje" 		 jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
        <parameter property="numeroLote"     jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
        <parameter property="codigoUsuario"  jdbcType="VARCHAR"  	javaType="java.lang.String"  mode="IN"/>
        <parameter property="nombreReporte"  jdbcType="VARCHAR"  	javaType="java.lang.String"  mode="IN"/>
    </parameterMap>    
	<procedure id="sendMailOcr" parameterMap="paramSendMailOcr" >
		{call INT_PKG_OCCRR.OCR_PR_ENVIO_MAIL( ?, ?, ?, ?, ?, ?, ?)}
	</procedure>	



 	<select id="getTipoDespacho" parameterClass="java.util.Map" resultMap="baseResult">
    	SELECT oid_tipo_desp CODIGO, 
    		   val_i18n DESCRIPCION
          FROM ped_tipo_despa a,
               gen_i18n_sicc_pais d
         WHERE a.oid_tipo_desp=d.val_oid
          and d.attr_enti='PED_TIPO_DESPA'
	</select>
	
	<insert id="insertFlete" parameterClass="flete">
    	Insert into PED_FLETE
   		(OID_FLETE, 
   		VAL_MONT_FIJO, 
   		VAL_TASA, 
   		VAL_FLET_MINI, 
   		VAL_FLET_MAXI, 
   		VAL_CONT_ENTR, 
   		CANA_OID_CANA, 
   		TIDS_OID_TIPO_DESP, 
   		MARC_OID_MARC, 
   		CLAS_OID_CLAS, 
   		SBTI_OID_SUBT_CLIE, 
   		TICL_OID_TIPO_CLIE, 
   		TCCL_OID_TIPO_CLAS, 
   		ZZON_ZONA)
 		Values(
 		#oidFlete#, 
	 	to_number(#montoFijo#,'9999999999.99'),
	 	to_number(#tasa#,'9999999999.99'),
	 	to_number(#fleteMinimo#,'9999999999.99'),
	 	to_number(#fleteMaximo#,'9999999999.99'),
	 	to_number(#recargo#,'9999999999.99'),
	 	2001, 
	 	#oidTipoDespacho#, 
	 	2003, 
	 	#oidClasificacion#,
	 	#oidSubTipoCliente#,
	 	#oidTipoCliente#, 
	 	#oidTipoClasificacion#,
	 	<isNotEmpty property="codigoZona">
	 		gen_pkg_gener.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#, 'T', 'VD', #codigoRegion#, #codigoZona#)
	 	</isNotEmpty>
	 	<isEmpty property="codigoZona">
	 		null
	 	</isEmpty>
	 	)
	</insert>

  	
  	
  	<resultMap id="getFleteResult" class="java.util.HashMap">    
    	<result property="oidFlete" 		    column="oid_flete" />
    	<result property="valMontFijo"          column="val_mont_fijo" />      
		<result property="valTasa"              column="val_tasa" />           
		<result property="valFletMini"          column="val_flet_mini" />      
		<result property="valFletMaxi"          column="val_flet_maxi" />      
		<result property="valContEntr"          column="val_cont_entr" />      
    	<result property="tidsOidTipoDesp" 	    column="tids_oid_tipo_desp" />
    	<result property="desTipoDesp" 	        column="des_tipo_desp" />
    	<result property="marcOidMarc"		    column="marc_oid_marc" />
    	<result property="clasOidClas"			column="clas_oid_clas" />
    	<result property="desClasificacion"		column="des_cla" />
    	<result property="sbtiOidSubtClie"		column="sbti_oid_subt_clie" />
    	<result property="desSubTipoCliente"	column="des_subt_clie" />
    	<result property="ticlOidTipoClie"		column="ticl_oid_tipo_clie" />
    	<result property="desTipoCliente"		column="des_tipo_clie" />
    	<result property="tcclOidTipoClas"		column="tccl_oid_tipo_clas" />
    	<result property="desTipoClasificacion"	column="des_tipo_clas" />
    	<result property="zzonZona"				column="zzon_zona" />
    	<result property="desZona"				column="des_zona" />
    	<result property="vepoUbig"				column="vepo_ubig" />
  	</resultMap>
  	
  	
  	<select id="getFleteList" parameterClass="java.util.Map" resultMap="getFleteResult">
		select  p.oid_flete						,
				p.val_mont_fijo      ,
				p.val_tasa           ,
				p.val_flet_mini      ,
				p.val_flet_maxi      ,
				p.val_cont_entr      ,
				p.cana_oid_cana      ,
				(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =   p.cana_oid_cana
	        		AND b.attr_enti = 'SEG_CANAL')       des_can,
				p.tids_oid_tipo_desp ,
				(SELECT val_i18n
                   FROM ped_tipo_despa a,
                        gen_i18n_sicc_pais d
                  WHERE a.oid_tipo_desp=d.val_oid
                   and d.attr_enti='PED_TIPO_DESPA'
                   and a.oid_tipo_desp = p.tids_oid_tipo_desp)   des_tipo_desp,
				p.marc_oid_marc      ,
				p.clas_oid_clas      ,
				(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =   p.clas_oid_clas
	        		AND b.attr_enti = 'MAE_CLASI')       des_cla,
				p.sbti_oid_subt_clie ,
      			(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =   p.sbti_oid_subt_clie
	        		AND b.attr_enti = 'MAE_SUBTI_CLIEN')     des_subt_clie,
				p.ticl_oid_tipo_clie ,
				(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =  p.ticl_oid_tipo_clie
	        		AND b.attr_enti = 'MAE_TIPO_CLIEN')     des_tipo_clie,
				p.tccl_oid_tipo_clas ,
				(SELECT b.val_i18n
         		   FROM gen_i18n_sicc_comun b
        		  WHERE b.val_oid =   p.tccl_oid_tipo_clas
	        		AND b.attr_enti = 'MAE_TIPO_CLASI_CLIEN')   des_tipo_clas,
				p.zzon_zona          ,
				(SELECT z.des_zona
         		   FROM zon_zona z
        		  WHERE z.oid_zona = p.zzon_zona) 		des_zona,
        		 (SELECT r.des_regi
                    FROM zon_zona z, zon_regio r
                  WHERE z.zorg_oid_regi = r.oid_regi
                    and z.oid_zona = p.zzon_zona)    des_reg, 
				p.vepo_ubig
				from  ped_flete p		
				where 1=1
		 <isNotEmpty property="oidTipoDespacho">	    
		   	AND p.tids_oid_tipo_desp = #oidTipoDespacho#
		 </isNotEmpty>
		 <isNotEmpty property="oidTipoCliente">	    
		   	AND p.ticl_oid_tipo_clie = #oidTipoCliente#
		 </isNotEmpty>
		 <isNotEmpty property="oidSubTipoCliente">	    
		   	AND p.sbti_oid_subt_clie = #oidSubTipoCliente#
		 </isNotEmpty>
		 <isNotEmpty property="oidTipoClasificacion">	    
		   	AND p.tccl_oid_tipo_clas = #oidTipoClasificacion#
		 </isNotEmpty>
		 <isNotEmpty property="oidClasificacion">	    
		   	AND p.clas_oid_clas = #oidClasificacion#
		 </isNotEmpty>
		 <isNotEmpty property="codigoRegion">	    
		   	AND p.zzon_zona in(
		   		select oid_zona from zon_zona where zorg_oid_regi in(select oid_regi from zon_regio where cod_regi = #codigoRegion#)
			)
		 </isNotEmpty>
		 <isNotEmpty property="codigoZona">	    
		   	AND p.zzon_zona = gen_pkg_gener.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#, 'T', 'VD', #codigoRegion#, #codigoZona#)
		 </isNotEmpty>
		 <isNotEmpty property="montoFijo">	    
		   	AND p.val_mont_fijo = to_number(#montoFijo#, '9999999999.99')
		 </isNotEmpty>
		 <isNotEmpty property="tasa">	    
		   	AND p.val_tasa = to_number(#tasa#, '9999999999.99')
		 </isNotEmpty>
		 <isNotEmpty property="fleteMaximo">	    
		   	AND p.val_flet_maxi = to_number(#fleteMaximo#, '9999999999.99')
		 </isNotEmpty>
		 <isNotEmpty property="fleteMinimo">	    
		   	AND p.val_flet_mini = to_number(#fleteMinimo#, '9999999999.99')
		 </isNotEmpty>
		 <isNotEmpty property="recargo">	    
		   	AND p.val_cont_entr = to_number(#recargo#, '9999999999.99')
		 </isNotEmpty>
		 
	</select>
  	
	<delete id="deleteFlete" parameterClass="flete">
        DELETE FROM PED_FLETE f
    	WHERE f.OID_FLETE = #oidFlete# 
    </delete>
  	
  		<select id="getNextOidFlete" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT ped_flet_seq.nextval
		  FROM dual
	</select>
	
	
	<resultMap id="fleteResult" class="flete">
		<result property="montoFijo"          	column="val_mont_fijo"/>
		<result property="tasa"    			  	column="val_tasa"/>
		<result property="fleteMinimo"        	column="val_flet_mini"/>
		<result property="fleteMaximo"    	  	column="val_flet_maxi"/>
		<result property="recargo" 	  			column="val_cont_entr"/>
		<result property="oidCanal"     	  	column="cana_oid_cana"/>
		<result property="oidTipoDespacho"    	column="tids_oid_tipo_desp"/>
  		<result property="oidMarca"     	  	column="marc_oid_marc"/>
  		<result property="oidClasificacion"   	column="clas_oid_clas"/>
  		<result property="oidSubTipoCliente"    column="sbti_oid_subt_clie"/>
  		<result property="oidTipoCliente"     	column="ticl_oid_tipo_clie"/>
  		<result property="oidTipoClasificacion" column="tccl_oid_tipo_clas"/>
  		<result property="codigoZona"     		column="cod_zona"/>
  		<result property="codigoRegion"    		column="cod_regi"/>
  		<result property="ubigeo"     			column="vepo_ubig"/>
  		<result property="oidFlete"     		column="oid_flete"/>
  	</resultMap>
  	
	<select id="getFlete" parameterClass="string" resultMap="fleteResult">
		select  nvl(val_mont_fijo, 0) val_mont_fijo,
				nvl(val_tasa, 0) val_tasa,
				nvl(val_flet_mini, 0) val_flet_mini,
				nvl(val_flet_maxi, 0) val_flet_maxi,
				nvl(val_cont_entr, 0) val_cont_entr,
				cana_oid_cana,
				tids_oid_tipo_desp,
				marc_oid_marc,
				clas_oid_clas,
				sbti_oid_subt_clie,
				ticl_oid_tipo_clie,
				tccl_oid_tipo_clas,
				(
					select r.COD_REGI 
					from zon_zona z , zon_regio r
					where z.ZORG_OID_REGI = r.oid_regi 
					and z.oid_zona = zzon_zona) cod_regi,
				(select cod_zona from zon_zona where oid_zona = zzon_zona) cod_zona,
				vepo_ubig,
				oid_flete
		  from  ped_flete
		 where   oid_flete = #value#
	</select>
  	  	
  	<update id="updateFlete" parameterClass="flete">
  		update  ped_flete set
  		        val_mont_fijo = to_number(#montoFijo#, '9999999999.99'),
				val_tasa = to_number(#tasa#, '9999999999.99'),
				val_flet_mini = to_number(#fleteMinimo#, '9999999999.99'),
				val_flet_maxi = to_number(#fleteMaximo#, '9999999999.99'),
				val_cont_entr = to_number(#recargo#, '9999999999.99'),
				tids_oid_tipo_desp = #oidTipoDespacho#,
				clas_oid_clas = #oidClasificacion#,
				sbti_oid_subt_clie = #oidSubTipoCliente#,
				ticl_oid_tipo_clie = #oidTipoCliente#,
				tccl_oid_tipo_clas = #oidTipoClasificacion#
				<isNotEmpty property="codigoZona">
					,zzon_zona  = gen_pkg_gener.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#, 'T', 'VD', #codigoRegion#, #codigoZona#)
				</isNotEmpty>				
				
		 where   oid_flete = #oidFlete#
  	</update>
  	
  	<select id="getNextOidFleteDetalle" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		SELECT ped_defl_seq.nextval
		  FROM dual
	</select>
  	
  	<insert id="insertFleteDetalle" parameterClass="fleteDet">
    	Insert into PED_DETAL_FLETE	(
    			OID_DETA_FLET, 
    			FLET_OID_FLET, 
    			RANGO_INFE, 
    			RANG_SUPE, 
    			VALO_MONT_FIJO)
 				Values(
 				#oidDetFlete#,
 				#oidFlete#, 
 				to_number(#rangoInferior#, '9999999999.99'), 
 				to_number(#rangoSuperior#, '9999999999.99'), 
 				to_number(#montoFijo#, '9999999999.99'))
	</insert>
	
	<insert id="insertFleteAudit" parameterClass="flete">
    	Insert into PED_FLETE_AUDIT(
    	OID_FLETE_AUDIT,
   		OID_FLETE, 
   		VAL_MONT_FIJO, 
   		VAL_TASA, 
   		VAL_FLET_MINI, 
   		VAL_FLET_MAXI, 
   		VAL_CONT_ENTR, 
   		CANA_OID_CANA, 
   		TIDS_OID_TIPO_DESP, 
   		MARC_OID_MARC, 
   		CLAS_OID_CLAS, 
   		SBTI_OID_SUBT_CLIE, 
   		TICL_OID_TIPO_CLIE, 
   		TCCL_OID_TIPO_CLAS, 
   		ZZON_ZONA,
   		COD_ACCI,
    	USU_MODI,
    	FEC_MODI
    	)
 		Values(
 		ped_flet_audit_seq.nextval,
 		#oidFlete#, 
	 	to_number(#montoFijo#, '9999999999.99'),
	 	to_number(#tasa#, '9999999999.99'),
	 	to_number(#fleteMinimo#, '9999999999.99'),
	 	to_number(#fleteMaximo#, '9999999999.99'),
	 	to_number(#recargo#, '9999999999.99'),
	 	2001, 
	 	#oidTipoDespacho#, 
	 	2003, 
	 	#oidClasificacion#,
	 	#oidSubTipoCliente#,
	 	#oidTipoCliente#, 
	 	#oidTipoClasificacion#,
	 	<isNotEmpty property="codigoZona">
	 		gen_pkg_gener.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#, 'T', 'VD', #codigoRegion#, #codigoZona#),
	 	</isNotEmpty>
	 	<isEmpty property="codigoZona">
	 		null,
	 	</isEmpty>
	 	#accion#,
 		#auditInfo.createdBy#,
 		#auditInfo.created#
 		)
	</insert>
	
	<insert id="insertFleteDetalleAudit" parameterClass="fleteDet">
    	Insert into PED_DETAL_FLETE_AUDIT	(
    	        OID_DETA_FLET_AUDIT,
    			OID_DETA_FLET, 
    			FLET_OID_FLET, 
    			RANGO_INFE, 
    			RANG_SUPE, 
    			VALO_MONT_FIJO,
    			COD_ACCI,
    			USU_MODI,
    			FEC_MODI)
 				Values(
 				ped_defl_audit_seq.nextval,
 				#oidDetFlete#,
 				#oidFlete#, 
 				to_number(#rangoInferior#, '9999999999.99'), 
 				to_number(#rangoSuperior#, '9999999999.99'), 
 				to_number(#montoFijo#, '9999999999.99'),
 				#accion#,
 				#auditInfo.createdBy#,
 				#auditInfo.created#
 				)
	</insert>
	
	 <resultMap id="fleteDetResult" class="fleteDet">
  			<result property="oidDetFlete"          	column="OID_DETA_FLET"/>
  			<result property="oidFlete"    			  	column="FLET_OID_FLET"/>
  			<result property="rangoInferior"        	column="RANGO_INFE"/>
  			<result property="rangoSuperior"    	  	column="RANG_SUPE"/>
  			<result property="montoFijo" 	  			column="VALO_MONT_FIJO"/>
  	</resultMap>
  	
	<select id="getDetalleFleteList" parameterClass="string" resultMap="fleteDetResult">
			select OID_DETA_FLET, 
    			FLET_OID_FLET, 
    			RANGO_INFE, 
    			RANG_SUPE, 
    			VALO_MONT_FIJO
    		from PED_DETAL_FLETE
    		where FLET_OID_FLET = #value#
    		order by RANGO_INFE
	</select>
	
	<select id="getDetalleFlete" parameterClass="string" resultMap="fleteDetResult">
			select OID_DETA_FLET, 
    			FLET_OID_FLET, 
    			RANGO_INFE, 
    			RANG_SUPE, 
    			VALO_MONT_FIJO
    		from PED_DETAL_FLETE
    		where OID_DETA_FLET = #value#
	</select>

	<delete id="deleteFleteDetalle" parameterClass="fleteDet" >
        DELETE FROM PED_DETAL_FLETE F
    	WHERE F.OID_DETA_FLET = #oidDetFlete# 
    	 AND  F.FLET_OID_FLET = #oidFlete#
    </delete>
    
   	<update id="updateFleteDetalle" parameterClass="fleteDet">
    	update PED_DETAL_FLETE	set
    			FLET_OID_FLET = #oidFlete#, 
    			RANGO_INFE = to_number(#rangoInferior#, '9999999999.99'),  
    			RANG_SUPE = to_number(#rangoSuperior#, '9999999999.99'), 
    			VALO_MONT_FIJO = to_number(#montoFijo#, '9999999999.99')
		 where OID_DETA_FLET = #oidDetFlete# 				
	</update>
	
	<resultMap id="gestionStockResult" class="gestionStock">	 
		<result property="oidGestionStock"          column="OID_GEST_STOC"/>       
		<result property="codigoVentaPrincipal"     column="CUV" />             
		<result property="codigoProducto"           column="PRODUCTO" />
	    <result property="descripcionProducto"      column="DESCRIPCION" />
		<result property="codigoZona"           	column="ZONA" />
		<result property="codigoRegion"           	column="REGION" />           	
		<result property="tipoCliente"           	column="TIPO_CLIEN" />
		<result property="subTipoCliente"           column="SUBTIPO_CLIEN" />
		<result property="tipoClasificacion"        column="TIPO_CLASI" />
		<result property="clasificacion"           	column="CLASI" />
		<result property="limiteVenta"           	column="VAL_LIMI_CTRL_VENT" />
		<result property="valorPorcentual"          column="VAL_PORC" />
		<result property="valorUnidades"           	column="VAL_UNID" />
		<result property="indicadorActivo"          column="ACTIVO" />
		<result property="fechaActivacion"          column="FECHA_ACTIVACION" />
		<result property="indicadorDetalleOferta"          column="OFDE_OID_DETA_OFER" />
 	</resultMap> 
	
	<resultMap id="baseResultOID"       class="baseGenericoOID">
    	<result property="oid" 		    column="OID" 	/>		
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
	
	<select id="getGestionStockList" parameterClass="java.util.Map" resultMap="gestionStockResult">
			select i.oid_gest_stoc 
				, c.VAL_CODI_VENT CUV
				, j.COD_SAP PRODUCTO
				, m.VAL_I18N DESCRIPCION
				, n.COD_ZONA ZONA, o.COD_REGI REGION
				, (select val_i18n from gen_i18n_sicc_comun where attr_enti='MAE_TIPO_CLIEN' and val_oid=r.OID_TIPO_CLIE) TIPO_CLIEN
				, (select val_i18n from gen_i18n_sicc_comun where attr_enti='MAE_SUBTI_CLIEN' and val_oid=s.OID_SUBT_CLIE) SUBTIPO_CLIEN
				, (select val_i18n from gen_i18n_sicc_comun where attr_enti='MAE_TIPO_CLASI_CLIEN' and val_oid=p.OID_TIPO_CLAS) TIPO_CLASI 
				, (select val_i18n from gen_i18n_sicc_comun where attr_enti='MAE_CLASI' and val_oid=q.OID_CLAS) CLASI
				, i.VAL_LIMI_CTRL_VENT
				, i.VAL_PORC
				, i.VAL_UNID
				, i.ind_acti ACTIVO
				, i.fec_acti FECHA_ACTIVACION
				, i.ofde_oid_deta_ofer
				from pre_matri_factu_cabec a, pre_ofert b, pre_ofert_detal c, cra_perio e, seg_perio_corpo f
				, ped_gesti_stock i, mae_produ j, gen_i18n_sicc_pais m
				, zon_zona n, zon_regio o, mae_tipo_clasi_clien p, mae_clasi q, mae_tipo_clien r, mae_subti_clien s
				where a.OID_CABE = b.MFCA_OID_CABE 
				and b.OID_OFER = c.OFER_OID_OFER
				and a.PERD_OID_PERI = e.OID_PERI
				and i.OFDE_OID_DETA_OFER = c.OID_DETA_OFER 
				and f.OID_PERI = e.PERI_OID_PERI 
				and f.COD_PERI = #codigoCampanha#
				and c.PROD_OID_PROD = j.OID_PROD 
				and j.OID_PROD = m.VAL_OID
				<isNotEmpty property="codigoVentaPrincipal">
	 				and c.VAL_CODI_VENT = #codigoVentaPrincipal#
	 			</isNotEmpty>
				and m.ATTR_ENTI='MAE_PRODU'
				and i.ZZON_OID_ZONA = n.OID_ZONA(+)
				and i.ZORG_OID_REGI = o.OID_REGI(+)
				and i.TCCL_OID_TIPO_CLAS = p.OID_TIPO_CLAS(+)
				and i.CLAS_OID_CLAS = q.OID_CLAS(+)
				and i.TICL_OID_TIPO_CLIE = r.OID_TIPO_CLIE(+)
				and i.SBTI_OID_SUBT_CLIE = s.OID_SUBT_CLIE(+)
				<isNotEmpty property="indicadorActivo">
	 				and i.IND_ACTI = #indicadorActivo#
	 			</isNotEmpty>
	 			<isNotEmpty property="indicadorActivoAmbos">
	 				<![CDATA[and (i.IND_ACTI = '0' or i.IND_ACTI = '1') ]]>
	 			</isNotEmpty>
	 			<isNotEmpty property="listCodigoSap">
					<iterate prepend="and" property="listCodigoSap" open=" j.COD_SAP IN (" close=")" conjunction=",">
						#listCodigoSap[]#
					</iterate>
	 			</isNotEmpty>
	 			<isNotEmpty property="listCodigoVenta">
					<iterate prepend="and" property="listCodigoVenta" open=" c.VAL_CODI_VENT IN (" close=")" conjunction=",">
						#listCodigoVenta[]#
					</iterate>
	 			</isNotEmpty>
	</select>
	
	<resultMap id="detalleCUVExistenciaResult"       class="detalleCuvExistencia">
    	<result property="oidDetalleOferta" 	column="OID_DETA_OFER" 	/>		
    	<result property="codigoSap" 			column="SAP"/>
    	<result property="descripcion" 			column="DESCRIPCION"/>
    </resultMap>
	
	<select id="getValidarCuvExistencia" parameterClass="java.util.Map" resultMap="detalleCUVExistenciaResult" >
		SELECT 
			e.OID_DETA_OFER, 
			f.COD_SAP SAP, 
			g.VAL_I18N DESCRIPCION
		FROM PRE_MATRI_FACTU_CABEC a, CRA_PERIO b, SEG_PERIO_CORPO c, 
			PRE_OFERT d, PRE_OFERT_DETAL e, MAE_PRODU f, GEN_I18N_SICC_PAIS g
		WHERE a.PERD_OID_PERI = b.OID_PERI 
		AND b.PERI_OID_PERI = c.OID_PERI 
		AND c.COD_PERI = #codigoCampanha#
		AND a.OID_CABE = d.MFCA_OID_CABE 
		AND d.OID_OFER = e.OFER_OID_OFER
		AND e.PROD_OID_PROD = f.OID_PROD 
		AND f.OID_PROD = g.VAL_OID 
		AND g.ATTR_ENTI = 'MAE_PRODU'
		AND e.VAL_CODI_VENT = #codigoVenta#
	</select>
	
	<insert id="insertGestionStock" parameterClass="java.util.Map">
    	INSERT INTO PED_GESTI_STOCK
    	(OID_GEST_STOC, 
	    VAL_LIMI_CTRL_VENT, 
	    CLAS_OID_CLAS, 
	    ZZON_OID_ZONA, 
	    PERD_OID_PERI, 
	    IND_CTRL_LIQU, 
	    IND_ULTI_NOTI, 
	    COD_GEST_STOC, 
	    VAL_PORC, 
	    VAL_UNID, 
	    OFDE_OID_DETA_OFER, 
	    ZORG_OID_REGI, 
	    SBTI_OID_SUBT_CLIE, 
	    TCCL_OID_TIPO_CLAS, 
	    TICL_OID_TIPO_CLIE,
	    IND_ACTI,
	    FEC_ACTI,
	    USU_CREA,
	    FEC_CREA,
	    IND_CSAP,
	    IND_CIER_DIAR
	    )VALUES(
    	PED_GEST_SEQ.NEXTVAL,
		#valorLimiteControlVenta#,
  		#oidClasificacion#,
	  	<isNotEmpty property="codigoZona">
			GEN_PKG_GENER.gen_fn_devuelve_id_zona(#codigoPais#,'T','VD',#codigoRegion#,#codigoZona#),
	  	</isNotEmpty>
		<isEmpty property="codigoZona">
	  		null,
	  	</isEmpty>
		GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoCampanha#),
		0,
		#indicadorUltimasNoticias#,
		PED_GEST_SEQ.CURRVAL,
		#valorPorcentual#,
		#valorUnidad#,
		#oidDetalleOferta#,
		<isNotEmpty property="codigoRegion">
	  	GEN_PKG_GENER.gen_fn_devuelve_id_region (#codigoPais#,'T','VD',#codigoRegion#),
	  	</isNotEmpty>
		<isEmpty property="codigoRegion">
	  	null,
	  	</isEmpty>
		#oidSubTipoCliente#,
		#oidTipoClasificacion#,
		#oidTipoCliente#,
		#indicadorActivo#,
		TO_DATE(#fechaActivacion#,'DD/MM/YYYY'),
		#usuarioLogin#,
		SYSDATE,
		#flagCargaSAP#,
		#indCierreDiario#)
	</insert>
	
	<select id="getOidTipoCliente" parameterClass="java.util.Map" resultClass="integer" >
		SELECT COUNT(1) FROM MAE_TIPO_CLIEN WHERE OID_TIPO_CLIE = #oidTipoCliente#
	</select>
	<select id="getOidSubTipoCliente" parameterClass="java.util.Map" resultClass="integer" >
		SELECT COUNT(1) FROM MAE_SUBTI_CLIEN 
            WHERE  TICL_OID_TIPO_CLIE = #oidTipoCliente#
            AND OID_SUBT_CLIE = #oidSubTipoCliente#
	</select>
	<select id="getOidTipoClasificacion" parameterClass="java.util.Map" resultClass="integer" >
		SELECT COUNT(1) FROM MAE_TIPO_CLASI_CLIEN
            WHERE SBTI_OID_SUBT_CLIE = #oidSubTipoCliente#
            AND OID_TIPO_CLAS = #oidTipoClasificacion#
	</select>
	<select id="getOidClasificacion" parameterClass="java.util.Map" resultClass="integer" >
		SELECT COUNT(1) FROM MAE_CLASI 
            WHERE TCCL_OID_TIPO_CLAS = #oidTipoClasificacion#
            AND OID_CLAS = #oidClasificacion#		
	</select>
	
	<select id="getValidaGestionStockUk" parameterClass="java.util.Map" resultClass="integer" >
			SELECT COUNT(1) 
			    FROM PED_GESTI_STOCK 
			WHERE PERD_OID_PERI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoCampanha#) 
			AND OFDE_OID_DETA_OFER = #oidDetalleOferta#
			  <isNotEmpty property="valorLimiteControlVenta">
					AND VAL_LIMI_CTRL_VENT = #valorLimiteControlVenta#
			  </isNotEmpty>
		      <isNotEmpty property="valorUnidad">
					 AND VAL_UNID = #valorUnidad#
			  </isNotEmpty>
			  <isNotEmpty property="valorPorcentual">
					AND VAL_PORC = #valorPorcentual#
			  </isNotEmpty>
			  <isNotEmpty property="codigoRegion">
					AND ZORG_OID_REGI = GEN_PKG_GENER.gen_fn_devuelve_id_region (#codigoPais#,'T','VD',#codigoRegion#)
			  </isNotEmpty>
			  <isNotEmpty property="codigoZona">
					AND ZZON_OID_ZONA = GEN_PKG_GENER.gen_fn_devuelve_id_zona(#codigoPais#,'T','VD',#codigoRegion#,#codigoZona#)
			  </isNotEmpty>
			  <isNotEmpty property="oidTipoCliente">
					AND TICL_OID_TIPO_CLIE = #oidTipoCliente#
			  </isNotEmpty>
			  <isNotEmpty property="oidSubTipoCliente">
					AND SBTI_OID_SUBT_CLIE = #oidSubTipoCliente#
			  </isNotEmpty>
			  <isNotEmpty property="oidTipoClasificacion">
					AND TCCL_OID_TIPO_CLAS = #oidTipoClasificacion#
			  </isNotEmpty>	
			  <isNotEmpty property="oidClasificacion">
					AND CLAS_OID_CLAS = #oidClasificacion#
			  </isNotEmpty>	
	</select>
	
	<select id="getValidaRegionxZona" parameterClass="java.util.Map" resultClass="integer" >
		SELECT COUNT(1) FROM ZON_ZONA zz 
			WHERE zz.ZORG_OID_REGI = (SELECT zr.OID_REGI FROM ZON_REGIO zr WHERE zr.COD_REGI = #codigoRegion#) 
			AND zz.COD_ZONA = #codigoZona#
	</select>		
	
	<update id="updateDesactivarGestionStock" parameterClass="java.util.Map">
		UPDATE ped_gesti_stock
		   SET ind_acti = 0,
		       ind_ulti_noti = 0,
		       usu_desac = #usuarioLogin#,
		       fec_desac = SYSDATE
		 WHERE oid_gest_stoc = #oidGestionStock#
	</update>
	
	<update id="updateActivarGestionStock" parameterClass="java.util.Map">
		UPDATE PED_GESTI_STOCK 
		SET IND_ACTI=1, 
			IND_ULTI_NOTI=1, 
	        USU_ACTI     = #usuarioLogin#,
	        FEC_ACTI     = sysdate
		WHERE OID_GEST_STOC = #oidGestionStock#
	</update>
	
	<insert id="insertGestionStockAuditoria" parameterClass="java.util.Map">
		INSERT INTO 
			PED_AUDIT_GESTI_STOCK (
			OID_SECUE,
			OID_GEST_STOCK,
			COD_USUA,
			VAL_ACCI,
			FEC_ACCI,
			OID_DETA_OFER
			)VALUES(
			ped_audit_gesti_stock_seq.nextval,
			#oidGestionStock#,
			#usuarioLogin#,
			#accionAuditoria#, 
			SYSDATE,
			#indicadorDetalleOferta# 
			)
	</insert>
	
	<typeAlias alias="desarrolladoraVenta" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.DesarrolladoraVenta"/>
	
	<resultMap id="desarrolladoraVentaResult" 	class="desarrolladoraVenta" >	    
	    <result property="codigoPeriodo" 				column="COD_PERI" 		/>
	    <result property="codigoCliente" 				column="COD_CLIE" 		/>
	    <result property="monto" 						column="MONTO" 		/>
	    <result property="usuarioCreacion"				column="USU_CREA" 			/>
	    <result property="fechaCreacion"				javaType="java.sql.Timestamp" column="FEC_CREA"		/>	     
	    <result property="nombreArchivo" 				column="NOM_ARCHI" 			/>	    	    	    
	</resultMap>
	
	<select id="getDesarrolladoraVenta" parameterClass="java.util.Map" resultMap="desarrolladoraVentaResult">
		
				SELECT PDV.COD_PERI,
				       PDV.COD_CLIE,
				       PDV.MONTO,
				       PDV.USU_CREA,
				       PDV.FEC_CREA,
				       PDV.NOM_ARCHI
				  FROM PED_DESAR_VENTA PDV	 		
				 WHERE PDV.COD_PERI = #codigoPeriodo#
   				   AND PDV.COD_CLIE = #codigoCliente#
											
	</select>
	
	<insert id="insertDesarrolladoraVenta" parameterClass="desarrolladoraVenta">
	    <![CDATA[
		    INSERT INTO PED_DESAR_VENTA(
		    	COD_PERI,
				COD_CLIE, 
				MONTO, 
				USU_CREA,			
				FEC_CREA,
				NOM_ARCHI			
			)
		    VALUES (
		    	#codigoPeriodo#, 
			    #codigoCliente#,
			    #monto#,			    
			    #auditInfo.createdBy#,
			    #auditInfo.created#,
			    #nombreArchivo#		       
		    )
	    ]]>
  </insert>
  
	<insert id="insertDesarrolladoraVentaHistorico" parameterClass="desarrolladoraVenta">
	    <![CDATA[
		    INSERT INTO PED_HISTO_DESAR_VENTA(
		    	COD_PERI,
				COD_CLIE, 
				MONTO, 
				USU_CREA,			
				FEC_CREA,
				NOM_ARCHI			
			)
		    VALUES (
		    	#codigoPeriodo#, 
			    #codigoCliente#,
			    #monto#,
			    #auditInfo.createdBy#,
			    #auditInfo.created#,
			    #nombreArchivo#		       
		    )
	    	]]>
  	</insert>
  	
  	<delete id="removeDesarrolladoraVenta" parameterClass="java.util.Map">
        DELETE 
        FROM PED_DESAR_VENTA 
        WHERE COD_PERI = #codigoPeriodo#
          AND COD_CLIE = #codigoCliente#     
    </delete>
	
    <select id="getOidTerritorioAdministrativo" parameterClass="string" resultClass="string">
    	SELECT ZTA.OID_TERR_ADMI
	      FROM mae_clien mc,
	       	   mae_clien_unida_admin mcua,
	           zon_terri_admin zta
	     WHERE mc.oid_clie = mcua.clie_oid_clie    
	       AND zta.oid_terr_admi = mcua.ztad_oid_terr_admi
	       AND mcua.ind_acti = 1
	       AND mc.cod_clie = #value#
    </select>
    
    <select id="validarCUVFaltanteAnunciado" parameterClass="java.util.Map" resultClass="java.lang.Integer">
    	SELECT OCR_SOLIC_PEDIDOS.gen_fn_devue_falta_anunc_clien(#oidCliente#, #oidTerraAdmin#, #oidOfertaDetal#) FROM DUAL
    </select>
    
    <select id="validarCUVCompuesta" parameterClass="java.util.Map" resultClass="java.math.BigDecimal">
    	SELECT OCR_SOLIC_PEDIDOS.gen_fn_devue_precio_compu(#oidPeriodo#, #codigoVenta#) FROM DUAL
    </select>
    
    <select id="validarCUVLimiteVenta" parameterClass="java.util.Map" resultClass="java.lang.Integer">
    	SELECT OCR_SOLIC_PEDIDOS.gen_fn_devue_limit_venta_clien(#oidCliente#, #oidTerraAdmin#, #oidOfertaDetal#) FROM DUAL
    </select>

	<parameterMap id="executeGetMontoMinimoConsultoraParams" class="map" >
		<parameter property="oidCliente"           jdbcType="NUMBER"  javaType="java.lang.Integer"  mode="IN"/>
	    <parameter property="oidTerraAdmin"	       jdbcType="NUMBER"  javaType="java.lang.Integer"  mode="IN"/>
	    <parameter property="nominal"      	       jdbcType="DECIMAL" javaType="java.math.BigDecimal"  mode="OUT"/>
	    <parameter property="nivel"         	   jdbcType="DECIMAL" javaType="java.math.BigDecimal"  mode="OUT"/>
	    <parameter property="nivel2"         	   jdbcType="DECIMAL" javaType="java.math.BigDecimal"  mode="OUT"/>
    </parameterMap>
		
	<procedure id="executeGetMontoMinimoConsultora" parameterMap="executeGetMontoMinimoConsultoraParams">
    	{call ped_pkg_cuadr_ofert.ped_pr_obtie_mminim(?,?,?,?,?)}
    </procedure>
	
    <insert id="deleteCargaEstimados" parameterClass="string">
	    <![CDATA[
			DELETE FROM PRE_TEMPO_ESTIM_VENTA WHERE COD_USUA =#value#
	    ]]>
    </insert>

    <insert id="insertCargaEstimados" parameterClass="java.util.Map">
	    <![CDATA[
		INSERT INTO PRE_TEMPO_ESTIM_VENTA (
		        NUM_FILA,CAMP_PROC,COD_SAP,COD_TIPO_OFER,COD_CICL_VIDA,UNI_ESTI,VEN_NETA_EST,
				PRE_CATA,PRE_POSI,VAL_CATA,NUM_PAGI,VAL_POSI,VAL_ESTR,COS_ESTA,EST_REGI,MEN_ERRO,COD_USUA) 
		VALUES (#numeroFila#, #campanhia#, #codigoSAP#, #tipoOferta#, #cicloVida#, #unidadesEstimadas#, #ventaNetaEstimada#,
				#precioCatalogo#, #precioPosicinamiento#, #catalogo#, #numeroPagina#, #posicion#, #estrategia#, #costeEstandar#, '1', '', #codigoUsuario#)
	    ]]>
    </insert>

	<parameterMap id="paramExecuteValidarCargaEstimados" class="map">
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    
	<procedure id="executeValidarCargaEstimados" parameterMap="paramExecuteValidarCargaEstimados" >
		{call PRE_PKG_PROCE.PRE_PR_VALID_CARGA_ESTIM( ?)}
	</procedure>

	<resultMap id="cargaEstimadosResult" class="java.util.HashMap">	    
	    <result property="numeroFila" 				column="NUM_FILA"  />
	    <result property="campanhia" 				column="CAMP_PROC"  />
	    <result property="codSAP" 					column="COD_SAP"     />
	    <result property="codTipoOferta"			column="COD_TIPO_OFER"  />
	    <result property="codCicloVida"				column="COD_CICL_VIDA"  />	     
	    <result property="unidadesEstimadas" 		column="UNI_ESTI" />
	    <result property="ventaNetaEstimada" 		column="VEN_NETA_EST" />
	    <result property="precioCatalogo" 			column="PRE_CATA" />
	    <result property="precioPosicionamiento" 	column="PRE_POSI" />
	    <result property="catalogo" 				column="VAL_CATA" />
	    <result property="numeroPagina" 			column="NUM_PAGI" />
	    <result property="posicion" 				column="VAL_POSI" />
	    <result property="estrategia" 				column="VAL_ESTR" />
	    <result property="costeEstandar" 			column="COS_ESTA" />
	    <result property="mensajeError" 			column="MEN_ERRO" />
	</resultMap>
	
	<select id="getCargaEstimadosList"  parameterClass="java.util.Map" resultMap="cargaEstimadosResult" >
		SELECT * 
	      FROM PRE_TEMPO_ESTIM_VENTA A
    	 WHERE EST_REGI = 0
        <isNotEmpty prepend="AND" property="codigoUsuario">        
			A.COD_USUA = #codigoUsuario#
    	</isNotEmpty>
	</select>
	
	<parameterMap id="paramExecuteActualizarCargaEstimados" class="map">
		<parameter property="codigoPais"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="nombreArchivo"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    
	<procedure id="executeActualizarCargaEstimados" parameterMap="paramExecuteActualizarCargaEstimados" >
		{call PRE_PKG_PROCE.PRE_PR_ACTUA_CARGA_ESTIM( ?, ?, ?)}
	</procedure>
				
	
	<resultMap id="getProcesosNuevoPROLResult" class="java.util.HashMap">                     
	    <result property="nameSpace"			column="NOM_XML"/>  
	    <result property="idProceso" 	    	    column="EXE_PROC"/>
	</resultMap> 	
	
	<select id="getProcesosNuevoPROL" parameterClass="java.util.Map" resultMap="getProcesosNuevoPROLResult">
    	SELECT T.NOM_XML,
       		   T.EXE_PROC
	      FROM PED_PROCE_PROL T
	  ORDER BY T.NUM_SECU
	</select>
	
	<parameterMap id="paramExecuteCuadreOfertaSICC" class="map">
		<parameter property="oidCliente"		jdbcType="NUMBER" mode="IN"/>
		<parameter property="oidPeriodo"		jdbcType="NUMBER" mode="IN"/>
		<parameter property="oidTerriAdmin"		jdbcType="NUMBER" mode="IN"/>
    </parameterMap>
    
	<procedure id="executeCuadreOfertaSICC" parameterMap="paramExecuteCuadreOfertaSICC" >
		{call ped_pkg_cuadr_ofert.ped_pr_cuadr_ofert_sicc( ?, ?, ?)}
	</procedure>
	
	<resultMap id="detalleSAPExistenciaResult" class="detalleCuvExistencia">
    	<result property="oidDetalleOferta" 	column="OID_DETA_OFER" 	/>		
    	<result property="codigoSap" 			column="SAP"/>
    	<result property="codigoVenta" 			column="VENTA"/>
    	<result property="descripcion" 			column="DESCRIPCION"/>
    </resultMap>
	
	<select id="getValidarSapExistencia" parameterClass="java.util.Map" resultMap="detalleSAPExistenciaResult" >
	     SELECT ofedet.oid_deta_ofer, 
	            prod.cod_sap SAP,
	            ofedet.val_codi_vent VENTA, 
	            i18prod.val_i18n DESCRIPCION
	    FROM cra_perio peri,
	         pre_ofert ofe,
	         pre_ofert_detal ofedet,
	         pre_matri_factu mf,
	         pre_matri_factu_cabec mfc,
	         mae_produ prod,
	         (SELECT v.val_oid, v.val_i18n
	            FROM v_gen_i18n_sicc v
	           WHERE v.attr_enti = 'MAE_PRODU' AND v.idio_oid_idio = 1) i18prod
	   WHERE peri.oid_peri = mfc.perd_oid_peri
	     AND ofe.mfca_oid_cabe = mfc.oid_cabe
	     AND mf.mfca_oid_cabe = mfc.oid_cabe
	     AND ofe.oid_ofer = ofedet.ofer_oid_ofer
	     AND ofedet.oid_deta_ofer = mf.ofde_oid_deta_ofer
	     AND ofedet.prod_oid_prod = prod.oid_prod
	     AND i18prod.val_oid(+) = ofedet.prod_oid_prod
	     AND peri.pais_oid_pais  = ( SELECT OID_PAIS FROM SEG_PAIS WHERE COD_PAIS = #codigoPais# ) 
	     AND peri.oid_peri = (select oid_peri from cra_perio where val_nomb_peri like '%'||#codigoCampanha#||'%')
	     AND prod.cod_sap = #codigoSap#
	ORDER BY prod.cod_sap, ofedet.val_codi_vent
	</select>

	<select id="getIndicadorEliminacionCodigoSAC" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT COUNT(1)
  		  FROM bas_param_pais a
         WHERE a.cod_pais = #codigoPais#
   		   AND a.cod_sist = 'PED'
           AND a.cod_para = '015'
           AND nvl(a.val_para,'S') = 'N'
   	</select>
   	
    <delete id="deleteGestionStock" parameterClass="java.util.Map">
        DELETE FROM ped_gesti_stock WHERE usu_crea = #usuarioLogin# and IND_CSAP = '1'
    </delete>   		

    <delete id="deleteEliminarGestionStock" parameterClass="java.util.Map">
        DELETE FROM ped_gesti_stock WHERE oid_gest_stoc = #oidGestionStock#
    </delete>   	

  	<resultMap id="getMontominimoHistoricoListMapResult" extends="getMontoMinimoResult" class="java.util.HashMap">                     
    	<result property="campanya" 				column="cam_modi" />
    	<result property="fechaModificacion"		column="fec_modi" />
    	<result property="usuarioModificacion" 		column="usu_modi" />
    	<result property="codigoAccion" 			column="cod_acci" />
    	<result property="codigoStatus" 			column="cod_stat_regi" />
  	</resultMap>
  	
	<select id="getMontominimoHistoricoList" parameterClass="java.util.Map" resultMap="getMontominimoHistoricoListMapResult">
  	SELECT   p.OID_AUDI_MONT_MINI                                             OID_MONTO_MINIMO,
             p.val_niv1                                                 VAL_NIVEL1,
             p.val_niv2                                                 VAL_NIVEL2,
             p.val_niv3                                                 VAL_NIVEL3,
             p.val_reca                                                 VAL_RECARGO,
             p.val_mont_mini_nomi                                       VAL_NOMINAL,
             p.tspa_oid_tipo_soli_pais                                  OID_TSP,
            (SELECT val_i18n
                FROM ped_tipo_solic_pais a,
                    ped_tipo_solic b,
                    ped_clase_solic c,
                    gen_i18n_sicc_comun d
              WHERE a.tsol_oid_tipo_soli = b.oid_tipo_soli
                  AND b.ind_soli_nega = 0
                  AND b.clso_oid_clas_soli = c.oid_clas_soli
                AND c.ind_orde_comp = 1
                AND b.oid_tipo_soli = d.val_oid
                AND d.attr_enti = 'PED_TIPO_SOLIC'
                AND a.ind_pedi_gt_zona = 1
                AND a.oid_tipo_soli_pais =  p.tspa_oid_tipo_soli_pais)  DES_TSP,
             p.ticl_oid_tipo_clie                                        OID_TCL,
            (SELECT b.val_i18n
                FROM gen_i18n_sicc_comun b
              WHERE b.val_oid =  p.ticl_oid_tipo_clie
              AND b.attr_enti = 'MAE_TIPO_CLIEN')                     DES_TCL,
             p.sbti_oid_subt_clie                                        OID_SCL,
            (SELECT b.val_i18n
                FROM gen_i18n_sicc_comun b
              WHERE b.val_oid =   p.sbti_oid_subt_clie
              AND b.attr_enti = 'MAE_SUBTI_CLIEN')                    DES_SCL,
             p.tccl_oid_tipo_clas                                       OID_TCA,
            (SELECT b.val_i18n
                FROM gen_i18n_sicc_comun b
              WHERE b.val_oid =   p.tccl_oid_tipo_clas
              AND b.attr_enti = 'MAE_TIPO_CLASI_CLIEN')               DES_TCA,
             p.clas_oid_clas                                             OID_CLA,
            (SELECT b.val_i18n
                FROM gen_i18n_sicc_comun b
              WHERE b.val_oid =   p.clas_oid_clas
              AND b.attr_enti = 'MAE_CLASI')                          DES_CLA,
             p.zorg_oid_regi                                             OID_REGION,
             (SELECT r.des_regi
                 FROM zon_regio r
               WHERE r.oid_regi = p.zorg_oid_regi)                       DES_REGION,
             p.zzon_oid_zona                                             OID_ZONA,
            (SELECT z.des_zona
                FROM zon_zona z
              WHERE z.oid_zona = p.zzon_oid_zona)                       DES_ZONA,
              p.cam_modi,
              to_char(p.fec_modi, 'DD/MM/YYYY HH24:MI:SS') fec_modi,
              p.usu_modi,
              decode(p.cod_acci, 'R', 'Registro', 'M', 'Modificacion', 'E', 'Eliminacion', '') cod_acci,
              decode(p.cod_stat_regi, 'A', 'Antes', 'D', 'Despues', '') cod_stat_regi
  		  FROM	ped_audit_monto_minim p
		 WHERE 1 = 1		 
		 
		 <isNotEmpty property="fechaInicio" prepend="AND">	    
		   	trunc(p.fec_modi) >= TO_DATE(#fechaInicio#, 'DD/MM/YYYY') 
		 </isNotEmpty>
		 <isNotEmpty property="fechaFin" prepend="AND">
			<![CDATA[  
				trunc(p.fec_modi) <= TO_DATE(#fechaFin#, 'DD/MM/YYYY')
			]]>
		 </isNotEmpty>
		 
		 <isNotEmpty property="periodoInicio" prepend="AND">	    
		   	p.cam_modi >= #periodoInicio# 
		 </isNotEmpty>
		 <isNotEmpty property="periodoFin" prepend="AND">	    		   	
			<![CDATA[  
				p.cam_modi <= #periodoFin#
			]]>		   	 
		 </isNotEmpty>
		 ORDER BY p.fec_modi
  	</select>
	
	<parameterMap id="executeProcesoAsignacionStockGP3Params" class="map" >
		<parameter property="codigoPais"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaFacturacion"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
		
	<procedure id="executeProcesoAsignacionStockGP3" parameterMap="executeProcesoAsignacionStockGP3Params">
    	{call PED_PKG_CUADR_OFERT.PED_PR_PROCE_ASIGN_STOCK(?,?,?)}
    </procedure>

	<parameterMap id="executeProcesoGeneracionOportunidadAhorroParams" class="map">														
   		<parameter property="codigoPais" 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>    
  	</parameterMap>
  
  	<procedure id="executeProcesoGeneracionOportunidadAhorro" parameterMap="executeProcesoGeneracionOportunidadAhorroParams">														
		{call ped_pkg_cuadr_ofert.ped_pr_gener_oport_ahorr(?)}
  	</procedure>	

	<parameterMap id="executeFacturacionAdicionalParams" class="map" >
		<parameter property="codigoPais"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="directorioReporte"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
        </parameterMap>
	<procedure id="executeFacturacionAdicional" parameterMap="executeFacturacionAdicionalParams">
        	{call ped_pkg_proce.ped_pr_proce_consu_fad(?,?,?)}
    </procedure>
	
	<insert id="insertDemandaAnticipada" parameterClass="map">
		INSERT INTO PED_DEMAN_ANTIC(
		    COD_PAIS,
		    COD_PERI,
		    COD_ZONA,
		    COD_CLIE,
		    
		    COD_VENT,
		    COD_SAP,
		    DES_SAP,
		    COD_TIPO_OFER,
		    COD_ESTR,
		    DES_ESTR,
		    NUM_UNID,
		    VAL_VENT_NETA)
		VALUES(
			#codigoPais#,
			#codigoPeriodo#,
			#codigoZona#,
			#codigoCliente#,
			#codigoVenta#,
			#codigoSAP#,
			#desSAP#,			
			#codigoTipoOfer#,
			#codigoEstr#,
			#desEstr#,
			#numUnid#,
			#valVenta#)
	</insert>
	
	<delete id="deleteDemandaAnticipada" parameterClass="map">
		DELETE PED_DEMAN_ANTIC WHERE COD_PAIS = #codigoPais# AND COD_PERI = #codigoPeriodo#		 
	</delete>
	
	<resultMap id="datosProductoCUVRecuperarSemana"    class="java.util.HashMap">
	    <result property="codigoPeriodo" 				column="COD_PERI"/>
   		<result property="codigoCUV" 					column="COD_VENT"/>
	</resultMap>  
   
    <select id="getDatosProductoCUVRecuperarSemana" parameterClass="java.util.Map" resultMap="datosProductoCUVRecuperarSemana">
        SELECT
          COD_PERI,
          COD_VENT
	    FROM PRE_RECUP_SEMAN X
	   WHERE X.COD_PERI = #codigoPeriodo#
	  	 AND X.COD_VENT = #codigoCUV#
    </select>
    
    <insert id="insertCargaCUVRecuperarSiguienteSemana" parameterClass="map">
		INSERT INTO PRE_RECUP_SEMAN(
		    COD_PERI,
		    COD_VENT,
		    COD_USUA,
		    FEC_CREA)
		VALUES(
			#codigoPeriodo#,
			#codigoCUV#,
			#codigoUsuario#,
			SYSDATE)
	</insert>
    
	<select id="getCountExisteMontoMaximo" parameterClass="java.util.Map" 	resultClass="java.lang.String">
		SELECT count(1)
		FROM car_param_carte h
		WHERE h.niri_oid_nive_ries = #codigoNivelRiesgo#
	</select>
	<select id="getOidPais" parameterClass="java.util.Map" 	resultClass="string">
		SELECT OID_PAIS
		FROM SEG_PAIS
		WHERE COD_PAIS = #codigoPais#
	</select>
	<select id="getOidZonaByCodZona" parameterClass="java.util.Map"		resultClass="string">
		SELECT ZON_ZONA.OID_ZONA AS OID_ZONA
		FROM ZON_ZONA,
		ZON_REGIO,
		SEG_PAIS
		WHERE (ZON_ZONA.IND_ACTI = 1)
		AND SEG_PAIS.COD_PAIS =
		#codigoPais#
		AND ZON_ZONA.COD_ZONA = #codigoZona#
		AND (SEG_PAIS.OID_PAIS
		= ZON_REGIO.PAIS_OID_PAIS)
		AND (SEG_PAIS.OID_PAIS =
		ZON_ZONA.PAIS_OID_PAIS)
		AND (ZON_REGIO.OID_REGI =
		ZON_ZONA.ZORG_OID_REGI)
	</select>
	<select id="getOidRegionByCodRegion" parameterClass="java.util.Map" resultClass="string">
		SELECT DISTINCT(ZON_REGIO.OID_REGI) AS OID_REGION
		FROM
		ZON_ZONA,
		ZON_REGIO,
		SEG_PAIS
		WHERE (ZON_ZONA.IND_ACTI = 1)
		AND
		SEG_PAIS.COD_PAIS = #codigoPais#
		AND ZON_REGIO.COD_REGI =
		#codigoRegion#
		AND (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		AND
		(SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		AND (ZON_REGIO.OID_REGI =
		ZON_ZONA.ZORG_OID_REGI)
	</select>
	<select id="getOidRegionByCodZona" parameterClass="java.util.Map" 		resultClass="string">
		SELECT ZON_REGIO.OID_REGI AS CODIGO
		FROM ZON_ZONA,
		ZON_REGIO,
		SEG_PAIS
		WHERE (ZON_ZONA.IND_ACTI = 1)
		AND SEG_PAIS.COD_PAIS =
		#codigoPais#
		AND ZON_ZONA.COD_ZONA = #codigoZona#
		AND (SEG_PAIS.OID_PAIS
		= ZON_REGIO.PAIS_OID_PAIS)
		AND (SEG_PAIS.OID_PAIS =
		ZON_ZONA.PAIS_OID_PAIS)
		AND (ZON_REGIO.OID_REGI =
		ZON_ZONA.ZORG_OID_REGI)
	</select>
	<insert id="insertCarParamCarte" parameterClass="map">
		INSERT INTO
		CAR_PARAM_CARTE(
		OID_PARA_CART,
		PAIS_OID_PAIS,
		GRSO_OID_GRUP_SOLI,
		NIRI_OID_NIVE_RIES,
		COD_CONF,
		IND_DEUD_VENC,
		NUM_DIAS_DEUD_VENC,
		IND_LINE_CRED,
		FEC_VIGE_DESD,
		FEC_VIGE_HAST,
		VAL_PORC_VALI,
		IND_MONT_MAXI,
		VAL_MONT_MAXI_PERM,
		IND_PORC_MAXI,
		VAL_PORC,
		NUM_DIAS_ADIC,
		INVA_OID_INDI_VALI
		)
		VALUES(
		#oidCarpPaca#,
		#oidPais#,
		2001,
		#codigoNivelRiesgo#,
		'000',
		0,
		0,
		0,
		NULL,
		NULL,
		NULL,
		1,
		#montoMaximo#,
		#indMontoMaximo#,
		NULL,
		NULL,
		NULL
		)
	</insert>

	<insert id="insertCarAsignCodigConfi" parameterClass="map">
		INSERT INTO
		CAR_ASIGN_CODIG_CONFI(
		OID_ASIG_CODI_CONF,
		ZSGV_OID_SUBG_VENT,
		ZORG_OID_REGI,
		ZZON_OID_ZONA,
		GRSO_OID_GRUP_SOLI,
		NIRI_OID_NIVE_RIES,
		NIRI_OID_NIVE_RIES_INICI,
		PACA_OID_PARA_CART,
		VAL_LINE_CRED_INIC,
		ZSCC_OID_SECC)
		VALUES
		(#oidCarAscc#,
		2001,
		<isNotNull property="oidRegion">#oidRegion#</isNotNull>
		<isNull property="oidRegion">null</isNull>
		,
		<isNotNull property="oidZona">#oidZona#</isNotNull>
		<isNull property="oidZona">null</isNull>
		,
		2001,
		#codigoNivelRiesgo#,
		#codigoNivelRiesgo#,
		#oidCarpPaca#,
		1000,
		<isNotNull property="oidSeccion">#oidSeccion#</isNotNull>
		<isNull property="oidSeccion">null</isNull>
		)
	</insert>
	<select id="getIdSgteCarParamCarte" parameterClass="java.util.Map"	resultClass="long">
		SELECT
		car_paca_seq.nextval
		FROM
		DUAL
	</select>
	<select id="getIdSgteCarAsignCodigConfi" parameterClass="java.util.Map" resultClass="long">
		SELECT
		car_ascc_seq.nextval
		FROM
		DUAL
	</select>
	<select id="getIdSgteCarParamCarteAudit" parameterClass="java.util.Map"	resultClass="long">
		SELECT
		car_paca_audit_seq.nextval
		FROM
		DUAL
	</select>
	<select id="getIdSgteCarAsignCodigConfiAudit" parameterClass="java.util.Map" resultClass="long">
		SELECT
		car_ascc_audit_seq.nextval
		FROM
		DUAL
	</select>
	<insert id="insertCarParamCarteAudit" parameterClass="map">
		INSERT INTO
		CAR_PARAM_CARTE_AUDIT(
		OID_PARA_CART_AUDI,
		TIP_OPER,
		VAL_REGI,
		FEC_REGI,
		USU_REGI,
		OID_PARA_CART,
		PAIS_OID_PAIS,
		GRSO_OID_GRUP_SOLI,
		NIRI_OID_NIVE_RIES,
		COD_CONF,
		IND_DEUD_VENC,
		NUM_DIAS_DEUD_VENC,
		IND_LINE_CRED,
		FEC_VIGE_DESD,
		FEC_VIGE_HAST,
		VAL_PORC_VALI,
		IND_MONT_MAXI,
		VAL_MONT_MAXI_PERM,
		IND_PORC_MAXI,
		VAL_PORC,
		NUM_DIAS_ADIC,
		INVA_OID_INDI_VALI
		)
		VALUES(
		#oidCarpPacaAudit#,
		#tipoOperacion#,
		#momentoRegistro#,
		SYSDATE,
		#usuario#,
		#oidCarpPaca#,
		#oidPais#,
		2001,
		#codigoNivelRiesgo#,
		'000',
		0,
		0,
		0,
		NULL,
		NULL,
		NULL,
		1,
		#montoMaximo#,
		#indMontoMaximo#,
		NULL,
		NULL,
		NULL
		)
	</insert>
	<insert id="insertCarAsignCodigConfiAudit" parameterClass="map">
		INSERT INTO CAR_ASIGN_CODIG_CONFI_AUDIT(
		OID_ASIG_CODI_CONF_AUDI,
		TIP_OPER,
		VAL_REGI,
		FEC_REGI,
		USU_REGI,
		OID_ASIG_CODI_CONF,
		ZSGV_OID_SUBG_VENT,
		ZORG_OID_REGI,
		ZZON_OID_ZONA,
		GRSO_OID_GRUP_SOLI,
		NIRI_OID_NIVE_RIES,
		NIRI_OID_NIVE_RIES_INICI,
		PACA_OID_PARA_CART,
		VAL_LINE_CRED_INIC,
		ZSCC_OID_SECC)
		VALUES
		(
		#oidCarAsccAudit#,
		#tipoOperacion#,
		#momentoRegistro#,
		SYSDATE,
		#usuario#,
		#oidCarAscc#,
		2001,
		<isNotNull property="oidRegion">#oidRegion#</isNotNull>
		<isNull property="oidRegion">null</isNull>
		,
		<isNotNull property="oidZona">#oidZona#</isNotNull>
		<isNull property="oidZona">null</isNull>
		,
		2001,
		#codigoNivelRiesgo#,
		#codigoNivelRiesgo#,
		#oidCarpPaca#,
		1000,
		<isNotNull property="oidSeccion">#oidSeccion#</isNotNull>
		<isNull property="oidSeccion">null</isNull>
		)
	</insert>
	<resultMap id="getMontoMaximoResult" class="java.util.HashMap">
		<result property="oidParaCart" column="OID_PARA_CART" />
		<result property="niriOidNiveRies" column="NIRI_OID_NIVE_RIES" />
		<result property="valI18n" column="VAL_I18N" />
		<result property="valMontMaxiPerm" column="VAL_MONT_MAXI_PERM" />
		<result property="indMontoMaximo" column="IND_MONT_MAXI" />
	</resultMap>

	<select id="getMontoMaximoList" parameterClass="java.util.Map" 		resultMap="getMontoMaximoResult">
		SELECT H.OID_PARA_CART,
		H.NIRI_OID_NIVE_RIES,
		M.VAL_I18N,
		H.VAL_MONT_MAXI_PERM,
		H.IND_MONT_MAXI
		FROM car_param_carte h,
		gen_i18n_sicc_comun m
		WHERE h.niri_oid_nive_ries=m.val_oid
		and m.attr_enti='CAR_NIVEL_RIESG'
		<isNotEmpty property="codigoNivelRiesgo">
			AND h.niri_oid_nive_ries=#codigoNivelRiesgo#
		</isNotEmpty>
	</select>

	<delete id="deleteCarParamCarte" parameterClass="java.util.Map">
		DELETE FROM
		CAR_PARAM_CARTE x
		WHERE
		x.OID_PARA_CART = #oidParaCart#
	</delete>

	<delete id="deleteCarAsignCodigConfi" parameterClass="java.util.Map">
		DELETE FROM
		CAR_ASIGN_CODIG_CONFI x
		WHERE
		x.PACA_OID_PARA_CART= #oidParaCart#
	</delete>
	<resultMap id="getCarParamCarteResult" class="carParamCarte">
		<result property="oidParaCart" column="OID_PARA_CART" />
		<result property="paisOidPais" column="PAIS_OID_PAIS" />
		<result property="niriOidNiveRies" column="NIRI_OID_NIVE_RIES" />
		<result property="desNivelRiesgo" column="VAL_I18N" />
		<result property="valMontMaxiPerm" column="VAL_MONT_MAXI_PERM" />
		<result property="indMontMaxi" column="IND_MONT_MAXI" />
	</resultMap>
	<select id="getCarParamCarte" parameterClass="java.util.Map" resultMap="getCarParamCarteResult">
		SELECT
		OID_PARA_CART,
		PAIS_OID_PAIS,
		NIRI_OID_NIVE_RIES,
		M.VAL_I18N,
		VAL_MONT_MAXI_PERM,
		IND_MONT_MAXI
		FROM CAR_PARAM_CARTE X,
		gen_i18n_sicc_comun m
		WHERE x.niri_oid_nive_ries=m.val_oid
		and m.attr_enti='CAR_NIVEL_RIESG'
		and X.OID_PARA_CART = #oidParaCart#
	</select>
	<resultMap id="getCarAsignCodigConfiResult" class="carAsignCodigConfi">
		<result property="oidAsigCodiConf" column="OID_ASIG_CODI_CONF" />
		<result property="zorgOidRegi" column="ZORG_OID_REGI" />
		<result property="zzonOidZona" column="ZZON_OID_ZONA" />
		<result property="niriOidNiveRies" column="NIRI_OID_NIVE_RIES" />
		<result property="pacaOidParaCart" column="PACA_OID_PARA_CART" />
		<result property="zsccOidSecc" column="ZSCC_OID_SECC" />
	</resultMap>
	<select id="getCarAsignCodigConfi" parameterClass="java.util.Map" 	resultMap="getCarAsignCodigConfiResult">
		SELECT
		OID_ASIG_CODI_CONF,
		ZORG_OID_REGI,
		ZZON_OID_ZONA,
		NIRI_OID_NIVE_RIES,
		NIRI_OID_NIVE_RIES_INICI,
		PACA_OID_PARA_CART,
		ZSCC_OID_SECC
		FROM CAR_ASIGN_CODIG_CONFI X WHERE
		X.PACA_OID_PARA_CART =
		#oidParaCart#
	</select>
	<update id="updateIndMontMaxi" parameterClass="java.util.Map">
		UPDATE
		CAR_PARAM_CARTE x
		SET
		x.IND_MONT_MAXI = #newIndMontoMaximo#
		WHERE
		x.OID_PARA_CART = #oidParaCart#
	</update>
    
	<delete id="deleteTablaModificacionesMasivasTemporal">
		DELETE PRE_TEMPO_MODIF_MASIV
	</delete>
	
	<insert id="insertModificacionesMasivasTemporal" parameterClass="java.util.Map">
	    INSERT INTO PRE_TEMPO_MODIF_MASIV(
	      	NUM_FILA,
	      	COD_TIPO_MODI,
	      	OID_DETAL_OFERT,
	      	VAL_VALOR,
	      	DES_TIPO_MODI,
	      	COD_USUA)
		VALUES (
			#numeroFila#,
			#codigoTipoModi#,
			#oidDetalleOferta#,
			#valor#,
		     CASE WHEN #codigoTipoModi# = 'ACC' THEN
           			'Acceso'
      			WHEN #codigoTipoModi# = 'CUV' THEN
          			'Cuv'
          		WHEN #codigoTipoModi# = 'PAG' THEN
          			'Pagina'
          		WHEN #codigoTipoModi# = 'PCA' THEN
          			'Precio Catalogo'
          		WHEN #codigoTipoModi# = 'PCC' THEN
          			'Precio Contable'
          		WHEN #codigoTipoModi# = 'TOF' THEN
          			'Tipo de Oferta'
          		WHEN #codigoTipoModi# = 'SAP' THEN
          			'Codigo SAP'
          		WHEN #codigoTipoModi# = 'DIG' THEN
                           'Codigo Digitable'
          		ELSE
          			''
      			END,
			#codigoUsuario#)
	</insert>
	
	<parameterMap id="paramExecuteValidarCargaModificacionesMasivas" class="map">
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	<procedure id="executeValidarCargaModificacionesMasivas" parameterMap="paramExecuteValidarCargaModificacionesMasivas" >
		{call PRE_PKG_PROCE.PRE_PR_VALID_CARGA_MODIF_MASIV(?)}
	</procedure>
	
	<resultMap id="cargaModificacionesMasivasResult" class="java.util.HashMap">	    
	    <result property="numeroFila" 				column="NUM_FILA"  />
	    <result property="codTipoModi" 				column="COD_TIPO_MODI"  />
	    <result property="oidDetalOfer" 			column="OID_DETAL_OFERT"     />
	    <result property="valor"					column="VAL_VALOR"  />
	    <result property="campana"					column="COD_CAMP"  />	     
	    <result property="cuv" 						column="COD_CUV" />
	    <result property="codigoSAP" 				column="COD_SAP" />
	    <result property="descTipoModi" 			column="DES_TIPO_MODI" />
	    <result property="mensajeError" 			column="MEN_ERRO" />
	</resultMap>
	<select id="getCargaModificacionesMasivasList"  parameterClass="java.util.Map" resultMap="cargaModificacionesMasivasResult" >
		SELECT * 
	      FROM PRE_TEMPO_MODIF_MASIV
	     WHERE MEN_ERRO IS NOT NULL
        <isNotEmpty prepend="AND" property="codigoUsuario">
			COD_USUA = #codigoUsuario#
    	</isNotEmpty>
	</select>
	
	<parameterMap id="paramExecuteActualizarCargaModificacionesMasivas" class="map">
		<parameter property="codigoPais"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	<procedure id="executeActualizarCargaModificacionesMasivas" parameterMap="paramExecuteActualizarCargaModificacionesMasivas" >
		{call PRE_PKG_PROCE.PRE_PR_ACTUA_CARGA_MODIF_MASIV(?,?)}
	</procedure>
    
	<update id="updateRegMontMaxi" parameterClass="java.util.Map">
		UPDATE
		CAR_PARAM_CARTE x
		SET
		x.VAL_MONT_MAXI_PERM = #valMontMaxiPerm#
		WHERE
		x.OID_PARA_CART = #oidParaCart#
	</update>
	
	<resultMap id="getSubaccesoResult" class="java.util.HashMap">                     
	    <result property="codigo"		column="codigo" />  
	    <result property="descripcion" 	column="descripcion" />
	</resultMap> 
	<select id="getSubacceso" resultMap="getSubaccesoResult">
		SELECT A.OID_SBAC as codigo,
			   A.COD_SBAC || '-' || B.VAL_I18N as descripcion
		  FROM SEG_SUBAC A, 
		       GEN_I18N_SICC_COMUN B 
		 WHERE A.OID_SBAC=B.VAL_OID
		   AND B.ATTR_ENTI='SEG_SUBAC'
		<![CDATA[
		   AND A.OID_SBAC <> 888
		]]>		   
	</select>
	
	<delete id="eliminaRegistroRUV" parameterClass="map">
		DELETE FROM FAC_REGIS_UNICO_VENTA
		<![CDATA[
		 WHERE FEC_EMIS >= TO_DATE(#fechaInicio#, 'DD/MM/YYYY')
		   AND FEC_EMIS <= TO_DATE(#fechaFin#, 'DD/MM/YYYY')
		   AND SBAC_OID_SBAC = #codigoSubAcceso#
		]]>
	</delete>
    
	<resultMap id="getCodigoRegionUAResult" class="java.util.HashMap">
		<result property="codigoRegion" column="COD_REGI" />
	</resultMap>
	<select id="getCodigoRegionUA" parameterClass="java.util.Map" resultMap="getCodigoRegionUAResult">
		SELECT DISTINCT(ZR.COD_REGI) COD_REGI
		  FROM CAR_ASIGN_CODIG_CONFI X, ZON_REGIO ZR
		 WHERE X.PACA_OID_PARA_CART = #oidParaCart#
		   AND ZR.OID_REGI = X.ZORG_OID_REGI 
		 GROUP BY COD_REGI
		 ORDER BY 1
	</select>
	
	<resultMap id="getCodigoZonaUAResult" class="java.util.HashMap">
		<result property="codigoZona" column="COD_ZONA" />
	</resultMap>
	<select id="getCodigoZonaUA" parameterClass="java.util.Map" resultMap="getCodigoZonaUAResult">
		SELECT DISTINCT(ZZ.COD_ZONA) COD_ZONA
		  FROM CAR_ASIGN_CODIG_CONFI X, ZON_ZONA ZZ
		 WHERE X.PACA_OID_PARA_CART = #oidParaCart#
		   AND ZZ.OID_ZONA = X.ZZON_OID_ZONA
		 GROUP BY COD_ZONA
		 ORDER BY 1		
	</select>
	
	<resultMap id="getCodigoSeccionUAResult" class="java.util.HashMap">
		<result property="codigoSeccion" column="OID_SECC" />
	</resultMap>
	<select id="getCodigoSeccionUA" parameterClass="java.util.Map" resultMap="getCodigoSeccionUAResult">
		SELECT X.ZORG_OID_REGI || '-' || X.ZZON_OID_ZONA || '-' || X.ZSCC_OID_SECC OID_SECC
		  FROM CAR_ASIGN_CODIG_CONFI X, ZON_SECCI ZC, ZON_ZONA ZZ, ZON_REGIO ZR 
	     WHERE X.PACA_OID_PARA_CART = #oidParaCart#
		   AND ZC.OID_SECC = X.ZSCC_OID_SECC
		   AND ZZ.OID_ZONA = X.ZZON_OID_ZONA
		   AND ZR.OID_REGI = X.ZORG_OID_REGI 
		 ORDER BY 1
	</select>
    
    <insert id="deleteTemporalCargaMasivaFletes" parameterClass="string">
			DELETE FROM ped_tempo_carg_masi_flet WHERE cod_usua = #value#
    </insert>
    
    <insert id="insertaTemporalCargaMasivaFletes" parameterClass="java.util.Map">
			INSERT INTO ped_tempo_carg_masi_flet(num_fila, cod_zona, val_mont_fijo, val_reca, val_mont_nfle, men_erro, cod_usua, est_regi)
			VALUES (#numeroFila#, #codigoZona#, #montoFijo#, #recargo#, #montoNoFlete#, '', #codigoUsuario#, '1')
    </insert>
    
	<parameterMap id="paramExecuteValidarCargaMasivaFlete" class="map">
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" 	javaType="java.lang.String" 		mode="IN"/>
    </parameterMap>
    
	<procedure id="executeValidarCargaMasivaFlete" parameterMap="paramExecuteValidarCargaMasivaFlete" >
		{call PED_PKG_PROCE.PED_PR_VALID_CARGA_MASIV_FLETE( ?)}
	</procedure>

	<resultMap id="cargaMasivaFleteResult" 	class="java.util.HashMap">
	    <result property="numeroFila" 					column="NUM_FILA"  />
	    <result property="codigoZona" 					column="COD_ZONA"  />
	    <result property="codigoMontoFijo" 			column="VAL_MONT_FIJO"  />
	    <result property="recargo"						column="VAL_RECA"  />
	    <result property="montoNoCobroFlete"	column="VAL_MONT_NFLE"  />
	    <result property="mensajeError" 				column="MEN_ERRO" />
	</resultMap>
	
	<select id="getCargaMasivaFleteList"  parameterClass="java.util.Map" resultMap="cargaMasivaFleteResult" >
		SELECT num_fila, cod_zona, val_mont_fijo, val_reca, val_mont_nfle, men_erro 
	      FROM ped_tempo_carg_masi_flet
    	 WHERE est_regi = 0
        <isNotEmpty prepend="AND" property="codigoUsuario">        
			cod_usua = #codigoUsuario#
    	</isNotEmpty>
	</select>

    <insert id="deleteDetalleConfiguracionFlete" parameterClass="string">
			DELETE FROM ped_detal_flete
    </insert>
    
    <insert id="deleteCabeceraConfiguracionFlete" parameterClass="string">
			DELETE FROM ped_flete
    </insert>

	<parameterMap id="paramExecuteActualizarConfiguracionFlete" class="map">
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    
	<procedure id="executeActualizarConfiguracionFlete" parameterMap="paramExecuteActualizarConfiguracionFlete" >
		{call PED_PKG_PROCE.PED_PR_ACTUA_CARGA_MASIV_FLETE( ?)}
	</procedure>

    <select id="getIndSoporteCaracteres" parameterClass="java.util.Map" resultClass="string">
		SELECT val_para
		  FROM bas_param_pais
		 WHERE cod_pais = #codigoPais#
		   AND cod_sist = #codigoSistema#
		   AND cod_para = #codigoParametro#
    </select>
    
    <!-- INI - MantenimientoPEDConfiguracionOfertasPorConcursos -->
		
    <select id="getMoneda" parameterClass="java.util.Map" resultMap="monedaMapResult">
		SELECT 
			B.VAL_SIMB_MONE,
			PQ_APL_AUX.VALOR_GEN_I18N_SICC(1, B.OID_MONE, 'SEG_MONED') DES_MONED,
			B.NUM_DECI
		FROM SEG_PAIS  A, SEG_MONED B
		WHERE A.COD_PAIS =  #codigoPais#     
		AND B.OID_MONE = A.MONE_OID_MONE
    </select>    

    <select id="getCuvs" parameterClass="java.util.Map" resultMap="cuvMapResult">
		SELECT 
		E.OID_DETA_OFER,
		E.VAL_CODI_VENT, 
		G.COD_SAP, 
		H.VAL_I18N DES_PROD, 
		E.NUM_PAGI_CATA, 
		I.COD_TIPO_OFER, 
		E.PRECIO_UNITARIO 
		FROM PRE_MATRI_FACTU_CABEC A, PRE_OFERT B, CRA_PERIO C, SEG_PERIO_CORPO D, PRE_OFERT_DETAL E, MAE_PRODU G, GEN_I18N_SICC_PAIS H, PRE_TIPO_OFERT I
		WHERE A.OID_CABE=B.MFCA_OID_CABE 
		AND A.PERD_OID_PERI=C.OID_PERI 
		AND C.PERI_OID_PERI=D.OID_PERI 
		AND D.COD_PERI=#codigoPeriodo#
		AND E.OFER_OID_OFER=B.OID_OFER 
		AND E.PROD_OID_PROD=G.OID_PROD 
		AND G.OID_PROD=H.VAL_OID 
		AND H.ATTR_ENTI='MAE_PRODU' 
		AND E.TOFE_OID_TIPO_OFER=I.OID_TIPO_OFER
		AND E.VAL_CODI_VENT=#cuv#  
    </select>
    
    <select id="getOfertaConcursosList" parameterClass="map" resultMap="ofertaListMapResult">
		SELECT DISTINCT
		I.OID_NIVE_OFER OID, 
		C.COD_PERI, 
		G.DES_CATA,
		I.NUM_PAGI, 
		DECODE(I.TIP_NIVE, '1', 'Niveles de Precios', '2', 'Niveles de Concursos', '') TIP_NIVE, 
		DECODE(I.TIP_CUAD, '1', 'Unidades', '2', 'Monto', '') TIP_CUAD,
		G.OID_CATA,
		I.TIP_NIVE COD_TIP_NIVE,
		I.TIP_CUAD COD_TIP_CUAD,
		I.NUM_LOTE_PLAN
		FROM CRA_PERIO B, SEG_PERIO_CORPO C, PRE_CATAL G, PRE_NIVEL_OFERT I
		WHERE I.PERD_OID_PERI = B.OID_PERI 
		AND B.PERI_OID_PERI = C.OID_PERI 
		AND I.OCAT_OID_CATA = G.OID_CATA

		<isNotEmpty prepend="AND" property="oidOferta">
            I.OID_NIVE_OFER = #oidOferta#
        </isNotEmpty>
		
		<isNotEmpty prepend="AND" property="codigoPeriodo">
            C.COD_PERI = #codigoPeriodo#
        </isNotEmpty>
		 
        <isNotEmpty prepend="AND" property="codigoCatalogo">
            G.COD_CATA = #codigoCatalogo#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="numeroPagina">
            I.NUM_PAGI = #numeroPagina#
        </isNotEmpty>
		
		ORDER BY I.OID_NIVE_OFER     
    </select>
    
	<select id="getOidOfertaPorConcursos" resultClass="long">
		SELECT PRE_NIOF_SEQ.NEXTVAL FROM DUAL		
    </select>
    
    <insert id="insertOfertaPorConcursos" parameterClass="java.util.Map">
    	INSERT INTO PRE_NIVEL_OFERT (
			OID_NIVE_OFER, 
			OCAT_OID_CATA, 
			PERD_OID_PERI, 
			NUM_PAGI, 
			TIP_NIVE, 
			TIP_CUAD, 
			COD_USUA, 
			FEC_DIGI)    	
    	VALUES(
			#oidOferta#,
			#oidCatalogo#,
			GEN_PKG_GENER.gen_fn_devuelve_id_cra_perio2(#codigoPeriodo#),
			#numeroPagina#,
			#codigoTipoPrograma#,
			#codigoTipoCuadre#,
			#codigoUsuario#,
			SYSDATE)
    </insert>
    
	<select id="getOidRangoOfertaConcursos" resultClass="long">
		SELECT PRE_NIOF_RANG_SEQ.NEXTVAL FROM DUAL		
    </select>

    <insert id="insertRangoOfertaConcursos" parameterClass="java.util.Map">    
		INSERT INTO PRE_NIVEL_OFERT_RANGO(
		    OID_NIVE_OFER_RANG, 
		    NIOF_OID_NIVE_OFER, 
			VAL_RANG_INFE, 
			VAL_RANG_SUPE, 
		    VAL_PREC_UNIT, 
		    COD_USUA, 
		    FEC_DIGI)
		VALUES(
			#oidRango#,
			#oidOferta#,
			TO_NUMBER(#rangoInferior#, '999999999.99'),
			TO_NUMBER(#rangoSuperior#, '999999999.99'),
			TO_NUMBER(#precioUnitario#, '999999999999.9999'),
			#codigoUsuario#,
			SYSDATE)
    </insert>
    
    <insert id="insertRangoGratisOfertaConcursosElim" parameterClass="java.util.Map">
        insert into PRE_NIVEL_OFERT_GRATI_ELIMI(
            oid_nive_ofer_grat, 
			niof_oid_nive_ofer_rang, 
			oid_deta_ofer, 
			val_unid, 
			num_secu, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi
        )
		SELECT oid_nive_ofer_grat, 
			   niof_oid_nive_ofer_rang, 
			   oid_deta_ofer, 
			   val_unid, 
			   num_secu, 
			   cod_usua, 
			   fec_digi,
			   #codigoUsuario#,
			   SYSDATE
		FROM PRE_NIVEL_OFERT_GRATI 
		WHERE NIOF_OID_NIVE_OFER_RANG = #oidRango#
	</insert>
    
    
	<delete id="deleteRangoGratisOfertaConcursos">
		DELETE FROM PRE_NIVEL_OFERT_GRATI WHERE NIOF_OID_NIVE_OFER_RANG = #oidRango#
	</delete>
	
	<insert id="insertRangoOfertaConcursosElim" parameterClass="java.util.Map">
        insert into PRE_NIVEL_OFERT_RANGO_ELIMI(
            oid_nive_ofer_rang, 
			niof_oid_nive_ofer, 
			val_rang_infe, 
			val_rang_supe, 
			val_prec_unit, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi
        )
		SELECT  oid_nive_ofer_rang, 
				niof_oid_nive_ofer, 
				val_rang_infe, 
				val_rang_supe, 
				val_prec_unit, 
				cod_usua, 
				fec_digi,
			    #codigoUsuario#,
			    SYSDATE
		FROM  PRE_NIVEL_OFERT_RANGO
		WHERE OID_NIVE_OFER_RANG = #oidRango#
	</insert>
	
	<delete id="deleteRangoOfertaConcursos" >
		DELETE FROM PRE_NIVEL_OFERT_RANGO WHERE OID_NIVE_OFER_RANG = #oidRango#
	</delete>    
        
    <select id="getRangoOfertaConcursosList" parameterClass="java.util.Map" resultMap="rangoListMapResult">
		SELECT 
		OID_NIVE_OFER_RANG OID, 
		NIOF_OID_NIVE_OFER OID_OFER, 
        '' VAL_FACT_REPE, 
        VAL_RANG_INFE,
        VAL_RANG_SUPE,
		VAL_PREC_UNIT 
		FROM PRE_NIVEL_OFERT_RANGO
		WHERE 1= 1
		<isNotEmpty prepend="AND" property="oidRango">
			OID_NIVE_OFER_RANG = #oidRango#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidOferta">
			NIOF_OID_NIVE_OFER = #oidOferta#
		</isNotEmpty>
		ORDER BY OID_NIVE_OFER_RANG
    </select>
    
    <select id="getRangoGratisOfertaConcursosList" parameterClass="java.util.Map" resultMap="rangoGratisListMapResult">
		SELECT 
		  		 A.OID_NIVE_OFER_GRAT OID,
		  		 A.OID_DETA_OFER,
		  		 B.VAL_CODI_VENT,
		         C.COD_SAP,
		         D.VAL_I18N DES_PROD,
		         B.NUM_PAGI_CATA,
		         E.COD_TIPO_OFER,
		         B.PRECIO_UNITARIO,
		         A.VAL_UNID
		    FROM PRE_NIVEL_OFERT_GRATI A,
		         PRE_OFERT_DETAL B,
		         MAE_PRODU C,
		         GEN_I18N_SICC_PAIS D,
		         PRE_TIPO_OFERT E
		   WHERE     A.NIOF_OID_NIVE_OFER_RANG = #oidRango#
		         AND A.OID_DETA_OFER = B.OID_DETA_OFER
		         AND B.PROD_OID_PROD = C.OID_PROD
		         AND C.OID_PROD = D.VAL_OID
		         AND D.ATTR_ENTI = 'MAE_PRODU'
		         AND B.TOFE_OID_TIPO_OFER = E.OID_TIPO_OFER
		ORDER BY A.NUM_SECU
    </select>
    
    <select id="getOidRangoGratisOfertaConcursos" resultClass="long">
    	SELECT PRE_NIOF_GRAT_SEQ.NEXTVAL FROM DUAL
    </select>
    
    <insert id="insertRangoGratisOfertaConcursos" parameterClass="java.util.Map">
    	INSERT INTO PRE_NIVEL_OFERT_GRATI(
			OID_NIVE_OFER_GRAT, 
			NIOF_OID_NIVE_OFER_RANG, 
			OID_DETA_OFER, 
			VAL_UNID, 
			NUM_SECU, 
			COD_USUA, 
			FEC_DIGI)
    	VALUES(
    		#oidGratis#,
    		#oidRango#,
    		#oidDetalleOferta#,
    		#unidades#,
    		#correlativo#,
    		#codigoUsuario#,
    		SYSDATE)
    </insert>
    
    <insert id="insertByOidRangoGratisOfertaConcursosElim" parameterClass="java.util.Map">
    	INSERT INTO PRE_NIVEL_OFERT_GRATI_ELIMI(
			oid_nive_ofer_grat, 
			niof_oid_nive_ofer_rang, 
			oid_deta_ofer, 
			val_unid, 
			num_secu, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi)
    	SELECT OID_NIVE_OFER_GRAT, 
			NIOF_OID_NIVE_OFER_RANG, 
			OID_DETA_OFER, 
			VAL_UNID, 
			NUM_SECU, 
			COD_USUA, 
			FEC_DIGI,
			#codigoUsuario#,
			SYSDATE
    	FROM PRE_NIVEL_OFERT_GRATI 
    	WHERE OID_NIVE_OFER_GRAT = #oidGratis#
    </insert>

	<delete id="deleteByOidRangoGratisOfertaConcursos">
		DELETE FROM PRE_NIVEL_OFERT_GRATI WHERE OID_NIVE_OFER_GRAT = #oidGratis#
    </delete>
    
    <select id="getOidCriterioOfertaConcursos" resultClass="long">
    	SELECT PRE_NIOC_SEQ.NEXTVAL FROM DUAL
    </select>
    
    <insert id="insertCriterioOfertaConcursos" parameterClass="java.util.Map">
		INSERT INTO PRE_NIVEL_OFERT_CRITE(
		    OID_NIVE_OFER_CRITE, 
		    NIOF_OID_NIVE_OFER, 
		    TIP_RANG, 
		    OCAT_OID_CATA, 
		    NUM_PAGI_DESD, 
		    NUM_PAGI_HAST, 
		    PROD_OID_PROD, 
		    IND_EXCL, 
			COD_USUA,
			FEC_DIGI)
    	VALUES(
			#oidCriterio#,
			#oidOferta#,
			#codigoTipoRango#,
			#oidCatalogoCriterio#,
			#numeroPaginaInicial#,
			#numeroPaginaFinal#,
			#oidProducto#,
			#indicadorExclusionRango#,
			#codigoUsuario#,
			SYSDATE)
    </insert>
    
    <insert id="insertCriterioOfertaConcursosElim" parameterClass="java.util.Map">
		INSERT INTO PRE_NIVEL_OFERT_CRITE_ELIMI(
		    oid_nive_ofer_crite, 
			niof_oid_nive_ofer, 
			tip_rang, 
			ocat_oid_cata, 
			num_pagi_desd, 
			num_pagi_hast, 
			prod_oid_prod, 
			ind_excl, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi)
    	SELECT 
    	    OID_NIVE_OFER_CRITE, 
		    NIOF_OID_NIVE_OFER, 
		    TIP_RANG, 
		    OCAT_OID_CATA, 
		    NUM_PAGI_DESD, 
		    NUM_PAGI_HAST, 
		    PROD_OID_PROD, 
		    IND_EXCL, 
			COD_USUA,
			FEC_DIGI,
			#codigoUsuario#,
			SYSDATE
    	FROM PRE_NIVEL_OFERT_CRITE 
    	WHERE OID_NIVE_OFER_CRITE = #oidCriterio#
    </insert>
    
	<delete id="deleteCriterioOfertaConcursos">
		DELETE FROM PRE_NIVEL_OFERT_CRITE WHERE OID_NIVE_OFER_CRITE = #oidCriterio#
    </delete>
    
    <select id="getCriterioOfertaConcursosList" resultMap="criterioListMapResult">
		SELECT 
	  	CR.OID_NIVE_OFER_CRITE OID,
	  	CA.DES_CATA,
	  	DECODE (CR.TIP_RANG,  'R', 'Rango',  'P', 'Producto',  '') TIP_RANG,
	  	CR.NUM_PAGI_DESD,
	  	CR.NUM_PAGI_HAST,
	  	(SELECT MP.COD_SAP FROM MAE_PRODU MP WHERE MP.OID_PROD = CR.PROD_OID_PROD) DES_PROD,
	  	DECODE (CR.IND_EXCL,  1, 'SI',  0, 'NO',  '') IND_EXCL
	  	FROM PRE_NIVEL_OFERT_CRITE CR, PRE_CATAL CA
	  	WHERE CR.OCAT_OID_CATA = CA.OID_cATA
	  	AND CR.NIOF_OID_NIVE_OFER = #oidOferta#
		ORDER BY CR.OID_NIVE_OFER_CRITE		
    </select>
    
    <select id="getProductoOfertaConcursosList" parameterClass="java.util.Map" resultMap="productoListMapResult">    	
		SELECT I.OID_DETA_OFER,
		       I.VAL_CODI_VENT,
		       K.COD_SAP,
		       INT_PKG_RECLA.GEN_FN_DESC_PROD (K.OID_PROD) DES_PROD,
		       A.DES_CATA,
		       I.NUM_PAGI_CATA,
		       V.COD_TIPO_OFER TIP_OFER,
		       NULL VAL_FACT_REPE
		  FROM PRE_OFERT H,
		       MAE_PRODU K,
		       PRE_OFERT_DETAL I,
		       PRE_MATRI_FACTU_CABEC PMFC,
		       CRA_PERIO CRAP,
		       SEG_PERIO_CORPO SPCORP,
		       PRE_TIPO_OFERT V,
		       PRE_NIVEL_OFERT_CRITE L,
		       PRE_CATAL A
		 WHERE     H.OID_OFER = I.OFER_OID_OFER
		       AND H.OCAT_OID_CATA = A.OID_CATA
		       AND H.OCAT_OID_CATA = L.OCAT_OID_CATA
		       
		       <![CDATA[
		       AND I.NUM_PAGI_CATA >= L.NUM_PAGI_DESD
		       AND I.NUM_PAGI_CATA <= L.NUM_PAGI_HAST
		       ]]>
		       
		       AND L.TIP_RANG = 'R'
		       AND H.MFCA_OID_CABE = PMFC.OID_CABE
		       AND PMFC.PERD_OID_PERI = CRAP.OID_PERI
		       AND CRAP.PERI_OID_PERI = SPCORP.OID_PERI
		       AND SPCORP.COD_PERI = #codigoPeriodo#
		       AND I.PROD_OID_PROD = K.OID_PROD
		       AND L.IND_EXCL = 0
		       AND I.TOFE_OID_TIPO_OFER = V.OID_TIPO_OFER
		       AND L.NIOF_OID_NIVE_OFER = #oidOferta#
		       AND K.COD_SAP NOT IN
		              (SELECT P.COD_SAP
		                 FROM PRE_OFERT M,
		                      PRE_NIVEL_OFERT_CRITE O,
		                      MAE_PRODU P,
		                      PRE_OFERT_DETAL Q
		                WHERE     M.OID_OFER = Q.OFER_OID_OFER
		                      AND P.OID_PROD = O.PROD_OID_PROD
		                      AND O.TIP_RANG = 'P'
		                      AND Q.PROD_OID_PROD = P.OID_PROD
		                      AND O.IND_EXCL = 1
		                      AND M.MFCA_OID_CABE = PMFC.OID_CABE
		                      AND O.NIOF_OID_NIVE_OFER = L.NIOF_OID_NIVE_OFER)
    </select>
    
      <select id="getProductoOfertaConcursosList1" parameterClass="java.util.Map" resultMap="productoListMapResult">    	
			SELECT i.oid_deta_ofer,
		       i.val_codi_vent,
		       k.cod_sap,
		       int_pkg_recla.gen_fn_desc_prod(k.oid_prod) des_prod,
		       a.des_cata,
		       i.num_pagi_cata,
		       v.cod_tipo_ofer tip_ofer,
		       NULL val_fact_repe
		  FROM mae_produ             k,
		       pre_ofert_detal       i,
		       pre_catal             a,
		       pre_tipo_ofert        v,
		       PRE_NIVEL_OFERT_PRODU B
		 WHERE B.OID_DETA_OFER = I.OID_DETA_OFER
		   AND B.niof_oid_nive_ofer = #oidOferta#   
		   AND i.OCAT_OID_CATAl = A.OID_CATA
		   AND i.prod_oid_prod = k.oid_prod
		   AND i.tofe_oid_tipo_ofer = v.oid_tipo_ofer
    </select>
    
    <insert id="insertProductoOfertaConcursos" parameterClass="java.util.Map">
		INSERT INTO PRE_NIVEL_OFERT_PRODU(
		    OID_NIVE_OFER_PROD, 
			NIOF_OID_NIVE_OFER,
			OID_DETA_OFER,
			COD_USUA,
			FEC_DIGI)
    	VALUES(
		    PRE_NIOP_SEQ.NEXTVAL,
		    #oidOferta#,
    		#oidDetalleOferta#,
    		#codigoUsuario#,
    		SYSDATE)
    </insert>
    
    <insert id="insertProductosOfertaConcursosElim" parameterClass="java.util.Map">
		INSERT INTO PRE_NIVEL_OFERT_PRODU_ELIMI(
		    oid_nive_ofer_prod, 
			niof_oid_nive_ofer, 
			oid_deta_ofer, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi
		    )
    	SELECT 
    	    OID_NIVE_OFER_PROD, 
			NIOF_OID_NIVE_OFER,
			OID_DETA_OFER,
			COD_USUA,
			FEC_DIGI,
			#codigoUsuario#,
			SYSDATE
    	FROM PRE_NIVEL_OFERT_PRODU 
    	WHERE NIOF_OID_NIVE_OFER = #oidOferta#
    </insert>
    
    <delete id="deleteProductosOfertaConcursos">
    	DELETE FROM PRE_NIVEL_OFERT_PRODU WHERE NIOF_OID_NIVE_OFER = #oidOferta#
    </delete>
    
    <delete id="deleteAllGratisOfertaConcursos">
		DELETE FROM PRE_NIVEL_OFERT_GRATI
		      WHERE NIOF_OID_NIVE_OFER_RANG IN
		               (SELECT OID_NIVE_OFER_RANG
		                  FROM PRE_NIVEL_OFERT_RANGO
		                 WHERE NIOF_OID_NIVE_OFER = #oidOferta#)
    
    </delete>
    
    <delete id="deleteAllRangosOfertaConcursos">
		DELETE FROM PRE_NIVEL_OFERT_RANGO
		      WHERE NIOF_OID_NIVE_OFER = #oidOferta#
    
    </delete>    
    
    <delete id="deleteAllCriteriosOfertaConcursos">
		DELETE FROM PRE_NIVEL_OFERT_CRITE
		      WHERE NIOF_OID_NIVE_OFER = #oidOferta#    
    </delete>

    <delete id="deleteAllProductosOfertaConcursos">
		DELETE FROM PRE_NIVEL_OFERT_PRODU
		      WHERE NIOF_OID_NIVE_OFER = #oidOferta#
    </delete>

    <delete id="deleteOfertaConcursos">
    	DELETE FROM PRE_NIVEL_OFERT WHERE OID_NIVE_OFER = #oidOferta#
    </delete>
    
    <update id="updateOfertaConcursos" parameterClass="java.util.Map">
    	UPDATE PRE_NIVEL_OFERT SET
    	OCAT_OID_CATA = #oidCatalogo#, 
		PERD_OID_PERI = GEN_PKG_GENER.gen_fn_devuelve_id_cra_perio2(#codigoPeriodo#), 
		NUM_PAGI = #numeroPagina#,
		TIP_NIVE = #codigoTipoPrograma#,
		TIP_CUAD = #codigoTipoCuadre#
    	WHERE OID_NIVE_OFER = #oidOferta#
    </update>
    
    <!-- FIN - MantenimientoPEDConfiguracionOfertasPorConcursos -->
    
    <!-- INI - MantenimientoPEDConfiguracionOfertasPorFactorRepeticion -->
    
    <select id="getOfertaFactorRepeticionList" parameterClass="map" resultMap="ofertaListMapResult">
		SELECT DISTINCT
		I.OID_NX_OFER OID, 
		C.COD_PERI, 
		                G.DES_CATA,
		I.NUM_PAGI, 
		DECODE(I.TIP_NIVE, '1', 'Niveles de Precios', '2', 'Niveles de Concursos', '') TIP_NIVE, 
		DECODE(I.TIP_CUAD, '1', 'Unidades', '2', 'Monto', '') TIP_CUAD,
		G.OID_CATA,
		I.TIP_NIVE COD_TIP_NIVE,
		I.TIP_CUAD COD_TIP_CUAD,
		I.NUM_LOTE_PLAN
		FROM CRA_PERIO B, SEG_PERIO_CORPO C, PRE_CATAL G, PRE_NX_OFERT I
		WHERE I.PERD_OID_PERI = B.OID_PERI 
		       AND B.PERI_OID_PERI = C.OID_PERI
		AND I.OCAT_OID_CATA = G.OID_CATA

		<isNotEmpty prepend="AND" property="oidOferta">
            I.OID_NX_OFER = #oidOferta#
        </isNotEmpty>
		
		<isNotEmpty prepend="AND" property="codigoPeriodo">
            C.COD_PERI = #codigoPeriodo#
        </isNotEmpty>
		 
        <isNotEmpty prepend="AND" property="codigoCatalogo">
            G.COD_CATA = #codigoCatalogo#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="numeroPagina">
            I.NUM_PAGI = #numeroPagina#
        </isNotEmpty>
    
		ORDER BY I.OID_NX_OFER     
    </select>
    
	<select id="getOidOfertaPorFactorRepeticion" resultClass="long">
		SELECT PRE_NXOF_SEQ.NEXTVAL FROM DUAL		
	</select>
    
    <insert id="insertOfertaPorFactorRepeticion" parameterClass="java.util.Map">
    	INSERT INTO PRE_NX_OFERT (
			OID_NX_OFER, 
			OCAT_OID_CATA, 
			PERD_OID_PERI, 
			NUM_PAGI, 
			TIP_NIVE, 
			TIP_CUAD, 
			COD_USUA, 
			FEC_DIGI)    	
    	VALUES(
			#oidOferta#,
			#oidCatalogo#,
			GEN_PKG_GENER.gen_fn_devuelve_id_cra_perio2(#codigoPeriodo#),
			#numeroPagina#,
			#codigoTipoPrograma#,
			#codigoTipoCuadre#,
			#codigoUsuario#,
			SYSDATE)
    </insert>
    
	<select id="getOidRangoOfertaFactorRepeticion" resultClass="long">
		SELECT PRE_NXOF_RANG_SEQ.NEXTVAL FROM DUAL		
	</select>       
    
    <insert id="insertRangoOfertaFactorRepeticion" parameterClass="java.util.Map">    
		INSERT INTO PRE_NX_OFERT_RANGO(
		    OID_NX_OFER_RANG, 
		    NIOF_OID_NX_OFER, 
			VAL_FACT_REPE, 
			VAL_PREC_UNIT, 
			COD_USUA, 
			FEC_DIGI)    	
    	VALUES(
			#oidRango#,
			#oidOferta#,
			#factorRepeticion#,
			TO_NUMBER(#precioUnitario#, '999999999999.9999'),
			#codigoUsuario#,
			SYSDATE)
    </insert>
    
    <insert id="insertRangoGratisOfertaFactorRepeticionElim" parameterClass="java.util.Map">    
		INSERT INTO PRE_NX_OFERT_GRATI_ELIMI(
		    oid_nx_ofer_grat, 
			niof_oid_nx_ofer_rang, 
			oid_deta_ofer, 
			val_unid, 
			num_secu, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi
		    )    	
    	SELECT  oid_nx_ofer_grat, 
				niof_oid_nx_ofer_rang, 
				oid_deta_ofer, 
				val_unid, 
				num_secu, 
				cod_usua, 
				fec_digi,
				#codigoUsuario#,
				SYSDATE
    	FROM PRE_NX_OFERT_GRATI 
    	WHERE NIOF_OID_NX_OFER_RANG = #oidRango#
    </insert>
    
    
	<delete id="deleteRangoGratisOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_GRATI WHERE NIOF_OID_NX_OFER_RANG = #oidRango#
    </delete>
    
    <insert id="insertRangoOfertaFactorRepeticionElim" parameterClass="java.util.Map">    
		INSERT INTO PRE_NX_OFERT_RANGO_ELIMI(
		    oid_nx_ofer_rang, 
			niof_oid_nx_ofer, 
			val_fact_repe, 
			val_prec_unit, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi
		    )    	
    	SELECT  oid_nx_ofer_rang, 
				niof_oid_nx_ofer, 
				val_fact_repe, 
				val_prec_unit, 
				cod_usua, 
				fec_digi,
				#codigoUsuario#,
				SYSDATE
    	FROM PRE_NX_OFERT_RANGO 
    	WHERE OID_NX_OFER_RANG = #oidRango#
    </insert>
    
	<delete id="deleteRangoOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_RANGO WHERE OID_NX_OFER_RANG = #oidRango#
    </delete>
    
    <select id="getRangoOfertaFactorRepeticionList" parameterClass="java.util.Map" resultMap="rangoListMapResult">
		SELECT 
		OID_NX_OFER_RANG OID, 
		NIOF_OID_NX_OFER OID_OFER, 
		VAL_FACT_REPE, 
        '' VAL_RANG_INFE,
        '' VAL_RANG_SUPE,
		VAL_PREC_UNIT 
		FROM PRE_NX_OFERT_RANGO
		WHERE 1= 1
		<isNotEmpty prepend="AND" property="oidRango">
			OID_NX_OFER_RANG = #oidRango#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="oidOferta">
			NIOF_OID_NX_OFER = #oidOferta#
		</isNotEmpty>
		ORDER BY OID_NX_OFER_RANG
    </select>
                
    <select id="getRangoGratisOfertaFactorRepeticionList" parameterClass="java.util.Map" resultMap="rangoGratisListMapResult">
		  SELECT 
		  		 A.OID_NX_OFER_GRAT OID,
		  		 A.OID_DETA_OFER,
		  		 B.VAL_CODI_VENT,
		         C.COD_SAP,
		         D.VAL_I18N DES_PROD,
		         B.NUM_PAGI_CATA,
		         E.COD_TIPO_OFER,
		         B.PRECIO_UNITARIO,
		         A.VAL_UNID
		    FROM PRE_NX_OFERT_GRATI A,
		         PRE_OFERT_DETAL B,
		         MAE_PRODU C,
		         GEN_I18N_SICC_PAIS D,
		         PRE_TIPO_OFERT E
		   WHERE     A.NIOF_OID_NX_OFER_RANG = #oidRango#
		         AND A.OID_DETA_OFER = B.OID_DETA_OFER
		         AND B.PROD_OID_PROD = C.OID_PROD
		         AND C.OID_PROD = D.VAL_OID
		         AND D.ATTR_ENTI = 'MAE_PRODU'
		         AND B.TOFE_OID_TIPO_OFER = E.OID_TIPO_OFER
		ORDER BY A.NUM_SECU
    </select>
    
    <select id="getOidRangoGratisOfertaFactorRepeticion" resultClass="long">
    	SELECT PRE_NXOF_GRAT_SEQ.NEXTVAL FROM DUAL
    </select>
    
    <insert id="insertRangoGratisOfertaFactorRepeticion" parameterClass="java.util.Map">
    	INSERT INTO PRE_NX_OFERT_GRATI(
			OID_NX_OFER_GRAT, 
			NIOF_OID_NX_OFER_RANG, 
			OID_DETA_OFER, 
			VAL_UNID, 
			NUM_SECU, 
			COD_USUA, 
			FEC_DIGI)
    	VALUES(
    		#oidGratis#,
    		#oidRango#,
    		#oidDetalleOferta#,
    		#unidades#,
    		#correlativo#,
    		#codigoUsuario#,
    		SYSDATE)
    </insert>
    
    <insert id="insertByOidRangoGratisOfertaFactorRepeticionElim" parameterClass="java.util.Map">
    	INSERT INTO PRE_NX_OFERT_GRATI_ELIMI(
			oid_nx_ofer_grat, 
			niof_oid_nx_ofer_rang, 
			oid_deta_ofer, 
			val_unid, 
			num_secu, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi)
    	SELECT
    		OID_NX_OFER_GRAT, 
			NIOF_OID_NX_OFER_RANG, 
			OID_DETA_OFER, 
			VAL_UNID, 
			NUM_SECU, 
			COD_USUA, 
			FEC_DIGI,
    		#codigoUsuario#,
    		SYSDATE
         FROM PRE_NX_OFERT_GRATI 
         WHERE OID_NX_OFER_GRAT = #oidGratis#
    </insert>
    
	<delete id="deleteByOidRangoGratisOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_GRATI WHERE OID_NX_OFER_GRAT = #oidGratis#
	</delete>
    
    <select id="getOidCriterioOfertaFactorRepeticion" resultClass="long">
    	SELECT PRE_NXOC_SEQ.NEXTVAL FROM DUAL
    </select>
    
    <insert id="insertCriterioOfertaFactorRepeticion" parameterClass="java.util.Map">
		INSERT INTO PRE_NX_OFERT_CRITE(
		    OID_NX_OFER_CRITE, 
		    NIOF_OID_NX_OFER, 
		    TIP_RANG, 
		    OCAT_OID_CATA, 
		    NUM_PAGI_DESD, 
		    NUM_PAGI_HAST, 
		    PROD_OID_PROD, 
		    IND_EXCL, 
		    COD_USUA, 
		    FEC_DIGI)
		VALUES(
			#oidCriterio#,
			#oidOferta#,
			#codigoTipoRango#,
			#oidCatalogoCriterio#,
			#numeroPaginaInicial#,
			#numeroPaginaFinal#,
			#oidProducto#,
			#indicadorExclusionRango#,
			#codigoUsuario#,
			SYSDATE)		
    </insert>
    
    <insert id="insertCriterioOfertaFactorRepeticionElim" parameterClass="java.util.Map">
		INSERT INTO PRE_NX_OFERT_CRITE_ELIMI(
		    oid_nx_ofer_crite, 
			niof_oid_nx_ofer, 
			tip_rang, 
			ocat_oid_cata, 
			num_pagi_desd, 
			num_pagi_hast, 
			prod_oid_prod, 
			ind_excl, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi)
		SELECT 
		    OID_NX_OFER_CRITE, 
		    NIOF_OID_NX_OFER, 
		    TIP_RANG, 
		    OCAT_OID_CATA, 
		    NUM_PAGI_DESD, 
		    NUM_PAGI_HAST, 
		    PROD_OID_PROD, 
		    IND_EXCL, 
		    COD_USUA, 
		    FEC_DIGI,
			#codigoUsuario#,
			SYSDATE
		FROM PRE_NX_OFERT_CRITE 
		WHERE OID_NX_OFER_CRITE = #oidCriterio#		
    </insert>
    
	<delete id="deleteCriterioOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_CRITE WHERE OID_NX_OFER_CRITE = #oidCriterio#
	</delete>
    
    <select id="getCriterioOfertaFactorRepeticionList" resultMap="criterioListMapResult">
		SELECT
	  	CR.OID_NX_OFER_CRITE OID,
	  	CA.DES_CATA,
	  	DECODE (CR.TIP_RANG,  'R', 'Rango',  'P', 'Producto',  '') TIP_RANG,
	  	CR.NUM_PAGI_DESD,
	  	CR.NUM_PAGI_HAST,
	  	(SELECT MP.COD_SAP FROM MAE_PRODU MP WHERE MP.OID_PROD = CR.PROD_OID_PROD) DES_PROD,
	  	DECODE (CR.IND_EXCL,  1, 'SI',  0, 'NO',  '') IND_EXCL
	  	FROM PRE_NX_OFERT_CRITE CR, PRE_CATAL CA
	  	WHERE CR.OCAT_OID_CATA = CA.OID_cATA
	  	AND CR.NIOF_OID_NX_OFER = #oidOferta#
		ORDER BY CR.OID_NX_OFER_CRITE		
    </select>
        
    <select id="getProductoOfertaFactorRepeticionList" parameterClass="java.util.Map" resultMap="productoListMapResult">    	
		SELECT I.OID_DETA_OFER,
		       I.VAL_CODI_VENT,
		       K.COD_SAP,
		       INT_PKG_RECLA.GEN_FN_DESC_PROD (K.OID_PROD) DES_PROD,
		       A.DES_CATA,
		       I.NUM_PAGI_CATA,
		       V.COD_TIPO_OFER TIP_OFER,
		       I.VAL_FACT_REPE
		  FROM PRE_OFERT H,
		       MAE_PRODU K,
		       PRE_OFERT_DETAL I,
		       PRE_MATRI_FACTU_CABEC PMFC,
		       CRA_PERIO CRAP,
		       SEG_PERIO_CORPO SPCORP,
		       PRE_TIPO_OFERT V,
		       PRE_NX_OFERT_CRITE L,
		       PRE_CATAL A
		 WHERE     H.OID_OFER = I.OFER_OID_OFER
		       AND H.OCAT_OID_CATA = A.OID_CATA
		       AND H.OCAT_OID_CATA = L.OCAT_OID_CATA
		       
		       <![CDATA[
		       AND I.NUM_PAGI_CATA >= L.NUM_PAGI_DESD
		       AND I.NUM_PAGI_CATA <= L.NUM_PAGI_HAST
		       ]]>
		       
		       AND L.TIP_RANG = 'R'
		       AND H.MFCA_OID_CABE = PMFC.OID_CABE
		       AND PMFC.PERD_OID_PERI = CRAP.OID_PERI
		       AND CRAP.PERI_OID_PERI = SPCORP.OID_PERI
		       AND SPCORP.COD_PERI = #codigoPeriodo#
		       AND I.PROD_OID_PROD = K.OID_PROD
		       AND L.IND_EXCL = 0
		       AND I.TOFE_OID_TIPO_OFER = V.OID_TIPO_OFER
		       AND L.NIOF_OID_NX_OFER = #oidOferta#
		       AND K.COD_SAP NOT IN
		              (SELECT P.COD_SAP
		                 FROM PRE_OFERT M,
		                      PRE_NX_OFERT_CRITE O,
		                      MAE_PRODU P,
		                      PRE_OFERT_DETAL Q
		                WHERE     M.OID_OFER = Q.OFER_OID_OFER
		                      AND P.OID_PROD = O.PROD_OID_PROD
		                      AND O.TIP_RANG = 'P'
		                      AND Q.PROD_OID_PROD = P.OID_PROD
		                      AND O.IND_EXCL = 1
		                      AND M.MFCA_OID_CABE = PMFC.OID_CABE
		                      AND O.NIOF_OID_NX_OFER = L.NIOF_OID_NX_OFER)
    </select>
       
    <select id="getProductoOfertaFactorRepeticionList1" parameterClass="java.util.Map" resultMap="productoListMapResult">    	
		SELECT i.oid_deta_ofer,
		       i.val_codi_vent,
		       k.cod_sap,
		       int_pkg_recla.gen_fn_desc_prod(k.oid_prod) des_prod,
		       a.des_cata,
		       i.num_pagi_cata,
		       v.cod_tipo_ofer tip_ofer,
		       i.val_fact_repe
		  FROM mae_produ          k,
		       pre_ofert_detal    i,
		       pre_catal          a,
		       pre_tipo_ofert     v,
		       PRE_NX_OFERT_PRODU B
		 WHERE B.OID_DETA_OFER = I.OID_DETA_OFER
		   AND B.niof_oid_nx_ofer = #oidOferta#
		   AND i.OCAT_OID_CATAl = A.OID_CATA
		   AND i.prod_oid_prod = k.oid_prod
		   AND i.tofe_oid_tipo_ofer = v.oid_tipo_ofer
    </select>
        
    <insert id="insertProductoOfertaFactorRepeticion" parameterClass="java.util.Map">
		INSERT INTO PRE_NX_OFERT_PRODU(
		    OID_NX_OFER_PROD, 
		    NIOF_OID_NX_OFER, 
		    OID_DETA_OFER, 
		    COD_USUA, 
		    FEC_DIGI)
		VALUES(
		    PRE_NXOP_SEQ.NEXTVAL,
		    #oidOferta#,
		    #oidDetalleOferta#,
		    #codigoUsuario#,
		    SYSDATE)    
    </insert>
    
    <insert id="insertProductoOfertaFactorRepeticionElim" parameterClass="java.util.Map">
		INSERT INTO PRE_NX_OFERT_PRODU_ELIMI(
		    oid_nx_ofer_prod, 
			niof_oid_nx_ofer, 
			oid_deta_ofer, 
			cod_usua, 
			fec_digi, 
			cod_usua_modi, 
			fec_modi)
		SELECT 
		    OID_NX_OFER_PROD, 
		    NIOF_OID_NX_OFER, 
		    OID_DETA_OFER, 
		    COD_USUA, 
		    FEC_DIGI,
		    #codigoUsuario#,
		    SYSDATE
		 FROM PRE_NX_OFERT_PRODU 
		 WHERE NIOF_OID_NX_OFER = #oidOferta#
    </insert>
    
    <delete id="deleteProductosOfertaFactorRepeticion">
    	DELETE FROM PRE_NX_OFERT_PRODU WHERE NIOF_OID_NX_OFER = #oidOferta#
    </delete>
    
    <delete id="deleteAllGratisOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_GRATI
		      WHERE NIOF_OID_NX_OFER_RANG IN
		               (SELECT OID_NX_OFER_RANG
		                  FROM PRE_NX_OFERT_RANGO
		                 WHERE NIOF_OID_NX_OFER = #oidOferta# )
    
    </delete>

    <delete id="deleteAllRangosOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_RANGO
		      WHERE NIOF_OID_NX_OFER = #oidOferta#
    
    </delete>
    
    <delete id="deleteAllCriteriosOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_CRITE
		      WHERE NIOF_OID_NX_OFER = #oidOferta# 
    </delete>

    <delete id="deleteAllProductosOfertaFactorRepeticion">
		DELETE FROM PRE_NX_OFERT_PRODU
		      WHERE NIOF_OID_NX_OFER = #oidOferta#
    </delete>

    <delete id="deleteOfertaFactorRepeticion">
    	DELETE FROM PRE_NX_OFERT WHERE OID_NX_OFER = #oidOferta#
    </delete>
    
    <update id="updateOfertaFactorRepeticion" parameterClass="java.util.Map">
    	UPDATE PRE_NX_OFERT SET
    	OCAT_OID_CATA = #oidCatalogo#, 
		PERD_OID_PERI = GEN_PKG_GENER.gen_fn_devuelve_id_cra_perio2(#codigoPeriodo#), 
		NUM_PAGI = #numeroPagina#,
		TIP_NIVE = #codigoTipoPrograma#,
		TIP_CUAD = #codigoTipoCuadre#
    	WHERE OID_NX_OFER = #oidOferta#
    </update>
    
    <!-- FIN - MantenimientoPEDConfiguracionOfertasPorFactorRepeticion -->
    
	<select id="getIndicadorEnvioValidaciones"  resultClass="Integer">
		SELECT COUNT(1)
		  FROM sto_histo_proce
		 WHERE docu_cod_tipo_docu = 'OCC' AND fec_fpro IS NULL AND cod_acci LIKE 'VA%'
	</select>
	
	<select id="getSociedadList"  resultMap="baseResultOID">
		SELECT a.oid_soci as oid, a.cod_soci || '-' || a.val_deno as descripcion FROM seg_socie a
	</select>
	
	<select id="getTipoDocumentoList"  resultMap="baseResultOID">
		SELECT a.oid_tipo_docu as oid, a.oid_tipo_docu || '-' || a.des_tipo_docu as descripcion FROM fac_tipo_docum a
	</select>
	
	<resultMap id="numerosFacturacionListMapResult" 	class="java.util.HashMap">
		<result property="oidDocumentoSubacceso" 		column="OID_DOCU_SUBA" />
		<result property="oidTipoDocumento"        			column="TIDO_OID_TIPO_DOCU" />
		<result property="tipoDocumento"        				column="DES_TIPO_DOCU" />
		<result property="oidSociedad"              				column="SOCI_OID_SOCI" />
		<result property="sociedad"              					column="VAL_DENO" />
		<result property="limiteNumero"          					column="VAL_LIMI_NUME_DOCU_LEGA" />
		<result property="numeroInterno"        				column="VAL_ULTI_NUME_DOCU_INTE" />
		<result property="annio"                  						column="VAL_ULTI_EJER_DOCU_INTE" />
		<result property="serieInterno"                 			column="VAL_SERI_DOCU_LEGA" />
		<result property="numeroAutorizacion" 				column="VAL_NUME_AUTO" />
		<result property="llave"                 						column="VAL_LLAV" />
		<result property="fechaFin"           						column="FEC_LIMI" />
		<result property="observaciones"         				column="VAL_OBSE" />
	</resultMap>
	
	<select id="getNumerosFacturacionList" parameterClass="java.util.Map" resultMap="numerosFacturacionListMapResult">
		SELECT a.oid_docu_suba, 
					 a.tido_oid_tipo_docu, 
		             c.des_tipo_docu, 
		             a.soci_oid_soci, 
		             b.val_deno, 
		             a.val_limi_nume_docu_lega, 
		             a.val_ulti_nume_docu_inte, 
		             a.val_ulti_ejer_docu_inte, 
		             a.val_seri_docu_lega, 
		             a.val_nume_auto, 
		             a.val_llav, 
		             TO_CHAR(a.fec_limi, 'DD/MM/YYYY') fec_limi, 
		             a.val_obse 
		  FROM fac_docum_subac a, 
		             seg_socie b, 
		             fac_tipo_docum c
		WHERE a.soci_oid_soci = b.oid_soci
		     AND a.tido_oid_tipo_docu = c.oid_tipo_docu
		     AND a.sbac_oid_sbac = 888
		     AND a.tido_oid_tipo_docu = #oidTipoDocumento#
		     AND a.soci_oid_soci = #oidSociedad#
	</select>

	<insert id="insertNumerosFacturacion" parameterClass="java.util.Map">
		insert into fac_docum_subac(
			oid_docu_suba, 
			soci_oid_soci, 
			sbac_oid_sbac, 
			tido_oid_tipo_docu, 
			val_ulti_nume_docu_lega, 
			val_limi_nume_docu_lega, 
			val_ulti_ejer_docu_inte, 
			val_seri_docu_lega, 
			val_ulti_nume_docu_inte, 
			pais_oid_pais, 
			val_nume_auto, 
			val_llav, 
			fec_limi, 
			val_obse, 
			usu_crea, 
			fec_crea
		)
		values(
			fac_dosu_seq.nextval, 
			#oidSociedad#, 
			888, 
			#oidTipoDocumento#, 
			#numeroInterno#, 
			#limiteNumero#, 
			#annio#, 
			#serieInterno#, 
			#numeroInterno#, 
			#oidPais#, 
			#numeroAutorizacion#, 
			#llave#, 
			to_date(#fechaFin#, 'DD/MM/YYYY'), 
			#observaciones#, 
			#usuario#,
			sysdate
		)
	</insert>
	
	<delete id="deleteNumerosFacturacion" parameterClass="java.util.Map">
		DELETE FROM fac_docum_subac WHERE oid_docu_suba = #oidDocumentoSubacceso#
	</delete>
	
	<insert id="insertHistoricoNumerosFacturacion" parameterClass="java.util.Map">
		INSERT INTO fac_docum_subac_histo
		(OID_DOCU_SUBA,
		  SOCI_OID_SOCI,
		  SBAC_OID_SBAC,
		  TIDO_OID_TIPO_DOCU,
		  VAL_ULTI_NUME_DOCU_LEGA,
		  VAL_LIMI_NUME_DOCU_LEGA,
		  VAL_ULTI_EJER_DOCU_INTE,
		  VAL_SERI_DOCU_LEGA,
		  VAL_ULTI_NUME_DOCU_INTE,
		  PAIS_OID_PAIS,
		  VAL_NUME_AUTO,
		  VAL_LLAV,
		  FEC_LIMI,
		  VAL_OBSE,
		  USU_CREA,
		  FEC_CREA)
		SELECT OID_DOCU_SUBA,
		  SOCI_OID_SOCI,
		  SBAC_OID_SBAC,
		  TIDO_OID_TIPO_DOCU,
		  VAL_ULTI_NUME_DOCU_LEGA,
		  VAL_LIMI_NUME_DOCU_LEGA,
		  VAL_ULTI_EJER_DOCU_INTE,
		  VAL_SERI_DOCU_LEGA,
		  VAL_ULTI_NUME_DOCU_INTE,
		  PAIS_OID_PAIS,
		  VAL_NUME_AUTO,
		  VAL_LLAV,
		  FEC_LIMI,
		  VAL_OBSE,
		  USU_CREA,
		  FEC_CREA
		     FROM fac_docum_subac
		    WHERE oid_docu_suba = #oidDocumentoSubacceso#
	</insert>
	
	<update id="updateHistoricoNumerosFacturacion" parameterClass="java.util.Map">
		UPDATE fac_docum_subac_histo SET 
		   usu_modi = #usuario#, 
		   fec_modi = sysdate 
		 WHERE oid_docu_suba = #oidDocumentoSubacceso#
		   AND usu_modi is null 
		   AND fec_modi is null
	</update>
	
	<update id="updateNumerosFacturacion" parameterClass="java.util.Map">
		UPDATE fac_docum_subac SET 
		   soci_oid_soci = #oidSociedad#,
		   tido_oid_tipo_docu = #oidTipoDocumento#,
		   val_ulti_nume_docu_lega = #numeroInterno#,
		   val_limi_nume_docu_lega = #limiteNumero#,
		   val_ulti_ejer_docu_inte = #annio#,
		   val_seri_docu_lega = #serieInterno#,
		   val_ulti_nume_docu_inte = #numeroInterno#,
		   pais_oid_pais = #oidPais#,
		   val_nume_auto = #numeroAutorizacion#,
		   val_llav = #llave#,
		   fec_limi = to_date(#fechaFin#, 'DD/MM/YYYY'), 
		   val_obse = #observaciones#, 
		   usu_modi = #usuario#, 
		   fec_modi = sysdate
		 WHERE oid_docu_suba = #oidDocumentoSubacceso#
	</update>

	<select id="getValidateNumerosFacturacion"  parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT count(1) 
		  FROM fac_docum_subac 
		 WHERE pais_oid_pais = #oidPais# 
		   AND soci_oid_soci = #oidSociedad# 
		   AND sbac_oid_sbac = 888 
		   AND tido_oid_tipo_docu = #oidTipoDocumento# 
	</select>
	
	<select id="getIndicadorEnvioValidacionesSTO"  resultClass="Integer">
		SELECT COUNT(1)
		  FROM bas_proce_batch_actua
		 WHERE sist_cod_sist = #codigoSistema#
		   AND prba_cod_proc_batc = #codigoProcesoBatch#
		   AND fec_fina_proc IS NULL
	</select>
	
	<select id="getPeriodosMatrizFacturacion" resultMap="baseResult">
		SELECT 
		C.COD_PERI CODIGO, 
		C.COD_PERI DESCRIPCION
		FROM CRA_PERIO B, SEG_PERIO_CORPO C
		WHERE B.PERI_OID_PERI = C.OID_PERI
		ORDER BY C.COD_PERI
	</select>
	
	<select id="getEstimadosMatrizFacturacion" parameterClass="map" resultMap="estimadosMatrizFacturacionMapResult">
		SELECT 
		A.OID_CABE,
		A.PERD_OID_PERI,
		C.COD_PERI,
		NUM_PEDI_ESTI,
		NUM_UNID_ESTI,
		NUM_CLIE_ESTI,
		TOTA_MONT_VENT_NETA,
		VAL_TIPO_CAMB
		FROM PRE_MATRI_FACTU_CABEC A, CRA_PERIO B, SEG_PERIO_CORPO C
		WHERE A.PERD_OID_PERI = B.OID_PERI 
		AND B.PERI_OID_PERI = C.OID_PERI
		
		<isNotEmpty prepend="AND" property="oidMatriz">
			A.OID_CABE = #oidMatriz#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="codigoPeriodo">
			C.COD_PERI = #codigoPeriodo#
		</isNotEmpty>
		
		ORDER BY C.COD_PERI
	</select>
	
	<insert id="insertMatrizFacturacion" parameterClass="matrizFacturacion">
		INSERT INTO PRE_MATRI_FACTU_CABEC(
		    OID_CABE, 
		    PERD_OID_PERI, 
		    NUM_PEDI_ESTI, 
		    NUM_UNID_ESTI, 
		    NUM_CLIE_ESTI, 
		    TOTA_MONT_VENT_NETA, 
		    VAL_TIPO_CAMB)
		VALUES(
		    PRE_MFCA_SEQ.NEXTVAL,
		    GEN_PKG_GENER.gen_fn_devuelve_id_cra_perio2(#codigoPeriodo#),
		    #pedidosEstimados#,
		    #unidadesEstimadas#,
		    #clientesEstimados#,
		    #ventaNetaEstimada#,
		    TO_NUMBER(#tipoCambioPromedio#, '9999999999.99'))    	
	</insert>

	<insert id="updateMatrizFacturacion" parameterClass="matrizFacturacion">
		UPDATE PRE_MATRI_FACTU_CABEC SET
		    NUM_PEDI_ESTI = #pedidosEstimados#, 
		    NUM_UNID_ESTI = #unidadesEstimadas#, 
		    NUM_CLIE_ESTI = #clientesEstimados#, 
		    TOTA_MONT_VENT_NETA = #ventaNetaEstimada#, 
		    VAL_TIPO_CAMB = TO_NUMBER(#tipoCambioPromedio#, '9999999999.99') 
		WHERE OID_CABE = #oidMatriz#
	</insert>

    <parameterMap id="asignarCodigoVentaActionParams" class="map" >
		<parameter property="oidPeriodo" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="oidCatalogo" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>	
	<procedure id="executeAsignarCodigoVentaAction" parameterMap="asignarCodigoVentaActionParams">
		{call PED_PKG_CUADR_OFERT.PED_PR_ASIGNAR_CUV(?,?)}
	</procedure>
		
	<select id="getEstrategias" parameterClass="map" resultMap="estrategiaMapResult">
		SELECT 
		A.OID_ESTR OID,
		A.TIES_OID_TIPO_ESTR OID_TIPO, 
		B.VAL_I18N DESCRIPCION
		FROM PRE_ESTRA A, GEN_I18N_SICC_PAIS B
		WHERE A.OID_ESTR = B.VAL_OID 
		AND B.ATTR_ENTI='PRE_ESTRA'	
				
		<isNotEmpty prepend="AND" property="oidEstrategia">
			A.OID_ESTR = #oidEstrategia#
		</isNotEmpty>		
	</select>
		
	<select id="getProductosAsociadosByCriteria1" parameterClass="map" resultMap="productoAsociadoMapResult">	
		SELECT
		A.PROD_OID_PROD, 
		F.OID_TIPO_OFER,
		D.COD_SAP COD_SAP,
		E.VAL_I18N DES_PROD,
		F.COD_TIPO_OFER TIP_OFER,
		G.DES_CATA,
		A.NUM_PAGI_CATA,
		A.NUM_UNID_ESTI,
		A.IMP_PREC_CATA,
		A.IMP_VENT_NETA_ESTI,
		A.IMP_PREC_POSI,
		A.VAL_COST_ESTA
		FROM PRE_ESTIM_VENTA A,
		       CRA_PERIO B,
		       SEG_PERIO_CORPO C,
		       MAE_PRODU D,
		       GEN_I18N_SICC_PAIS E,
		       PRE_TIPO_OFERT F,
		       PRE_CATAL G
		WHERE A.PERD_OID_PERI = B.OID_PERI
		AND B.PERI_OID_PERI = C.OID_PERI
		AND A.TOFE_OID_TIPO_OFER = F.OID_TIPO_OFER
		AND A.PROD_OID_PROD = D.OID_PROD
		AND D.OID_PROD = E.VAL_OID
		AND E.ATTR_ENTI = 'MAE_PRODU'
		AND A.OCAT_OID_CATA = G.OID_CATA
		AND C.COD_PERI = #codigoPeriodo#

		<isNotEmpty prepend="AND" property="codigoSap">
			D.COD_SAP = #codigoSap#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="descripcion">
			E.VAL_I18N LIKE #descripcion#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="paginaDesde">
			A.NUM_PAGI_CATA >= #paginaDesde#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="paginaHasta">
			<![CDATA[
			A.NUM_PAGI_CATA <= #paginaHasta#
			]]>		
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="oidCatalogo">
			A.OCAT_OID_CATA = #oidCatalogo#
		</isNotEmpty>
	</select>
	
	<select id="getProductosAsociadosByCriteria2" parameterClass="map" resultMap="productoAsociadoMapResult">
		SELECT
		D.OID_PROD PROD_OID_PROD,
		NULL OID_TIPO_OFER, 
		D.COD_SAP, 
		E.VAL_I18N DES_PROD, 
		NULL TIP_OFER, 
		NULL DES_CATA, 
		0 NUM_PAGI_CATA, 
		0 NUM_UNID_ESTI, 
		0 IMP_PREC_CATA,  
		0 IMP_VENT_NETA_ESTI, 
		0 IMP_PREC_POSI, 
		0 VAL_COST_ESTA 
		FROM MAE_PRODU D, GEN_I18N_SICC_PAIS E
		WHERE D.OID_PROD = E.VAL_OID 
		AND E.ATTR_ENTI = 'MAE_PRODU'
		
		<isNotEmpty prepend="AND" property="codigoSap">
			D.COD_SAP = #codigoSap#
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="descripcion">
			E.VAL_I18N LIKE #descripcion#
		</isNotEmpty>
		
	</select>
	
	<select id="getValidarTipoOferta" parameterClass="map" resultClass="string">
		SELECT
		PRE_PKG_PROCE.PRE_FN_VALID_RESTR_OFERT(#oidTipoOferta#, #codigoProducto#, #oidEstrategia#, TO_NUMBER(#precioCatalogo#, '9999999999.99'), TO_NUMBER(#precioPosicionamiento#, '9999999999.99'))
		FROM DUAL
	</select>
	
	<select id="getTiposCuadre" parameterClass="map" resultMap="baseResultOID">
	
		SELECT 
		OID_IND_CUAD OID, 
		VAL_I18N DESCRIPCION
		FROM PRE_INDIC_CUADR A, GEN_I18N_SICC_COMUN B
		WHERE A.OID_IND_CUAD = B.VAL_OID
		AND B.ATTR_ENTI = 'PRE_INDIC_CUADR'

		<isEqual prepend="AND" property="numeroGrupos" compareValue="-1">
			OID_IND_CUAD IN(4, 5)
		</isEqual>
		
		<isEqual prepend="AND" property="numeroGrupos" compareValue="1">
			OID_IND_CUAD = 3
		</isEqual>
		
		<isGreaterThan prepend="AND" property="numeroGrupos" compareValue="1">
			OID_IND_CUAD IN(1, 2)
		</isGreaterThan>
		
	</select>
	
	<select id="getCondicionPromocionTiposCuadre" resultMap="baseResultOID">
		SELECT 
		A.OID_INDI_CUAD_PROM OID, 
		VAL_I18N DESCRIPCION
		FROM PRE_INDIC_CUADR_PROMO A, GEN_I18N_SICC_COMUN B
		WHERE A.OID_INDI_CUAD_PROM = B.VAL_OID
		AND B.ATTR_ENTI = 'PRE_INDIC_CUADR_PROMO'
	</select>
	
    <select id="getOidOferta" resultClass="long">
    	SELECT PRE_OFER_SEQ.NEXTVAL FROM DUAL
    </select>
	
	<insert id="insertOferta" parameterClass="oferta">
		INSERT INTO PRE_OFERT(
			OID_OFER, 
			COES_OID_ESTR, 
			NUM_OFER, 
			NUM_ORDE, 
			NUM_GRUP, 
			NUM_GRUP_CNDT, 
			NUM_GRUP_COND, 
			VAL_COND_G1_CNDT, 
			VAL_COND_G2_CNDO, 
			NUM_PAQU, 
			NUM_PRIM_POSI_RANK, 
			NUM_ULTI_POSI_RANK, 
			FOPA_OID_FORM_PAGO, 
			SBAC_OID_SBAC, 
			ARGV_OID_ARGU_VENT, 
			ACCE_OID_ACCE, 
			MFCA_OID_CABE, 
			IND_CODI_VENT_GENE, 
			IND_DESP_COMPL, 
			IND_DESP_AUTO, 
			IND_MATR_FACT_GENE, 
			IND_RECU_OBLI, 
			IND_REGI_ESTA_GENE, 
			OCAT_OID_CATA)
		VALUES(
			#oid#,
			#oidEstrategia#,
			NVL((SELECT MAX(POF.NUM_OFER) FROM PRE_OFERT POF WHERE POF.COES_OID_ESTR = #oidEstrategia# AND POF.MFCA_OID_CABE = #oidMatriz#),0) + 1,
			NULL, 
			#numeroGrupos#,
			#numeroGruposCondicionados#,
			#numeroGruposCondicionantes#,
			NULL, 
			NULL, 
			#numeroPaquetes#,
			#condicionantes#,
			#condicionados#,
			#oidFormaPago#,
			#oidSubacceso#,
			(select OID_ARGU_VENT from PRE_ARGUM_VENTA where TIES_OID_TIPO_ESTR = #oidTipoEstrategia#),
			#oidAcceso#,
			#oidMatriz#,
			0,
			#flagDespachoCompleto#,
			#flagDespachoAutomatico#,
			0,
			NULL, 
			0,
			#oidCatalogo#)
	</insert>

    <select id="getOidGrupoOferta" resultClass="long">
    	SELECT PRE_GOFE_SEQ.NEXTVAL FROM DUAL
    </select>

	<insert id="insertGrupoOferta" parameterClass="grupoOferta">
		INSERT INTO PRE_GRUPO_OFERT (
			OID_GRUP_OFER, 
			OFER_OID_OFER, 
			NUM_GRUP, 
			COD_FACT_CUAD, 
			CUES_OID_IND_CUAD_TIPO_ESTR, 
			IND_CNDT, 
			IND_CNDO, 
			IND_GRUP) 
		VALUES(
			#oid#,
			#oidOferta#,
			#numero#,
			TO_NUMBER(#factorCuadre#, '9999999999.99'),
			#oidIndicadorCuadreTipoEstrategia#,
			#flagCondicionante#,
			#flagCondicionado#,
			#flagGrupo#)	
	</insert>
	
	<insert id="insertDetalleOferta" parameterClass="detalleOfertaType">
		INSERT INTO PRE_OFERT_DETAL(
			OID_DETA_OFER, 
			OFER_OID_OFER, 
			PROD_OID_PROD, 
			NUM_LINE_OFER, 
			VAL_TEXT_BREV, 
			NUM_UNID_ESTI, 
			COD_ORIG, 
			VAL_FACT_REPE, 
			NUM_POSI_RANK, 
			IND_PROD_PRIN, 
			IMP_PREC_CATA, 
			IMP_PREC_POSI, 
			IMP_COST_ESTA, 
			IMP_VENT_NETA_ESTI, 
			NUM_PAGI_CATA, 
			OCAT_OID_CATAL, 
			TOFE_OID_TIPO_OFER, 
			CIVI_OID_CICLO_VIDA, 
			CNDP_OID_COND_PROM, 
			FOPA_OID_FORM_PAGO, 
			GOFE_OID_GRUP_OFER, 
			IND_DIGI, 
			IND_IMPR_GP, 
			IND_CODI_VENT_GENE, 
			IND_MATR_FACT_GENE, 
			VAL_POSI_PAGI, 
			VAL_CODI_VENT, 
			VAL_CENT, 
			FEC_ULTI_ACTU, 
			PRECIO_UNITARIO, 
			NUM_PUNT_FIJO, 
			VARI_OID_VARI, 
			PRFI_OID_PROG_FIDE, 
			NUM_ORDE_DETA, 
			IMP_PREC_PUBL, 
			FEC_DIGI)
		VALUES(
			PRE_OFDE_SEQ.NEXTVAL, 
			#oidOferta#,
			#oidProducto#,
			#numeroLinea#,
			#textoBreve#,
			#unidadesEstimadas#,
			'MF', 
			#factorRepeticion#,
			0,
			#flagPrincipal#,
			TO_NUMBER(#precioCatalogo#, '9999999999.99'),
			TO_NUMBER(#precioPosicionamiento#, '9999999999.99'),
			TO_NUMBER(#costoEstandar#, '9999999999.99'),
			TO_NUMBER(#ventaNetaEstimada#, '9999999999.99'),
			#numeroPaginaCatalogo#,
			#oidCatalogo#,
			#oidTipoOferta#,
			4,
			2005,
			#oidFormaPago#,
			#oidGrupo#,
			#flagDigitable#,
			#flagImprimible#,
			0,
			0,
			NULL, 
			NULL, 
			NULL, 
			SYSDATE, 
			TO_NUMBER(#precioUnitario#, '99999999.99'),
			NULL, 
			NULL, 
			NULL, 
			NULL, 
			0,
			SYSDATE)	
	</insert>
	
    <select id="getOidCondicionOferta" resultClass="long">
    	SELECT PRE_POMO_SEQ.NEXTVAL FROM DUAL
    </select>
	
	<insert id="insertCondicionOferta" parameterClass="condicionOferta">
		INSERT INTO PRE_PROMO(
		    OID_PROM, 
		    OFER_OID_OFER, 
		    NUM_COND, 
		    VAL_FACT_CUAD, 
		    ICPR_OID_INDI_CUAD_PROM)
		VALUES(
		    #oid#,
		    #oidOferta#,
		    1,
		    TO_NUMBER(#factorCuadre#, '9999999999.99'),
		    #oidTipoCuadre#)
	</insert>
	
	<insert id="insertRangoPromocion" parameterClass="rangoPromocion">	
		INSERT INTO PRE_RANGO_PROMO
		    (OID_RANG_PROM, 
		    OCAT_OID_CATA, 
		    POMO_OID_PROM, 
		    COD_TIPO_RANG, 
		    NUM_RANG_INTE, 
		    VAL_DESD, 
		    VAL_HAST, 
		    IND_EXCL)
		VALUES(
		    PRE_RAPR_SEQ.NEXTVAL, 
		    #oidCatalogo#, 
		    #oidPromocion#, 
		    #codigoTipoRango#, 
		    #numeroRangoInterno#, 
		    #valorInicial#, 
		    #valorFinal#, 
		    #indicadorExclusion#)
	</insert>
	
	<resultMap id="archivoControlMultihiloMapResult" class="java.util.HashMap">
		<result property="oid" column="OID_ARCN"/>
		<result property="codigoPais" column="COD_PAIS"/>
		<result property="numeroLote" column="NUM_LOTE_INTE"/>
		<result property="tipoDocumento" column="COD_TIPO_DOCU"/>
		<result property="numeroRegistros" column="NUM_REGI"/>
		<result property="indicadorCarga" column="IND_CARG"/>
		<result property="usuDigi" column="USU_DIGI"/>
		<result property="fechaDigi" column="FECHA"/>
		<result property="idProcBatch" column="ID_PROC_BATC"/>
	</resultMap>
	
	<select id="getArchivoControlMultihilo" parameterClass="map" resultMap="archivoControlMultihiloMapResult">
    	SELECT * FROM (
						SELECT OID_ARCN,
						       COD_PAIS,
						       NUM_LOTE_INTE,
						       COD_TIPO_DOCU,
						       NUM_REGI,
						       IND_CARG,
						       USU_DIGI,
						       TO_CHAR(FEC_DIGI,'dd/MM/yyyy HH:MI:SS AM')AS FECHA,
						       ID_PROC_BATC
						  FROM INT_ARCHI_CNTRL
						 ORDER BY NUM_LOTE_INTE DESC, COD_TIPO_DOCU DESC)
		WHERE <![CDATA[ROWNUM <= #numeroFilas#]]>
		
    </select>
    
    <select id="getArchivoControlMultihiloGeneral"  resultMap="archivoControlMultihiloMapResult">
		SELECT OID_ARCN,
		       COD_PAIS,
		       NUM_LOTE_INTE,
		       COD_TIPO_DOCU,
		       NUM_REGI,
		       IND_CARG,
		       USU_DIGI,
		       TO_CHAR(FEC_DIGI,'dd/MM/yyyy HH:MI:SS AM')AS FECHA,
		       ID_PROC_BATC
		  FROM INT_ARCHI_CNTRL
		 ORDER BY NUM_LOTE_INTE DESC, COD_TIPO_DOCU DESC
    </select>
    
    <select id="getArchivoControl" parameterClass="map" resultMap="archivoControlMultihiloMapResult">
		SELECT OID_ARCN,
		       COD_PAIS,
		       NUM_LOTE_INTE,
		       COD_TIPO_DOCU,
		       NUM_REGI,
		       IND_CARG,
		       USU_DIGI,
		       TO_CHAR(FEC_DIGI,'dd/MM/yyyy HH:MI:SS AM')AS FECHA,
		       ID_PROC_BATC
		  FROM INT_ARCHI_CNTRL
		  WHERE OID_ARCN = #id#
    </select>
    
    <insert id="updateArchivoControl" parameterClass="map">
		UPDATE INT_ARCHI_CNTRL SET
        	IND_CARG = #indicadorCarga#
		WHERE OID_ARCN = #id#
	</insert>

	<resultMap id="basHistoLotesMapResult" class="java.util.HashMap">
		<result property="codInte" column="COD_INTE"/>
		<result property="numLote" column="NUM_LOTE"/>
		<result property="inpaInte" column="INPA_INTE"/>
		<result property="desLote" column="DES_LOTE"/>
		<result property="fecIpro" column="FEC_IPRO"/>
		<result property="fecFpro" column="FEC_FPRO"/>
		<result property="reg" column="REG"/>
		<result property="err" column="ERR"/>
		<result property="desErro" column="DES_ERRO"/>		
		<result property="desNombArch" column="DES_NOMB_ARCH"/>
		<result property="desNombHist" column="DES_NOMB_HIST"/>
	</resultMap>
	
	<select id="getBasHistoLotes"  resultMap="basHistoLotesMapResult">
		SELECT INTE_COD_INTE COD_INTE,
	       NUM_LOTE,
	       INPA_COD_INTE INPA_INTE,
	       DES_LOTE,
	       FEC_IPRO,
	       FEC_FPRO,
	       REG_PROC      REG,
	       IND_LOER      ERR,
	       DES_ERRO,
	       DES_NOMB_ARCH,
	       DES_NOMB_HIST
	  FROM BAS_HISTO_LOTES
	 WHERE SIST_COD_SIST = 'OCR'
	   AND ID_PROC_BATC = #idProcBatc#
	 ORDER BY NUM_LOTE DESC, INTE_COD_INTE DESC
    </select>


    <parameterMap id="executeProcesoPEDPedidoInventariadoParams" class="map" >
		<parameter property="codigoConsultora"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPlataforma"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fecha"                   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="identificadorEntrega"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="latitud"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="longitud"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="novedad"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="numeroPedido"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="observacion"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="paisISO"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="pedidoInventariado"      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="tipoEntrega"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>    
    </parameterMap>
    
    
    <procedure id="executeProcesoPEDPedidoInventariado"   parameterMap="executeProcesoPEDPedidoInventariadoParams" >
		{call fac_pkg_proc.ped_pr_actua_datos_ws(?,?,?,?,?,?,?,?,?,?,?,?)}
    </procedure>
    
    <parameterMap id="executeProcesoPEDServicioGenericoParams" class="map" >
		<parameter property="codigoServicio"      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="datoServicio"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="datoServicio2"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="datoServicio3"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="datoServicio4"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="certificado"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRetorno"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="valorRetorno"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="valorRetorno2"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="valorRetorno3"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
	    <parameter property="valorRetorno4"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>    
    </parameterMap>
    
    
    <procedure id="executeProcesoPEDServicioGenerico"   parameterMap="executeProcesoPEDServicioGenericoParams" >
		{call fac_pkg_proc.ped_pr_datos_pedid_ws(?,?,?,?,?,?,?,?,?,?,?)}
    </procedure>
    
	<select id="getNextCorrelativoPedidoRechazadas" resultClass="string">
        SELECT LPAD(PED_PEREC_SEQ.nextval, 8, 0) FROM DUAL
    </select>
    
    <insert id="insertaCabeceraEntradaPedidoRechazado" parameterClass="map">
		INSERT INTO PED_SOLIC_CABEC_WS (
		    NUM_CORR,
		    IND_ACC,
		    OID_SOLI_CABE,
		    COD_CLIE,
		    COD_PERI,
		    MON_DEU,
		    FLAG_DETA,
		    FLAG_ALTE,
		    FLAG_ERRO,
		    FLAG_MENS,
		    FEC_INGR,
		    HOR_INGR)
		VALUES (
		    #correlativo#,
		    #accion#,
		    #oidSicc#,
		    #consultora#,
		    #periodo#,
		    '',
		    '',
		    '',
		    '',
		    '',
		    TO_CHAR(SYSDATE, 'DD/MM/YYYY'),
		    TO_CHAR(SYSTIMESTAMP,'hh24:mi:ss.FF'))
	</insert>
	
	<insert id="insertaDetalleEntradaPedidoRechazado" parameterClass="map">
		INSERT INTO PED_SOLIC_POSIC_WS (
		    NUM_CORR_PED,
		    CODI_VENT,
		    NUM_UNID,
		    NUM_UNID_REAL,
		    NUM_UNID_ATEN,
		    PRE_CATA,
		    POR_DESC,
		    MON_DESC,
		    MON_A_PAGAR,
		    OBS_DETA,
		    OID_DETA,
		    OID_ESTR)
		VALUES (
		    #correlativo#,
		    #cuv#,
		    #unidadesSol#,
		    '',
		    '',
		    '',
		    '',
		    '',
		    '',
		    '',
		    '',
		    '')
	</insert>
	
	<insert id="insertaAlternativosEntradaPedidoRechazado" parameterClass="map">
		INSERT INTO PED_SOLIC_ALTER_WS (
		    NUM_CORR_PED,
		    CUV_ORIG,
		    CUV_ALTE,
		    DES_ALTE,
		    DES_CATA)
		VALUES (
		    #correlativo#,
		    #cuvOriginal#,
		    #cuvAlternativo#,
		    '',
		    '')
	</insert>
	
	<parameterMap id="executeProcesoPEDPedidoRechazadoParams" class="map" >
		<parameter property="correlativo"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	<procedure id="executeProcesoPEDPedidoRechazado"   parameterMap="executeProcesoPEDPedidoRechazadoParams" >
		{call ped_pkg_cuadr_ofert.ped_pr_gener_pedid_ws(?)}
    </procedure>
    
    <resultMap id="pedidosCabeceraRechazadosResult" class="java.util.HashMap">
		<result property="accion" 			column="IND_ACC"/>
		<result property="oidSicc" 			column="OID_SOLI_CABE"/>
		<result property="consultora"   	column="COD_CLIE"/>
		<result property="periodo"			column="COD_PERI"/>
		<result property="deuda" 			column="MON_DEU"/>
		<result property="flagDetalle"	    column="FLAG_DETA"/>
		<result property="flagAlternativos" column="FLAG_ALTE"/>
		<result property="flagErrores"		column="FLAG_ERRO"/>
		<result property="flagMensajes" 	column="FLAG_MENS"/>
	</resultMap>
    <select id="getPedidosCabeceraRechazados" parameterClass="java.util.Map" resultMap="pedidosCabeceraRechazadosResult">
		SELECT IND_ACC,
		       OID_SOLI_CABE,
		       COD_CLIE,
		       COD_PERI,
		       MON_DEU,
		       FLAG_DETA,
		       FLAG_ALTE,
		       FLAG_ERRO,
		       FLAG_MENS
		  FROM PED_SOLIC_CABEC_WS
		 WHERE NUM_CORR = #correlativo#
	</select>
	
	<resultMap id="pedidosDetalleRechazadosResult" class="java.util.HashMap">
		<result property="cuv"   			column="CODI_VENT"/>
		<result property="unidades"			column="NUM_UNID"/>
		<result property="unidadesReal" 	column="NUM_UNID_REAL"/>
		<result property="unidadesAtender" 	column="NUM_UNID_ATEN"/>
		<result property="precioCatalogo"   column="PRE_CATA"/>
		<result property="porcentajeDesc"	column="POR_DESC"/>
		<result property="montoDesc" 		column="MON_DESC"/>
		<result property="montoAPagar"	    column="MON_A_PAGAR"/>
		<result property="observaciones"   	column="OBS_DETA"/>
		<result property="oidOferta"		column="OID_DETA"/>
		<result property="oidEstrategia" 	column="OID_ESTR"/>
	</resultMap>
	<select id="getPedidosDetalleRechazados" parameterClass="java.util.Map" resultMap="pedidosDetalleRechazadosResult">
		SELECT CODI_VENT,
		       NUM_UNID,
		       NUM_UNID_REAL,
		       NUM_UNID_ATEN,
		       PRE_CATA,
		       POR_DESC,
		       MON_DESC,
		       MON_A_PAGAR,
		       OBS_DETA,
		       OID_DETA,
		       OID_ESTR
		  FROM PED_SOLIC_POSIC_WS
		 WHERE NUM_CORR_PED = #correlativo#
	</select>
	
	<resultMap id="pedidosAlternativosRechazadosResult" class="java.util.HashMap">
		<result property="cuvOriginal"   	column="CUV_ORIG"/>
		<result property="cuvAlternativo"	column="CUV_ALTE"/>
		<result property="descAlternativo" 	column="DES_ALTE"/>
		<result property="catalogo"	    	column="DES_CATA"/>
	</resultMap>
	<select id="getPedidosAlternativosRechazados" parameterClass="java.util.Map" resultMap="pedidosAlternativosRechazadosResult">
		SELECT CUV_ORIG,
		       CUV_ALTE,
		       DES_ALTE,
		       DES_CATA
		  FROM PED_SOLIC_ALTER_WS
		 WHERE NUM_CORR_PED = #correlativo#
	</select>
	
	<resultMap id="pedidosErroresRechazadosResult" class="java.util.HashMap">
		<result property="codigo"   	column="COD_ERROR"/>
		<result property="descrip"	    column="DES_ERROR"/>
	</resultMap>
	<select id="getPedidosErroresRechazados" parameterClass="java.util.Map" resultMap="pedidosErroresRechazadosResult">
		SELECT COD_ERROR,
		       DES_ERROR
		  FROM PED_SOLIC_ERROR_WS
		 WHERE NUM_CORR_PED = #correlativo#
	</select>
	
	<resultMap id="pedidosMensajesRechazadosResult" class="java.util.HashMap">
		<result property="codigo"   	column="COD_MENSA"/>
		<result property="texto"	    column="DES_MENSA"/>
	</resultMap>
	<select id="getPedidosMensajesRechazados" parameterClass="java.util.Map" resultMap="pedidosMensajesRechazadosResult">
		SELECT COD_MENSA,
		       DES_MENSA
		  FROM PED_SOLIC_MENSA_WS
		 WHERE NUM_CORR_PED = #correlativo#
	</select>

        	<resultMap id="getListaZonasByCampanaFechaFacturacionResult" class="java.util.HashMap">                     
    	<result property="oidZona" 		column="zzon_oid_zona" />
  	</resultMap>
	<select id="getListaZonasByCampanaFechaFacturacion" parameterClass="java.util.Map" resultMap="getListaZonasByCampanaFechaFacturacionResult">
		SELECT distinct zzon_oid_zona
		  FROM ped_solic_cabec p
		 WHERE p.fec_prog_fact = TO_DATE(#fechaFacturacion#,'DD/MM/YYYY')
		   AND p.grpr_oid_grup_proc = 1
		   AND p.perd_oid_peri = (SELECT cp.oid_peri
		                            FROM seg_perio_corpo sp,
		                                 cra_perio       cp
		                           WHERE cp.peri_oid_peri = sp.oid_peri
		                             AND cod_peri = #codigoPeriodo#)
	</select>
	
	<resultMap id="getListaPedidosByZonasCampanaFechaFacturacionResult" class="java.util.HashMap">                     
    	<result property="oidPedido" 		column="oid_soli_cabe" />
  	</resultMap>
	<select id="getListaPedidosByZonasCampanaFechaFacturacion" parameterClass="java.util.Map" resultMap="getListaPedidosByZonasCampanaFechaFacturacionResult">
		SELECT p.oid_soli_cabe
		  FROM ped_solic_cabec p
		 WHERE p.fec_prog_fact = TO_DATE(#fechaFacturacion#,'DD/MM/YYYY')
		   and p.zzon_oid_zona = #oidZona#
		   AND p.grpr_oid_grup_proc = 1
		   AND p.perd_oid_peri = (SELECT cp.oid_peri
		                            FROM seg_perio_corpo sp,
		                                 cra_perio       cp
		                           WHERE cp.peri_oid_peri = sp.oid_peri
		                             AND cod_peri = #codigoPeriodo#)
	</select>
	
	<parameterMap id="executeCuadrarOfertasPedidoZonaMultihiloParams" class="map">
        <parameter property="oidPedido"				jdbcType="VARCHAR" mode="IN"/>
    </parameterMap>
    <procedure id="executeCuadrarOfertasPedidoZonaMultihilo" parameterMap="executeCuadrarOfertasPedidoZonaMultihiloParams">
        {call ped_pkg_cuadr_ofert.ped_pr_cuadr_ofert(?)}
    </procedure>
    
    <parameterMap id="executeMontoMinimoPedidoZonaMultihiloParams" class="map">
        <parameter property="oidPedido"				jdbcType="VARCHAR" mode="IN"/>
        <parameter property="codigoUsuario"				jdbcType="VARCHAR" mode="IN"/>
    </parameterMap>
    
    <procedure id="executeMontoMinimoPedidoZonaMultihilo" parameterMap="executeMontoMinimoPedidoZonaMultihiloParams">
        {call ped_pkg_cuadr_ofert.ped_pr_monto_minim(?,?)}
    </procedure>
    
    <procedure id="executeMontoMaximoPedidoZonaMultihilo" parameterMap="executeMontoMinimoPedidoZonaMultihiloParams">
        {call ped_pkg_cuadr_ofert.ped_pr_monto_maxim(?,?)}
    </procedure>
    
    <procedure id="executeRecuperacionObligatoriaPedidoZonaMultihilo" parameterMap="executeCuadrarOfertasPedidoZonaMultihiloParams">
        {call ped_pkg_cuadr_ofert.ped_pr_recup_oblig(?)}
    </procedure>
    
    <procedure id="executeValidarAgregadosMavPedidoZonaMultihilo" parameterMap="executeCuadrarOfertasPedidoZonaMultihiloParams">
        {call MAV_PKG_PROCE.MAV_PR_VALID_AGREG(?)}
    </procedure>
	
	<update id="updateRangoOfertaFactorRepeticion" parameterClass="java.util.Map"> 
	    UPDATE PRE_NX_OFERT_RANGO
	    SET VAL_PREC_UNIT = TO_NUMBER(#precioUnitario#, '999999999999.9999'),
	        COD_USUA = #codigoUsuario#
	    WHERE OID_NX_OFER_RANG = #oidRango#
    </update>
    
    <select id="getPrecioRangoOfertaFactorRepeticion" parameterClass="java.util.Map" resultClass="java.math.BigDecimal">    
		SELECT VAL_PREC_UNIT
		FROM PRE_NX_OFERT_RANGO
		WHERE OID_NX_OFER_RANG = #oidRango#
    </select>
    
    <update id="updateRangoOfertaConcursos" parameterClass="java.util.Map">    
		UPDATE PRE_NIVEL_OFERT_RANGO
		SET
		    VAL_RANG_INFE = TO_NUMBER(#rangoInferior#, '999999999.99'), 
			VAL_RANG_SUPE = TO_NUMBER(#rangoSuperior#, '999999999.99'),
		    VAL_PREC_UNIT = TO_NUMBER(#precioUnitario#, '999999999999.9999'), 
		    COD_USUA = #codigoUsuario#
		WHERE 
		    OID_NIVE_OFER_RANG = #oidRango#
    </update>
    
    <select id="getPrecioRangoOfertaConcursos" parameterClass="java.util.Map" resultClass="java.math.BigDecimal">    
		SELECT VAL_PREC_UNIT
		FROM PRE_NIVEL_OFERT_RANGO
		WHERE OID_NIVE_OFER_RANG = #oidRango#
    </select>
    
    <insert id="insertOfertaConcursosElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NIVEL_OFERT_ELIMI(
                OID_NIVE_OFER, 
				OCAT_OID_CATA, 
				PERD_OID_PERI, 
				NUM_PAGI, 
				TIP_NIVE, 
				TIP_CUAD, 
				COD_USUA, 
				FEC_DIGI, 
				NUM_LOTE_PLAN,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NIVE_OFER, 
				OCAT_OID_CATA, 
				PERD_OID_PERI, 
				NUM_PAGI, 
				TIP_NIVE, 
				TIP_CUAD, 
				COD_USUA, 
				FEC_DIGI, 
				NUM_LOTE_PLAN,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NIVEL_OFERT X
        WHERE X.OID_NIVE_OFER = #oidOferta#
    </insert>
    
    <insert id="insertAllCriteriosOfertaConcursosElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NIVEL_OFERT_CRITE_ELIMI(
                OID_NIVE_OFER_CRITE, 
				NIOF_OID_NIVE_OFER, 
				TIP_RANG, 
				OCAT_OID_CATA, 
				NUM_PAGI_DESD, 
				NUM_PAGI_HAST, 
				PROD_OID_PROD, 
				IND_EXCL, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NIVE_OFER_CRITE, 
				NIOF_OID_NIVE_OFER, 
				TIP_RANG, 
				OCAT_OID_CATA, 
				NUM_PAGI_DESD, 
				NUM_PAGI_HAST, 
				PROD_OID_PROD, 
				IND_EXCL, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NIVEL_OFERT_CRITE X
        WHERE X.NIOF_OID_NIVE_OFER = #oidOferta#
        
    </insert>
    
    <insert id="insertAllRangosOfertaConcursosElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NIVEL_OFERT_RANGO_ELIMI(
                OID_NIVE_OFER_RANG, 
				NIOF_OID_NIVE_OFER, 
				VAL_RANG_INFE, 
				VAL_RANG_SUPE, 
				VAL_PREC_UNIT, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NIVE_OFER_RANG, 
				NIOF_OID_NIVE_OFER, 
				VAL_RANG_INFE, 
				VAL_RANG_SUPE, 
				VAL_PREC_UNIT, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NIVEL_OFERT_RANGO X
        WHERE X.NIOF_OID_NIVE_OFER = #oidOferta#
    </insert>
    
    <insert id="insertAllGratisOfertaConcursosElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NIVEL_OFERT_GRATI_ELIMI(
                OID_NIVE_OFER_GRAT, 
				NIOF_OID_NIVE_OFER_RANG, 
				OID_DETA_OFER, 
				VAL_UNID, 
				NUM_SECU, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NIVE_OFER_GRAT, 
				NIOF_OID_NIVE_OFER_RANG, 
				OID_DETA_OFER, 
				VAL_UNID, 
				NUM_SECU, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NIVEL_OFERT_GRATI X
        WHERE X.NIOF_OID_NIVE_OFER_RANG IN
		               (SELECT OID_NIVE_OFER_RANG
		                  FROM PRE_NIVEL_OFERT_RANGO
		                 WHERE NIOF_OID_NIVE_OFER = #oidOferta#)
    </insert>
    
    <insert id="insertAllProductosOfertaConcursosElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NIVEL_OFERT_PRODU_ELIMI(
                OID_NIVE_OFER_PROD, 
				NIOF_OID_NIVE_OFER, 
				OID_DETA_OFER, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NIVE_OFER_PROD, 
				NIOF_OID_NIVE_OFER, 
				OID_DETA_OFER, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NIVEL_OFERT_PRODU X
        WHERE X.NIOF_OID_NIVE_OFER = #oidOferta#
    </insert>
    
    <insert id="insertOfertaFactorRepeticionElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NX_OFERT_ELIMI(
                OID_NX_OFER, 
				OCAT_OID_CATA, 
				PERD_OID_PERI, 
				NUM_PAGI, 
				TIP_NIVE, 
				TIP_CUAD, 
				COD_USUA, 
				FEC_DIGI, 
				NUM_LOTE_PLAN,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NX_OFER, 
				OCAT_OID_CATA, 
				PERD_OID_PERI, 
				NUM_PAGI, 
				TIP_NIVE, 
				TIP_CUAD, 
				COD_USUA, 
				FEC_DIGI, 
				NUM_LOTE_PLAN,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NX_OFERT X
        WHERE X.OID_NX_OFER = #oidOferta#
    </insert>
    
    <insert id="insertAllCriteriosOfertaFactorRepeticionElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NX_OFERT_CRITE_ELIMI(
                OID_NX_OFER_CRITE, 
				NIOF_OID_NX_OFER, 
				TIP_RANG, 
				OCAT_OID_CATA, 
				NUM_PAGI_DESD, 
				NUM_PAGI_HAST, 
				PROD_OID_PROD, 
				IND_EXCL, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NX_OFER_CRITE, 
				NIOF_OID_NX_OFER, 
				TIP_RANG, 
				OCAT_OID_CATA, 
				NUM_PAGI_DESD, 
				NUM_PAGI_HAST, 
				PROD_OID_PROD, 
				IND_EXCL, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NX_OFERT_CRITE X
        WHERE X.NIOF_OID_NX_OFER = #oidOferta#
    </insert>
    
    <insert id="insertAllRangosOfertaFactorRepeticionElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NX_OFERT_RANGO_ELIMI(
                OID_NX_OFER_RANG, 
				NIOF_OID_NX_OFER, 
				VAL_FACT_REPE, 
				VAL_PREC_UNIT, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NX_OFER_RANG, 
				NIOF_OID_NX_OFER, 
				VAL_FACT_REPE, 
				VAL_PREC_UNIT, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NX_OFERT_RANGO X
        WHERE X.NIOF_OID_NX_OFER = #oidOferta#
    </insert>
    
    <insert id="insertAllGratisOfertaFactorRepeticionElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NX_OFERT_GRATI_ELIMI(
                OID_NX_OFER_GRAT, 
				NIOF_OID_NX_OFER_RANG, 
				OID_DETA_OFER, 
				VAL_UNID, 
				NUM_SECU, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NX_OFER_GRAT, 
				NIOF_OID_NX_OFER_RANG, 
				OID_DETA_OFER, 
				VAL_UNID, 
				NUM_SECU, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NX_OFERT_GRATI X
        WHERE X.NIOF_OID_NX_OFER_RANG IN
		               (SELECT OID_NX_OFER_RANG
		                  FROM PRE_NX_OFERT_RANGO
		                 WHERE NIOF_OID_NX_OFER = #oidOferta# )
    </insert>
    
    <insert id="insertAllProductosOfertaFactorRepeticionElim" parameterClass="java.util.Map">  
        INSERT INTO PRE_NX_OFERT_PRODU_ELIMI(
                OID_NX_OFER_PROD, 
				NIOF_OID_NX_OFER, 
				OID_DETA_OFER, 
				COD_USUA, 
				FEC_DIGI,
				COD_USUA_MODI,
				FEC_MODI)
        SELECT  OID_NX_OFER_PROD, 
				NIOF_OID_NX_OFER, 
				OID_DETA_OFER, 
				COD_USUA, 
				FEC_DIGI,
				#codigoUsuario#,
				SYSDATE
        FROM PRE_NX_OFERT_PRODU X
        WHERE X.NIOF_OID_NX_OFER = #oidOferta#
    </insert>
    
    <resultMap id="productoAsociadoParaGrupoMapResult" class="java.util.HashMap">
		<result property="oidProducto" 			column="PROD_OID_PROD"/>
		<result property="oidTipoOferta" 		column="OID_TIPO_OFER"/>
		<result property="codSap" 				column="COD_SAP"/>                                                                      
	    <result property="desSap" 				column="DES_PROD"/>
	    <result property="codTipoOferta" 		column="COD_TIP_OFER"/>
	    <result property="desTipoOferta" 		column="DES_TIPO_OFER"/>
	    <result property="oidCatalogo" 	   	    column="OID_CATA"/>
	    <result property="codCatalogo" 	   	    column="COD_CATA"/>
	    <result property="desCatalogo" 			column="DES_CATA"/>
    	<result property="numPagina" 			column="NUM_PAGI_CATA"/>
    	<result property="numUnidEstim" 	   	column="NUM_UNID_ESTI"/>
    	<result property="preCatalogo" 			column="IMP_PREC_CATA"/>
	    <result property="impVenNetaEstim" 	   	column="IMP_VENT_NETA_ESTI"/>
    	<result property="preContable" 			column="IMP_PREC_POSI"/>
    	<result property="impCosteEsta" 	   	column="VAL_COST_ESTA"/>
	    <result property="indDigitable" 	   	column="IND_DIGI"/>
	    <result property="indImprimible" 	   	column="IND_IMPR_GP"/>
	    <result property="facRepeticion" 		column="FAC_REPETICION"/>
	    <result property="valTextoBreve" 	   	column="VAL_TEXT_BREV"/>
	</resultMap>
    <select id="getProductosAsociadosParaGrupo" parameterClass="map" resultMap="productoAsociadoParaGrupoMapResult">	
		SELECT
		A.PROD_OID_PROD, 
		F.OID_TIPO_OFER,
		D.COD_SAP COD_SAP,
		E.VAL_I18N DES_PROD,
		F.COD_TIPO_OFER COD_TIP_OFER,
		l.val_i18n DES_TIPO_OFER, 
		G.OID_CATA,
		G.COD_CATA,
		G.DES_CATA,
		A.NUM_PAGI_CATA,
		A.NUM_UNID_ESTI,
		A.IMP_PREC_CATA,
		A.IMP_VENT_NETA_ESTI,
		A.IMP_PREC_POSI,
		A.VAL_COST_ESTA,
		0 IND_DIGI,
		0 IND_IMPR_GP,
		0 FAC_REPETICION,
		'' VAL_TEXT_BREV
		FROM PRE_ESTIM_VENTA A,
		       CRA_PERIO B,
		       SEG_PERIO_CORPO C,
		       MAE_PRODU D,
		       GEN_I18N_SICC_PAIS E,
		       PRE_TIPO_OFERT F,
		       PRE_CATAL G,
		       gen_i18n_sicc_comun l
		WHERE A.PERD_OID_PERI = B.OID_PERI
		AND B.PERI_OID_PERI = C.OID_PERI
		AND A.TOFE_OID_TIPO_OFER = F.OID_TIPO_OFER
		AND A.PROD_OID_PROD = D.OID_PROD
		AND D.OID_PROD = E.VAL_OID
		AND E.ATTR_ENTI = 'MAE_PRODU'
		AND l.attr_enti = 'PRE_TIPO_OFERT'
        AND l.val_oid = f.oid_tipo_ofer
		AND A.OCAT_OID_CATA = G.OID_CATA
		AND C.COD_PERI = #codigoPeriodo#

		<isNotEmpty prepend="AND" property="codigoSap">
			D.COD_SAP = #codigoSap#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="descripcion">
			E.VAL_I18N LIKE #descripcion#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="paginaDesde">
			A.NUM_PAGI_CATA >= #paginaDesde#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="paginaHasta">
			<![CDATA[
			A.NUM_PAGI_CATA <= #paginaHasta#
			]]>		
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="oidCatalogo">
			A.OCAT_OID_CATA = #oidCatalogo#
		</isNotEmpty>
	</select>
	
	  <insert id="insertaTemporalCargaMasivaMontoMinimo" parameterClass="java.util.Map">
			INSERT INTO PED_TEMPO_CARG_MONT_MIN(NUM_FILA, COD_ZONA, VAL_NIV1, VAL_NIV2, VAL_NIV3, MONT_NOMI, TIP_CLIE, MEN_ERRO, COD_USUA, EST_REGI)
			VALUES (#numeroFila#, #codigoZona#, #nivelV1#, #nivelV2#, #nivelV3#, #montoNomimal#, UPPER(#tipoCliente#), '', #codigoUsuario#, '1')
    </insert>
    
     <insert id="deleteTemporalCargaMasivaMontoMinimo" parameterClass="string">
			DELETE FROM PED_TEMPO_CARG_MONT_MIN WHERE cod_usua = #value#
    </insert>
    
    <resultMap id="cargaMasivaMontoMinimoResult" 	class="java.util.HashMap">
	    <result property="numeroFila" 					column="NUM_FILA"  />
	    <result property="codigoZona" 					column="COD_ZONA"  />
	    <result property="valorN1" 						column="VAL_NIV1"  />
	    <result property="valorN2"						column="VAL_NIV2"  />
	    <result property="valorN3"						column="VAL_NIV3"  />
	    <result property="montoNominal"					column="MONT_NOMI"  />
	    <result property="tipoCliente"					column="TIP_CLIE"  />
	    <result property="mensajeError" 				column="MEN_ERRO" />
	</resultMap>
	
	<select id="getCargaMasivaMontoMinimoList"  parameterClass="java.util.Map" resultMap="cargaMasivaMontoMinimoResult" >
		SELECT NUM_FILA, COD_ZONA, VAL_NIV1, VAL_NIV2, VAL_NIV3, MONT_NOMI, TIP_CLIE, MEN_ERRO 
	      FROM PED_TEMPO_CARG_MONT_MIN
    	 WHERE est_regi = 0
        <isNotEmpty prepend="AND" property="codigoUsuario">        
			cod_usua = #codigoUsuario#
    	</isNotEmpty>
	</select>
	
	<parameterMap id="paramExecuteValidarCargaMasivaMontoMinimo" class="map">
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" 	javaType="java.lang.String" 		mode="IN"/>
    </parameterMap>
    
	<procedure id="executeValidarCargaMasivaMontoMinimo" parameterMap="paramExecuteValidarCargaMasivaMontoMinimo" >
		{call PED_PKG_PROCE.ped_pr_valid_carga_masiv_mtmin( ?)}
	</procedure>
	
	<parameterMap id="paramExecuteActualizarCargaMasivaMontoMinimo" class="map">
		<parameter property="codigoUsuario"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    
	<procedure id="executeActualizarCargaMasivaMontoMinimo" parameterMap="paramExecuteActualizarCargaMasivaMontoMinimo" >
		{call PED_PKG_PROCE.ped_pr_actua_carga_masiv_mtmin( ?)}
	</procedure>
	
    <update id="updateTipoCambio" parameterClass="map">
		UPDATE PRE_OFERT_DETAL POD
		SET
		POD.IMP_PREC_CATA = ROUND((POD.IMP_PREC_CATA/TO_NUMBER(#tasaCambioActual#, '999999.999999'))*TO_NUMBER(#tasaCambioNueva#, '999999.999999'), #numeroDecimales#), 
		POD.PRECIO_UNITARIO = ROUND(((POD.IMP_PREC_CATA/TO_NUMBER(#tasaCambioActual#, '999999.999999'))*TO_NUMBER(#tasaCambioNueva#, '999999.999999'))/POD.VAL_FACT_REPE, #numeroDecimales#),
		POD.IMP_PREC_POSI = ROUND((POD.IMP_PREC_POSI/TO_NUMBER(#tasaCambioActual#, '999999.999999'))*TO_NUMBER(#tasaCambioNueva#, '999999.999999'), #numeroDecimales#),
		POD.IMP_VENT_NETA_ESTI = ROUND((POD.IMP_VENT_NETA_ESTI/TO_NUMBER(#tasaCambioActual#, '999999.999999'))*TO_NUMBER(#tasaCambioNueva#, '999999.999999'), #numeroDecimales#),
		POD.IMP_COST_ESTA = DECODE(POD.IMP_COST_ESTA, null, 0, 0, 0,
			ROUND((POD.IMP_COST_ESTA/TO_NUMBER(#tasaCambioActual#, '999999.999999'))*TO_NUMBER(#tasaCambioNueva#, '999999.999999'), #numeroDecimales#))		
		WHERE  POD.OID_DETA_OFER IN(
		    SELECT
		    PD.OID_DETA_OFER 
		    FROM PRE_MATRI_FACTU_CABEC MC, PRE_OFERT PO, PRE_OFERT_DETAL PD
		    WHERE MC.OID_CABE =  PO.MFCA_OID_CABE
		    AND PO.OID_OFER = PD.OFER_OID_OFER
		    AND MC.PERD_OID_PERI = #oidPeriodo#
		)
    </update>
    
    <update id="updateTipoCambioConcursos" parameterClass="map">
		UPDATE PRE_NIVEL_OFERT_RANGO UPDT
		SET UPDT.VAL_PREC_UNIT = ROUND((UPDT.VAL_PREC_UNIT/TO_NUMBER(#tasaCambioActual#, '999999.999999')) * TO_NUMBER(#tasaCambioNueva#, '999999.999999'), #numeroDecimales#)
		WHERE UPDT.OID_NIVE_OFER_RANG IN(
		    SELECT PNR.OID_NIVE_OFER_RANG
		    FROM PRE_NIVEL_OFERT PNO, PRE_NIVEL_OFERT_RANGO PNR 
		    WHERE PNO.OID_NIVE_OFER = PNR.NIOF_OID_NIVE_OFER
		    AND PNO.PERD_OID_PERI = #oidPeriodo#
		    AND PNR.VAL_PREC_UNIT > 0)
    </update>
    
    <update id="updateTipoCambioNX" parameterClass="map">
		UPDATE PRE_NX_OFERT_RANGO UPDT
		SET UPDT.VAL_PREC_UNIT = ROUND((UPDT.VAL_PREC_UNIT/TO_NUMBER(#tasaCambioActual#, '999999.999999')) * TO_NUMBER(#tasaCambioNueva#, '999999.999999'), #numeroDecimales#)  
		WHERE UPDT.OID_NX_OFER_RANG IN(
		    SELECT POR.OID_NX_OFER_RANG 
		    FROM PRE_NX_OFERT PNO, PRE_NX_OFERT_RANGO POR
		    WHERE PNO.OID_NX_OFER = POR.NIOF_OID_NX_OFER
		    AND PNO.PERD_OID_PERI = #oidPeriodo#
		    AND POR.VAL_PREC_UNIT > 0)
    </update>
    
    <parameterMap id="executeCambiarPedidoGP1aGP3Params" class="map" >
		<parameter property="codigoPais"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFacturacion"	  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	   	<parameter property="codigoPeriodo"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>   
    </parameterMap>
    
	<procedure id="executeCambiarPedidoGP1aGP3" parameterMap="executeCambiarPedidoGP1aGP3Params">
        {call PED_PKG_CUADR_OFERT.PED_PR_CAMBI_GP1_GP3(?, ?, ?)}
    </procedure>
       
    <parameterMap id="executeEjecutarProcesosEspecialesParams" class="map" >
		<parameter property="codigoPais"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/> 
	    <parameter property="fechaFacturacion"	  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	   	<parameter property="codigoUsuario"	      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>   
    </parameterMap>
    
	<procedure id="executeEjecutarProcesosEspeciales" parameterMap="executeEjecutarProcesosEspecialesParams">
        {call OCR_SOLIC_PEDIDOS.OCR_PR_COMP_MONT_MINIMO(?, ?, ?, ?)}
    </procedure>
    
</sqlMap>