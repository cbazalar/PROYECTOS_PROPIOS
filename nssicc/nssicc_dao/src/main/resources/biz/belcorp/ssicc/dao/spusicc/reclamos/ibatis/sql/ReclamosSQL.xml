<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="spusicc.reclamos.ReclamosSQL">
 
  <typeAlias alias="reclamos" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.Reclamos"/>
  <typeAlias alias="boletaRecojoCabecera" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.BoletaRecojoCabecera"/>
  <typeAlias alias="boletaRecojoDetalle" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.BoletaRecojoDetalle"/>
  <typeAlias alias="boletaRecojoNoExitosa" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.BoletaRecojoNoExitosa"/>
  
  <typeAlias alias="reclamoDigitadoCabecera" type="biz.belcorp.ssicc.dao.model.ReclamoDigitadoCabecera"/>
  <typeAlias alias="reclamoDigitadoDetalle" type="biz.belcorp.ssicc.dao.model.ReclamoDigitadoDetalle"/>                                                   
  <typeAlias alias="comboBase" type="biz.belcorp.ssicc.dao.sisicc.model.Base"/>
  <typeAlias alias="consultoraLabelValue"  type="biz.belcorp.ssicc.dao.model.LabelValueCDR"/>
  <typeAlias alias="datosConsultora"       type="biz.belcorp.ssicc.dao.model.DatosConsultora"/>
    
  <typeAlias alias="cabeceraCDRDigitadas" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.CabecerasCDRDigitadas"/>
    <typeAlias alias="detallesCDRDigitadas" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.DetallesCDRDigitadas"/>
  
<typeAlias alias="codigoVentaOpera" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.CodigoVentaOpera"/>

<typeAlias alias="produtosFFNNEE" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.ProdutosFFNNEE"/>

<typeAlias alias="detallePedidosCDR" type="biz.belcorp.ssicc.dao.model.LabelPedidosValue"/>

<typeAlias alias="parametrosOperacionesReclamos" type="biz.belcorp.ssicc.dao.model.ParametrosOperacionesReclamos"/>

	<typeAlias alias="cronogramaBR" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.CronogramaBR"/>
	
  <typeAlias alias="comboOperaciones" type="biz.belcorp.ssicc.dao.sisicc.model.OperacionesResultado"/>
	
  <typeAlias alias="motDevDet" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.MotivoDevolucionDet"/>
  <typeAlias alias="motDev" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.MotivoDevolucion"/>
<typeAlias alias="datosCuv" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.DatosCuv"/>

  <typeAlias alias="listaBlancaProductos" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.ListaBlancaProductos"/>
  
  <typeAlias alias="operacionCDRUsuario" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.OperacionCDRUsuario"/>
  <typeAlias alias="productoAgregacion" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.ProductoAgregacion"/>
	
  <typeAlias alias="regionZonaBoletaRecojoInteligente" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.RegionZonaBoletaRecojoInteligente"/>
  
  <typeAlias alias="operacionReclamo" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.OperacionReclamo"/>
  <typeAlias alias="tipoOperacion" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.TipoOperacion"/>
    
	<resultMap id="reclamoMatrizResult" class="boletaRecojoDetalle">
		<result property="codigoVenta"             column="VAL_CODI_VENT"/>                  	   
		<result property="precio"                  column="PRECIO_UNITARIO"/>           
		<result property="precioContable"          column="IMP_PREC_POSI"/>                  
		<result property="codigoSAP"               column="COD_SAP"/>                                  
		<result property="descripcionProducto"     column="VAL_I18N"/>                             
		<result property="idTipoOferta"            column="OID_TIPO_OFERTA"/>                  				
		<result property="idProducto"              column="OID_PROD"/>                                 
		<result property="idMatrizFacturacion"     column="OID_MATR_FACT"/>                             
		<result property="idOperacionReclamo"      column="OID_SOLI_POSI"/>                                    
		<result property="idSolicitud"             column="OID_CONCU"/>                                   
		<result property="idParametroNivel"        column="OID_NIVEL"/>                             
		<result property="idLoteArticulo"          column="OID_LOTE"/>                                    
		<result property="idTipoConcurso"          column="OID_TIPO_CONCU"/>                                    
		<result property="idDetalleOferta"         column="OID_DETA_OFER"/>                             
		<result property="idFormaPago"             column="OID_FORMA_PAGO"/> 
	</resultMap>
	
	<resultMap id="reclamoPremioResult" class="boletaRecojoDetalle">
		<result property="codigoVenta"             column="COD_VENT_FICT"/>                  	   
		<result property="precio"                  column="FACTURA"/>           
		<result property="precioContable"          column="CONTABLE"/>                  
		<result property="codigoSAP"               column="COD_SAP"/>                                  
		<result property="descripcionProducto"     column="VAL_I18N"/>                             
		<result property="idTipoOferta"            column="OID_TIPO_OFERTA"/>                  				
		<result property="idProducto"              column="OID_PROD"/>                                 
		<result property="idMatrizFacturacion"     column="OID_MATR_FACT"/>                             
		<result property="idOperacionReclamo"      column="OID_SOLI_POSI"/>                                    
		<result property="idSolicitud"             column="OID_CONCU"/>                                   
		<result property="idParametroNivel"        column="OID_NIVEL"/>                             
		<result property="idLoteArticulo"          column="OID_LOTE"/>                                    
		<result property="idTipoConcurso"          column="OID_TIPO_CONCU"/>                                    
		<result property="idDetalleOferta"         column="OID_DETA_OFER"/>                             
		<result property="idFormaPago"             column="OID_FORMA_PAGO"/>
	</resultMap>
	
	<resultMap id="datosConsultoraResult" class="datosConsultora">                                      
	<result property="codigoCliente"	   column="codigoCliente"/>
	<result property="nombreCliente"       column="nombreCliente"/>      
	<result property="zona"   			   column="zona"/>                    
	<result property="nombreManager"       column="nombreManager"/>                   
	</resultMap>

    <resultMap id="baseResult"          class="baseGenerico">
    	<result property="codigo" 		column="CODIGO" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>

  <resultMap id="reclamosResult" class="reclamos">                                      
    <result property="id"					column="ID"		/>
    <result property="codigoOperacion"      column="COD_OPER_HOMOL" />      
    <result property="codigoPais"           column="COD_PAIS" />                    
    <result property="descripcion"          column="DES_OPER_HOMOL" />              
    <result property="estado"           	column="EST_REG" />                     
  </resultMap>                                                                          

	<resultMap id="cabecerasReclamosResult" class="boletaRecojoCabecera">                                      
		<result property="boletaRecojo"	   column="codigoBR"/>
		<result property="numeroRecojo"    column="NumeroBR"/>      
		<result property="codigoCliente"   column="cod_clie"/>                    
		<result property="region"          column="region"/>              
		<result property="zona"	           column="zona"/>                      
		<result property="periodoProceso"  column="periodo"/>
		<result property="motivoNoRecojo1" column="MotivoNoRecojo1"/>
		<result property="motivoNoRecojo2" column="MotivoNoRecojo2"/>      
		<result property="cierreAuto"      column="ind_cier_auto"/>
		<result property="cargoTotal"      column="imp_cargo"/>       
		<result property="abonoTotal"      column="imp_abono"/>
		<result property="aprueba"         column="APRUEBA"/>
		<result property="rechazo"         column="RECHAZA"/>      
	</resultMap> 
	
	<resultMap id="detallesReclamosResult" class="boletaRecojoDetalle">                                      
		<result property="codigoVenta" 			column="CUV"/>
		<result property="descripcionProducto"  column="DESCRIPCION_PRODUCTO"/>      
		<result property="idCabeceraReclamo" 	column="NRO_CDR"/>                    
		<result property="idSolicitud"   		column="NRO_DESPACHO"/>              
		<result property="periodoDiscrepante" 	column="PERIODO_REFERENCIA"/>                      
		<result property="codigoAntiguo" 		column="CODIGO_SAP"/>
		<result property="unidadesReclamadas" 	column="RECLAMADAS"/>
		<result property="unidadesRecogidas" 	column="RECOGIDAS"/>      
		<result property="unidadesEliminadas" 	column="ELIMINADAS"/>
		<result property="cargo" 				column="CARGO"/>       
		<result property="abono"               	column="ABONO"/>		      
	</resultMap> 		                                                       

	<resultMap id="cabeceraRecojoResult" class="boletaRecojoCabecera">                                      
		<result property="boletaRecojo"	   			column="codigoBR"/>
		<result property="numeroRecojo"    			column="NumeroBR"/>      
		<result property="estado"   				column="gestion"/>                    
		<result property="descripcionResultado"     column="resultado"/>                                    
		<result property="periodoProceso"  			column="periodo"/>
		<result property="fechaEmision1" 			column="fechaemision1"/>
		<result property="fechaRecojo1" 			column="fecharecojo1"/>      
		<result property="motivoNoRecojo1"      	column="MotivoNoRecojo1"/>
		<result property="fechaEmision2" 			column="fechaemision2"/>
		<result property="fechaRecojo2" 			column="fecharecojo2"/>      
		<result property="motivoNoRecojo2"      	column="MotivoNoRecojo2"/>
		<result property="fechaCierre"     			column="fechacierrebr"/>
		<result property="cargoTotal"      			column="cargo"/>
		<result property="abonoTotal"      			column="abono"/>
		<result property="liquidacion"     			column="liquidacion"/>       		      
        <result property="codigoConsultora"  		column="cod_clie"/>
	</resultMap>

	<resultMap id="detallesBoletaRecojoResult" class="boletaRecojoDetalle">                                      
		<result property="codigoVenta"			column="CUV"/>
		<result property="descripcionProducto"	column="descripcion_producto"/>      
		<result property="numeroCDR"			column="nro_cdr"/>                    
		<result property="numeroDespacho"		column="nro_despacho"/>              
		<result property="periodoDiscrepante" 	column="periodo_referencia"/>                      
		<result property="tipoCDR"				column="tipo_cdr"/>
		<result property="codigoSAP" 			column="codigo_sap"/>
		<result property="unidadesReclamadas"	column="reclamadas"/>      
		<result property="unidadesRecogidas" 	column="recogidas"/>
		<result property="unidadesEliminadas"	column="eliminadas"/>       
		<result property="precio"  				column="precio_facturado"/>		      
	    <result property="cargo"  				column="cargo"/>		      
	    <result property="abono"  				column="abono"/>		                    
	</resultMap>                                    	

	<resultMap id="reclamoDetalleResult" class="reclamoDigitadoDetalle">
		<result property="codigoPais"      				column="COD_PAIS"/>                  	   
		<result property="numeroDocumento"      		column="NUM_DOCU"/>           
		<result property="codigoCliente"      			column="COD_CLIE"/>                  
		<result property="tipoReferencia"    			column="TIP_REFE"/> 
        <result property="descripcionTipoReferencia"    column="DES_TIPO_REFE"/>
		<result property="codigoVentaDevuelve"      	column="COD_VENT_DEVU"/>                             
		<result property="codigoVentaDesea"      		column="COD_VENT_DESE"/>                  				
		<result property="cantidadProductosDevuelve"    column="CAN_PROD_DEVU"/>                                 
		<result property="cantidadProductosDesea"       column="CAN_PROD_DESE"/>                             
		<result property="estadoProceso"      			column="STA_PROC"/>                                    
		<result property="codigoMotivoRechazo"      	column="COD_MOTI_RECH"/>                                   
		<result property="motivoSPV"      				column="MOT_SPV"/>
		<result property="descripcionMotivoSPV"      	column="DES_MOTI_SPV"/>                             
		<result property="codigoOperador"      			column="COD_OPER"/>                                    
		<result property="codigoTipoOperacion"      	column="COD_TIPO_OPER"/>                                    
		<result property="codigoTipoDocumento"      	column="COD_TIPO_DOCU"/>                             
		<result property="codigoZona"      				column="COD_ZONA"/>
	    <result property="codigoRegion"      			column="COD_REGI"/>
	    <result property="codigoPeriodo"      			column="COD_PERI"/>
	    <result property="numeroLinea"      			column="NUM_LINE"/>              
	</resultMap>                                          

		<resultMap id="cabeceraCDRDigitadasResult" class="cabeceraCDRDigitadas">
		<result property="codigoPais"             column="COD_PAIS"/>                  	   
		<result property="cdr"                  column="NUM_DOCU"/>           
		<result property="codigoPeriodo"          column="COD_PERI"/>                  
		<result property="boletaDespacho"               column="NUM_DOCU_CRUC"/>                                  
		<result property="codigoCliente"     column="COD_CLIE"/>                             
		<result property="nombreCliente"            column="NOMBRE"/>                  				
		<result property="region"              column="COD_REGI_ARRI"/>                                 
		<result property="zona"     column="COD_ZONA_ARRI"/>                             
		<result property="fechaIngreso"      column="FEC_DIGI"/>                                    
		<result property="usuarioDigitacion"             column="USU_DIGI"/>                                   
        <result property="indExpress"             column="IND_EXPR"/>		         
        <result property="tipoConsulta"             column="TIP_CONS"/>
	</resultMap>

<resultMap id="detallesCDRDigitadasResult" class="detallesCDRDigitadas">
		<result property="operacion"             column="OPERACION"/>                  	   
		<result property="codigoVentaCambia"                  column="COD_VENT_DEVU"/>           
		<result property="cantidadCambia"          column="CAN_PROD_DEVU"/>                  
		<result property="motivo"               column="MOTIVO"/>                                  
		<result property="codigoVentaDesea"     column="COD_VENT_DESE"/>                             
		<result property="cantidadDesea"            column="CAN_PROD_DESE"/>                  				                                
	</resultMap>

 <resultMap id="SecuenciaZonaDiariaResult" class="java.util.HashMap">                     
    <result property="codigoZona"		 			column="COD_ZONA"/>  
    <result property="descripcionZona" 				column="DES_ZONA"/>
    <result property="numeroSecuencia"					column="NUM_SECU"/>      
  </resultMap> 	

   <resultMap id="codigoVentaOperaResult" class="codigoVentaOpera">                  
    <result property="codigoOperacion"		 	 column="COD_OPER"	/>         
    <result property="descripcionOperacion" 	 column="VAL_DESC_LARG"	/> 
    <result property="codigoVenta"			     column="COD_VENT"	/>         
    <result property="codigoTipoOferta"			 column="COD_TIPO_OFER"	/>         
    <result property="descripcionTipoOferta" 			 column="VAL_I18N"	/>
    <result property="codigoCatalogo" 			 column="COD_CATA"	/>    
    <result property="descripcionCatalogo" 			 column="DES_CATA"	/>    
    <result property="codigoPeriodoInicio" 			 column="COD_PERI"	/>    
    <result property="codigoPeriodoFinal" 			 column="COD_PERI_FINA"	/>     
    <result property="codigoTipoOperacion" 			 column="COD_TIPO_OPER"	/>                   
  </resultMap>
  
  <resultMap id="produtosFFNNEEResult" class="produtosFFNNEE">                  
    <result property="codigoSAP"		 	 column="COD_SAP"	/>         
    <result property="codigoPeriodoInicio" 	 column="PERI_INI"	/> 
    <result property="codigoPeriodoFin"	     column="PERI_FIN"	/>         
    <result property="codigoRegion"			 column="COD_REGI"	/>                       
  </resultMap>


    <!-- OBTIENE LAS OPERACIONES HOMOLOGADAS( RECLAMOS ) -->
    <select id="getOperacionesHomologadasByCodigoPais" parameterClass="java.util.Map" resultMap="baseResult">
     select op.cod_oper_homol AS CODIGO,  
            op.des_oper_homol AS DESCRIPCION 
     from int_mae_oper_homol op
   	WHERE   op.COD_PAIS = #codigoPais#    
	 order by op.des_oper_homol 

	</select>

  <!-- OBTIENE MAESTRO OPERACIONES HOMOLOGADAS SEGUN LOS CRITERIOS  -->
  <select id="getOperacionesHomologadasByCriteria" parameterClass="java.util.Map" resultMap="reclamosResult">
		SELECT                                                     
				op.COD_PAIS || '-' || op.cod_oper_homol   "ID"		,    
				op.cod_oper_homol, 
           		op.cod_pais, 
           		op.des_oper_homol, 
           		op.est_reg 
       from int_mae_oper_homol op 
	<dynamic prepend="where">                                    
		<isNotEmpty prepend="AND" property="codigoPais">           
			op.COD_PAIS = #codigoPais#                             
    	</isNotEmpty>                                            
		<isNotEmpty prepend="AND" property="codigoOperacion">        
			op.cod_oper_homol = #codigoOperacion#                          
    	</isNotEmpty>                                            
	</dynamic>                                                   
		order by op.des_oper_homol  
  </select>

  <select id="getCanalesByCodigoISO" parameterClass="string" resultMap="baseResult">
		SELECT  C.COD_CANA AS CODIGO, 
		        VAL_I18N AS DESCRIPCION
		FROM    GEN_I18N_SICC_COMUN P, 
		        SEG_CANAL C, 
		        SEG_IDIOM I  
		WHERE    P.VAL_OID = C.OID_CANA
		     AND P.IDIO_OID_IDIO = I.OID_IDIO
		     AND P.ATTR_ENTI = 'SEG_CANAL'
		     AND I.COD_ISO_IDIO = #value#
		ORDER BY 2
    </select>

  <insert id="insertOperacionesHomologadas" parameterClass="reclamos">

        insert into int_rec_oper_homol
        (
		  cod_oper, 
          cod_oper_homol, 
          cod_pais, 
          des_obs
		)
        values
		(
	  		#codigoOperacion# ,
	  		#codigoOperacionHomologada#	,
	  		#codigoPais# ,
			#observacion# 
		)

	</insert>

    <delete id="deleteOperacionHomologada" parameterClass="reclamos">
        delete int_rec_oper_homol
        where cod_pais = #codigoPais#
              and cod_oper_homol = #codigoOperacionHomologada#
    </delete>

    <!-- OBTIENE LAS OPERACIONES x OPERACION HOMOLOGADA( RECLAMOS ) -->
    <select id="getOperacionesByOperacionHomologada" parameterClass="java.util.Map" resultClass="java.lang.String" >
       	select 	ho.cod_oper
       	from 	int_rec_oper_homol ho
       	where 	ho.cod_pais = #codigoPais# and
				ho.cod_oper_homol = #codigoOperacionHomologada#
	</select>

	<delete id="deleteInterfazRETRecepcionarVentasRetailDetDet">
        TRUNCATE TABLE INT_RET_LINEA_OPERA_RECLA
    </delete>

    <!-- INSERTA LOS PRODUCTOS RECLAMADOS SEGUN LOS CRITERIOS  -->
	<insert id="insertRECProductosList" parameterClass="java.util.Map">
INSERT INTO int_ret_linea_opera_recla(
            cod_pais, 
            num_aten, 
            num_secu_oper, 
            num_line,
    num_secu_usua
)
        	SELECT  	#codigoPais#	CODPAIS ,
                     	CABREC.OID_CABE_RECL RECCAB, 
						OPEREC.OID_OPER_RECL RECOPER, 
						LINREC.OID_LINE_OPER_RECL LIN,
						to_number(#numeroSecuencia#)  NUMSEC
				FROM 	REC_OPERA_RECLA OPEREC, 
       REC_CABEC_RECLA CABREC,
       REC_LINEA_OPERA_RECLA LINREC,
			            PED_SOLIC_CABEC PEDCAB                                                                                                   
 WHERE LINREC.OPRE_OID_OPER_RECL = OPEREC.OID_OPER_RECL
   AND OPEREC.CARE_OID_CABE_RECL = CABREC.OID_CABE_RECL
   AND cabrec.SOCA_OID_SOLI_CABE = PEDCAB.OID_SOLI_CABE
   AND LINREC.NUM_UNID_RECL > LINREC.NUM_UNID_DEVU

<isNotEmpty prepend="AND" property="errorSacado">
			 LINREC.SOPO_OID_SOLI_POSI IS NULL
   AND LINREC.VAL_PREC = 0
</isNotEmpty>

<isNotEmpty prepend="AND" property="subacGZ">
							cabrec.num_aten_inte is null
</isNotEmpty>	 

<isNotEmpty property="subacList">
					  <iterate prepend="AND" property="subacList" open="(" close=")" conjunction="OR">
                         cabrec.cod_usua_ingr = #subacList[]#
                      </iterate>    
</isNotEmpty>

<isEmpty prepend="AND" property="subacGZ">
       EXISTS (SELECT estop.oid_esta_oper
                 FROM rec_estad_opera estop
                WHERE estop.oid_esta_oper = OPEREC.ESOP_OID_ESTA_OPER
                  AND estop.cod_esta_oper = 'F')
   AND EXISTS (SELECT ESTREC.OID_ESTA_RECL
                 FROM REC_ESTAD_RECLA ESTREC
                WHERE ESTREC.OID_ESTA_RECL = CABREC.ESRE_OID_ESTA_RECL
                  AND ESTREC.COD_ESTA = 'F')
</isEmpty>

<isNotEmpty prepend="AND" property="subacGZ">
			 EXISTS (SELECT null
			           FROM rec_solic_opera solope 
								WHERE solope.opre_oid_oper_recl = OPEREC.OID_OPER_RECL
								  AND EXISTS (SELECT null
								                FROM ped_solic_cabec fac
															 WHERE fac.oid_soli_cabe = solope.soca_oid_soli_cabe
															   AND fac.grpr_oid_grup_proc = 5 )
														  )
</isNotEmpty>

   AND EXISTS (SELECT tmo.oid_tipo_movi
                 FROM rec_tipo_movim tmo
                WHERE tmo.oid_tipo_movi = LINREC.TIMO_OID_TIPO_MOVI
                  AND tmo.cod_tipo_movi = 'D'
               )
   AND EXISTS (SELECT ting.cod_tipo_ingr
                 FROM rec_tipo_ingre ting
                WHERE ting.oid_tipo_ingr = CABREC.TIIN_OID_TIPO_INGR 
                          		   			<isNotEmpty prepend="AND" property="tipoIngreso">
              		    ting.cod_tipo_ingr = #tipoIngreso#
              </isNotEmpty>
               )
   AND EXISTS (SELECT regi.oid_regi
                 FROM zon_regio regi
                WHERE <!-- regi.oid_regi = INT_PKG_RECLA.GEN_FN_OID_REGIO_BYZON_TERRI(CABREC.ZTAD_OID_TERR_ADMI, #codigoPais#) -->
                      EXISTS ( SELECT zreg.oid_regi
                                            FROM zon_terri_admin zadm,
                                                 zon_secci       zsec,
                                                 zon_zona        zzon,
                                                 zon_regio       zreg,
                                                 seg_pais        pa,
                                                 zon_sub_geren_venta  zsgv
                                WHERE (zsec.oid_secc = zadm.zscc_oid_secc)
                                  AND (zzon.oid_zona = zsec.zzon_oid_zona)
                                  AND (zreg.oid_regi = zzon.zorg_oid_regi)
                                  AND (zsgv.oid_subg_vent = zreg.zsgv_oid_subg_vent)
                                  AND (pa.oid_pais = zadm.pais_oid_pais)
                                  AND (pa.cod_pais = #codigoPais# )
                                  AND zadm.oid_terr_admi = CABREC.ZTAD_OID_TERR_ADMI
                                  AND regi.oid_regi = zreg.oid_regi
                              )
                      					<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
                	    regi.cod_regi = #regionList[]#
                </iterate>
               )
   AND EXISTS (SELECT zona.oid_zona
                 FROM zon_zona zona
                WHERE EXISTS ( SELECT zreg.oid_regi
                                 FROM zon_terri_admin zadm,
                                      zon_secci       zsec,
                                      zon_zona        zzon,
                                      zon_regio       zreg,
                                      seg_pais        pa,
                                      zon_sub_geren_venta  zsgv
                                WHERE (zsec.oid_secc = zadm.zscc_oid_secc)
                                  AND (zzon.oid_zona = zsec.zzon_oid_zona)
                                  AND (zreg.oid_regi = zzon.zorg_oid_regi)
                                  AND (zsgv.oid_subg_vent = zreg.zsgv_oid_subg_vent)
                                  AND (pa.oid_pais = zadm.pais_oid_pais)
                                  AND (pa.cod_pais = #codigoPais# )
                                  AND zadm.oid_terr_admi = CABREC.ZTAD_OID_TERR_ADMI
                                  AND zona.zorg_oid_regi = zreg.oid_regi
                                  AND zona.oid_zona = zzon.oid_zona
                              )
                <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
                	    zona.cod_zona = #zonaList[]#
                </iterate>
               )
   AND EXISTS ( SELECT top.oid_tipo_oper
                  FROM rec_opera op,
                  		 rec_tipos_opera top
                 WHERE top.oid_tipo_oper = operec.tiop_oid_tipo_oper
                   AND op.oid_oper = top.rope_oid_oper
                      					<iterate prepend="AND" property="operacionList" open="(" close=")" conjunction="OR">
                       op.cod_oper = #operacionList[]#
                 </iterate>
               )
							  AND CABREC.FEC_INGR >= TO_DATE(#fechaInicio#,'DD/MM/YYYY')
<![CDATA[  
					      AND CABREC.FEC_INGR <= TO_DATE(#fechaFin#,'DD/MM/YYYY')
						 ]]>	

<isNotEmpty property="parametroMuestraStockFisico">
	and ( (operec.tiop_oid_tipo_oper = (
                                                        select RTO.OID_TIPO_OPER 
                                                        from int_rec_oper_homol roh , rec_opera ro,   rec_tipos_opera rto
                                                        where ROH.COD_OPER = RO.COD_OPER
                                                        and RO.OID_OPER = RTO.ROPE_OID_OPER
                                                        and RTO.OID_TIPO_OPER = operec.tiop_oid_tipo_oper 
                                                        and ROH.COD_OPER_HOMOL = 'E' 
                                                       AND linrec.sopo_oid_soli_posi is null
                                                        AND linrec.val_prec = 0
                                                        ) )   
           or
             (operec.tiop_oid_tipo_oper not in (
                                                        select RTO.OID_TIPO_OPER 
                                                        from int_rec_oper_homol roh , rec_opera ro,   rec_tipos_opera rto
                                                        where ROH.COD_OPER = RO.COD_OPER
                                                        and RO.OID_OPER = RTO.ROPE_OID_OPER
                                                        and RTO.OID_TIPO_OPER = operec.tiop_oid_tipo_oper 
                                                        and ROH.COD_OPER_HOMOL = 'E' 
                                                        ) )           
          )
	
</isNotEmpty>

    </insert>

 <parameterMap id="executeProcesoRECCargarTablaBoletaRecojoEspecialParams" class="map" >
	    <parameter property="periodo"	            	 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPais"	             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoIso"	                 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	
    </parameterMap>
    <procedure id="executeProcesoRECCargarTablaBoletaRecojoEspecial" 
   			  parameterMap="executeProcesoRECCargarTablaBoletaRecojoEspecialParams" >
		{call REC_PKG_REPOR.REC_PR_CARGA_BOREC(?,?,?)}
    </procedure> 
	 <!-- VERIFICA SI EXISTEN REGISTROS EN LA TABLA REC_BOREC_ESPEC_DETAL -->
    <select id="executeVerificacionTablaBoletaRecojoEspecial" parameterClass="java.util.Map" resultMap="baseResult">

		select A.COD_PERI as CODIGO,
			   B.DES_PROD as DESCRIPCION
	    FROM REC_BOREC_ESPEC_CABEC A,
			 REC_BOREC_ESPEC_DETAL B
	   WHERE A.COD_PAIS=#codigoPais#  AND
			 A.COD_PERI=#periodo# AND
	         B.BREC_OID_BORE_ESPE_CABE=A.OID_BORE_ESPE_CABE AND
			 B.VAL_CODI_VENT=#codigoVenta# 

	</select>
    
	
  <resultMap id="boletaRecojoCabeceraResult" 		class="boletaRecojoCabecera"> 
        <result property="codigoPais"               column="CODIGOPAIS"/>
        <result property="codigoCabecera"           column="CODIGOCABECERA"/>
	    <result property="boletaRecojo"             column="BOLETARECOJO"/>
	    <result property="numeroRecojo"             column="NUMERORECOJO"/>
	    <result property="descNumeroRecojo"         column="DESCNUMERORECOJO"/>
	    <result property="codigoCliente"            column="CODIGOCLIENTE"/>
	    <result property="nombreCliente"            column="NOMBRECLIENTE"/>
	    <result property="region"                   column="REGION"/>
	    <result property="zona"                     column="ZONA"/>
	    <result property="seccion"                  column="SECCION"/>
	    <result property="territorio"               column="TERRITORIO"/>
	    <result property="boletaDespacho"           column="BOLETADESPACHO"/>
	    <result property="periodoProceso"           column="PERIODOPROCESO"/>
	    <result property="codigoEstado"           column="CODIGOESTADO"/>
	    <result property="estado"                   column="ESTADO"/>
	    <result property="codigoResultado"          column="CODIGORESULTADO"/>
	    <result property="descripcionResultado"     column="DESCRIPCIONRESULTADO"/>
	    <result property="fechaEmision1"            column="FECHAEMISION1"/>
	    <result property="fechaRecojo1"             column="FECHARECOJO1"/>
	    <result property="horaRecojo1"              column="HORARECOJO1"/>
	    <result property="nombreTercero1"           column="NOMBRETERCERO1"/>
	    <result property="codigoMotivoNoRecojo1"    column="CODIGOMOTIVONORECOJO1"/>
	    <result property="motivoNoRecojo1"          column="MOTIVONORECOJO1"/>
	    <result property="fechaEmision2"            column="FECHAEMISION2"/>
	    <result property="fechaRecojo2"             column="FECHARECOJO2"/>
	    <result property="horaRecojo2"              column="HORARECOJO2"/>
	    <result property="nombreTercero2"           column="NOMBRETERCERO2"/>
	    <result property="codigoMotivoNoRecojo2"    column="CODIGOMOTIVONORECOJO2"/>
	    <result property="motivoNoRecojo2"          column="MOTIVONORECOJO2"/>           
	    <result property="totalUnidadesRecogidas"   column="TOTALUNIDADESRECOGIDAS"/>
	    <result property="montoOriginal"    		column="MONTOORIGINAL"/>
	    <result property="montoDiscrepante"         column="MONTODISCREPANTE"/>   
	    <result property="diferencia"   			column="DIFERENCIA"/>	            
	    <result property="bloqueoPostVenta"   			column="BLOQUEO"/>
	    <result property="indicadorAlmacenFisico"  column="INDICADORALMACENFISICO"/>
	    <result property="indicadorOCSProcesado"    column="INDICADOROCSPROCESADO"/>
  </resultMap>     
	 <!-- OBTIENE LAS CABECERAS DE BOLETA DE RECOJO ) -->
    <select id="getBoletasRecojoCabeceraList" parameterClass="java.util.Map" resultMap="boletaRecojoCabeceraResult">
	     
	    SELECT CB.COD_PAIS CODIGOPAIS,
	           CB.COD_CABE_BORE CODIGOCABECERA,
	           CB.VAL_NUME_BORE BOLETARECOJO,
	           CB.NUM_RECO NUMERORECOJO,
	           DECODE(CB.NUM_RECO,1,'PRIMER RECOJO',2,'SEGUNDO RECOJO','-') DESCNUMERORECOJO,
	           MC.COD_CLIE CODIGOCLIENTE,
	           MC.VAL_NOM1 || ' ' || MC.VAL_APE1 || ' ' || MC.VAL_APE2 NOMBRECLIENTE,
	           ZR.COD_REGI REGION,
	           ZZ.COD_ZONA ZONA,
	           ZS.COD_SECC SECCION,
	           ZT.COD_TERR TERRITORIO,
	           NVL(CB.VAL_NUME_BOLE_DESP,'0') BOLETADESPACHO,
	           CB.COD_PERI_PROC PERIODOPROCESO,
	           E1.COD_ESTA_BORE CODIGOESTADO,
	           E1.DES_ESTA_BORE ESTADO,
	           E2.COD_ESTA_BORE CODIGORESULTADO,
	           E2.DES_ESTA_BORE DESCRIPCIONRESULTADO,
	           TO_CHAR(CB.FEC_INGR,'DD/MM/YYYY') FECHAEMISION1,
	           TO_CHAR(CB.FEC_RECO,'DD/MM/YYYY') FECHARECOJO1,
	           CB.HOR_RECO HORARECOJO1,
	           CB.VAL_NOMB_TERC NOMBRETERCERO1,
	           M1.COD_MOTN_RECO_BORE CODIGOMOTIVONORECOJO1,
	           M1.DES_MOTN_RECO_BORE MOTIVONORECOJO1,
	           TO_CHAR(CB.FEC_ING2,'DD/MM/YYYY') FECHAEMISION2,
	           TO_CHAR(CB.FEC_REC2,'DD/MM/YYYY') FECHARECOJO2,
	           CB.HOR_REC2 HORARECOJO2,
	           CB.VAL_NOMB_TER2 NOMBRETERCERO2,
	           M2.COD_MOTN_RECO_BORE CODIGOMOTIVONORECOJO2,
	           M2.DES_MOTN_RECO_BORE MOTIVONORECOJO2,
	           CB.NUM_TOTA_UNID_RECO TOTALUNIDADESRECOGIDAS,
	           0 MONTOORIGINAL,
               0 MONTODISCREPANTE,
	    	   0 DIFERENCIA,
	    	   DECODE(INT_PKG_RECLA.REC_FN_DEVUE_INDIC_BLOQU_CONSU(MC.COD_CLIE),1, 'BLOQUEADA', '') BLOQUEO,
	    	   CB.IND_PROC_ALMA_FISI  INDICADORALMACENFISICO,
	    	   CB.IND_OCS_PROC        INDICADOROCSPROCESADO  
	      FROM INT_REC_CABEC_BOREC       CB,
	      	   INT_REC_ESTAD_BOREC       E1,
	           INT_REC_ESTAD_BOREC       E2,
	           INT_REC_MOTNO_RECOJ_BOREC M1,
	           INT_REC_MOTNO_RECOJ_BOREC M2,
	           MAE_CLIEN                 MC,
	           ZON_REGIO                 ZR,
	           ZON_ZONA                  ZZ,
	           ZON_SECCI                 ZS,
	           ZON_TERRI                 ZT,
	           ZON_TERRI_ADMIN           ZTA,
	           MAE_CLIEN_UNIDA_ADMIN     UA
	     WHERE CB.COD_PAIS = #codigoPais#
	       AND CB.ESBO_OID_ESTA_BOR2 = E2.OID_ESTA_BORE(+)
	       AND CB.ESBO_OID_ESTA_BOR1 = E1.OID_ESTA_BORE
	       AND CB.MORE_OID_MOTN_RECO_BORE = M1.OID_MOTN_RECO_BORE(+)
	       AND CB.MORE_OID_MOTN_RECO_BOR2 = M2.OID_MOTN_RECO_BORE(+)
	       AND UA.CLIE_OID_CLIE = CB.CLIE_OID_CLIE
	       AND UA.PERD_OID_PERI_FIN IS NULL
	       AND MC.OID_CLIE = CB.CLIE_OID_CLIE
	       AND UA.ZTAD_OID_TERR_ADMI = ZTA.OID_TERR_ADMI
	       AND ZTA.ZSCC_OID_SECC = ZS.OID_SECC
	       AND ZS.IND_ACTI = 1
	       AND ZS.ZZON_OID_ZONA = ZZ.OID_ZONA
	       AND ZZ.IND_ACTI = 1
	       AND ZZ.ZORG_OID_REGI = ZR.OID_REGI
	       AND ZR.IND_ACTI = 1
	       AND ZT.OID_TERR = ZTA.TERR_OID_TERR
	       AND ZT.IND_BORR = 0
		   AND CB.VAL_NUME_BORE LIKE #numeroBoleta# || '%'
		   AND MC.COD_CLIE LIKE #codigoCliente# || '%'
		   AND CB.COD_PERI_PROC = #codigoPeriodo#
		   <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZR.COD_REGI   = NVL(#regionList[]#,ZR.COD_REGI)
           </iterate>
           <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZZ.COD_ZONA   = NVL(#zonaList[]#,ZZ.COD_ZONA)
           </iterate>
           <iterate prepend="AND" property="resultadoList" open="(" close=")" conjunction="OR">
			E2.COD_ESTA_BORE   = #resultadoList[]#
           </iterate>
           <iterate prepend="AND" property="estadoList" open="(" close=")" conjunction="OR">
			E1.COD_ESTA_BORE   = #estadoList[]#
           </iterate>
	</select>
	
	<resultMap id="boletaRecojoDetalleResult" 		class="boletaRecojoDetalle"> 
        <result property="codigoPais"               	column="CODIGOPAIS"/>
	    <result property="codigoCabecera"           	column="CODIGOCABECERA"/>
	    <result property="codigoDetalle"            	column="CODIGODETALLE"/>
	    <result property="numeroSecuencia"          	column="NUMEROSECUENCIA"/>
	    <result property="idCabeceraReclamo"        	column="IDCABECERARECLAMO"/>
	    <result property="idSolicitud"              	column="IDSOLICITUD"/>
	    <result property="idOperacionReclamo"       	column="IDOPERACIONRECLAMO"/>
	    <result property="idProducto"               	column="IDPRODUCTO"/>
	    <result property="codigoProducto"           	column="CODIGOPRODUCTO"/>
	    <result property="descripcionProducto"          column="DESCRIPCIONPRODUCTO"/>
	    <result property="idMatrizFacturacion"      	column="IDMATRIZFACTURACION"/>
	    <result property="idTipoOferta"             	column="IDTIPOOFERTA"/>
	    <result property="idParametroGeneral"       	column="IDPARAMETROGENERAL"/>
	    <result property="idParametroNivel"         	column="IDPARAMETRONIVEL"/>
	    <result property="idLoteArticulo"           	column="IDLOTEARTICULO"/>
	    <result property="unidadesReclamadas"       	column="UNIDADESRECLAMADAS"/>
	    <result property="unidadesRecogidas"        	column="UNIDADESRECOGIDAS"/>
	    <result property="observacion"              	column="OBSERVACION"/>
	    <result property="idProductoDiscrepante"    	column="IDPRODUCTODISCREPANTE"/>
	    <result property="codigoProductoDiscrepante"    column="CODIGOPRODUCTODISCREPANTE"/>
	    <result property="descripcionProductoDisc"      column="DESCRIPCIONPRODUCTODISC"/>
	    <result property="indicadorDiscrepante"    		column="INDICADORDISCREPANTE"/>
	    <result property="idLineaOperacionReclamo"      column="IDLINEAOPERACIONRECLAMO"/>
	    <result property="indicadorAlmacenFisico"       column="INDICADORALMACENFISICO"/>
	    <result property="indicadorEnvioXerox1"         column="INDICADORENVIOXEROX1"/>
	    <result property="indicadorEnvioYobel1"         column="INDICADORENVIOYOBEL1"/>
	    <result property="indicadorRegresoYobel1"       column="INDICADORREGRESOYOBEL1"/>
	    <result property="indicadorOCS"    				column="INDICADOROCS"/>
	    <result property="codigoOperacionHomol"         column="CODIGIOPERACIONHOMOL"/>
	    <result property="precio"               		column="PRECIO"/>
	    <result property="precioContable"           	column="PRECIOCONTABLE"/>
	    <result property="numeroLoteEnvio"             	column="NUMEROLOTEENVIO1"/>
	    <result property="numeroLoteDevuelto"           column="NUMEROLOTEDEVUELTO1"/>
	    <result property="descripcionOperacion"         column="DESCRIPCIONOPERACION"/>
	    <result property="codigoAntiguo"            	column="CODIGOANTIGUO"/>
	    <result property="codigoOperacion"              column="CODIGOOPERACION"/>
	    <result property="codigoOferta"                 column="CODIGOREFERENCIA"/>
	    <result property="indicadorEnvioXerox2"         column="INDICADORENVIOXEROX2"/>
	    <result property="indicadorEnvioYobel2"         column="INDICADORENVIOYOBEL2"/>
	    <result property="indicadorRegresoYobel2"       column="INDICADORREGRESOYOBEL2"/>
	    <result property="numeroLoteEnvio2"             column="NUMEROLOTEENVIO2"/>
	    <result property="numeroLoteDevuelto2"          column="NUMEROLOTEDEVUELTO2"/> 
	    <result property="codigoVenta"                  column="CODIGOVENTA"/>
	    <result property="discrepante"                  column="DISCREPANTE"/>
	    <result property="codigoVentaDiscrepante"       column="CODIGOVENTADISCREPANTE"/>
	    <result property="periodoDiscrepante"           column="PERIODODISCREPANTE"/>
	    <result property="precioDiscrepante"            column="PRECIODISCREPANTE"/>
	    <result property="codigoPeriodoReferencia"      column="CODIGOPERIODOREFERENCIA"/>
	    <result property="unidadesEliminadas"            column="UNIDADESELIMINADAS"/>
	    <result property="porcentajeDescuento"            column="PORCENTAJEDESCUENTO"/>
	    <result property="oidPedido"	            	column="OIDPEDIDO"/>
  </resultMap>     
	
	<select id="getBoletaRecojoDetalleList" parameterClass="boletaRecojoCabecera"  resultMap="boletaRecojoDetalleResult">
		SELECT LB.COD_PAIS                CODIGOPAIS,
		       LB.COD_CABE_BORE           CODIGOCABECERA,
		       LB.COD_LINE_BORE           CODIGODETALLE,
		       LB.NUM_SECU                NUMEROSECUENCIA,
		       LB.CARE_OID_CABE_RECL      IDCABECERARECLAMO,
		       LB.SOCA_OID_SOLI_CABE      IDSOLICITUD,
		       LB.OPRE_OID_OPER_RECL      IDOPERACIONRECLAMO,
		       LB.PROD_OID_PROD           IDPRODUCTO,
		       LB.COD_PROD                CODIGOPRODUCTO,
		         GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(LB.PROD_OID_PROD ,'MAE_PRODU','es')       DESCRIPCIONPRODUCTO,
		       LB.MAFA_OID_MATR_FACT      IDMATRIZFACTURACION,
		       LB.TOFE_OID_TIPO_OFER      IDTIPOOFERTA,
		       LB.COPA_OID_PARA_GRAL      IDPARAMETROGENERAL,
		       LB.PANP_OID_PARA_NIVE_PREM IDPARAMETRONIVEL,
		       LB.LOPA_OID_LOTE_PREM_ARTI IDLOTEARTICULO,
		       LB.NUM_UNID_RECL           UNIDADESRECLAMADAS,
		       LB.NUM_UNID_RECO           UNIDADESRECOGIDAS,
		       LB.OBSE_BORE               OBSERVACION,
		       LB.PROD_OID_PROD_DISC      IDPRODUCTODISCREPANTE,
		       LB.COD_PROD_DISC           CODIGOPRODUCTODISCREPANTE,
		         GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(LB.PROD_OID_PROD_DISC ,'MAE_PRODU','es')       DESCRIPCIONPRODUCTODISC,
		       LB.IND_DISC                INDICADORDISCREPANTE,
		       LB.LOR_OID_LINE_OPER_RECL  IDLINEAOPERACIONRECLAMO,
		       LB.IND_PROC_ALMA_FISI      INDICADORALMACENFISICO,
		       LB.IND_ENVI_XERO           INDICADORENVIOXEROX1,
		       LB.IND_ENVI_YOBE           INDICADORENVIOYOBEL1,
		       LB.IND_REGR_YOBE           INDICADORREGRESOYOBEL1,
		       LB.IND_OCS_PROC            INDICADOROCS,
		       LB.COD_OPER_HOMOL          CODIGIOPERACIONHOMOL,
		       LB.VAL_PREC                PRECIO,
		       LB.VAL_PREC_CONT           PRECIOCONTABLE,
		       LB.NUM_LOTE_ENVI           NUMEROLOTEENVIO1,
		       LB.NUM_LOTE_DEVU           NUMEROLOTEDEVUELTO1,
		       LB.DES_OPER                DESCRIPCIONOPERACION,
		       LB.COD_OPER                CODIGOOPERACION,
		       LB.COD_ANTI                CODIGOANTIGUO,
		       LB.REFE_COD_LINE_BORE      CODIGOREFERENCIA,
		       LB.IND_ENVI_XER2           INDICADORENVIOXEROX2,
		       LB.IND_ENVI_YOB2           INDICADORENVIOYOBEL2,
		       LB.IND_REGR_YOB2           INDICADORREGRESOYOBEL2,
		       LB.NUM_LOTE_ENV2           NUMEROLOTEENVIO2,
		       LB.NUM_LOTE_DEV2           NUMEROLOTEDEVUELTO2,
		         DECODE(LB.COPA_OID_PARA_GRAL, NULL,
			                   INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_MFACT(LB.TOFE_OID_TIPO_OFER,
			                                                             LB.MAFA_OID_MATR_FACT,
			                                                             LB.PROD_OID_PROD),
			                  INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_FICTI(LB.LOPA_OID_LOTE_PREM_ARTI,
			                                                             LB.PANP_OID_PARA_NIVE_PREM,
			                                                             LB.COPA_OID_PARA_GRAL,
			                                                             LB.PROD_OID_PROD)) CODIGOVENTA,
		       DECODE(LB.IND_DISC,'1','D','')    	DISCREPANTE,
		       LB.COD_VENT_DISC CODIGOVENTADISCREPANTE,
		       LB.COD_PERI_DISC PERIODODISCREPANTE,
		       NVL(LB.VAL_PREC_DISC,0) PRECIODISCREPANTE,
		       GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(REC.PERD_OID_PERI_DOCU_REFE) CODIGOPERIODOREFERENCIA,
		       NVL(LB.NUM_UNID_ELIM,0)	UNIDADESELIMINADAS,
		       NVL(
		        (SELECT P.VAL_PORC_DESC 
				  FROM REC_LINEA_OPERA_RECLA L,
				       PED_SOLIC_POSIC       P
				 WHERE L.OID_LINE_OPER_RECL = LB.LOR_OID_LINE_OPER_RECL
				   AND L.SOPO_OID_SOLI_POSI = P.OID_SOLI_POSI)		       
		       , 0) PORCENTAJEDESCUENTO,
       		  rec.soca_oid_soli_Cabe OIDPEDIDO
		  FROM INT_REC_LINEA_BOREC LB,
		       REC_CABEC_RECLA     REC
		 WHERE LB.CARE_OID_CABE_RECL = REC.OID_CABE_RECL
		   AND COD_CABE_BORE = #codigoCabecera#
		     AND COD_PAIS      = #codigoPais#
		     AND REFE_COD_LINE_BORE IS NULL
	</select>

	<select id="getBoletaRecojoDetalleDiscrepanteList" parameterClass="boletaRecojoDetalle"  resultMap="boletaRecojoDetalleResult">
		SELECT LB.COD_PAIS                CODIGOPAIS,
		       LB.COD_CABE_BORE           CODIGOCABECERA,
		       LB.COD_LINE_BORE           CODIGODETALLE,
		       LB.NUM_SECU                NUMEROSECUENCIA,
		       LB.CARE_OID_CABE_RECL      IDCABECERARECLAMO,
		       LB.SOCA_OID_SOLI_CABE      IDSOLICITUD,
		       LB.OPRE_OID_OPER_RECL      IDOPERACIONRECLAMO,
		       LB.PROD_OID_PROD           IDPRODUCTO,
		       LB.COD_PROD                CODIGOPRODUCTO,
		         GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(LB.PROD_OID_PROD ,'MAE_PRODU','es')       DESCRIPCIONPRODUCTO,
		       LB.MAFA_OID_MATR_FACT      IDMATRIZFACTURACION,
		       LB.TOFE_OID_TIPO_OFER      IDTIPOOFERTA,
		       LB.COPA_OID_PARA_GRAL      IDPARAMETROGENERAL,
		       LB.PANP_OID_PARA_NIVE_PREM IDPARAMETRONIVEL,
		       LB.LOPA_OID_LOTE_PREM_ARTI IDLOTEARTICULO,
		       LB.NUM_UNID_RECL           UNIDADESRECLAMADAS,
		       LB.NUM_UNID_RECO           UNIDADESRECOGIDAS,
		       LB.OBSE_BORE               OBSERVACION,
		       LB.PROD_OID_PROD_DISC      IDPRODUCTODISCREPANTE,
		       LB.COD_PROD_DISC           CODIGOPRODUCTODISCREPANTE,
		         GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(LB.PROD_OID_PROD_DISC ,'MAE_PRODU','es')       DESCRIPCIONPRODUCTODISC,
		       LB.IND_DISC                INDICADORDISCREPANTE,
		       LB.LOR_OID_LINE_OPER_RECL  IDLINEAOPERACIONRECLAMO,
		       LB.IND_PROC_ALMA_FISI      INDICADORALMACENFISICO,
		       LB.IND_ENVI_XERO           INDICADORENVIOXEROX1,
		       LB.IND_ENVI_YOBE           INDICADORENVIOYOBEL1,
		       LB.IND_REGR_YOBE           INDICADORREGRESOYOBEL1,
		       LB.IND_OCS_PROC            INDICADOROCS,
		       LB.COD_OPER_HOMOL          CODIGIOPERACIONHOMOL,
		       LB.VAL_PREC                PRECIO,
		       LB.VAL_PREC_CONT           PRECIOCONTABLE,
		       LB.NUM_LOTE_ENVI           NUMEROLOTEENVIO1,
		       LB.NUM_LOTE_DEVU           NUMEROLOTEDEVUELTO1,
		       LB.DES_OPER                DESCRIPCIONOPERACION,
		       LB.COD_OPER                CODIGOOPERACION,
		       LB.COD_ANTI                CODIGOANTIGUO,
		       LB.REFE_COD_LINE_BORE      CODIGOREFERENCIA,
		       LB.IND_ENVI_XER2           INDICADORENVIOXEROX2,
		       LB.IND_ENVI_YOB2           INDICADORENVIOYOBEL2,
		       LB.IND_REGR_YOB2           INDICADORREGRESOYOBEL2,
		       LB.NUM_LOTE_ENV2           NUMEROLOTEENVIO2,
		       LB.NUM_LOTE_DEV2           NUMEROLOTEDEVUELTO2,
		         DECODE(LB.COPA_OID_PARA_GRAL, NULL,
			                   INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_MFACT(LB.TOFE_OID_TIPO_OFER,
			                                                             LB.MAFA_OID_MATR_FACT,
			                                                             LB.PROD_OID_PROD),
			                  INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_FICTI(LB.LOPA_OID_LOTE_PREM_ARTI,
			                                                             LB.PANP_OID_PARA_NIVE_PREM,
			                                                             LB.COPA_OID_PARA_GRAL,
			                                                             LB.PROD_OID_PROD)) CODIGOVENTA,
		       DECODE(LB.IND_DISC,'1','D','')    	DISCREPANTE,
		       LB.COD_VENT_DISC CODIGOVENTADISCREPANTE,
		       LB.COD_PERI_DISC PERIODODISCREPANTE,
		       NVL(LB.VAL_PREC_DISC,0) PRECIODISCREPANTE,
		       GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(REC.PERD_OID_PERI_DOCU_REFE) CODIGOPERIODOREFERENCIA,
		       NVL(LB.NUM_UNID_ELIM,0)	UNIDADESELIMINADAS,
		       NULL PORCENTAJEDESCUENTO,
       		   rec.soca_oid_soli_Cabe OIDPEDIDO
		  FROM INT_REC_LINEA_BOREC LB,
		       REC_CABEC_RECLA REC
		 WHERE LB.CARE_OID_CABE_RECL = REC.OID_CABE_RECL
		   AND (LB.REFE_COD_LINE_BORE = #codigoDetalle# OR (LB.COD_LINE_BORE=#codigoDetalle# AND LB.IND_DISC=1))
		   AND LB.COD_PAIS = #codigoPais#
	</select>
     <select id="getDescripcionProducto" parameterClass="java.util.Map" resultClass="string">
   		 SELECT OCR_SOLIC_PEDIDOS.GEN_FN_DEV_DESCR_PRODU(#codigoVenta#,#periodo#) FROM DUAL
    </select>
    
      <select id="getEstadosBoletasRecojo" parameterClass="string" resultMap="baseResult">
	      	SELECT COD_ESTA_BORE CODIGO,
			       DES_ESTA_BORE DESCRIPCION
			  FROM INT_REC_ESTAD_BOREC
			 WHERE NVL_ESTA_BORE = 1
			   AND COD_PAIS = #value#		
    </select>
    <select id="getResultadosBoletasRecojo" parameterClass="string" resultMap="baseResult">
	      	SELECT COD_ESTA_BORE CODIGO,
			       DES_ESTA_BORE DESCRIPCION
			  FROM INT_REC_ESTAD_BOREC
			 WHERE NVL_ESTA_BORE = 2
			   AND COD_PAIS = #value#		
    </select>
    
    <select id="getMotivosNoRecojoBoletasRecojo" parameterClass="string" resultMap="baseResult">
		    SELECT COD_MOTN_RECO_BORE CODIGO,
			       DES_MOTN_RECO_BORE DESCRIPCION
			  FROM INT_REC_MOTNO_RECOJ_BOREC
			 WHERE COD_PAIS = #value#	      	 		
    </select>
    <resultMap id="getProductosByCriteriaResult" class="java.util.HashMap">
		<result property="codigoVentaDiscrepante"			column="CODIGOVENTA" />
		<result property="codigoPeriodoDiscrepante"			column="CODIGOPERIODO" />
		<result property="codigoProductoDiscrepante"			column="CODIGOPRODUCTO" />
		<result property="descripcionProductoDisc"			column="DESCRIPCIONPRODUCTO" />
		<result property="precioUnitario"				column="PRECIOUNITARIO" />
		<result property="porcentajeDescuentoDiscrepante"			column="PORCENTAJEDESCUENTO" />
		<result property="precioDiscrepante"			column="PRECIOFACTURA" />                
	</resultMap>
    
 <select id="getProductosByCriteria" parameterClass="java.util.Map" resultMap="getProductosByCriteriaResult">
     
	WITH DATOS AS(
      SELECT D.OID_DETA_OFER   DETALLEOFERTA                                                    
	  FROM PRE_MATRI_FACTU_CABEC M,
	       PRE_OFERT             O,
	       PRE_OFERT_DETAL       D,
	       MAE_PRODU             P,
	       CRA_PERIO             C,
	       SEG_PERIO_CORPO       S,
	       GEN_I18N_SICC_PAIS    G,
	       SEG_PAIS PA
	 WHERE O.MFCA_OID_CABE = M.OID_CABE
	   AND D.OFER_OID_OFER = O.OID_OFER
	   AND D.PROD_OID_PROD = P.OID_PROD
	   AND PA.OID_PAIS = P.PAIS_OID_PAIS
	   AND G.VAL_OID = P.OID_PROD
	   AND G.ATTR_ENTI = 'MAE_PRODU'
	   AND M.PERD_OID_PERI = C.OID_PERI
	   AND C.PERI_OID_PERI = S.OID_PERI
	   AND PA.COD_PAIS = #codigoPais#
	   <isNotEmpty prepend="AND" property="codigoProducto">
          P.COD_SAP like UPPER(#codigoProducto#||'%')
       </isNotEmpty>
       <isNotEmpty prepend="AND" property="descripcionProducto">
          UPPER(G.val_i18n) LIKE UPPER(#descripcionProducto#||'%')
       </isNotEmpty>
       <isNotEmpty prepend="AND" property="codigoPeriodo">
         s.cod_peri = #codigoPeriodo#
			   </isNotEmpty>
       <isNotEmpty prepend="AND" property="codigoVenta">
         d.val_codi_vent LIKE '%' || #codigoVenta#
			   </isNotEmpty>
       
  )
  
  
  SELECT CODIGOVENTA,
            CODIGOPERIODO,
            CODIGOPRODUCTO,
            DESCRIPCIONPRODUCTO,
            PRECIOUNITARIO,
            PORCENTAJEDESCUENTO,
            round((PRECIOUNITARIO*(100-PORCENTAJEDESCUENTO)/100),
            	  (SELECT 
					       NUM_DECI
					FROM 
					       SEG_PAIS SP,SEG_MONED SM
					WHERE 
					       SP.MONE_OID_MONE = SM.OID_MONE
					       AND SP.COD_PAIS = (SELECT DISTINCT COD_PAIS FROM BAS_CTRL_FACT))
            	  ) PRECIOFACTURA          
  FROM (             
  SELECT D.VAL_CODI_VENT   CODIGOVENTA,
  	       S.COD_PERI        CODIGOPERIODO,
  	       P.COD_SAP         CODIGOPRODUCTO,
  	       G.VAL_I18N        DESCRIPCIONPRODUCTO,       
  	       D.PRECIO_UNITARIO PRECIOUNITARIO,
           D.OID_DETA_OFER   DETALLEOFERTA,
           NVL(DA.porc,0) PORCENTAJEDESCUENTO                                                         
  	  FROM PRE_MATRI_FACTU_CABEC M,
  	       PRE_OFERT             O,
  	       PRE_OFERT_DETAL       D,
  	       MAE_PRODU             P,
  	       CRA_PERIO             C,
  	       SEG_PERIO_CORPO       S,
  	       GEN_I18N_SICC_PAIS    G,
  	       SEG_PAIS PA,
           (           
               select  distinct POD.OID_DETA_OFER, val_porc_desc  porc 
               from dto_base_aplic_cabec bac, 
                    dto_base_aplic_detal det, 
                    pre_ofert_detal      pod, 
                    mae_produ            mp, 
                    pre_tipo_ofert       pto, 
                    DTO_ESCLN            xx,
                    dto_descu            dde,
                    DATOS                DD
               where bac.DCTO_OID_DESC=dde.oid_desc
               and   dde.ind_acti=1
               and bac.oid_cabe=det.BACA_OID_CABE  and xx.BACA_OID_CABE=bac.oid_cabe
               and pod.prod_oid_prod=mp.oid_prod
               and (CASE WHEN det.gene_oid_gene is null THEN nvl(mp.gene_oid_gene,0) ELSE det.gene_oid_gene END)=nvl(mp.gene_oid_gene,0)
               and (CASE WHEN det.sgen_oid_supe_gene is null THEN nvl(mp.sgen_oid_supe_gene,0) ELSE det.sgen_oid_supe_gene END)=nvl(mp.sgen_oid_supe_gene,0)
               and (CASE WHEN det.uneg_oid_unid_nego is null THEN nvl(mp.uneg_oid_unid_nego,0) ELSE det.uneg_oid_unid_nego END)=nvl(mp.uneg_oid_unid_nego,0)
               and (CASE WHEN det.nego_oid_nego is null THEN nvl(mp.nego_oid_nego,0) ELSE det.nego_oid_nego END)=nvl(mp.nego_oid_nego,0)
               and (CASE WHEN det.tofe_oid_tipo_ofer is null THEN pod.tofe_oid_tipo_ofer ELSE det.tofe_oid_tipo_ofer END)=pod.tofe_oid_tipo_ofer
               and (CASE WHEN det.MAPR_OID_MARC_PROD is null THEN nvl(mp.MAPR_OID_MARC_PROD,0) ELSE det.MAPR_OID_MARC_PROD END)=nvl(mp.MAPR_OID_MARC_PROD,0)
               and pod.tofe_oid_tipo_ofer=pto.oid_tipo_ofer
               and pto.ind_comi=1
               and det.IND_EXCL_TIPO_OFER=0 AND POD.OID_DETA_OFER=DD.DETALLEOFERTA                                             
               UNION
               select distinct POD.OID_DETA_OFER,val_porc_desc  porc 
               from dto_base_aplic_cabec bac, 
                    dto_base_aplic_detal det, 
                    pre_ofert_detal pod,
                    mae_produ mp,
                    pre_tipo_ofert pto,
                    DTO_ESCLN xx,
                    dto_descu dde,DATOS  DD            
               where bac.DCTO_OID_DESC=dde.oid_desc
               and   dde.ind_acti=1
               and xx.BACA_OID_CABE=bac.oid_cabe
               and bac.oid_cabe=det.BACA_OID_CABE
               and pod.prod_oid_prod=mp.oid_prod
               and (CASE WHEN det.gene_oid_gene is null THEN nvl(mp.gene_oid_gene,0) ELSE det.gene_oid_gene END)=nvl(mp.gene_oid_gene,0)
               and (CASE WHEN det.sgen_oid_supe_gene is null THEN nvl(mp.sgen_oid_supe_gene,0) ELSE det.sgen_oid_supe_gene END)=nvl(mp.sgen_oid_supe_gene,0)
               and (CASE WHEN det.uneg_oid_unid_nego is null THEN nvl(mp.uneg_oid_unid_nego,0) ELSE det.uneg_oid_unid_nego END)=nvl(mp.uneg_oid_unid_nego,0)
               and (CASE WHEN det.nego_oid_nego is null THEN nvl(mp.nego_oid_nego,0) ELSE det.nego_oid_nego END)=nvl(mp.nego_oid_nego,0)
               and pod.tofe_oid_tipo_ofer not in (select nvl(DET1.TOFE_OID_TIPO_OFER,0) from dto_base_aplic_detal det1 where  det1.baca_oid_cabe=bac.oid_cabe)
               and pod.tofe_oid_tipo_ofer=pto.oid_tipo_ofer
               and pto.ind_comi=1
               and (CASE WHEN det.MAPR_OID_MARC_PROD is null THEN nvl(mp.MAPR_OID_MARC_PROD,0) ELSE det.MAPR_OID_MARC_PROD END)=nvl(mp.MAPR_OID_MARC_PROD,0)
               and det.IND_EXCL_TIPO_OFER=1 AND POD.OID_DETA_OFER=DD.DETALLEOFERTA                               
               union select distinct POD.OID_DETA_OFER,0 porc from dto_base_aplic_cabec,pre_ofert_detal pod,DATOS DD WHERE  POD.OID_DETA_OFER=DD.DETALLEOFERTA
            )
            DA,
            DATOS DD
  	 WHERE O.MFCA_OID_CABE = M.OID_CABE
  	   AND D.OFER_OID_OFER = O.OID_OFER
  	   AND D.PROD_OID_PROD = P.OID_PROD
  	   AND PA.OID_PAIS = P.PAIS_OID_PAIS
  	   AND G.VAL_OID = P.OID_PROD
  	   AND G.ATTR_ENTI = 'MAE_PRODU'
  	   AND M.PERD_OID_PERI = C.OID_PERI
  	   AND C.PERI_OID_PERI = S.OID_PERI
  	   AND PA.COD_PAIS = #codigoPais#    
       AND DA.OID_DETA_OFER(+)=D.OID_DETA_OFER  
       AND DA.OID_DETA_OFER = DD.DETALLEOFERTA     
             )    	
    </select>
        
    <delete id="deleteBoletaRecojoDetalle">
       DELETE FROM INT_REC_LINEA_BOREC D
		WHERE (D.REFE_COD_LINE_BORE = #codigoDetalle# OR 
		            D.COD_LINE_BORE = #codigoDetalle#)
		  AND COD_PAIS      = #codigoPais#
		  AND refe_cod_line_bore IS NOT NULL
    </delete>

	<update id="resetBoletaRecojoDetalle">
        UPDATE INT_REC_LINEA_BOREC
		   SET prod_oid_prod_disc = null,
			   cod_prod_disc      = null,
			   ind_disc           = 0,
			   cod_vent_disc      = null,
			   cod_peri_disc      = null,
			   val_prec_disc      = 0
		 WHERE COD_PAIS      = #codigoPais#		   
		   AND COD_LINE_BORE = #codigoDetalle#
		   AND refe_cod_line_bore IS NULL  
  	</update>

	 <select id="getBoletasRecojoCabeceraById" parameterClass="boletaRecojoCabecera" resultClass="boletaRecojoCabecera">
	     
	    SELECT CB.COD_PAIS CODIGOPAIS,
	           CB.COD_CABE_BORE CODIGOCABECERA,
	           CB.VAL_NUME_BORE BOLETARECOJO,
	           CB.NUM_RECO NUMERORECOJO,
	           DECODE(CB.NUM_RECO,1,'PRIMER RECOJO',2,'SEGUNDO RECOJO','-') DESCNUMERORECOJO,
	           MC.COD_CLIE CODIGOCLIENTE,
	           MC.VAL_NOM1 || ' ' || MC.VAL_APE1 || ' ' || MC.VAL_APE2 NOMBRECLIENTE,
	           ZR.COD_REGI REGION,
	           ZZ.COD_ZONA ZONA,
	           ZS.COD_SECC SECCION,
	           ZT.COD_TERR TERRITORIO,
	           NVL(CB.VAL_NUME_BOLE_DESP,'0') BOLETADESPACHO,
	           CB.COD_PERI_PROC PERIODOPROCESO,
	           E1.COD_ESTA_BORE CODIGOESTADO,
	           E1.DES_ESTA_BORE ESTADO,
	           E2.COD_ESTA_BORE CODIGORESULTADO,
	           E2.DES_ESTA_BORE DESCRIPCIONRESULTADO,
	           TO_CHAR(CB.FEC_INGR,'DD/MM/YYYY') FECHAEMISION1,
	           TO_CHAR(CB.FEC_RECO,'DD/MM/YYYY') FECHARECOJO1,
	           CB.HOR_RECO HORARECOJO1,
	           CB.VAL_NOMB_TERC NOMBRETERCERO1,
	           M1.COD_MOTN_RECO_BORE CODIGOMOTIVONORECOJO1,
	           M1.DES_MOTN_RECO_BORE MOTIVONORECOJO1,
	           TO_CHAR(CB.FEC_ING2,'DD/MM/YYYY') FECHAEMISION2,
	           TO_CHAR(CB.FEC_REC2,'DD/MM/YYYY') FECHARECOJO2,
	           CB.HOR_REC2 HORARECOJO2,
	           CB.VAL_NOMB_TER2 NOMBRETERCERO2,
	           M2.COD_MOTN_RECO_BORE CODIGOMOTIVONORECOJO2,
	           M2.DES_MOTN_RECO_BORE MOTIVONORECOJO2,
	           CB.NUM_TOTA_UNID_RECO TOTALUNIDADESRECOGIDAS,
	           0 MONTOORIGINAL,
               0 MONTODISCREPANTE,
	    	   0 DIFERENCIA
	      FROM INT_REC_CABEC_BOREC       CB,
	           INT_REC_ESTAD_BOREC       E2,
	           INT_REC_MOTNO_RECOJ_BOREC M1,
	           INT_REC_MOTNO_RECOJ_BOREC M2,
	           MAE_CLIEN                 MC,
	           ZON_REGIO                 ZR,
	           ZON_ZONA                  ZZ,
	           ZON_SECCI                 ZS,
	           ZON_TERRI                 ZT,
	           ZON_TERRI_ADMIN           ZTA,
	           MAE_CLIEN_UNIDA_ADMIN     UA,
	           INT_REC_ESTAD_BOREC       E1
	     WHERE CB.ESBO_OID_ESTA_BOR2 = E2.OID_ESTA_BORE(+)
	       AND CB.MORE_OID_MOTN_RECO_BORE = M1.OID_MOTN_RECO_BORE(+)
	       AND CB.MORE_OID_MOTN_RECO_BOR2 = M2.OID_MOTN_RECO_BORE(+)
	       AND CB.ESBO_OID_ESTA_BOR1 = E1.OID_ESTA_BORE
	       AND UA.CLIE_OID_CLIE = CB.CLIE_OID_CLIE
	       AND UA.PERD_OID_PERI_FIN IS NULL
	       AND MC.OID_CLIE = CB.CLIE_OID_CLIE
	       AND UA.ZTAD_OID_TERR_ADMI = ZTA.OID_TERR_ADMI
	       AND ZTA.ZSCC_OID_SECC = ZS.OID_SECC
	       AND ZS.IND_ACTI = 1
	       AND ZS.ZZON_OID_ZONA = ZZ.OID_ZONA
	       AND ZZ.IND_ACTI = 1
	       AND ZZ.ZORG_OID_REGI = ZR.OID_REGI
	       AND ZR.IND_ACTI = 1
	       AND ZT.OID_TERR = ZTA.TERR_OID_TERR
	       AND ZT.IND_BORR = 0
		   AND CB.COD_CABE_BORE =#codigoCabecera#
		   AND CB.COD_PAIS= #codigoPais#
	</select>      
	
	  
 	<update id="updateBoletaRecojoCabecera" parameterClass="boletaRecojoCabecera">
        UPDATE INT_REC_CABEC_BOREC
		   SET ESBO_OID_ESTA_BOR1 = INT_PKG_RECLA.GEN_FN_DEVUE_OID_ESTAD_BOREC(#codigoPais#,#codigoEstado#),
		       ESBO_OID_ESTA_BOR2 = INT_PKG_RECLA.GEN_FN_DEVUE_OID_ESTAD_BOREC(#codigoPais#,#codigoResultado#),
		       NUM_RECO = #numeroRecojo#,
		       MORE_OID_MOTN_RECO_BORE = INT_PKG_RECLA.GEN_FN_DEVUE_OID_MOTNO_BOREC(#codigoPais#,#codigoMotivoNoRecojo1#),
		       FEC_RECO = TO_DATE (#fechaRecojo1#,'DD/MM/YYYY'),
		       HOR_RECO = #horaRecojo1#,
		       FEC_ULTI_ACTU = TRUNC(SYSDATE),		       
		       IND_REGR_YOBE = DECODE(#estado#,'1','1',IND_REGR_YOBE),
		       VAL_NOMB_TERC = #nombreTercero1#,
		       IND_REGR_YOB2 = DECODE(#estado#,'2','1',IND_REGR_YOB2),
		       FEC_REC2 = TO_DATE (#fechaRecojo2#,'DD/MM/YYYY'),
		       HOR_REC2 = #horaRecojo2#,
		       MORE_OID_MOTN_RECO_BOR2 = INT_PKG_RECLA.GEN_FN_DEVUE_OID_MOTNO_BOREC(#codigoPais#,#codigoMotivoNoRecojo2#),
		       VAL_NOMB_TER2 = #nombreTercero2#,
		       NUM_TOTA_UNID_RECO = #totalUnidadesRecogidas#,
		       NUM_LOTE_DEVU = DECODE(#estado#,'1',TO_CHAR(SYSDATE,'YYYYMMDD'),NUM_LOTE_DEVU),
		       NUM_LOTE_DEV2 = DECODE(#estado#,'2',TO_CHAR(SYSDATE,'YYYYMMDD'),NUM_LOTE_DEV2),
		       <isNotEmpty property="numeroRecojoInicio">
				   <isEqual property="numeroRecojoInicio" compareValue="1"> 
			           USU_MOD_BR1 = #codigoUsuario#,
		       </isEqual>
			       <isEqual property="numeroRecojoInicio" compareValue="2"> 
			           USU_MOD_BR2 = #codigoUsuario#,
		       </isEqual>
		  	   </isNotEmpty>
  		       FEC_CIERR  =  DECODE (#codigoEstado#,'CE',TRUNC(SYSDATE),FEC_CIERR )
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_CABE_BORE = #codigoCabecera#
  	</update>
	
	    
	<parameterMap id="executeCalculoCargosAbonosParams" class="map" >														
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>												
	    <parameter property="codigoCabecera"             	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>											
	</parameterMap>														
	<procedure id="executeCalculoCargosAbonos" parameterMap="executeCalculoCargosAbonosParams" >														
		{call INT_PKG_RECLA.INT_PR_CALCU_ABONO_CARGO_CONSU(?,?)}												
	</procedure>
	
	<parameterMap id="executeBloqueoConsultoraBoletaRecojoNoExitosaParams" class="map" >														
		<parameter property="codigoCliente"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>												
	    <parameter property="loginUsuario"             	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>											
  </parameterMap>														
														
  <procedure id="executeBloqueoConsultoraBoletaRecojoNoExitosa" parameterMap="executeBloqueoConsultoraBoletaRecojoNoExitosaParams" >														
		{call INT_PKG_RECLA.REC_PR_BLOQU_CONSU(?,?)}												
  </procedure>
	    
 	<update id="updateBoletaRecojoDetalle" parameterClass="boletaRecojoDetalle">
        UPDATE INT_REC_LINEA_BOREC
		   SET NUM_UNID_RECO = #unidadesRecogidas#,
		       IND_REGR_YOBE = #indicadorRegresoYobel1#,
		       IND_REGR_YOB2 = #indicadorRegresoYobel2#,
		       IND_DISC      = #indicadorDiscrepante#,
		       PROD_OID_PROD_DISC = INT_PKG_RECLA.GEN_FN_DEVUE_OID_PRODU_DISCR(#codigoProductoDiscrepante#),
		   	   COD_PROD_DISC      = #codigoProductoDiscrepante#,
		   	   NUM_LOTE_DEVU = DECODE(#indicadorRegresoYobel1#,'1',TO_CHAR(SYSDATE,'YYYYMMDD'),NUM_LOTE_DEVU),
		       NUM_LOTE_DEV2 = DECODE(#indicadorRegresoYobel2#,'1',TO_CHAR(SYSDATE,'YYYYMMDD'),NUM_LOTE_DEV2),
		       COD_VENT_DISC = #codigoVentaDiscrepante#,
		       COD_PERI_DISC =  #periodoDiscrepante#,
		       VAL_PREC_DISC = #precioDiscrepante#,
		       NUM_UNID_ELIM = #unidadesEliminadas#
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_CABE_BORE = #codigoCabecera#
		   AND COD_LINE_BORE = #codigoDetalle# 
  	</update>
  	
  	 <select id="getNestSecuenciaBoletaRecojoDetalleById" parameterClass="boletaRecojoCabecera" resultClass="java.lang.String">	     
	    SELECT INT_PKG_RECLA.GEN_FN_SIGSE_LINEA_BOREC(#codigoPais#,#codigoCabecera#) FROM  DUAL	     
	</select>   
  	<insert id="insertBoletaRecojoDetalle" parameterClass="boletaRecojoDetalle">

        INSERT INTO int_rec_linea_borec
		  (COD_PAIS,
		   COD_CABE_BORE,
		   COD_LINE_BORE,
		   NUM_SECU,
		   CARE_OID_CABE_RECL,
		   SOCA_OID_SOLI_CABE,
		   OPRE_OID_OPER_RECL,
		   PROD_OID_PROD,
		   COD_PROD,
		   MAFA_OID_MATR_FACT,
		   TOFE_OID_TIPO_OFER,
		   COPA_OID_PARA_GRAL,
		   PANP_OID_PARA_NIVE_PREM,
		   LOPA_OID_LOTE_PREM_ARTI,
		   NUM_UNID_RECL,
		   NUM_UNID_RECO,
		   OBSE_BORE,
		   PROD_OID_PROD_DISC,
		   COD_PROD_DISC,
		   IND_DISC,
		   LOR_OID_LINE_OPER_RECL,
		   IND_PROC_ALMA_FISI,
		   IND_ENVI_XERO,
		   IND_ENVI_YOBE,
		   IND_REGR_YOBE,
		   IND_OCS_PROC,
		   COD_OPER_HOMOL,
		   VAL_PREC,
		   VAL_PREC_CONT,
		   NUM_LOTE_ENVI,
		   NUM_LOTE_DEVU,
		   DES_OPER,
		   COD_OPER,
		   COD_ANTI,
		   REFE_COD_LINE_BORE,
		   IND_ENVI_XER2,
		   IND_ENVI_YOB2,
		   IND_REGR_YOB2,
		   NUM_LOTE_ENV2,
		   NUM_LOTE_DEV2,
		   COD_VENT_DISC,
		   COD_PERI_DISC,
           VAL_PREC_DISC)
	  SELECT cod_pais,
	         cod_cabe_bore,
	         int_rlb_seq.NEXTVAL,
	         #numeroSecuencia#,
	         care_oid_cabe_recl,
	         soca_oid_soli_cabe,
	         opre_oid_oper_recl,
	         prod_oid_prod,
	         cod_prod,
	         mafa_oid_matr_fact,
	         tofe_oid_tipo_ofer,
	         copa_oid_para_gral,
	         panp_oid_para_nive_prem,
	         lopa_oid_lote_prem_arti,
	         num_unid_recl,
	         #unidadesRecogidas#,
	         obse_bore,
	         INT_PKG_RECLA.GEN_FN_DEVUE_OID_PRODU_DISCR(#codigoProductoDiscrepante#),
	         #codigoProductoDiscrepante#,
	         IND_DISC,
	         lor_oid_line_oper_recl,
	         ind_proc_alma_fisi,
	         ind_envi_xero,
	         ind_envi_yobe,
	         IND_REGR_YOBE,
	         ind_ocs_proc,
	         cod_oper_homol,
	         val_prec,
	         val_prec_cont,
	         num_lote_envi,
	         num_lote_devu,
	         des_oper,
	         cod_oper,
	         cod_anti,
	         #codigoDetalle#,
	         ind_envi_xer2,
	         ind_envi_yob2,
	         IND_REGR_YOB2,
	         num_lote_env2,
	         num_lote_dev2,
	         #codigoVentaDiscrepante#,
		     #periodoDiscrepante#,
		     #precioDiscrepante#
	    FROM int_rec_linea_borec
	   WHERE refe_cod_line_bore IS NULL
	     AND COD_PAIS = #codigoPais#
		 AND COD_CABE_BORE = #codigoCabecera#
		 AND COD_LINE_BORE = #codigoDetalle# 
	</insert>

	<resultMap id="boletaRecojoNoExitosaResult" 		class="boletaRecojoNoExitosa"> 
        <result property="codigoPais"               column="CODIGOPAIS"/>
        <result property="codigoCabecera"           column="CODIGOCABECERA"/>
	    <result property="boletaRecojo"             column="BOLETARECOJO"/>
	    <result property="codigoCliente"            column="CODIGOCLIENTE"/>
	    <result property="region"                   column="REGION"/>
	    <result property="zona"                     column="ZONA"/>
	    <result property="seccion"                  column="SECCION"/>
	    <result property="territorio"               column="TERRITORIO"/>
	    <result property="periodoProceso"           column="PERIODOPROCESO"/>
	    <result property="fechaEmision1"            column="FECHAEMISION1"/>
	    <result property="fechaRecojo1"             column="FECHARECOJO1"/>
	    <result property="motivoNoRecojo1"          column="MOTIVONORECOJO1"/>
	    <result property="fechaEmision2"            column="FECHAEMISION2"/>
	    <result property="fechaRecojo2"             column="FECHARECOJO2"/>
	    <result property="motivoNoRecojo2"          column="MOTIVONORECOJO2"/>   
	    <result property="monto"   column="MONTO"/>  
	            
  </resultMap>     
	
	<!-- OBTIENE LAS BOLETAS DE RECOJO NO EXITOSAS -->
    <select id="getBoletasRecojoNOExitosasList" parameterClass="java.util.Map" resultMap="boletaRecojoNoExitosaResult">
	     
	    SELECT CB.COD_PAIS CODIGOPAIS,
	           CB.COD_CABE_BORE CODIGOCABECERA,
	           CB.VAL_NUME_BORE BOLETARECOJO,
               MC.COD_CLIE CODIGOCLIENTE,
               ZR.COD_REGI REGION,
               ZZ.COD_ZONA ZONA,
               ZS.COD_SECC SECCION,
               ZT.COD_TERR TERRITORIO,
               CB.COD_PERI_PROC PERIODOPROCESO,
               TO_CHAR(CB.FEC_INGR,'DD/MM/YYYY') FECHAEMISION1,
               TO_CHAR(CB.FEC_RECO,'DD/MM/YYYY') FECHARECOJO1,
               (
                SELECT DES_MOTN_RECO_BORE
                FROM INT_REC_MOTNO_RECOJ_BOREC 
                WHERE OID_MOTN_RECO_BORE = MORE_OID_MOTN_RECO_BORE 
               ) MOTIVONORECOJO1,
               TO_CHAR(CB.FEC_ING2,'DD/MM/YYYY') FECHAEMISION2,
               TO_CHAR(CB.FEC_REC2,'DD/MM/YYYY') FECHARECOJO2,
               (
                SELECT DES_MOTN_RECO_BORE
                FROM INT_REC_MOTNO_RECOJ_BOREC 
                WHERE OID_MOTN_RECO_BORE = MORE_OID_MOTN_RECO_BOR2 
               ) MOTIVONORECOJO2,
              SUM(LB.VAL_PREC*NUM_UNID_RECL) MONTO
          FROM INT_REC_CABEC_BOREC       CB,
               INT_REC_LINEA_BOREC       LB,
               MAE_CLIEN                 MC,
               ZON_REGIO                 ZR,
               ZON_ZONA                  ZZ,
               ZON_SECCI                 ZS,
               ZON_TERRI                 ZT,
               ZON_TERRI_ADMIN           ZTA,
               MAE_CLIEN_UNIDA_ADMIN     UA
         WHERE LB.COD_CABE_BORE = CB.COD_CABE_BORE
           AND CB.COD_PAIS = #codigoPais#
           AND CB.ESBO_OID_ESTA_BOR2 = 6
           AND CB.ESBO_OID_ESTA_BOR1 = 4
           AND CB.IND_OCS_PROC = 'F'
           AND UA.CLIE_OID_CLIE = CB.CLIE_OID_CLIE
           AND UA.PERD_OID_PERI_FIN IS NULL
           AND MC.OID_CLIE = CB.CLIE_OID_CLIE
           AND UA.ZTAD_OID_TERR_ADMI = ZTA.OID_TERR_ADMI
           AND ZTA.ZSCC_OID_SECC = ZS.OID_SECC
           AND ZS.IND_ACTI = 1
           AND ZS.ZZON_OID_ZONA = ZZ.OID_ZONA
           AND ZZ.IND_ACTI = 1
           AND ZZ.ZORG_OID_REGI = ZR.OID_REGI
           AND ZR.IND_ACTI = 1
           AND ZT.OID_TERR = ZTA.TERR_OID_TERR
           AND ZT.IND_BORR = 0
           AND CB.VAL_NUME_BORE LIKE #numeroBoleta# || '%'
           AND MC.COD_CLIE LIKE #codigoCliente# || '%'
           <![CDATA[  
           AND TRUNC(CB.FEC_INGR) <= TO_DATE(#fechaFinal#,'DD/MM/YYYY')
           AND TRUNC(CB.FEC_INGR) >= TO_DATE(#fechaInicial#,'DD/MM/YYYY')
           ]]>
           AND CB.COD_PERI_PROC = #codigoPeriodo#
           <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			ZR.COD_REGI   = #regionList[]#
           </iterate>
           <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			ZZ.COD_ZONA   = #zonaList[]#
           </iterate>
           <iterate prepend="AND" property="seccionList" open="(" close=")" conjunction="OR">
			ZS.COD_SECC   = #seccionList[]#
           </iterate>
		   <iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			ZT.COD_TERR   = #territorioList[]#
           </iterate>
           GROUP BY CB.COD_PAIS,
               CB.COD_CABE_BORE,
               CB.VAL_NUME_BORE,
               MC.COD_CLIE,
               ZR.COD_REGI,
               ZZ.COD_ZONA,
               ZS.COD_SECC,
               ZT.COD_TERR,
               CB.COD_PERI_PROC,MORE_OID_MOTN_RECO_BORE,MORE_OID_MOTN_RECO_BOR2,
               TO_CHAR(CB.FEC_INGR,'DD/MM/YYYY'),
               TO_CHAR(CB.FEC_RECO,'DD/MM/YYYY'),
               TO_CHAR(CB.FEC_ING2,'DD/MM/YYYY'),
               TO_CHAR(CB.FEC_REC2,'DD/MM/YYYY')
	</select>
	
	 <parameterMap id="executeProcesoBoletaRecojoNoExitosaParams" class="map" >
		<parameter property="boletaRecojoNoExitosa.codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="boletaRecojoNoExitosa.codigoCabecera"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	 
	  <procedure id="executeProcesoBoletaRecojoNoExitosa" parameterMap="executeProcesoBoletaRecojoNoExitosaParams" >
        {call INT_PKG_RECLA.INT_PR_REC_PROCE_BOREC_NOEXI(?,?) }
    </procedure>

	<resultMap id="labelValueResult"    class="labelValueGenerico">
        <result property="value"       column="VALUE"     />
        <result property="label"       column="LABEL"/>
    </resultMap>

	<resultMap id="getConsultoraPedidoResult"  class="java.util.HashMap">
		<result property="num_recl"	    column="NUM_RECL"/>
		<result property="num_doc"      column="NUM_DOC"/>
		<result property="cod_clie"     column="COD_CLIE"/>
		<result property="cod_usua"     column="COD_USUA"/>
		<result property="fec_ingr"     column="FEC_INGR"/>
		<result property="cod_pais"     column="COD_PAIS"/>
		<result property="cod_est_proc" column="COD_EST_PROC"/>
		<result property="cod_error"    column="COD_ERROR"/>
		<result property="des_error"    column="DES_ERROR"/>		
  </resultMap>
    <select id="getConsultoraPedidoList" parameterClass="java.util.Map" resultMap="getConsultoraPedidoResult">
		SELECT nvl2(#numNmp#,#numNmp#, TO_CHAR (a.val_nume_soli)) AS NUM_RECL, TO_CHAR(A.VAL_NUME_SOLI) AS NUM_DOC, 
			   B.COD_CLIE, #usuario# AS COD_USUA, TO_CHAR(SYSDATE,'DD/MM/YY') AS FEC_INGR, 
			   ' ' AS COD_PAIS, '0' AS COD_EST_PROC  ,'00' AS COD_ERROR, '.' AS DES_ERROR
		  FROM PED_SOLIC_CABEC A, MAE_CLIEN B
		 WHERE A.CLIE_OID_CLIE = B.OID_CLIE
		   AND A.VAL_NUME_SOLI = #numeroPedido#
		   AND B.COD_CLIE = #codigoConsultora#
		   AND A.TSPA_OID_TIPO_SOLI_PAIS IN (SELECT TSPA_OID_TIPO_SOLI_PAIS
		                                       FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS)
		  
	</select>

    <select id="getCampanaList" parameterClass="java.util.Map" resultMap="getConsultoraPedidoResult">
		SELECT TO_CHAR(A.VAL_NUME_SOLI) AS NUM_RECL, TO_CHAR(A.VAL_NUME_SOLI) AS NUM_DOC, 
			   B.COD_CLIE, #usuario# AS COD_USUA, TO_CHAR(SYSDATE,'DD/MM/YY') AS FEC_INGR, 
			   ' ' AS COD_PAIS, 
			   '0' AS COD_EST_PROC  ,'00' AS COD_ERROR,'.' AS DES_ERROR
		  FROM PED_SOLIC_CABEC A, MAE_CLIEN B, CRA_PERIO C, SEG_PERIO_CORPO D, ZON_ZONA E, ZON_REGIO F,
		       ZON_SECCI G,
		       ZON_TERRI H, 
		       ZON_TERRI_ADMIN I
		 WHERE A.CLIE_OID_CLIE = B.OID_CLIE
		   AND A.PERD_OID_PERI=C.OID_PERI AND C.PERI_OID_PERI=D.OID_PERI 
		   AND D.COD_PERI=#codigoPeriodo#
		   AND A.ZZON_OID_ZONA=E.OID_ZONA
		   AND E.ZORG_OID_REGI=F.OID_REGI
		   AND A.FEC_FACT=TO_DATE(#fechaFacturacion#,'DD/MM/YYYY')
		   AND H.OID_TERR=A.TERR_OID_TERR
		   AND I.TERR_OID_TERR=H.OID_TERR
		   AND I.ZSCC_OID_SECC=G.OID_SECC
		   and e.OID_ZONA = g.ZZON_OID_ZONA
           and a.ZTAD_OID_TERR_ADMI = i.OID_TERR_ADMI
           <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			F.COD_REGI   = #regionList[]#
           </iterate>
           <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			E.COD_ZONA   = #zonaList[]#
           </iterate>
           <iterate prepend="AND" property="seccionList" open="(" close=")" conjunction="OR">
			G.COD_SECC   = #seccionList[]#
           </iterate>
           <iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			H.COD_TERR   = #territorioList[]#
           </iterate>
		   AND A.TSPA_OID_TIPO_SOLI_PAIS IN (SELECT TSPA_OID_TIPO_SOLI_PAIS
		                                       FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS)
	</select>

	<parameterMap id="executeProcesoIngresoAnulacionNmpsParams" class="map" >
		<parameter property="numeroLote"	   			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="num_recl"	   				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="num_doc"      				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="cod_clie"     				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="cod_usua"     				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>    
		<parameter property="fec_ingr"     				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>    
		<parameter property="cod_pais"     				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>  
		<parameter property="cod_est_proc" 				jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="cod_error"    				jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="flagNotaMercaderia"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="flagGenerarEnvia"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoProceso"				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="usuario"					jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="des_error"					jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>		
		<parameter property="motivoAnulacion"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="tipoAnulacion"			    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
	<parameter property="observaciones"			    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
	</parameterMap>

    <procedure id="executeProcesoIngresoAnulacionNmps" parameterMap="executeProcesoIngresoAnulacionNmpsParams" >
		{call REC_PKG_PROCE.REC_PR_PROCE_INGRE_ANULA_NMPS(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
    </procedure>
	
	<parameterMap id="executeProcesoGenerarArchivoIngresoAnulacionNmpsParams" class="map" >
		<parameter property="numeroLote"				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoPais"	   			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSistema"      		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
	</parameterMap>

    <procedure id="executeProcesoGenerarArchivoIngresoAnulacionNmps" parameterMap="executeProcesoGenerarArchivoIngresoAnulacionNmpsParams" >
		{call REC_PKG_PROCE.REC_PR_DESCA_ARCHI_ANULA(?,?,?)}
    </procedure>

<!-- OBTIENE LAS BOLETAS DE RECOJO NO EXITOSAS -->
    <select id="getBoletasRecojoDiscrepantesList" parameterClass="java.util.Map" resultMap="boletaRecojoCabeceraResult">
	     	SELECT CAB.COD_PAIS CODIGOPAIS,
			       CAB.COD_CABE_BORE CODIGOCABECERA,
			       CAB.VAL_NUME_BORE BOLETARECOJO,
			       CAB.NUM_RECO NUMERORECOJO,
			       DECODE(CAB.NUM_RECO, 1, 'PRIMER RECOJO', 2,
			              'SEGUNDO RECOJO', '-') DESCNUMERORECOJO,
			       CODIGOCLIENTE,
			       NOMBRECLIENTE,
			       REGION,
			       ZONA,
			       SECCION,
			       TERRITORIO,
			       NVL(CAB.VAL_NUME_BOLE_DESP, '0') BOLETADESPACHO,
			       CAB.COD_PERI_PROC PERIODOPROCESO,
			       NULL CODIGOESTADO,
			       INT_PKG_RECLA.GEN_FN_DEVUE_DEEST_BOREC(CAB.ESBO_OID_ESTA_BOR1) ESTADO,
			       NULL CODIGORESULTADO,
			       INT_PKG_RECLA.GEN_FN_DEVUE_DEEST_BOREC(CAB.ESBO_OID_ESTA_BOR2) DESCRIPCIONRESULTADO,
			       TO_CHAR(CAB.FEC_INGR, 'DD/MM/YYYY') FECHAEMISION1,
			       TO_CHAR(CAB.FEC_RECO, 'DD/MM/YYYY') FECHARECOJO1,
			       CAB.HOR_RECO HORARECOJO1,
			       CAB.VAL_NOMB_TERC NOMBRETERCERO1,
			       NULL CODIGOMOTIVONORECOJO1,
			       (SELECT DES_MOTN_RECO_BORE
			          FROM INT_REC_MOTNO_RECOJ_BOREC
			         WHERE OID_MOTN_RECO_BORE = MORE_OID_MOTN_RECO_BORE) MOTIVONORECOJO1,
			       TO_CHAR(CAB.FEC_ING2, 'DD/MM/YYYY') FECHAEMISION2,
			       TO_CHAR(CAB.FEC_REC2, 'DD/MM/YYYY') FECHARECOJO2,
			       CAB.HOR_REC2 HORARECOJO2,
			       CAB.VAL_NOMB_TER2 NOMBRETERCERO2,
			       NULL CODIGOMOTIVONORECOJO2,
			       (SELECT DES_MOTN_RECO_BORE
			          FROM INT_REC_MOTNO_RECOJ_BOREC
			         WHERE OID_MOTN_RECO_BORE = MORE_OID_MOTN_RECO_BOR2) MOTIVONORECOJO2,
			       CAB.NUM_TOTA_UNID_RECO TOTALUNIDADESRECOGIDAS,
			       MONTOORIGINAL,
			       MONTODISCREPANTE,
			       DIFERENCIA,
	    	       DECODE(INT_PKG_RECLA.REC_FN_DEVUE_INDIC_BLOQU_CONSU(CODIGOCLIENTE),1, 'BLOQUEADA', '') BLOQUEO,
	    	       CB.IND_PROC_ALMA_FISI  INDICADORALMACENFISICO,	    	       
	    	       CB.IND_OCS_PROC        INDICADOROCSPROCESADO  	           
	  FROM (SELECT CB.COD_PAIS CODIGOPAIS,
	               CB.COD_CABE_BORE CODIGOCABECERA,
	               MC.COD_CLIE CODIGOCLIENTE,
	               TRIM(MC.VAL_NOM1) || ' ' || TRIM(MC.VAL_APE1) || ' ' ||
	               TRIM(MC.VAL_APE2) NOMBRECLIENTE,
	               ZR.COD_REGI REGION,
	               ZZ.COD_ZONA ZONA,
	               ZS.COD_SECC SECCION,
	               ZT.COD_TERR TERRITORIO,
	               SUM (CASE
                          WHEN LB.IND_DISC = '1' AND LB.REFE_COD_LINE_BORE IS NULL
                        THEN LB.VAL_PREC * NUM_UNID_RECL
                          ELSE 0 
                        END)MONTOORIGINAL,
	               SUM (DECODE (LB.IND_DISC,
                              '1', LB.VAL_PREC_DISC * NUM_UNID_RECO,
                              0)) MONTODISCREPANTE,
	               SUM (CASE
                          WHEN LB.IND_DISC = '1' AND LB.REFE_COD_LINE_BORE IS NULL
                         THEN LB.VAL_PREC * NUM_UNID_RECL
                         ELSE 0
                       END)
                   - SUM (DECODE (LB.IND_DISC,
                                '1', LB.VAL_PREC_DISC * NUM_UNID_RECO,
                                0)) DIFERENCIA
	          FROM INT_REC_CABEC_BOREC   CB,
	               INT_REC_LINEA_BOREC   LB,
	               MAE_CLIEN             MC,
	               ZON_REGIO             ZR,
	               ZON_ZONA              ZZ,
	               ZON_SECCI             ZS,
	               ZON_TERRI             ZT,
	               ZON_TERRI_ADMIN       ZTA,
	               MAE_CLIEN_UNIDA_ADMIN UA
	         WHERE LB.COD_CABE_BORE = CB.COD_CABE_BORE
	           AND CB.COD_PAIS = #codigoPais#
	           AND CB.ESBO_OID_ESTA_BOR2 = 7
	           AND CB.ESBO_OID_ESTA_BOR1 = 4
	           AND CB.IND_OCS_PROC = 'F'
	           AND UA.CLIE_OID_CLIE = CB.CLIE_OID_CLIE
	           AND UA.PERD_OID_PERI_FIN IS NULL
	           AND MC.OID_CLIE = CB.CLIE_OID_CLIE
	           AND UA.ZTAD_OID_TERR_ADMI = ZTA.OID_TERR_ADMI
	           AND ZTA.ZSCC_OID_SECC = ZS.OID_SECC
	           AND ZS.IND_ACTI = 1
	           AND ZS.ZZON_OID_ZONA = ZZ.OID_ZONA
	           AND ZZ.IND_ACTI = 1
	           AND ZZ.ZORG_OID_REGI = ZR.OID_REGI
	           AND ZR.IND_ACTI = 1
	           AND ZT.OID_TERR = ZTA.TERR_OID_TERR
	           AND ZT.IND_BORR = 0
               AND CB.VAL_NUME_BORE LIKE #numeroBoleta# || '%'
               AND MC.COD_CLIE LIKE #codigoCliente# || '%'
               <![CDATA[  
                 AND TRUNC(CB.FEC_INGR) <= TO_DATE(#fechaFinal#,'DD/MM/YYYY')
                 AND TRUNC(CB.FEC_INGR) >= TO_DATE(#fechaInicial#,'DD/MM/YYYY')
               ]]>
               AND CB.COD_PERI_PROC = #codigoPeriodo#
               <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		 	     ZR.COD_REGI   = #regionList[]#
               </iterate>
               <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		 	     ZZ.COD_ZONA   = #zonaList[]#
               </iterate>
               <iterate prepend="AND" property="seccionList" open="(" close=")" conjunction="OR">
			     ZS.COD_SECC   = #seccionList[]#
               </iterate>
		       <iterate prepend="AND" property="territorioList" open="(" close=")" conjunction="OR">
			     ZT.COD_TERR   = #territorioList[]#
               </iterate>        
         GROUP BY CB.COD_PAIS,
                  CB.COD_CABE_BORE,
                  MC.COD_CLIE,
                  TRIM(MC.VAL_NOM1) || ' ' || TRIM(MC.VAL_APE1) || ' ' ||
                  TRIM(MC.VAL_APE2),
                  ZR.COD_REGI,
                  ZZ.COD_ZONA,
                  ZS.COD_SECC,
                  ZT.COD_TERR) TEMP,
       INT_REC_CABEC_BOREC CAB
 WHERE TEMP.CODIGOPAIS = CAB.COD_PAIS
   AND TEMP.CODIGOCABECERA = CAB.COD_CABE_BORE
	</select>
	
	<resultMap id="getCodigoVentaListByCriteriaResult" class="java.util.HashMap">
		<result property="codigoPeriodoDiscrepante"			column="CODIGOPERIODO" />
		<result property="codigoVentaDiscrepante"			column="CODIGOVENTA" />
		<result property="precioDiscrepante"				column="PRECIOUNITARIO" />                
	</resultMap>
     
	<select id="getCodigoVentaListByCriteria" parameterClass="java.util.Map" resultMap="getCodigoVentaListByCriteriaResult">
		SELECT S.COD_PERI  CODIGOPERIODO,
		       D.VAL_CODI_VENT CODIGOVENTA,
		       D.PRECIO_UNITARIO PRECIOUNITARIO
		  FROM PRE_MATRI_FACTU_CABEC M,
		       PRE_OFERT             O,
		       PRE_OFERT_DETAL       D,
		       MAE_PRODU             P,
		       CRA_PERIO             C,
		       SEG_PERIO_CORPO       S
		 WHERE O.MFCA_OID_CABE = M.OID_CABE
		   AND D.OFER_OID_OFER = O.OID_OFER
		   AND D.PROD_OID_PROD = P.OID_PROD
		   AND P.COD_SAP = #codigoProducto#
		   AND M.PERD_OID_PERI = C.OID_PERI
		   AND C.PERI_OID_PERI = S.OID_PERI
		   AND S.COD_PERI = #codigoPeriodo#
		   AND D.VAL_CODI_VENT LIKE '%'||#codigoVenta#
	</select>
	
	 <parameterMap id="executeProcesoBoletaRecojoDiscrepanteParams" class="map" >
		<parameter property="boletaRecojoNoExitosa.codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="boletaRecojoNoExitosa.codigoCabecera"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	 
	  <procedure id="executeProcesoBoletaRecojoDiscrepante" parameterMap="executeProcesoBoletaRecojoDiscrepanteParams" >
        {call INT_PKG_RECLA.INT_PR_REC_PROCE_BOREC_DISCR(?,?) }
    </procedure>
    
    <update id="updateBoletaRecojoDiscrepanteDetalle" parameterClass="boletaRecojoDetalle">
        UPDATE INT_REC_LINEA_BOREC
		   SET COD_VENT_DISC = #codigoVentaDiscrepante#,                         
               COD_PERI_DISC = #periodoDiscrepante#,                         
               VAL_PREC_DISC = #precioDiscrepante#
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_CABE_BORE = #codigoCabecera#
		   AND COD_LINE_BORE = #codigoDetalle# 
  	</update>
  	<update id="updateBoletaRecojoDiscrepanteCabecera" parameterClass="boletaRecojoCabecera">
        UPDATE INT_REC_CABEC_BOREC
		   SET VAL_DIFE_DISC = #diferencia#
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_CABE_BORE = #codigoCabecera#
  	</update>
    
   <resultMap id="getRECEjecucionMensajesReclamosResult" class="java.util.HashMap">
        <result property="codigoMensaje"            		column="CODMENSAJE" />
        <result property="ejecucion"             			column="EJECUCION" />
    </resultMap>
     <select id="getRECEjecucionMensajesReclamos" parameterClass="java.util.Map" resultMap="getRECEjecucionMensajesReclamosResult">
       	SELECT M.COD_MENS CODMENSAJE,
		       M.DES_EXEC      EJECUCION
		  FROM REC_MENSJ_RECLA M
		 WHERE M.IND_ACTI = 1  
	</select>
	 <parameterMap id="executeRECEjecucionMensajesReclamosParams" class="map" >
		<parameter property="codigoMarca"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCanal"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoMensaje"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	
	  <procedure id="executeRECEjecucionMensajesReclamos" parameterMap="executeRECEjecucionMensajesReclamosParams" >
        {call INT_PKG_RECLA.INT_PR_REC_GENER_MENSJ_RECLA(?,?,?,?) }
    </procedure>

    <insert id="insertCabeceraReclamoDigitado" parameterClass="reclamoDigitadoCabecera">
        insert into REC_DIGIT_CABEC_SERVI 
		( 	COD_PAIS      ,     
  			NUM_DOCU      ,   
  			COD_PERI      ,  
  			COD_CLIE      , 
  			NUM_DOCU_CRUC ,
  			TIP_SOLI      ,
  			COD_SUB_ACCES ,
  			ACC_FISI      ,
  			FEC_PROC_DOC  ,
  			COD_REGI_ARRI ,
  			COD_ZONA_ARRI ,
  			STA_PROC      ,
  			COD_MOTI_RECH ,
  			COD_TIPO_DOCU ,
  			IND_EXPR,
  			USU_DIGI, 
			FEC_DIGI, 
			USU_MODI, 
			FEC_MODI,
			IND_ORIG,
			IND_CDR_RECH,
			VAL_OBSE_RECH_DEFI,
			COD_MOT_RECH_DEFI
		) 
		values (
  			#codigoPais#,
  			#numeroDocumento#,
  			#codigoPeriodo#,
  			#codigoCliente#,
  			#numeroDocumentoCruce#,
  			#tipoSolicitud#,
  			#codigoSubAcceso#,
  			#accesoFisico#,
  			to_char(sysdate,'YYYYMMDD'),
  			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_REGI'),
  			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_ZONA'),
  			#estadoProceso#,
  			#codigoMotivoRechazo#,
  			#codigoTipoDocumento#,
  			#indicadorExpress#,
  			#auditInfo.createdBy# 	, 
			#auditInfo.created# 	, 
			#auditInfo.updatedBy# 	, 
			#auditInfo.lastUpdated# ,
			#indicadorOrigen#,
			#indicadorCDRRechazo#,
			#observacionCDR#,
			#codigoMotivoRechazoDef#
		)

	</insert>
	
	<insert id="insertDetalleReclamoDigitado" parameterClass="reclamoDigitadoDetalle">
        insert into REC_DIGIT_DETAL_SERVI
		(   COD_PAIS         ,
		    NUM_DOCU         ,
		    COD_CLIE         ,
		    TIP_REFE         ,
		    COD_VENT_DEVU    ,
		    COD_VENT_DESE    ,
		    CAN_PROD_DEVU    ,
		    CAN_PROD_DESE    ,
		    STA_PROC         ,
		    COD_MOTI_RECH    ,
		    MOT_SPV          ,
		    COD_OPER         ,
		    COD_TIPO_OPER    ,
		    COD_TIPO_DOCU    ,
		    COD_ZONA         ,
		    COD_REGI         ,
		    COD_PERI         , 
		    NUM_LINE         ,
  			USU_DIGI, 
			FEC_DIGI, 
			USU_MODI, 
			FEC_MODI ,
			COD_MOT_RECH_DEFI      
		)
		values(
		      #codigoPais#,
		      #numeroDocumento#,
		      #codigoCliente#,
		      #tipoReferencia#,	
		      #codigoVentaDevuelve#,
		      #codigoVentaDesea#,
		      #cantidadProductosDevuelve#,
		      #cantidadProductosDesea#,
		      #estadoProceso#,
		      #codigoMotivoRechazo#,
		      #motivoSPV#,
		      #codigoOperador#,
		      #codigoTipoOperacion#,
		      #codigoTipoDocumento#,		      
		      GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_ZONA'),
		      GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_REGI'),
  			  #codigoPeriodo#,
  			  #numeroLinea#,
  			  #auditInfo.createdBy# 	, 
			  #auditInfo.created# 	, 
			  #auditInfo.updatedBy# 	, 
			  #auditInfo.lastUpdated#,
			  #codigoMotivoRechazoDef#  
		)
	</insert>
    
 	<select id="getOperacionesReclamos" parameterClass="java.util.Map" resultClass="comboOperaciones">      
       select distinct nvl(a.COD_OPER, '-') as codigo,
                nvl(a.DES_OPER, '-') 		as descripcion,
                nvl(a.IND_CAMB_OBLI, '-') as cambObli,
                nvl(a.IND_DESE_OBLI, '-') as deseObli,
                nvl(a.IND_CAMB_VALI, '-') as cambVali,
                nvl(a.IND_DESE_VALI, '-') as deseVali,
                nvl(a.VAL_CAMB_POPU, '-') as cambPopu,
                nvl(a.VAL_DESE_POPU, '-') as desdePopu,
                nvl(a.IND_VALI_CENT_SERV, '-') as valiCentServ,
                nvl(a.COD_OPER_SICC, '-') as codOperSicc,
                nvl(a.TIPO_OPER_SICC, '-') as tipoOperSicc,
                nvl(c.NUM_DIAS_HACI_ATRA, 0) as numDias
	  	from REC_DIGIT_HOMOL_OPER a, rec_opera b, rec_tipos_opera c
	   where b.OID_OPER =  c.ROPE_OID_OPER  
	     and B.COD_OPER = A.COD_OPER_SICC
	     and C.VAL_TIPO_OPER = A.TIPO_OPER_SICC
	     and NVL(a.IND_LINE_IGUA, '*') != '0'
	   order by descripcion
 	</select>
    
    <select id="getMotivosReclamos" parameterClass="java.util.Map" resultClass="comboBase">
		 SELECT BASE.Cod_Moti_Devo AS codigo,
                GEN.VAL_I18N AS descripcion
		 FROM GEN_I18N_SICC_PAIS GEN, 
		      SEG_IDIOM IDI, 
		      REC_MOTIV_DEVOL BASE
		 WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
		   AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
		   AND IDI.COD_ISO_IDIO = 'es'     
		   AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
		   AND TIP_MOTI_DEVU = 'C'
		 ORDER BY BASE.Cod_Moti_Devo
    </select>
    
    <select id="getConsultoraReclamoByCodigo" parameterClass="java.util.Map"  resultClass="consultoraLabelValue">
		SELECT b.cod_clie as label, 
               GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(b.cod_clie,'NOM_CLIE') as value,
              GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(b.cod_clie,'DES_ZONA') as zona,
              to_char(a.fec_fact,'dd/mm/yyyy') as fechaFactura,
              gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO(a.perd_oid_peri) as campana,
			  b.sal_deud_ante saldoUnico
        FROM  ped_solic_cabec       a,
              mae_clien             b,
              seg_subac             e,
              ped_tipo_solic_pais   tsp,
              ped_tipo_solic        ts
        WHERE a.clie_oid_clie = b.oid_clie
          AND a.sbac_oid_sbac = e.oid_sbac
          AND a.val_nume_soli = #numeroBoleta#
          AND e.cod_sbac = '000'
          AND a.ind_ts_no_conso = 0
          AND a.soca_oid_soli_cabe IS NULL
          AND a.tspa_oid_tipo_soli_pais = tsp.oid_tipo_soli_pais
          AND tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli
          AND ts.ind_soli_nega = 0
          AND ts.ind_cons = 1
    </select>
    
    <select id="getPeriodoReclamo" parameterClass="java.util.Map" resultClass="java.lang.String" >
	    <![CDATA[  
	    SELECT gen_pkg_gener.gen_fn_devuelve_des_perio
          ((DECODE
               ((SELECT COUNT (a.oid_soli_cabe)
				 FROM  ped_solic_cabec       a,
				       mae_clien             b,
				       cra_perio             c,
				       seg_perio_corpo       d,
				       seg_subac             e,
				       ped_tipo_solic_pais   tsp,
				       ped_tipo_solic        ts
				 WHERE a.clie_oid_clie = b.oid_clie
				   AND a.perd_oid_peri = c.oid_peri
				   AND c.peri_oid_peri = d.oid_peri
				   AND a.sbac_oid_sbac = e.oid_sbac
				   AND d.cod_peri = #codigoPeriodo#
				   AND e.cod_sbac = '000'
				   AND a.ind_ts_no_conso = 0
				   AND a.soca_oid_soli_cabe IS NULL
				   AND b.cod_clie = #codigoCliente#
				   AND a.tspa_oid_tipo_soli_pais = tsp.oid_tipo_soli_pais
				   AND tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli
				   AND ts.ind_soli_nega = 0
                    AND ts.ind_cons = 1),
                0, (SELECT oid_peri oid_peri
                              FROM cra_perio
                             WHERE fec_inic <= TRUNC (SYSDATE)
                               AND fec_fina >= TRUNC (SYSDATE)
				                             AND ROWNUM = 1),
                (DECODE
                    ((SELECT COUNT (*)
				                                    FROM fac_contr_cierr
				                                    WHERE tcie_oid_tipo_cier = 2
                         AND perd_oid_peri =
                                (SELECT oid_peri oid_peri
                                   FROM cra_perio
                                  WHERE fec_inic <= TRUNC (SYSDATE)
                                    AND fec_fina >= TRUNC (SYSDATE)
				                                                           AND ROWNUM = 1)
                         AND zzon_oid_zona =
                                (SELECT c.oid_zona
									                                       FROM zon_terri_admin a,
									                                            zon_secci       b,
									                                            zon_zona        c
									                                      WHERE a.zscc_oid_secc = b.oid_secc
									                                        AND b.zzon_oid_zona = c.oid_zona
                                    AND a.oid_terr_admi =
                                           (SELECT ztad_oid_terr_admi
                                              FROM mae_clien_unida_admin
                                             WHERE clie_oid_clie =
                                                      gen_pkg_gener.gen_fn_devuelve_id_cliente
                                                                           (#codigoCliente#)
                                               AND perd_oid_peri_fin IS NULL))),
                     0, (((
                             SELECT oid_peri oid_peri
                              FROM cra_perio
                             WHERE fec_inic <= TRUNC (SYSDATE)
                               AND fec_fina >= TRUNC (SYSDATE)
                               AND ROWNUM = 1
                              ))),
                     (((
                            SELECT oid_peri oid_peri
                             FROM cra_perio
							 WHERE fec_inic >= TRUNC (SYSDATE)		                                                                                                            
                              AND ROWNUM = 1
                     )))
                    )
                )
               )
           )
				)
  	FROM DUAL
		 ]]>    
    </select>
    
    <select id="getCodigoOperacion" parameterClass="java.util.Map"  resultClass="java.lang.String">
		select cod_oper 
		from REC_DIGIT_HOMOL_OPER 
		where COD_ITM_DUPL = #codigoItemDuplicado# and 
		      ind_line_igua = #indicadorIgual#
    </select>

<insert id="insertTablaCodigosVenta" parameterClass="java.util.Map">
        insert into REC_BOREC_CODVE
        (
          cod_pais, 
          cod_peri,
	      cod_vent
		)
        values
		(
	  		#codigoPais# ,
	  		#periodo#	,
	  		#codigoVenta#  
		)
	</insert>

    <parameterMap id="executeEnviarReclamosDigitadosParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="usuario.login"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="numeroLote"                    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoDocumento"		     jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
    </parameterMap>
	 
	<procedure id="executeEnviarReclamosDigitados" parameterMap="executeEnviarReclamosDigitadosParams" >
        {call REC_PKG_PROCE.REC_PR_PROCE_ENVIA_RECLA_DIGIT(?,?,?,?) }
    </procedure>
    
    <select id="getExisteReclamo" parameterClass="java.util.Map"  resultClass="java.lang.String">
		select NUM_DOCU_CRUC 
		from REC_DIGIT_CABEC_SERVI
		where COD_PAIS = #codigoPais# AND 
		      NUM_DOCU = #numeroDocumento# AND 
		      COD_PERI = #codigoPeriodo# AND 
		      COD_CLIE = #codigoCliente# 
    </select>

     <!-- OBTIENE EL LISTADO DE ESTADOS ACTIVOS -->
    <select id="getEstados" parameterClass="string" resultClass="baseGenerico">
  		SELECT cod_liqu_bore AS CODIGO,
  		       des_liqu_bore AS DESCRIPCION
		FROM INT_REC_LIQUI_BOREC
		WHERE ind_nvl_liqu_bore = 1
    </select>
    
    <select id="getCabecerasBoletasReclamo" parameterClass="java.util.Map"  resultMap="cabecerasReclamosResult">
		select cod_cabe_bore codigoBR,
		       val_nume_bore NumeroBR,
		       cod_clie,
		       cod_regi region,
		       cod_zona zona,
		       cod_peri_proc periodo,
		       (select DES_MOTN_RECO_BORE from INT_REC_MOTNO_RECOJ_BOREC where oid_motn_reco_bore = more_oid_motn_reco_bore) MotivoNoRecojo1,
		       (select DES_MOTN_RECO_BORE from INT_REC_MOTNO_RECOJ_BOREC where oid_motn_reco_bore = more_oid_motn_reco_bor2) MotivoNoRecojo2,
		       ind_cier_auto,
		       imp_cargo,
		       imp_abono,
		       decode(IND_OCS_PROC,'V','X',NULL ) APRUEBA,
		       decode(IND_OCS_PROC,'R','X',NULL ) RECHAZA
		from  int_Rec_cabec_borec
		where COD_PAIS = #codigoPais# 
		  and cod_peri_proc >= #codigoPeriodo#
		  <isNotEmpty prepend="AND" property="codigoPeriodoFinal">
		   <![CDATA[ 
		     cod_peri_proc <= #codigoPeriodoFinal#
		  ]]>
		  </isNotEmpty>
		  <isNotEmpty prepend="AND" property="numeroBoleta">
		  	 (val_nume_bore = #numeroBoleta# or #numeroBoleta# is null)
		  </isNotEmpty>
		  <isNotEmpty prepend="AND" property="codigoConsultora">
		  	(cod_clie like '%'||#codigoConsultora#||'%')
		  </isNotEmpty>	
		  and esbo_oid_esta_bor1= 4
		  and ((esbo_oid_esta_bor2 in (6,7)) or MORE_OID_MOTN_RECO_BORE = 6)
		  <isNotEmpty prepend="AND" property="codigoEstado">
		  	IND_OCS_PROC = #codigoEstado#
		  </isNotEmpty>
		  <isNotEmpty property="regionList">
		  <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		      COD_REGI = #regionList[]#
          </iterate>
          </isNotEmpty>
          <isNotEmpty property="zonaList">
          <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		      COD_ZONA = #zonaList[]#
          </iterate>
          </isNotEmpty>
    </select>
    
    <select id="getDetallesBoletasReclamo" parameterClass="java.util.Map"  resultMap="detallesReclamosResult">
		  SELECT CUV,
		  		 DESCRIPCION_PRODUCTO,
		  		 NRO_CDR,
		  		 NRO_DESPACHO,
		  		 PERIODO_REFERENCIA,
		  		 CODIGO_SAP,
		  		 RECLAMADAS,
		  		 RECOGIDAS,
		  		 ELIMINADAS,
		  		 CARGO,
		  		 ABONO
		  FROM (SELECT DECODE(L.COPA_OID_PARA_GRAL,
		                      NULL,
		                      INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_MFACT(L.TOFE_OID_TIPO_OFER,
		                                                                 L.MAFA_OID_MATR_FACT,
		                                                                 l.prod_oid_prod),
		                      INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_FICTI(L.LOPA_OID_LOTE_PREM_ARTI,
		                                                                 L.PANP_OID_PARA_NIVE_PREM,
		                                                                 L.COPA_OID_PARA_GRAL,
		                                                                 l.prod_oid_prod)) CUV,
		               INT_PKG_RECLA.GEN_FN_DESC_PROD(l.prod_oid_prod) descripcion_producto,     
		               (select num_recl
		                  from rec_cabec_recla
		                 where oid_cabe_recl = L.CARE_OID_CABE_RECL) nro_cdr,                                                         
		               (select val_nume_soli
		                  from ped_solic_cabec
		                 where oid_soli_cabe = l.SOCA_OID_SOLI_CABE) nro_despacho,
		               (select a.COD_PERI
		                  from ped_solic_cabec p, seg_perio_corpo a, cra_perio b
		                 where oid_soli_cabe = l.SOCA_OID_SOLI_CABE
		                   and p.perd_oid_peri = b.oid_peri
		                   and b.peri_oid_peri = a.oid_peri) periodo_referencia,
		               INT_PKG_RECLA.GEN_FN_CODSAP_PROD(L.prod_oid_prod) codigo_sap,
		               l.NUM_UNID_RECL reclamadas,
		               DECODE(L.IND_DISC, 1, 0, l.NUM_UNID_RECO) recogidas,
		               NUM_UNID_ELIM eliminadas,
                               decode(num_unid_elim,0,
		               decode(num_unid_recl,
		                      0,
		                      0,
		                      (num_unid_recl -
		                      DECODE(L.IND_DISC, 1, 0, l.NUM_UNID_RECO) +
		                      NUM_UNID_ELIM) * val_prec) ,
                              num_unid_elim*val_prec) cargo,  
		               decode(num_unid_recl,
		                      0,
		                      DECODE(L.IND_DISC, 1, 0, l.NUM_UNID_RECO) *
		                      val_prec_disc,
		                      0) abono
		          FROM INT_REC_LINEA_BOREC L
		         WHERE L.COD_CABE_BORE = #codigoBR#
		           and l.prod_oid_prod is not null
		           and l.REFE_COD_LINE_BORE is null
		        union ALL
		        SELECT L.COD_VENT_DISC cuv,
		               INT_PKG_RECLA.GEN_FN_DESC_PROD(l.prod_oid_prod_disc) descripcion_producto,
		               null nro_cdr, 
		               null nro_despacho,
		               L.COD_PERI_DISC periodo_referencia,
		               INT_PKG_RECLA.GEN_FN_CODSAP_PROD(L.prod_oid_prod_disc) codigo_sap,
		               0 reclamadas,
		               l.NUM_UNID_RECO recogidas,
		               0 eliminadas,
		               0 cargo,  
		               decode(num_unid_recl, 0, 0, num_unid_reco * val_prec_disc) abono
		          FROM INT_REC_LINEA_BOREC L
		         WHERE L.COD_CABE_BORE = #codigoBR#
		           and l.prod_oid_prod is not null
		           and l.prod_oid_prod_disc is not null) A
		 ORDER BY 3
    </select>
    
    <select id="getTotalBR" parameterClass="java.util.Map"  resultClass="java.lang.String">
		    select count(cod_cabe_bore)
			from int_Rec_cabec_borec
			where cod_peri_proc like '%'||#codigoPeriodo#||'%'
			and esbo_oid_esta_bor1= 4
			and ((esbo_oid_esta_bor2 in (6,7)) or MORE_OID_MOTN_RECO_BORE = 6)
    </select>
    
    <select id="getPendientesBR" parameterClass="java.util.Map"  resultClass="java.lang.String">
		    select count(cod_cabe_bore)
			from int_Rec_cabec_borec
			where cod_peri_proc like '%'||#codigoPeriodo#||'%'
			and esbo_oid_esta_bor1= 4
			and ((esbo_oid_esta_bor2 in (6,7)) or MORE_OID_MOTN_RECO_BORE = 6)
			and IND_OCS_PROC = 'F' 
    </select>
    
    <select id="getAprobadasBR" parameterClass="java.util.Map"  resultClass="java.lang.String">
		    select count(cod_cabe_bore)
			from int_Rec_cabec_borec
			where cod_peri_proc like '%'||#codigoPeriodo#||'%'
			and esbo_oid_esta_bor1= 4
			and ((esbo_oid_esta_bor2 in (6,7)) or MORE_OID_MOTN_RECO_BORE = 6)
			and IND_OCS_PROC = 'V'
    </select>    
    
    <select id="getRechazadasBR" parameterClass="java.util.Map"  resultClass="java.lang.String">
		    select count(cod_cabe_bore)
			from int_Rec_cabec_borec
			where cod_peri_proc like '%'||#codigoPeriodo#||'%'
			and esbo_oid_esta_bor1= 4
			and ((esbo_oid_esta_bor2 in (6,7)) or MORE_OID_MOTN_RECO_BORE = 6)
			and IND_OCS_PROC = 'R'					    
    </select>
    
    <select id="getTotalCargosBR" parameterClass="java.util.Map"  resultClass="java.lang.String">
		    select sum(imp_cargo)
			from int_Rec_cabec_borec
			where cod_peri_proc like '%'||#codigoPeriodo#||'%'
			and esbo_oid_esta_bor1= 4
			and ((esbo_oid_esta_bor2 in (6,7)) or MORE_OID_MOTN_RECO_BORE = 6)					    
    </select>    
    
    <select id="getTotalAbonosBR" parameterClass="java.util.Map"  resultClass="java.lang.String">
		    select sum(imp_abono)
			from int_Rec_cabec_borec
			where cod_peri_proc like '%'||#codigoPeriodo#||'%'
			and esbo_oid_esta_bor1= 4
			and ((esbo_oid_esta_bor2 in (6,7)) or MORE_OID_MOTN_RECO_BORE = 6)					    
    </select>    
    
    <parameterMap id="aprobarReclamoDigitadosParams" class="map" >
		<parameter property="codigoPais"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoBoletaRecojo"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
 		<parameter property="codigoUsuario"		         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
    </parameterMap>
	 
	<procedure id="aprobarReclamoDigitados" parameterMap="aprobarReclamoDigitadosParams" >
      {call REC_PKG_PROCE.REC_PR_PROCE_APRUE_RECLA_DIGIT(?,?,?) }
     </procedure>
    
    <update id="updateRechazarReclamoDigitados" parameterClass="java.util.Map">
        UPDATE INT_REC_CABEC_BOREC
		SET IND_OCS_PROC = 'R',
		    usu_mod_liq = #codigoUsuario#
		WHERE COD_CABE_BORE = #codigoBoletaRecojo#
		AND IND_OCS_PROC = 'F'        
  	</update>

    <select id="getCabeceraBoletaRecojo" parameterClass="java.util.Map"  resultMap="cabeceraRecojoResult">
		select cod_cabe_bore codigoBR,
		       val_nume_bore NumeroBR,
				      (
		            select    des_esta_bore 
		          from int_rec_estad_borec
				        where     oid_esta_bore = esbo_oid_esta_bor1
		          ) gestion,
				      (
		            select    des_esta_bore 
		          from int_rec_estad_borec
				        where     oid_esta_bore = esbo_oid_esta_bor2
		          ) resultado,
		       cod_peri_proc periodo,
		       to_char(fec_ingr,'dd/MM/yyyy') fechaemision1,
		       to_char(fec_reco,'dd/MM/yyyy') fecharecojo1,
				      (
		            select    DES_MOTN_RECO_BORE 
		            from      INT_REC_MOTNO_RECOJ_BOREC 
		            where     oid_motn_reco_bore = more_oid_motn_reco_bore
		          ) MotivoNoRecojo1,
		       to_char(fec_ing2,'dd/MM/yyyy') fechaemision2,
		       to_char(fec_rec2,'dd/MM/yyyy') fecharecojo2,
				      (
		            select    DES_MOTN_RECO_BORE 
		            from      INT_REC_MOTNO_RECOJ_BOREC 
		            where     oid_motn_reco_bore = more_oid_motn_reco_bor2
		          ) MotivoNoRecojo2,
		       to_char(fec_cierr,'dd/MM/yyyy') fechacierrebr,
		       imp_cargo cargo,
		       imp_abono abono,
				      (
		            SELECT    des_liqu_bore
		FROM INT_REC_LIQUI_BOREC
			          WHERE     ind_nvl_liqu_bore = 1 
		              and     cod_liqu_bore = IND_OCS_PROC 
		          ) liquidacion,
		          cod_clie
		  from int_Rec_cabec_borec
		where     cod_clie like #codigoConsultora#
		  and     val_nume_bore like #numeroBoletaRecojo#
		ORDER BY cod_peri_proc DESC				
    </select>
    
    <select id="getDatosConsultora" parameterClass="java.util.Map"  resultMap="datosConsultoraResult">
		select m.cod_clie codigoCliente,
			   m.VAL_NOM1||' '||m.val_ape1||' '||m.val_ape2 nombreCliente,
		       zz.DES_ZONA zona,
		       man.VAL_NOM1||' '||man.val_ape1||' '||man.val_ape2 nombreManager
		  from mae_clien             m,
		       mae_clien_unida_admin ud,
		       zon_terri_admin       zta,
		       zon_secci             zs,
		       zon_zona              zz,
		       mae_clien             man
		 where m.cod_clie = #codigoConsultora#
		   and ud.clie_oid_clie = m.oid_clie
		   and perd_oid_peri_fin is null
		   and zta.OID_TERR_ADMI = ztad_oid_terr_admi
		   and zta.ZSCC_OID_SECC = zs.OID_SECC
		   and zs.ZZON_OID_ZONA = zz.oid_zona
		   and man.oid_clie = zz.clie_oid_clie
    </select>
    
    <select id="getBloqueoConsultora" parameterClass="java.util.Map"  resultClass="string">
    	SELECT DECODE(COUNT(OID_BLOQ),0,'  '
                                       ,'BLOQUEADA')
		  FROM MAE_CLIEN_BLOQU
		 WHERE CLIE_OID_CLIE = (SELECT OID_CLIE
			                      FROM MAE_CLIEN
			                     WHERE COD_CLIE = #codigoConsultora#)
		   AND FEC_DESB IS NULL
		   AND TIBQ_OID_TIPO_BLOQ IN (SELECT OID_TIPO_BLOQ
			                            FROM MAE_TIPO_BLOQU
			                           WHERE COD_TIPO_BLOQ = 'BR')
    </select>
    
    <select id="getDetallesBoletaRecojo" parameterClass="java.util.Map"  resultMap="detallesBoletaRecojoResult">
		SELECT *
			FROM
			(
			SELECT  
			        DECODE(L.COPA_OID_PARA_GRAL,
		                      NULL,
		                      INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_MFACT(L.TOFE_OID_TIPO_OFER,
		                                                                 L.MAFA_OID_MATR_FACT,
		                                                                 l.prod_oid_prod),
		                      INT_PKG_RECLA.GEN_FN_DEVUE_COD_VENTA_FICTI(L.LOPA_OID_LOTE_PREM_ARTI,
		                                                                 L.PANP_OID_PARA_NIVE_PREM,
		                                                                 L.COPA_OID_PARA_GRAL,
		                                                                 l.prod_oid_prod)) CUV,
		               INT_PKG_RECLA.GEN_FN_DESC_PROD(l.prod_oid_prod) descripcion_producto,    
			        (select num_recl from rec_cabec_recla where oid_cabe_recl = L.CARE_OID_CABE_RECL) nro_cdr, 
			        (select val_nume_soli from ped_solic_cabec where oid_soli_cabe = l.SOCA_OID_SOLI_CABE) nro_despacho,
		               (select a.COD_PERI
			         from ped_solic_cabec p,
			              seg_perio_corpo a,
			              cra_perio b 
		                 where oid_soli_cabe = l.SOCA_OID_SOLI_CABE
		                   and p.perd_oid_peri = b.oid_peri
			         and b.peri_oid_peri = a.oid_peri
			         ) periodo_referencia ,
		               des_oper tipo_cdr,
		               INT_PKG_RECLA.GEN_FN_CODSAP_PROD(L.prod_oid_prod) codigo_sap, 
		               l.NUM_UNID_RECL reclamadas,
		               DECODE(L.IND_DISC, 1, 0, l.NUM_UNID_RECO) recogidas,
			        l.NUM_UNID_ELIM eliminadas,
		               val_prec precio_facturado,
			        decode(num_unid_elim,0,decode(num_unid_recl,0,0,(num_unid_recl-DECODE(L.IND_DISC,1,0,l.NUM_UNID_RECO)+l.NUM_UNID_ELIM)*val_prec),num_unid_elim*val_prec) cargo,
			        decode(num_unid_recl,0,DECODE(L.IND_DISC,1,0,l.NUM_UNID_RECO)*val_prec_disc,0) abono        
		          FROM INT_REC_LINEA_BOREC L
		         WHERE L.COD_CABE_BORE = #codigoBoletaRecojo#
		           and l.prod_oid_prod is not null
		           and l.REFE_COD_LINE_BORE is null
		        
			union ALL
		        SELECT L.COD_VENT_DISC cuv,
		               INT_PKG_RECLA.GEN_FN_DESC_PROD(l.prod_oid_prod_disc) descripcion_producto, 
		               null nro_cdr, 
		               null nro_despacho,
		               L.COD_PERI_DISC periodo_referencia,
		               null tipo_cdr,
		               INT_PKG_RECLA.GEN_FN_CODSAP_PROD(L.prod_oid_prod_disc) codigo_sap, 
			        0 reclamadas, 
		               l.NUM_UNID_RECO recogidas,
			        0 eliminadas,
		               val_prec_disc precio_facturado,
			        0 cargo,
		               decode(num_unid_recl, 0, 0, num_unid_reco * val_prec_disc) abono
		          FROM INT_REC_LINEA_BOREC L
		         WHERE L.COD_CABE_BORE = #codigoBoletaRecojo#
		           and l.prod_oid_prod is not null
			and l.prod_oid_prod_disc is not null
			) A
		 ORDER BY 3
    </select>
   
    <select id="getCodigoConsultora" parameterClass="java.util.Map"  resultClass="string">
    	Select val_nom1 || ' ' || val_nom2 || ' ' || val_ape1 || ' ' || val_ape2  NOMBRE 
		from mae_clien 
		where cod_clie =  #codigoConsultora#
    </select>
    
    <select id="getReclamosMatriz" parameterClass="java.util.Map"  resultMap="reclamoMatrizResult">
		select b.VAL_CODI_VENT,
		       b.PRECIO_UNITARIO,
		       b.IMP_PREC_POSI,
		       d.COD_SAP,
		       e.VAL_I18N,
		       b.TOFE_OID_TIPO_OFER OID_TIPO_OFERTA,
		       d.OID_PROD,
		       f.OID_MATR_FACT,
		       NULL OID_SOLI_POSI,
		       NULL OID_CONCU,
		       NULL OID_NIVEL,
		       NULL OID_LOTE,
		       NULL OID_TIPO_CONCU,
		       b.OID_DETA_OFER,
		       b.FOPA_OID_FORM_PAGO OID_FORMA_PAGO
		  from pre_ofert             a,
		       pre_ofert_detal       b,
		       pre_matri_factu_cabec c,
		       mae_produ             d,
		       gen_i18n_sicc_pais    e,
		       pre_matri_factu       f
		 where a.OID_OFER = b.OFER_OID_OFER
		   and a.MFCA_OID_CABE = c.OID_CABE
		   and b.PROD_OID_PROD = d.OID_PROD
		   and b.OID_DETA_OFER = f.OFDE_OID_DETA_OFER
		   and e.ATTR_ENTI = 'MAE_PRODU'
		   and e.VAL_OID = d.OID_PROD
		   <isNotEmpty prepend="AND" property="codigoVenta">
		   		b.VAL_CODI_VENT = #codigoVenta#
		   </isNotEmpty>
		   <isNotEmpty prepend="AND" property="codigoSAP">
		   		d.COD_SAP = #codigoSAP#
		   </isNotEmpty> 
		   <isNotEmpty prepend="AND" property="descripcion">
		   		e.VAL_I18N like '%'||#descripcion#||'%'
		   </isNotEmpty>
		   and c.PERD_OID_PERI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodo#)		
    </select>
    
    <select id="getReclamosPremio" parameterClass="java.util.Map"  resultMap="reclamoPremioResult">
    	select j.COD_VENT_FICT,
		       0 FACTURA,
		       j.IMP_PREC_PUBL CONTABLE,
		       d.COD_SAP,
		       e.VAL_I18N,
		       NULL OID_TIPO_OFERTA,
		       d.OID_PROD,
		       NULL OID_MATR_FACT,
		       NULL OID_SOLI_POSI,
		       b.OID_PARA_GRAL OID_CONCU,
		       h.PANP_OID_PARA_NIVE_PREM OID_NIVEL,
		       i.OID_LOTE_PREM_ARTI OID_LOTE,
		       b.ICTP_OID_TIPO_PROG OID_TIPO_CONCU,
		       NULL OID_DETA_OFER,
		       NULL OID_FORMA_PAGO
		  from mae_produ             d,
		       gen_i18n_sicc_pais    e,
		       inc_concu_param_gener b,
		       inc_param_gener_premi f,
		       inc_param_nivel_premi g,
		       inc_premi_artic       h,
		       inc_lote_premi_artic  i,
		       inc_artic_lote        j
		 where e.ATTR_ENTI = 'MAE_PRODU'
		   and e.VAL_OID = d.OID_PROD
		   and f.COPA_OID_PARA_GRAL = b.OID_PARA_GRAL
		   and f.OID_PARA_GENE_PREM = g.PAGP_OID_PARA_GENE_PREM
		   and g.OID_PARA_NIVE_PREM = h.PANP_OID_PARA_NIVE_PREM
		   and h.OID_PREM_ARTI = i.PRAR_OID_PREM_ARTI
		   and i.OID_LOTE_PREM_ARTI = j.LOPA_OID_LOTE_PREM_ARTI
		   and j.PROD_OID_PROD = d.OID_PROD
           
	   <isNotEmpty prepend="AND" property="codigoVenta">
	   		j.COD_VENT_FICT = #codigoVenta#
	   </isNotEmpty>	
	   <isNotEmpty prepend="AND" property="codigoSAP">	 
	   		d.COD_SAP = #codigoSAP#
	   </isNotEmpty> 
	   <isNotEmpty prepend="AND" property="descripcion">
	   		e.VAL_I18N like '%'||#descripcion#||'%'
	   </isNotEmpty>
	   UNION ALL
		select r.cod_vent_fict cod_premio,
		       0                         FACTURA,
		       j.IMP_PREC_PUBL           CONTABLE,
		       d.COD_SAP,
		       e.VAL_I18N,
		       NULL                      OID_TIPO_OFERTA,
		       d.OID_PROD,
		       NULL                      OID_MATR_FACT,
		       NULL                      OID_SOLI_POSI,
		       b.OID_PARA_GRAL           OID_CONCU,
		       h.PANP_OID_PARA_NIVE_PREM OID_NIVEL,
		       i.OID_LOTE_PREM_ARTI      OID_LOTE,
		       b.ICTP_OID_TIPO_PROG      OID_TIPO_CONCU,
		       NULL                      OID_DETA_OFER,
		       NULL                      OID_FORMA_PAGO
		  from mae_produ d,
		       gen_i18n_sicc_pais e,
		       inc_concu_param_gener b,
		       inc_param_gener_premi f,
		       inc_param_nivel_premi g,
		       inc_premi_artic h,
		       inc_lote_premi_artic i,
		       inc_artic_lote j,
		         inc_reemp_artic_lote r
		 where e.ATTR_ENTI = 'MAE_PRODU'
		   and e.VAL_OID = d.OID_PROD
		   and f.COPA_OID_PARA_GRAL = b.OID_PARA_GRAL
		   and f.OID_PARA_GENE_PREM = g.PAGP_OID_PARA_GENE_PREM
		   and g.OID_PARA_NIVE_PREM = h.PANP_OID_PARA_NIVE_PREM
		   and h.OID_PREM_ARTI = i.PRAR_OID_PREM_ARTI
		   and i.OID_LOTE_PREM_ARTI = j.LOPA_OID_LOTE_PREM_ARTI
		   and j.oid_arti_lote = r.arlo_oid_arti_lote
		   and r.prod_oid_prod = d.oid_prod
		<isNotEmpty prepend="AND" property="codigoVenta">
			j.COD_VENT_FICT = #codigoVenta#
		</isNotEmpty>	
		<isNotEmpty prepend="AND" property="codigoSAP">	 
			d.COD_SAP = #codigoSAP#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="descripcion">
			e.VAL_I18N like '%'||#descripcion#||'%'
		</isNotEmpty>
    </select>
   
   <insert id="insertTemporalDetallesIngresoAtencion" parameterClass="boletaRecojoDetalle">
        insert into REC_GTT_DETAL_INGRE_ATENC
		(   COD_VENT      , 
			VAL_PREC      ,
			VAL_PREC_CONT ,
			COD_SAP       ,
			DES_PROD      ,
			OID_TIPO_OFER ,
			OID_PROD      ,
			OID_MATR_FACT ,
			OID_OPER_RECL ,
			OID_SOLI      ,
			OID_PARA_NIVE ,
			OID_LOTE_ARTI ,
			OID_TIPO_CONC ,
			OID_DETAL_OFER,
			OID_FORM_PAGO ,
			NUM_UNID
		)
		values(
			#codigoVenta#,
			to_number(#precio#,'9999999999.99'),
			to_number(#precioContable#,'999999999999.99'),
			#codigoSAP#,
			#descripcionProducto#,
			#idTipoOferta#,
			#idProducto#,
			#idMatrizFacturacion#,
			#idOperacionReclamo#,
			#idSolicitud#,
			#idParametroNivel#,
			#idLoteArticulo#,
			#idTipoConcurso#,
			#idDetalleOferta#,
			#idFormaPago#,
			#unidadesReclamadas#    
		)
	</insert>
    
    <parameterMap id="procesarIngresoAtencionesParams" class="map" >
        <parameter property="numeroLote"                   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoProducto"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="tipoAtencion"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>						
		<parameter property="codigoCliente"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="campanhaProceso"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="campanhaReferencia"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPais"                   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="mensajeError"				   jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>	
		<parameter property="tipoOperacion"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
    </parameterMap>
	 
	<procedure id="procesarIngresoAtenciones" parameterMap="procesarIngresoAtencionesParams" resultClass="string">
        {call REC_PKG_PROCE.REC_PR_PROCE_INGRE_ATENC(?,?,?,?,?,?,?,?,?,?) }
    </procedure>
    
    <update id="setRegistroSinError" parameterClass="java.util.Map">
		UPDATE  INC_PREMI_PENDI_SOLIC
		   SET  NUM_LOTE = #numLote#,
				USU_MODI = #usuario#,
				FEC_MODI = SYSDATE,
				IND_PEND = '1'        
		WHERE   COD_PAIS = #codPais#
		  AND   COD_CLIE = #codCliente#
	      AND   PROD_OID_PROD = #idProducto#
	</update> 
    
    <select id="getListaDetallesDigitados" parameterClass="java.util.Map"  resultMap="reclamoDetalleResult">
    	select  COD_PAIS     , 
		        NUM_DOCU     ,
		        COD_CLIE     ,
		        TIP_REFE     ,
		        (select DES_OPER 
		         from REC_DIGIT_HOMOL_OPER 
		         where COD_OPER = TIP_REFE) DES_TIPO_REFE,
		        COD_VENT_DEVU,
		        COD_VENT_DESE,
		        CAN_PROD_DEVU,
		        CAN_PROD_DESE,
		        STA_PROC     ,
		        COD_MOTI_RECH,
		        MOT_SPV      ,
		        (SELECT GEN.VAL_I18N AS descripcion
		      	 FROM GEN_I18N_SICC_PAIS GEN, 
		      	      SEG_IDIOM IDI, 
		      	      REC_MOTIV_DEVOL BASE
		      	 WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
		      	   AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
		      	   AND IDI.COD_ISO_IDIO = 'es'     
		      	   AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
		      	   AND BASE.Cod_Moti_Devo  = MOT_SPV) DES_MOTI_SPV,
		        COD_OPER     ,
		        COD_TIPO_OPER,
		        COD_TIPO_DOCU,
		        COD_ZONA     ,
		        COD_REGI     ,
		        COD_PERI     ,
		        0       NUM_LINE
		from REC_DIGIT_DETAL_SERVI detal
		where detal.cod_pais = #codigoPais#
		  AND detal.num_docu = #numeroCDR#
		  and detal.cod_clie = #numeroBoletaDespacho#
		  and detal.cod_peri = #codigoPeriodo# 
		order by detal.num_line  
    </select>
    
    <delete id="deleteDetallesCDR" parameterClass="reclamoDigitadoCabecera">
       DELETE FROM REC_DIGIT_DETAL_SERVI a
		WHERE a.cod_pais = #codigoPais# and
		      a.num_docu = #numeroDocumento# AND
		      a.cod_peri = #codigoPeriodo# AND
		      a.cod_clie = #codigoCliente#		      		     
    </delete>
    
	<select id="getListaCabeceras" parameterClass="java.util.Map"  resultMap="cabeceraCDRDigitadasResult">
    	SELECT A.COD_PAIS COD_PAIS,
			   A.NUM_DOCU NUM_DOCU,
			   A.COD_PERI COD_PERI,
			   A.NUM_DOCU_CRUC NUM_DOCU_CRUC,
			   A.COD_CLIE COD_CLIE,
			   GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.COD_CLIE,'NOM_CLIE') NOMBRE,
			   A.COD_REGI_ARRI COD_REGI_ARRI,
			   A.COD_ZONA_ARRI COD_ZONA_ARRI,
		       TO_CHAR(A.FEC_DIGI, 'DD-MM-YYYY') FEC_DIGI,
		       A.USU_DIGI USU_DIGI,
		       A.IND_EXPR,
		       #tipoConsulta# TIP_CONS
		  FROM REC_DIGIT_CABEC_SERVI A
		 WHERE A.COD_PAIS=#codigoPais#
	   <isNotEmpty prepend="AND" property="codigoPeriodo">
	   		A.COD_PERI = #codigoPeriodo#
	   </isNotEmpty>	
	   <isNotEmpty prepend="AND" property="fechaIngreso">	 
	   		TRUNC(A.FEC_DIGI) = TO_DATE(#fechaIngreso#,'DD/MM/YYYY')
	   </isNotEmpty> 
       <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		              				 A.COD_REGI_ARRI  = #regionList[]#
	    </iterate>  
		<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		              				 A.COD_ZONA_ARRI   = #zonaList[]#
	    </iterate>    
	        AND A.IND_EXPR = #indExpress#
    </select>

	<select id="getListaDetalles" parameterClass="java.util.Map"  resultMap="detallesCDRDigitadasResult">
    	SELECT (SELECT B.DES_OPER 
    	          FROM REC_DIGIT_HOMOL_OPER B 
    	         WHERE B.COD_OPER =  A.TIP_REFE) OPERACION,
			   A.COD_VENT_DEVU COD_VENT_DEVU,
			   A.CAN_PROD_DEVU CAN_PROD_DEVU,
			   (SELECT GEN.VAL_I18N
        	FROM GEN_I18N_SICC_PAIS GEN, SEG_IDIOM IDI, REC_MOTIV_DEVOL BASE
      		 WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
        	 AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
        	       AND IDI.COD_ISO_IDIO = #codigoIso# 
        	 AND BASE.COD_MOTI_DEVO = A.MOT_SPV
        	       AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL')    MOTIVO,
			   A.COD_VENT_DESE COD_VENT_DESE,
			   A.CAN_PROD_DESE CAN_PROD_DESE
		  FROM REC_DIGIT_DETAL_SERVI    A
		 WHERE A.COD_PAIS=#codigoPais#
			   AND A.NUM_DOCU=#numeroDocumento#
	  
    </select>

	<delete id="deleteDetallesDigitados" parameterClass="java.util.Map">
       DELETE REC_DIGIT_DETAL_SERVI 
        WHERE COD_PAIS=#codigoPais#
       		 AND NUM_DOCU=#numeroDocumento#
       		  
    </delete>

	<delete id="deleteCabeceraDigitada" parameterClass="java.util.Map">
       DELETE REC_DIGIT_CABEC_SERVI
        WHERE COD_PAIS=#codigoPais#
       		 AND NUM_DOCU=#numeroDocumento#
       	  
    </delete>
      
    <select id="getSecuenciaZonaDiaria" resultMap="SecuenciaZonaDiariaResult">
		SELECT cod_zona, des_zona, num_secu
		  FROM app_rutas_trans, zon_zona
		 WHERE cod_ruta = cod_zona
		 ORDER BY num_secu	  
    </select>

    <resultMap id="datosBoletaRecojoSimplificadaResult" class="java.util.HashMap">
		<result property="codigoCliente"			column="CODIGO_CLIENTE" />
		<result property="descripcionZona"			column="DESC_ZONA" />
		<result property="gerenteZona"				column="GERENTE_ZONA" />      
		<result property="estadoBloqueo"			column="ESTADO_BLOQUEO" />
		<result property="situacionEnvio"			column="SITUACION_ENVIO" />  
		<result property="indicadorCerrada"			column="INDICADOR_CERRADA" />             
	</resultMap>
    
    <select id="getDatosBoletaRecojoSimplificada" resultMap="datosBoletaRecojoSimplificadaResult">
		SELECT b.cod_clie ||' '||b.val_ape1 ||' '|| b.val_ape2 ||' '|| b.val_nom1 ||' '|| b.val_nom2 as codigo_cliente,
		       gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(a.COD_CLIE,'DES_ZONA') as desc_zona,
		       (select x.val_ape1||' '||x.val_ape2 ||' '||x.val_nom1||' '||x.val_nom2
		          from mae_clien x,
		               zon_zona  y
		          where x.oid_clie = y.clie_oid_clie
		            and y.cod_zona = gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(a.COD_CLIE,'COD_ZONA')) as gerente_zona,
		       decode((SELECT COUNT(*)        
		                 FROM mae_clien_bloqu
		                WHERE clie_oid_clie = b.oid_clie
		                  AND fec_desb IS NULL
		                  AND tibq_oid_tipo_bloq in (SELECT oid_tipo_bloq
		                                  		         FROM mae_tipo_bloqu
		                            	                WHERE cod_tipo_bloq = 'BR')),0,' ','BLOQUEADA') as estado_bloqueo,
		       (SELECT NUM_RECO||' RECOJO - BR '|| 
		               (SELECT DES_ESTA_BORE FROM INT_REC_ESTAD_BOREC WHERE OID_ESTA_BORE = ESBO_OID_ESTA_BOR1) ||' '|| 
		               (SELECT DES_ESTA_BORE FROM INT_REC_ESTAD_BOREC WHERE OID_ESTA_BORE = ESBO_OID_ESTA_BOR2) TAG
		          FROM INT_REC_CABEC_BOREC
		         WHERE COD_CABE_BORE = a.val_nume_bore) as situacion_envio  ,
		        (select count(1) 
		           from INT_REC_CABEC_BOREC x, 
		                INT_REC_ESTAD_BOREC y
		           where x.esbo_oid_esta_bor1 = y.oid_esta_bore
		             and x.cod_cabe_bore = a.val_nume_bore
		             and y.cod_esta_bore = 'CE') indicador_cerrada                                              
		FROM INT_REC_CABEC_BOREC a,
		     MAE_CLIEN b,
		     ZON_ZONA c
		WHERE a.cod_clie = b.cod_clie
		  and a.val_nume_bore = #numeroBoletaRecojo#
		  and c.cod_zona = gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(a.COD_CLIE,'COD_ZONA')			  
    </select>
    
    <select id="getNovedadesRecojo" parameterClass="java.util.Map" resultClass="comboBase">      
    	SELECT COD_NOVE AS CODIGO, 
		       DES_NOVE AS DESCRIPCION
		FROM INT_REC_NOVED_BOREC
		WHERE COD_PAIS = #codigoPais#
		ORDER BY COD_NOVE    
 	</select>
    
    <select id="getCodigoCabeceraBoletaRecojo" parameterClass="java.util.Map" resultClass="string">
	    select cod_cabe_bore 
		from INT_REC_CABEC_BOREC 
		where val_nume_bore = #numeroBoletaRecojo#
		and cod_pais = #codigoPais#
	</select>
    
    <select id="getIndicadorExpressBoletaRecojo" parameterClass="java.util.Map" resultClass="string">
    	select nvl(ind_expr,'0') 
		  from REC_DIGIT_CABEC_SERVI
		 where COD_PAIS = #codigoPais#
		   and NUM_DOCU = #numeroCDR#
		   and COD_PERI = #codigoPeriodo#
		   and COD_CLIE = #numeroBoletaDespacho#
    </select>
    
    <resultMap id="motivosDevolucionResult"          class="java.util.HashMap">
    	<result property="codigo" 			column="CODIGO" 	/>
    	<result property="descripcion" 		column="DESCRIPCION"/>
    	<result property="codigoOperacionAnulacion" 	column="CODIGOOPERACIONANULACION"/>
    </resultMap>
       
    <select id="getMotivosDevolucion" parameterClass="java.util.Map" resultMap="motivosDevolucionResult">      
      select oid_moti_devo as CODIGO,
			 val_i18n as DESCRIPCION,
    		 COD_OPER_ANUL as CODIGOOPERACIONANULACION
	  from REC_MOTIV_DEVOL m,
		gen_i18n_sicc_pais  g
		where m.OID_MOTI_DEVO = g.val_oid
		and g.ATTR_ENTI = 'REC_MOTIV_DEVOL'
		and cod_moti_devo >= STO_PKG_GENER.STO_FN_OBTEN_PARAM_OCR(#codigoPais#,#codigoDevolucion#) 
		AND TIP_MOTI_DEVU = 'A' 
          order by M.COD_MOTI_DEVO
 	</select>
   
    	
	<select id="getTipoOfertaList" parameterClass="java.util.Map" resultMap="baseResult">
	    SELECT COD_TIPO_OFER as CODIGO,
	    	   VAL_I18N as DESCRIPCION
		FROM  pre_tipo_ofert o, 
			  gen_i18n_sicc_comun c 
		WHERE o.OID_TIPO_OFER = c.val_oid 
		AND C.ATTR_ENTI = 'PRE_TIPO_OFERT'
	</select>
	
	<select id="getCodigoCatalogoList" parameterClass="java.util.Map" resultMap="baseResult">
	  SELECT COD_CATA as CODIGO,
	  		 DES_CATA as DESCRIPCION 
	  FROM   PRE_CATAL
	  WHERE  PAIS_OID_PAIS=GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#)
	</select>
	
	<select id="getCodigoVentaOperaList" parameterClass="java.util.Map" resultMap="codigoVentaOperaResult">
	  SELECT a.cod_oper, 
	         C.VAL_DESC_LARG, 
	         a.cod_vent, 
	         a.cod_tipo_ofer, 
	         E.VAL_I18N ,
	         a.cod_cata, 
	         b.des_cata, 
	         a.cod_peri, 
	         a.cod_peri_fina,
	         A.COD_TIPO_OPER
	  FROM   REC_EXCEP_CODIG_VENTA_OPERA a,
			 pre_catal b, 
			 REC_OPERA C,
			 pre_tipo_ofert D, 
			 gen_i18n_sicc_comun E
 	  WHERE    a.cod_cata=b.cod_cata(+) 
 	         AND A.COD_OPER=C.COD_OPER 
 	         AND A.COD_TIPO_OFER= D.COD_TIPO_OFER(+) 
 	         AND D.OID_TIPO_OFER=E.VAL_OID(+) 
 	         AND E.ATTR_ENTI(+) = 'PRE_TIPO_OFERT'
			 <iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
			   A.COD_OPER = #codigoOperacion[]#
  			 </iterate>        	 
			 <isNotEmpty property="codigoPeriodoInicio">
			   AND (A.COD_PERI= #codigoPeriodoInicio#)
			 </isNotEmpty>
			 <iterate prepend="AND" property="codigoTipoOperacion" open="(" close=")" conjunction="OR">
			   (A.COD_OPER||'-'||A.COD_TIPO_OPER) = #codigoTipoOperacion[]#
  			 </iterate>        	 
 	         <isNotEmpty property="codigoPeriodoFinal">
			   AND (A.COD_PERI_FINA= #codigoPeriodoFinal#)
			 </isNotEmpty>
			 <isNotEmpty property="tipoBusqueda">
			   <isNotEmpty property="codigoVenta">
			   	 AND (A.COD_VENT= #codigoVenta#)
			   </isNotEmpty>
			   <isNotEmpty property="codigoCatalogo">
			   	 AND (A.COD_CATA= #codigoCatalogo#)
			   </isNotEmpty>
			     <isNotEmpty property="codigoTipoOferta">
			   	 AND (A.COD_TIPO_OFER= #codigoTipoOferta#)
			   </isNotEmpty>
		 </isNotEmpty>
 	  ORDER BY 	COD_PERI,
 	  			COD_OPER,
 	  			COD_TIPO_OPER 
	</select>
	
	<delete id="deleteCodigoVentaOpera" parameterClass="java.util.Map">
		DELETE    
		FROM      REC_EXCEP_CODIG_VENTA_OPERA
        WHERE COD_PAIS=#codigoPais#
        	AND COD_PERI=#codigoPeriodo#
        	AND COD_OPER=#codigoOperacion#
        	AND COD_TIPO_OPER=#codigoTipoOperacion#
 	   <isNotEmpty property="codigoVenta">
		  AND     COD_VENT = #codigoVenta#
	   </isNotEmpty>		  
	   <isEmpty property="codigoVenta">
	   		AND     COD_VENT IS NULL
	   </isEmpty>
		  
    </delete>
    
    <insert id="insertCodigoVentaOpera" parameterClass="java.util.Map">
    	INSERT INTO REC_EXCEP_CODIG_VENTA_OPERA
    	(COD_PAIS, 
    	 COD_PERI, 
    	 COD_VENT,
		 COD_OPER,
		 COD_TIPO_OPER,
		 COD_TIPO_OFER,
		 COD_PERI_FINA,
		 COD_CATA
		) 
		VALUES 
		( #codigoPais#,
		  #codigoPeriodoInicio#,
		  #codigoVenta#,
		  #codigoOperacion#,
		  #codigoTipoOperacion#,
		  #tipoOferta#,
		  #codigoPeriodoFin#,
		  #codigoCatalogo#
		  )

	</insert>
	
	<update id="updateCodigoVentaOpera" parameterClass="java.util.Map">
		  UPDATE REC_EXCEP_CODIG_VENTA_OPERA
		   SET    COD_VENT = #codigoVentaModifica#,
				 COD_TIPO_OFER=#tipoOferta#,
				 COD_PERI_FINA=#codigoPeriodoFin#,
				 COD_CATA= #codigoCatalogo#        
		  WHERE  COD_PAIS=#codigoPais#
		  	  AND COD_PERI=#codigoPeriodoInicio#    
		  	  AND COD_OPER=#codigoOperacion#
			  AND COD_TIPO_OPER=#codigoTipoOperacion#
		  AND     COD_VENT = #codigoVenta#
	  </update> 
	  <select id="getProductosFFNNEEList" parameterClass="java.util.Map" resultMap="produtosFFNNEEResult">
	  SELECT cod_sap COD_SAP,
	         cod_peri_inic PERI_INI,
	         cod_peri_fin PERI_FIN,
	         cod_regi COD_REGI
	  FROM   REC_PRODU_FM
 	  WHERE  COD_PAIS=#codigoPais#
 	        
 	         <isNotEmpty property="codigoPeriodoInicio">
			   AND (COD_PERI_INIC= #codigoPeriodoInicio#)
			 </isNotEmpty>
			 <isNotEmpty property="codigoPeriodoFin">
			   AND (COD_PERI_FIN= #codigoPeriodoFin#)
			 </isNotEmpty>
			  <isNotEmpty property="codigoRegion">
			   AND (COD_REGI= #codigoRegion#)
			 </isNotEmpty>
			
			 
	</select>
	<select id="getOidProducto" parameterClass="java.util.Map" resultClass="java.lang.String" >
      SELECT oid_prod
	  FROM mae_produ
	  WHERE cod_sap = #codigoSAP#
	</select>
	 <select id="getDescripcionProductoSAP" parameterClass="java.util.Map" resultClass="java.lang.String" >
      SELECT NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(#oidProducto#,'MAE_PRODU','es'),'-')  FROM DUAL

	</select>
	  
	<delete id="deleteProductosFFNNEE">
        DELETE FROM REC_PRODU_FM
        WHERE COD_PAIS=#codigoPais#
        	<isNotEmpty property="codigoPeriodoInicio">
			   AND (COD_PERI_INIC= #codigoPeriodoInicio#)
			 </isNotEmpty>
			 <isNotEmpty property="codigoPeriodoFin">
			   AND (COD_PERI_FIN= #codigoPeriodoFin#)
			 </isNotEmpty>
			  <isNotEmpty property="codigoRegion">
			   AND (COD_REGI= #codigoRegion#)
			 </isNotEmpty>
    </delete>
    
    <insert id="insertProductosFFNNEE" parameterClass="java.util.Map">
    	INSERT INTO REC_PRODU_FM
          (COD_PAIS,
           COD_SAP,
           COD_PERI_INIC,
           COD_PERI_FIN,
           COD_REGI)
          SELECT #codigoPais#,
                 #codigoSAP#,
                 #codigoPeriodoInicio#,
                 #codigoPeriodoFin#,
                 #codigoRegion#
            FROM DUAL
           WHERE NOT EXISTS (SELECT 1
                    FROM REC_PRODU_FM
                   WHERE COD_PAIS = #codigoPais#
                     AND COD_SAP = #codigoSAP#
                     AND COD_PERI_INIC = #codigoPeriodoInicio#
                     AND COD_PERI_FIN = #codigoPeriodoFin#
                     AND COD_REGI = #codigoRegion#)
	</insert>
	<select id="validaProductoFFNNEE" parameterClass="java.util.Map" resultClass="java.lang.String" >
      SELECT COUNT(1)
	  FROM REC_PRODU_FM
	  WHERE COD_PAIS = #codigoPais#
	  		AND COD_SAP = #codigoSAP#
	  		AND COD_PERI_INIC= #codigoPeriodoInicio#
	  		AND COD_PERI_FIN  = #codigoPeriodoFin#
	  		AND COD_REGI = #codigoRegion#
	</select>

	<resultMap id="listaCUVsResult" class="detallePedidosCDR">                            
		<result property="codigoVta"      		column="VAL_CODI_VENT" />                              
	    <result property="precioCat"   		    column="VAL_PREC_FACT" />       
		<result property="descripcion"   		column="DES_PROD" />        
	<result property="posicion"   		column="SOLI_POSI" />        
		<result property="precioCatalogo"   	column="VAL_PREC_CATA" />        
	</resultMap>
    
    <select id="getListaCodigosVentaCDR" parameterClass="java.util.Map" resultMap="listaCUVsResult">
		SELECT POS.VAL_CODI_VENT as VAL_CODI_VENT, 
		       POS.VAL_PREC_FACT_UNIT_LOCA as VAL_PREC_FACT,  
		       NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(POS.PROD_OID_PROD,'MAE_PRODU','es'),'-') as DES_PROD ,
		       POS.OID_SOLI_POSI SOLI_POSI,
		       POS.VAL_PREC_CATA_UNIT_LOCA VAL_PREC_CATA
		FROM PED_SOLIC_CABEC C,
		     PED_SOLIC_CABEC P,
		     PED_SOLIC_POSIC POS
		WHERE POS.SOCA_OID_SOLI_CABE = P.OID_SOLI_CABE
		  AND P.SOCA_OID_SOLI_CABE = C.OID_SOLI_CABE
		  AND C.VAL_NUME_SOLI = #numeroBoleta#
		  AND POS.VAL_CODI_VENT IS NOT NULL
		  AND EXISTS (SELECT 1       
		              FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP   
		              WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = C.TSPA_OID_TIPO_SOLI_PAIS)   
		UNION
		SELECT TO_CHAR(POS.VAL_CODI_VENT_FICT),
		       0 ,
		       NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(POS.PROD_OID_PROD,'MAE_PRODU','es'),'-') ,
		       POS.OID_SOLI_POSI,
		       POS.VAL_PREC_CATA_UNIT_LOCA VAL_PREC_CATA
		FROM PED_SOLIC_CABEC C,
		     PED_SOLIC_CABEC P,
		     PED_SOLIC_POSIC POS
		WHERE POS.SOCA_OID_SOLI_CABE = P.OID_SOLI_CABE
		  AND P.SOCA_OID_SOLI_CABE = C.OID_SOLI_CABE
		  AND C.VAL_NUME_SOLI = #numeroBoleta#
		  AND EXISTS (SELECT 1       
		              FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP   
		              WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = C.TSPA_OID_TIPO_SOLI_PAIS)                             
		  AND POS.VAL_CODI_VENT_FICT IS NOT NULL
	</select>
    
    <insert id="insertCabeceraReclamoDigitadoOnline" parameterClass="reclamoDigitadoCabecera">
        INSERT INTO INT_OCR_CABEC_SERVI_POSTV
          (COD_PAIS,
           COD_CIA,
           NUM_DOCU,
           COD_PERI,
           COD_CLIE,
           NUM_DOCU_CRUC,
           TIP_SOLI,
           COD_SUB_ACCES,
           ACC_FISI,
           FEC_PROC_DOC,
           COD_REGI_ARRI,
           COD_ZONA_ARRI,
           STA_PROC,
           COD_MOTI_RECH,
           COD_TIPO_DOCU,
           IND_ORIG,
           IND_EXPR,
           NUM_LOTE,
           ind_cdr_rech,
           val_obse_rech_defi,
           COD_MOT_RECH_DEFI
        )
        VALUES
          (#codigoPais#,
           (SELECT cod_comp    
              FROM bas_pais_compa
             WHERE cod_pais = #codigoPais#),
           #numeroDocumento#,
           #codigoPeriodo#,
           #codigoCliente#,
           #numeroDocumentoCruce#,
           #tipoSolicitud#,
           #codigoSubAcceso#,
           #accesoFisico#,
           to_char(sysdate,'YYYYMMDD'),
           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_REGI'),
           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_ZONA'),
           #estadoProceso#,
           #codigoMotivoRechazo#,
           #codigoTipoDocumento#,
           'C',
           #indicadorExpress#,
           #numeroLote#,
		   #indicadorCDRRechazo#,
		   #observacionCDR#,
		   #codigoMotivoRechazoDef#)
	</insert>
	
	<insert id="insertDetalleReclamoDigitadoOnline" parameterClass="reclamoDigitadoDetalle">
      INSERT INTO INT_OCR_DETAL_SERVI_POSTV
        (COD_PAIS,
         COD_CIA,
         NUM_DOCU,
         COD_CLIE,
         TIP_REFE,
         COD_VENT_DEVU,
         COD_VENT_DESE,
         CAN_PROD_DEVU,
         CAN_PROD_DESE,
         STA_PROC,
         COD_MOTI_RECH,
         MOT_SPV,
         COD_OPER,
         COD_TIPO_OPER,
         COD_TIPO_DOCU,
         COD_ZONA,
         COD_REGI,
         IND_ACCI,
         NUM_LOTE,
         COD_MOT_RECH_DEFI  )
      VALUES
        (#codigoPais#,
         (SELECT cod_comp    
            FROM bas_pais_compa
           WHERE cod_pais = #codigoPais#),
         #numeroDocumento#,
         #codigoCliente#,
         #tipoReferencia#,	
      	 #codigoVentaDevuelve#,
         #codigoVentaDesea#,
      	 #cantidadProductosDevuelve#,
         #cantidadProductosDesea#,
      	 #estadoProceso#,
         #codigoMotivoRechazo#,
         #motivoSPV#,
         #codigoOperador#,
      	 #codigoTipoOperacion#,
      	 #codigoTipoDocumento#,		      
      	 GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_ZONA'),
      	 GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_REGI'),  
         NULL,
         #numeroLote#,
         #codigoMotivoRechazoDef#)
	</insert>
	 
	<select id="getListaCabecerasHistorico" parameterClass="java.util.Map"  resultMap="cabeceraCDRDigitadasResult">
    	SELECT A.COD_PAIS COD_PAIS,
		       A.NUM_DOCU NUM_DOCU,
		       A.COD_PERI COD_PERI,
		       A.NUM_DOCU_CRUC NUM_DOCU_CRUC,
		       A.COD_CLIE COD_CLIE,
		       GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.COD_CLIE, 'NOM_CLIE') NOMBRE,
		       A.COD_REGI_ARRI COD_REGI_ARRI,
		       A.COD_ZONA_ARRI COD_ZONA_ARRI,
		       TO_CHAR(A.FEC_DIGI, 'DD-MM-YYYY') FEC_DIGI,
		       A.USU_DIGI USU_DIGI,
		       A.IND_EXPR,
		       #tipoConsulta# TIP_CONS
		  FROM REC_DIGIT_CABEC_SERVI_HISTO A
		 WHERE A.COD_PAIS=#codigoPais#
	   <isNotEmpty prepend="AND" property="codigoPeriodo">
	   		A.COD_PERI = #codigoPeriodo#
	   </isNotEmpty>	
	   <isNotEmpty prepend="AND" property="fechaIngreso">	 
	   		TRUNC(A.FEC_DIGI) = TO_DATE(#fechaIngreso#,'DD/MM/YYYY')
	   </isNotEmpty> 
       <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		    A.COD_REGI_ARRI  = #regionList[]#
	    </iterate>  
		<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		    A.COD_ZONA_ARRI   = #zonaList[]#
	    </iterate>    
	        AND A.IND_EXPR = #indExpress#
    </select>
    
   
	<select id="getListaDetallesHistoricos" parameterClass="java.util.Map"  resultMap="detallesCDRDigitadasResult">
    	SELECT (SELECT B.DES_OPER 
    	          FROM REC_DIGIT_HOMOL_OPER B 
    	         WHERE B.COD_OPER =  A.TIP_REFE) OPERACION,
			    A.COD_VENT_DEVU COD_VENT_DEVU,
			    A.CAN_PROD_DEVU CAN_PROD_DEVU,
			   (SELECT GEN.VAL_I18N
        	      FROM GEN_I18N_SICC_PAIS GEN, SEG_IDIOM IDI, REC_MOTIV_DEVOL BASE
      		     WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
        	       AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
        	       AND IDI.COD_ISO_IDIO = #codigoIso# 
        	       AND BASE.COD_MOTI_DEVO = A.MOT_SPV
        	       AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL')    MOTIVO,
			   A.COD_VENT_DESE COD_VENT_DESE,
			   A.CAN_PROD_DESE CAN_PROD_DESE			   
		  FROM REC_DIGIT_DETAL_SERVI_HISTO    A
		 WHERE A.COD_PAIS=#codigoPais#
		   AND A.NUM_DOCU=#numeroDocumento#
	  
    </select>
    
    <delete id="deleteDetallesDigitadosHistoricos" parameterClass="java.util.Map">
       DELETE REC_DIGIT_DETAL_SERVI_HISTO
        WHERE COD_PAIS=#codigoPais#
          AND NUM_DOCU=#numeroDocumento#
         
       		  
    </delete>
	
	<delete id="deleteCabeceraDigitadaHistoricos" parameterClass="java.util.Map">
       DELETE REC_DIGIT_CABEC_SERVI_HISTO
        WHERE COD_PAIS=#codigoPais#
       	  AND NUM_DOCU=#numeroDocumento#
       	  
    </delete>
    
    <select id="getPathUpload" parameterClass="string" resultClass="string">
		SELECT val_ruta_prod FROM bas_pais WHERE cod_pais = #value#
	</select>
	
	<resultMap id="getPeriodoInicialFinalResult" class="java.util.HashMap">
		<result property="fechaInicial"			column="FECHAINICIAL" />
		<result property="fechaFinal"			column="FECHAFINAL" />		      
	</resultMap>
	
	<select id="getPeriodoInicialFinal" parameterClass="java.util.Map" resultMap="getPeriodoInicialFinalResult">
	    select to_char(c.FEC_INIC,'dd/MM/yyyy') AS FECHAINICIAL,
		       to_char(c.FEC_FINA,'dd/MM/yyyy') AS FECHAFINAL
		  from cra_perio c,  
		       seg_perio_corpo s
		 where s.OID_PERI = c.PERI_OID_PERI
		   and s.COD_PERI = #codigoPeriodo#
	</select>
	
	<resultMap id="getBloqueosCDRByCriteriaResult" class="java.util.HashMap">
		<result property="oidBloqueo"				column="OID_BLOQ" />
		<result property="region"					column="REGION" />
		<result property="zona"						column="ZONA" />     
		<result property="consultora"				column="CONSULTORA" />
		<result property="fechaBloqueo"				column="FECHA_BLOQUEO" />
		<result property="campanaBloqueo"			column="CAMPANA_BLOQUEO" />
		<result property="motivoBloqueo"			column="MOTIVO_BLOQUEO" />
		<result property="usuarioBloqueo"			column="USUARIO_BLOQUEO" />
		<result property="observacionBloqueo"		column="OBSERVACION_BLOQUEO" />
		<result property="fechaDesbloqueo"			column="FECHA_DESBLOQUEO" />
		<result property="campanaDesbloqueo"		column="CAMPANA_DESBLOQUEO" />
		<result property="motivoDesbloqueo"			column="MOTIVO_BLOQUEO" />
		<result property="usuarioDesbloqueo"		column="USUARIO_DESBLOQUEO" />
		<result property="observacionDesbloqueo"	column="OBSERVACIÓN_DESBLOQUEO" />           
	</resultMap>
     
	<select id="getBloqueosCDRByCriteria" parameterClass="java.util.Map" resultMap="getBloqueosCDRByCriteriaResult">		 					
		SELECT OID_BLOQ,		       
		       NVL(ZON_REGIO.DES_REGI, '') REGION,		       
		       NVL(ZON_ZONA.DES_ZONA, '') ZONA,
		       TRIM(MAE_CLIEN.VAL_NOM1)||' '||TRIM(MAE_CLIEN.VAL_NOM2)||' '||TRIM(MAE_CLIEN.VAL_APE1)||' '||TRIM(MAE_CLIEN.VAL_APE2) consultora,
		       TO_CHAR(MAE_CLIEN_BLOQU.fec_bloq,'dd/MM/yyyy') AS FECHA_BLOQUEO,
		       (select S.COD_PERI
		          from cra_perio c, 
		               seg_perio_corpo s
		         where s.OID_PERI = c.PERI_OID_PERI
		           and C.FEC_INIC > fec_bloq
		           <![CDATA[ 
		           AND C.FEC_FINA <= fec_bloq
		           ]]> 
		           AND ROWNUM = 1) AS CAMPANA_BLOQUEO,
		       MAE_CLIEN_BLOQU.val_moti_bloq AS MOTIVO_BLOQUEO,
		       MAE_CLIEN_BLOQU.val_usua_bloq AS USUARIO_BLOQUEO,
		       MAE_CLIEN_BLOQU.obs_bloq AS OBSERVACION_BLOQUEO,
		       TO_CHAR(MAE_CLIEN_BLOQU.fec_desb,'dd/MM/yyyy') AS FECHA_DESBLOQUEO,
		       (select S.COD_PERI
		          from cra_perio c, 
		               seg_perio_corpo s
		         where s.OID_PERI = c.PERI_OID_PERI
		           and C.FEC_INIC > fec_desb
		           <![CDATA[ 
		           AND C.FEC_FINA <= fec_desb
		           ]]>
		           AND ROWNUM = 1) AS CAMPANA_DESBLOQUEO,
		       MAE_CLIEN_BLOQU.val_usua_desb AS USUARIO_DESBLOQUEO,
		       MAE_CLIEN_BLOQU.obs_desb AS OBSERVACIÓN_DESBLOQUEO
		  FROM  MAE_CLIEN_BLOQU,
			    MAE_CLIEN,
				MAE_CLIEN_UNIDA_ADMIN,
				ZON_TERRI_ADMIN,
				ZON_SECCI,
				ZON_ZONA,
				ZON_REGIO
		 where MAE_CLIEN_BLOQU.TIBQ_OID_TIPO_BLOQ IN(SELECT OID_TIPO_BLOQ FROM MAE_TIPO_BLOQU WHERE COD_TIPO_BLOQ = 'BR')
		       AND (ZON_TERRI_ADMIN.OID_TERR_ADMI = MAE_CLIEN_UNIDA_ADMIN.ZTAD_OID_TERR_ADMI) 
			   AND (ZON_SECCI.OID_SECC = ZON_TERRI_ADMIN.ZSCC_OID_SECC) 
			   AND (ZON_ZONA.OID_ZONA  = ZON_SECCI.ZZON_OID_ZONA) 
			   AND (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI) 
			   AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_UNIDA_ADMIN.CLIE_OID_CLIE) 
			   AND (MAE_CLIEN_UNIDA_ADMIN.IND_ACTI = '1') 
			   AND (MAE_CLIEN.OID_CLIE = MAE_CLIEN_BLOQU.CLIE_OID_CLIE)
		   <isNotEmpty prepend="AND" property="fechaInicial">
		   		MAE_CLIEN_BLOQU.fec_bloq >= to_date(NVL(#fechaInicial#, MAE_CLIEN_BLOQU.fec_bloq),'dd/MM/yyyy')
		   </isNotEmpty>
		   <isNotEmpty prepend="AND" property="fechaFinal">
		   		<![CDATA[ 
		   		MAE_CLIEN_BLOQU.fec_bloq <= to_date(NVL(#fechaFinal#, MAE_CLIEN_BLOQU.fec_bloq),'dd/MM/yyyy')
		   		]]>   
		   </isNotEmpty>
		   <isNotEmpty prepend="AND" property="codigoConsultora">
		   		MAE_CLIEN_BLOQU.clie_oid_clie = (select oid_clie from mae_clien where cod_clie = nvl(#codigoConsultora#, cod_clie))
		   </isNotEmpty>
		   <isNotEmpty property="regionList">
			   <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				    ZON_REGIO.COD_REGI  = #regionList[]#
			   </iterate> 
		   </isNotEmpty> 
		   <isNotEmpty property="zonaList">
			   <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				   ZON_ZONA.COD_ZONA = #zonaList[]#
			   </iterate>
		   </isNotEmpty>		 
	</select>
	
	<update id="updateDesbloqueoCDR" parameterClass="java.util.Map">
	    UPDATE mae_clien_bloqu
		   SET fec_desb                = trunc(SYSDATE),
		       val_usua_desb           = #codigoUsuario#,
		       maab_oid_valo_acci_desb = (SELECT OID_VALO_ACCI_BLOQ                                    
		                                    FROM MAE_VALOR_ACCIO_BLOQU
		                                    WHERE COD_VALO_BLOQ = 'A'),
		       obs_desb                = 'NUEVA BR NO EXITOSA'
		 WHERE oid_bloq = #oidBloqueo#
		   and fec_desb is NULL
	</update>
	
	<parameterMap id="executeProcesoRECBloqueoCDRParams" class="map" >
	    <parameter property="codigoConsultora"	             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"	                 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	
    </parameterMap>
    
    <procedure id="executeProcesoRECBloqueoCDR" 
   			  parameterMap="executeProcesoRECBloqueoCDRParams" >
		{call INT_PKG_RECLA.REC_PR_BLOQU_CONSU(?,?)}
    </procedure> 

	<select id="getNumeroSecuenciaUsuario" resultClass="string">
   		 SELECT SEQ_INT_RET_LINEA_OPERA_RECLA.NEXTVAL FROM DUAL
    </select>
    
    <delete id="deleteInterfazRETProductosReclamados" parameterClass="java.util.Map">
        DELETE FROM int_ret_linea_opera_recla WHERE num_secu_usua = #numeroSecuencia#
    </delete>
    
   <select id="getIndicadorCentroServicio" parameterClass="java.util.Map" resultClass="comboBase"> 
    	SELECT a.IND_CENT_DIST_GARA as codigo, 
		       g.DES_CENT_SERV      as descripcion
		  FROM inc_artic_lote        a,
		       inc_lote_premi_artic  b,
		       inc_premi_artic       c,
		       inc_param_nivel_premi d,
		       inc_param_gener_premi e,
		       inc_concu_param_gener f,
		       inc_centr_servi       g
		 WHERE a.lopa_oid_lote_prem_arti = b.oid_lote_prem_arti
		   AND b.prar_oid_prem_arti = c.oid_prem_arti
		   AND c.panp_oid_para_nive_prem = d.oid_para_nive_prem
		   AND d.pagp_oid_para_gene_prem = e.oid_para_gene_prem
		   AND e.copa_oid_para_gral = f.oid_para_gral
		   AND a.cod_vent_fict = #codigoVentaFicticio#
		   and a.CESE_OID_CESE_GARA = g.OID_CENT_SERV
		order by a.IND_CENT_DIST_GARA desc 
	</select>	   	
        
    <resultMap id="getParametrosOperacionesReclamosResult" class="parametrosOperacionesReclamos">
		<result property="codigoOperacion" 				  column="COD_OPER"/>
		<result property="descripcionOperacion" 		  column="DES_OPER"/>
		<result property="indicadorCUVCambiaObligatorio"  column="IND_CAMB_OBLI"/>
		<result property="indicadorCUVDeseaObligatorio"   column="IND_DESE_OBLI"/>
		<result property="indicadorValidacionCUVCambia"   column="IND_CAMB_VALI"/>
		<result property="indicadorValidacionCUVDesea"    column="IND_DESE_VALI"/>
		<result property="popupCambia" 					  column="VAL_CAMB_POPU"/>
		<result property="popupDesea" 					  column="VAL_DESE_POPU"/>
		<result property="indicadorValidarCentroServicio" column="IND_VALI_CENT_SERV"/>           
	</resultMap>    
        
    <select id="getParametrosOperacionesReclamos" resultMap="getParametrosOperacionesReclamosResult">      
       select distinct nvl(COD_OPER,'-') COD_OPER,
              nvl(DES_OPER,'-') DES_OPER,
              nvl(IND_CAMB_OBLI,'-') IND_CAMB_OBLI,
              nvl(IND_DESE_OBLI,'-') IND_DESE_OBLI,
              nvl(IND_CAMB_VALI,'-') IND_CAMB_VALI,
              nvl(IND_DESE_VALI,'-') IND_DESE_VALI,
              nvl(VAL_CAMB_POPU,'-') VAL_CAMB_POPU,
              nvl(VAL_DESE_POPU,'-') VAL_DESE_POPU,
              nvl(IND_VALI_CENT_SERV,'-') IND_VALI_CENT_SERV
	    from REC_DIGIT_HOMOL_OPER
	   where NVL(IND_LINE_IGUA, '*') != '0'
	   order by DES_OPER
 	</select>    

    <select id="getTiposOperacionIngresoAnulaciones" parameterClass="java.util.Map" resultMap="baseResult">      
      	select cod_oper      as CODIGO,
      	       val_desc_larg as DESCRIPCION
	      from rec_opera a
		 where a.cod_oper in(select cod_oper_anul 
		                       from REC_PARAM_ANULA)       
			<isNotEmpty prepend="AND" property="varOperAnul">
			  		  COD_OPER = #varOperAnul#
		    </isNotEmpty>       
 	</select>    
        
	<!-- Recalcular -->    
    <procedure id="updateRecalcularBoletaRecojo" parameterClass="java.util.Map" >
		{call INT_PKG_RECLA.int_pr_calcu_abono_cargo_consu(#codigoPais#,#codigoBoletaRecojo#)}
    </procedure> 
    
    <!-- getCronogramaBRList - Carlos Diaz Valverde -->
    <resultMap id="getCronogramaBRListResult" class="java.util.HashMap">
		<result property="codigoPais"		column="cod_pais" />
		<result property="codigoPeriodo"	column="cod_peri" />
		<result property="codigoRegion"		column="cod_regi" />
		<result property="region"			column="region" />     
		<result property="fechaInicio"		column="fec_cierr"  />
		<result property="fechaFin"			column="fec_cie2" />
		<result property="usuarioRegistro"	column="usu_regi" />
		<result property="fechaRegistro"	column="fec_regi" />
		<result property="usuarioModifica"	column="usu_modi" />
		<result property="fechaModifica"	column="fec_modi" />
	</resultMap>
    <select id="getCronogramaBRList" parameterClass="java.util.Map" resultMap="getCronogramaBRListResult">      
		select    cod_pais,
		          cod_peri,
		          cod_regi,
		          (
		            select    des_regi
		            from      zon_regio
		            where     cod_regi = a.cod_regi          
		          ) region,
		          nvl(to_char(fec_cierr,'dd/mm/yyyy'),' ') fec_cierr,
		          nvl(to_char(fec_cie2,'dd/mm/yyyy'),' ') fec_cie2,
                  usu_regi,
                  TO_CHAR(fec_regi, 'DD/MM/YYYY HH:MI:SS A.M.') fec_regi,
                  usu_modi,
                  TO_CHAR(fec_modi,'DD/MM/YYYY HH:MI:SS a.m.') fec_modi
		from      INT_REC_CIERR_BOREC a
		where     cod_pais = #codigoPais#
	    <isNotEmpty prepend="AND" property="codigoPeriodo">
		  		  cod_peri = #codigoPeriodo#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="codigoRegion">
		  		  cod_regi = #codigoRegion#
	    </isNotEmpty>
		
 	</select>    
    
    <!-- getCronogramaBRValidarPeriodoActivo - Carlos Diaz Valverde -->
    <select id="getCronogramaBRValidarPeriodoActivo" parameterClass="java.util.Map" resultClass="java.lang.Integer">      
		SELECT    COUNT(1)
		FROM      BAS_CTRL_FACT       
		WHERE     COD_PAIS  = #codigoPais# 
		AND       COD_PERI = #codigoPeriodo#
		AND       STA_CAMP = '0' 
		AND       IND_CAMP_ACT = '1' 
 	</select>    
 	
 	<!-- deleteCronogramaBR - Carlos Diaz Valverde -->
 	<delete id="deleteCronogramaBR" parameterClass="java.util.Map">
		delete
		from      INT_REC_CIERR_BOREC
		where     cod_pais = #codigoPais#
		  and     cod_regi = #codigoRegion#
		  and     cod_peri = #codigoPeriodo#
    </delete>
    
    <!-- insertCronogramaBR - Carlos Diaz Valverde -->
    <insert id="insertCronogramaBR" parameterClass="cronogramaBR">
		insert into 
		INT_REC_CIERR_BOREC (COD_PAIS,COD_REGI,COD_PERI,FEC_CIERR,FEC_CIE2, USU_REGI, FEC_REGI) 
		VALUES (#codigoPais#,#codigoRegion#,#codigoPeriodo#,to_date(#fechaInicio#,'dd/mm/yyyy'),to_date(#fechaFin#,'dd/mm/yyyy'), #auditInfo.createdBy#, #auditInfo.created#)
    </insert>
    
    <!-- updateCronogramaBR - Carlos Diaz Valverde -->
    <update id="updateCronogramaBR" parameterClass="cronogramaBR">
 		update    INT_REC_CIERR_BOREC
		set       fec_cierr = to_date(#fechaInicio#,'dd/mm/yyyy'),
           		  fec_cie2 = to_date(#fechaFin#,'dd/mm/yyyy'),
           		  USU_MODI = #auditInfo.updatedBy#, 
           		  FEC_MODI = #auditInfo.lastUpdated# 
		where     cod_pais = #codigoPais#
		  and     cod_regi = #codigoRegion#
		  and     cod_peri = #codigoPeriodo#
    </update>
    
    <!-- getCronogramaBRValidarPeriodoExistente - Carlos Diaz Valverde -->
    <select id="getCronogramaBRValidarPeriodoExistente" parameterClass="java.util.Map" resultClass="java.lang.Integer">      
		SELECT    count(b.cod_peri)
		FROM      cra_perio a, 
		          seg_perio_corpo b 
		WHERE     b.oid_peri = a.peri_oid_peri 
		  and     cod_peri= #codigoPeriodo# 
 	</select>    
        
    <parameterMap id="getMontoPedidoDevolucionParams" class="java.util.Map">
		<parameter property="numeroBoleta"    	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
 		<parameter property="montoPedido"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>			
		<parameter property="montoDevolucion"   jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT" />
	</parameterMap>
	
	<procedure id="getMontoPedidoDevolucion" parameterMap="getMontoPedidoDevolucionParams">
		{call REC_PKG_PROCE.REC_PR_MONTO_EVALU_DEVOL(?,?,?) }
	</procedure>
	
	<select id="getPorcentajeMontoDevolucion" parameterClass="java.util.Map" resultClass="java.lang.String">      
		select REC_PKG_PROCE.REC_FN_PORCE_MONTO_DEVOL(gen_pkg_gener.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoCliente#), #codigoPais#, #codigoPeriodo#) from dual 
 	</select>     
        
 	<parameterMap id="getMontoPedidoFaltantesParams" class="java.util.Map">
		<parameter property="numeroBoleta"    	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
 		<parameter property="montoPedido"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>			
		<parameter property="montoDevolucion"   jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT" />
	</parameterMap>
	
	<procedure id="getMontoPedidoFaltantes" parameterMap="getMontoPedidoFaltantesParams">
		{call REC_PKG_PROCE.REC_PR_MONTO_EVALU_FALTA(?,?,?) }
	</procedure>
	
	<select id="getPorcentajeMontoFaltantes" parameterClass="java.util.Map" resultClass="java.lang.String">      
		select REC_PKG_PROCE.REC_FN_PORCE_MONTO_FALTA(gen_pkg_gener.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoCliente#), #codigoPais#, #codigoPeriodo#) from dual 
 	</select>
 	
 	<parameterMap id="getMontoPedidoCambiosParams" class="java.util.Map">
		<parameter property="numeroBoleta"    	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
 		<parameter property="montoPedido"     	jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>			
		<parameter property="montoDevolucion"   jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT" />
	</parameterMap>
	
	<procedure id="getMontoPedidoCambios" parameterMap="getMontoPedidoCambiosParams">
		{call REC_PKG_PROCE.REC_PR_MONTO_EVALU_CAMBI(?,?,?) }
	</procedure>
	
	<select id="getPorcentajeMontoCambios" parameterClass="java.util.Map" resultClass="java.lang.String">      
		select REC_PKG_PROCE.REC_FN_PORCE_MONTO_CAMBI(gen_pkg_gener.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoCliente#), #codigoPais#, #codigoPeriodo#) from dual 
 	</select>     
    
    <select id="getCronogramaBRPeriodoActivo" parameterClass="java.util.Map" resultClass="java.lang.Integer">      
		SELECT COUNT(1)
          FROM dual
         WHERE #codigoPeriodo# >= (SELECT COD_PERI
	                         		 FROM BAS_CTRL_FACT
                            		WHERE COD_PAIS  = #codigoPais# 
                              		  AND STA_CAMP = '0' 
                   	          		  AND IND_CAMP_ACT = '1' )
 	</select> 
 	
 	<select id="getIndicadorPedidoChequeado" resultClass="string">
		SELECT a.val_param
  		  FROM sto_param_gener_occrr a
 		 WHERE a.cod_para = 'STO_IND_FALPCHK'
	</select> 
	
	<select id="getIndicadorPGRBR" resultClass="string">
		SELECT a.val_param
  		  FROM sto_param_gener_occrr a
 		 WHERE a.cod_para = 'STO_IND_PGR_BR'
	</select> 
	
	<select id="getCodigoResultadoChequeo" parameterClass="java.util.Map" resultClass="string">
    	SELECT REC_PKG_PROCE.REC_FN_RESUL_CHEQU_PEDID(#numeroPedido#) 
   		  FROM DUAL
    </select>

    <resultMap id="getCodigosParamIngreAtencResult" class="java.util.HashMap">
		<result property="codOperEnvMatNrmSinRef"    	column="COD_OPER_ENV_MAT_NRM_SIN_REF" />
		<result property="codOperEnvMatExpConRef"    	column="COD_OPER_ENV_MAT_EXP_CON_REF" />
		<result property="codOperEnvPreNrm"    			column="COD_OPER_ENV_PRE_NRM" />
		<result property="codOperEnvPreExp"    			column="COD_OPER_ENV_PRE_EXP" />
		<result property="codOperEnvMatNrmConPed"    	column="COD_OPER_ENV_MAT_NRM_CON_PED" />
		<result property="codOperEnvMatExpConPed"    	column="COD_OPER_ENV_MAT_EXP_CON_PED" />
	</resultMap>
	    
	<select id="getCodigosParamIngreAtenc" parameterClass="java.util.Map" resultMap="getCodigosParamIngreAtencResult">
 		SELECT NVL(COD_OPER_ENV_MAT_NRM_SIN_REF,'') COD_OPER_ENV_MAT_NRM_SIN_REF,
		       NVL(COD_OPER_ENV_MAT_EXP_CON_REF,'') COD_OPER_ENV_MAT_EXP_CON_REF,
		       NVL(COD_OPER_ENV_PRE_NRM,'') COD_OPER_ENV_PRE_NRM,
		       NVL(COD_OPER_ENV_PRE_EXP,'') COD_OPER_ENV_PRE_EXP,
		       NVL(COD_OPER_ENV_MAT_NRM_CON_PED,'') COD_OPER_ENV_MAT_NRM_CON_PED,
		       NVL(COD_OPER_ENV_MAT_EXP_CON_PED,'') COD_OPER_ENV_MAT_EXP_CON_PED
		  FROM REC_PARAM_INGRE_ATENC
    </select>

	<select id="getTipoOperacionList" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT b.val_tipo_oper codigo,
		       a.cod_oper || '-' || b.val_tipo_oper descripcion
		  FROM rec_opera a, rec_tipos_opera b
		 WHERE b.rope_oid_oper = a.oid_oper
		   AND a.cod_oper = #codOper#
		 ORDER BY a.cod_oper, b.val_tipo_oper
    </select>
    
    <select id="getValidaCodigoVentaOpera" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select    count(1)
		from      REC_EXCEP_CODIG_VENTA_OPERA 
		where     COD_PAIS = #codigoPais#
		  AND     COD_PERI = #codigoPeriodoInicio#
		  AND     COD_OPER = #codigoOperacion#
		  AND     COD_TIPO_OPER = #codigoTipoOperacion#
		  AND     COD_VENT = #codigoVenta#    	
    </select> 
    
    <select id="getNumeroLote" resultClass="string">
		  SELECT LPAD(REC_SEQ_LOTE_ANULA_NMPS.nextval, 8, '0') AS NUM_LOTE
		  FROM DUAL
    </select>
    
    <select id="getNumeroLoteAtenciones" resultClass="string">
		  SELECT LPAD(REC_SEQ_LOTE_ATENC.nextval, 8, '0') AS NUM_LOTE
		  FROM DUAL
    </select>    
    
     <resultMap id="getAnulacionResult" class="java.util.HashMap">
		<result property="numeroLote"    			column="NUM_LOTE" />
		<result property="fecha"    				column="FEC_INGR" />
		<result property="usuario"    				column="USUARIO" />
		<result property="registros"    			column="REGISTROS" />
	</resultMap>
	    
	<select id="getAnulacion" parameterClass="java.util.Map" resultMap="getAnulacionResult">
			select distinct num_lote , 
				   max(fec_ingr) fec_ingr , 
				   max(cod_usua) usuario ,  
				   count(1) registros
			from rec_repos_anula
			where num_lote is not null
			<isNotEmpty property="numeroLote">
			  and num_lote = #numeroLote#
		    </isNotEmpty>
		    <isNotEmpty property="codigoCliente">
			  and cod_clie = #codigoCliente#
		    </isNotEmpty>
			<isNotEmpty property="fecha">
			  and fec_ingr = to_char(to_date(#fecha#,'DD/MM/YYYY'),'dd/mm/yy')
		    </isNotEmpty>
			<isNotEmpty property="usuario">
			  and UPPER(cod_usua) LIKE '%'||UPPER(#usuario#)||'%'
		    </isNotEmpty>
			group by num_lote 
            order by num_lote desc		            	
    </select>
    
     <resultMap id="getAtencionResult" class="java.util.HashMap">
		<result property="numeroLote"    			column="NUM_LOTE" />
		<result property="fecha"    				column="FEC_INGR" />
		<result property="usuario"    				column="USUARIO" />
		<result property="registros"    			column="REGISTROS" />
	</resultMap>
	    
	<select id="getAtencion" parameterClass="java.util.Map" resultMap="getAtencionResult">
			select distinct num_lote,
				   to_char(max(trunc(fec_ingr)),'dd/MM/yyyy') fec_ingr ,
				   max(cod_usua) usuario ,  
				   count(1) registros
			from REC_AUDIT_INFO
			where num_lote is not null
			<isNotEmpty property="numeroLote">
			  and num_lote = #numeroLote#
		    </isNotEmpty>
		    <isNotEmpty property="codigoCliente">
			  and cod_clie = #codigoCliente#
		    </isNotEmpty>
			<isNotEmpty property="fecha">
			  and trunc(fec_ingr) = to_date(#fecha#,'dd/mm/yyyy')
		    </isNotEmpty>
			<isNotEmpty property="usuario">
			  and UPPER(cod_usua) LIKE '%'||UPPER(#usuario#)||'%'
		    </isNotEmpty>
			group by num_lote 
			order by num_lote desc			
    </select>
    
   <resultMap id="getDetalleAnulacionResult" class="java.util.HashMap">
		<result property="numeroLote"    			column="NUM_LOTE" />
		<result property="codigoCliente"			column="COD_CLIE" />
		<result property="numeroReclamo"			column="NUM_RECL" />
		<result property="usuario"	    			column="COD_USUA" />
		<result property="fechaIngreso"    			column="FEC_INGR" />
		<result property="campanha"	    			column="NUM_CAMP" />
		<result property="codigoEstadoProceso" 		column="COD_ESTA_PROC" />
		<result property="descripcionError"			column="DES_ERRO" />
		<result property="fechaFacturacion"			column="FEC_FACT" />
		<result property="grupoProceso"    			column="GRPR_OID_GRUP_PROC" />	
		<result property="envioApe"    			    column="IND_ENVI_APE" />	
		<result property="periodoPedido"			column="PER_PED" />	
		<result property="numeroPedido"    			column="NUM_PED" />	
		<result property="codigoAnulacion" 			column="COD_ANUL" />	
		<result property="flagNMP"    			    column="FLAG_NMP" />	
		<result property="flagEnvio"    			column="FLAG_ENVI" />	
	</resultMap>
	    
	<select id="getDetalleAnulacion" parameterClass="java.util.Map" resultMap="getDetalleAnulacionResult">
		SELECT rec.num_lote, 
		       rec.cod_clie, 
		       rec.num_recl,
		       rec.cod_usua, 
		       rec.fec_ingr fec_ingr, 
		       rec.num_camp,
		       rec.cod_esta_proc, 
		       rec.des_erro, 
		       to_char(ped.fec_fact,'dd/MM/yyyy') fec_fact,
               ped.grpr_oid_grup_proc,
               rec.ind_envi_ape,
               decode(Ped1.PERD_OID_PERI,null,'',gen_pkg_gener.gen_fn_devuelve_des_perio(Ped1.PERD_OID_PERI)) PER_PED,
               REC.NUM_DOCU_REFE NUM_PED,
               REC.VAL_COD_ANUL COD_ANUL,
               REC.VAL_FLAG_NMP FLAG_NMP,
               REC.VAL_FLAG_ENVI FLAG_ENVI
		  FROM rec_repos_anula rec, 
               ped_solic_cabec ped, ped_solic_cabec ped1 
		 WHERE num_lote = #numeroLote#
		       AND rec.oid_soli_cabe = ped.oid_soli_cabe(+)		
               and REC.NUM_DOCU_REFE = PED1.VAL_NUME_SOLI(+)
    </select>       

     <resultMap id="getDetalleAtencionResult" class="java.util.HashMap">
		<result property="numeroLote"    			column="NUM_LOTE" />
		<result property="codigoCliente"			column="COD_CLIE" />
		<result property="campanha"					column="COD_CAMP" />
		<result property="campanhaReferencia"    	column="COD_CAMP_REFE" />
		<result property="codigoVenta"				column="COD_VENT" />
		<result property="numeroUnidades"			column="NUM_UNID" />		
		<result property="usuario"	    			column="COD_USUA" />
		<result property="fechaIngreso"    			column="FEC_INGR" />
		<result property="codigoOperacion"	 		column="COD_OPER" />
		<result property="valorOperacion"			column="VAL_TIPO_OPER" />
		<result property="descripcionError"			column="DES_ERRO" />		
		<result property="fechaFacturacion"			column="FEC_FACT" />
		<result property="grupoProceso"    			column="GRPR_OID_GRUP_PROC" />												
		<result property="unidadesAtendidas"		column="NUM_UNID_ATEN" />											
		<result property="descripcionProducto"		column="descripcion_producto" />												
	</resultMap>
	    
	<select id="getDetalleAtencion" parameterClass="java.util.Map" resultMap="getDetalleAtencionResult">
			SELECT rec.num_lote,
			       rec.cod_clie, 
			       rec.cod_camp,        
				   rec.cod_camp_refe,
			       rec.cod_vent, 
			       rec.num_unid, 
			       rec.cod_usua,
			       to_char(rec.fec_ingr,'dd/MM/yyyy') fec_ingr, 
			       rec.cod_oper, 
			       rec.val_tipo_oper, 
			       rec.des_erro,
			       to_char(ped.fec_fact,'dd/MM/yyyy') fec_fact, 
			       ped.grpr_oid_grup_proc,
			       gen_pkg_gener.gen_fn_devuelve_descripcion(posic.prod_oid_prod,'MAE_PRODU','es') descripcion_producto,
				   posic.num_unid_aten
			  FROM rec_audit_info rec, 
			       ped_solic_cabec ped,
				   ped_solic_posic posic
			 WHERE num_lote = #numeroLote#
			       AND rec.oid_soli_cabe = ped.oid_soli_cabe(+)		
				   AND rec.oid_soli_posi = posic.oid_soli_posi(+)
    </select>
    
	<parameterMap id="validarEliminacionLoteParams" class="java.util.Map">
		<parameter property="numeroLote" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="usuarioElim" jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>	
 		<parameter property="mensajeError" jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>			
	</parameterMap>
	
	<procedure id="validarEliminacionLote" parameterMap="validarEliminacionLoteParams">
		{call REC_PKG_PROCE.REC_PR_VALID_ELIMI_LOTE_ATENC(?,?,?) }
	</procedure>

	<parameterMap id="eliminarLoteAtencionParams" class="java.util.Map">
		<parameter property="numeroLote" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codUsuario" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
 		<parameter property="mensajeError" jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>			
	</parameterMap>
	
	<procedure id="eliminarLoteAtencion" parameterMap="eliminarLoteAtencionParams">
		{call REC_PKG_PROCE.REC_PR_ELIMI_LOTE_ATENC(?,?,?) }
	</procedure>
        
	<select id="getObtenerCampahniaActual" parameterClass="java.util.Map" resultClass="string">
		SELECT DISTINCT COD_PERI AS CAM_PRO
		  FROM BAS_CTRL_FACT
		 WHERE COD_PAIS = #codigoPais#
		   AND STA_CAMP = #estadoCampanha#
		 ORDER BY 1
	</select>
		
	<select id="getOidCargaCliente" resultClass="string">
   		 SELECT STO_CCF_SEQ.NEXTVAL FROM DUAL
    </select>
    
    <insert id="insertaClienteFile" parameterClass="java.util.Map">
    	INSERT into sto_tmp_carga_clien_files (
		  	oid_clie_file,
		  	oid_clie,
        	cod_clie,
        	ind_vali
		)
        VALUES(
	  		#oid#,
	  		#oidConsultora#,
	  		#codigo#,
			#indicador# 
		)
     </insert>
     
    <resultMap id="getCargaClienteListResult" class="java.util.HashMap">
		<result property="codigoCliente"    		column="COD_CLIE" />
		<result property="indicadorValido"			column="IND_VALI" />
		<result property="oidCliente"				column="OID_CLIE" />
	</resultMap>
	<select id="getCargaClienteList" parameterClass="java.util.Map" resultMap="getCargaClienteListResult">
		SELECT 	a.cod_clie,
        		a.ind_vali,
        		to_char(a.oid_clie) OID_CLIE
		  FROM 	sto_tmp_carga_clien_files a
		 WHERE 	a.oid_clie_file = #oid#
    </select>

	<resultMap id="getResumenCargaClienteListResult" class="java.util.HashMap">
		<result property="recibidos"    	column="RECIBIDOS" />
		<result property="noEncontradas"	column="NO_ENCONTRADAS" />
		<result property="sto"    			column="STO" />
		<result property="gp1"				column="GP1" />
		<result property="gp2"				column="GP2" />
		<result property="gp3"				column="GP3" />
		<result property="gp4"				column="GP4" />
		<result property="gp5"				column="GP5" />
		<result property="total"    			column="TOTAL" />
	</resultMap>
	<select id="getResumenCargaClienteList" parameterClass="java.util.Map" resultMap="getResumenCargaClienteListResult">
		SELECT 	#numRegistros#      							RECIBIDOS,
			  
			  
			     CASE WHEN
			     (#numRegistros# - (STO+ GP1+ GP2+ GP3+ GP4+ GP5) >= 0 )THEN 
         			#numRegistros# - (STO+ GP1+ GP2+ GP3+ GP4+ GP5)	
         		ELSE
           			0  
         		END NO_ENCONTRADAS,
			    
			    
       			STO												STO,
       			GP1												GP1,
       			GP2												GP2,
       			GP3												GP3,
       			GP4												GP4,
       			GP5												GP5,
       			STO+ GP1+ GP2+ GP3+ GP4 + GP5 					TOTAL
		  FROM 	( SELECT 	SUM(decode(dd.ind_envi,'0',1,0)) STO,
                			SUM(DECODE(pc.grpr_oid_grup_proc,1,1,0)) GP1,
                			SUM(DECODE(pc.grpr_oid_grup_proc,2,1,0)) GP2,
                			SUM(DECODE(pc.grpr_oid_grup_proc,3,1,0)) GP3,
                			SUM(DECODE(pc.grpr_oid_grup_proc,4,1,0)) GP4,
                			SUM(DECODE(pc.grpr_oid_grup_proc,5,1,0)) GP5 
           			FROM 	sto_docum_digit       dd,
                			int_solic_conso_cabec cc,
                			ped_solic_cabec       pc
          			WHERE 	dd.sec_nume_docu = cc.sec_nume_docu
            		  AND 	dd.num_lote = cc.num_lote
            		  AND 	pc.oid_soli_cabe(+) = cc.soca_oid_soli_cabe_refe
            		  AND 	dd.cod_clie IN (SELECT cod_clie
                                  			  FROM sto_tmp_carga_clien_files 
                                 		     WHERE oid_clie_file = #oid#)
       			 )
    </select>

    <select id="getOidCliente" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigo#) FROM DUAL
	</select>

   <select id="getObtenerCampahniaActiva" parameterClass="java.util.Map" resultClass="string">
		SELECT DISTINCT COD_PERI AS CAM_PRO
		  FROM BAS_CTRL_FACT
		 WHERE COD_PAIS = #codigoPais#
		   AND STA_CAMP = #estadoCampanha#
		   AND IND_CAMP_ACT = #indicadorActiva#
		 ORDER BY 1
	</select>
	
    <resultMap id="tipoOperacionResult" class="java.util.HashMap">
    	<result property="codigoOperacionSICC" 		column="COD_OPER_SICC"/>
    	<result property="descripcionOperacion" 	column="DES_OPER"/>
    	<result property="tipoOperacionSICC" 		column="TIPO_OPER_SICC"/>
    	<result property="indExpress" 				column="IND_EXPRESS"/>
    	<result property="codigoOperacionMot" 		column="COD_OPER_MOT"/>
    	<result property="codigoOperacion" 			column="COD_OPER"/>
    	<result property="indCambiaObligatorio"		column="IND_CAMB_OBLI"/>
    	<result property="indDeseaObligatorio" 		column="IND_DESE_OBLI"/>
   </resultMap>
   
	<select id="getTipoMasivoOperacionesList" resultMap="tipoOperacionResult">
		select 
		a.cod_oper_sicc AS COD_OPER_SICC,
		a.des_oper AS DES_OPER,
		a.tipo_oper_sicc AS TIPO_OPER_SICC,
		a.ind_express AS IND_EXPRESS,
		a.cod_oper_mot AS COD_OPER_MOT, 
		a.cod_oper AS COD_OPER,
        nvl(a.IND_CAMB_OBLI, '-') IND_CAMB_OBLI,
        nvl(a.IND_DESE_OBLI, '-') IND_DESE_OBLI		
		from REC_DIGIT_HOMOL_OPER a
		where cod_oper_SICC in(SELECT TRIM(val_param)
		                        FROM sto_param_gener_occrr spo
		                       WHERE spo.cod_para LIKE 'STO_INGR_MASI_OPER%')
		and ind_line_igua is null
		order by cod_oper,tipo_oper_sicc
    </select>
    
    <select id="getIndExpress" parameterClass="java.util.Map" resultClass="string">
		SELECT 
		a.ind_express
		from REC_DIGIT_HOMOL_OPER a
		where cod_oper_SICC in(SELECT TRIM(val_param)
		                        FROM sto_param_gener_occrr spo
		                       WHERE spo.cod_para LIKE 'STO_INGR_MASI_OPER%')
		and ind_line_igua is null
		and cod_oper = #codigoOperacion#
		and rownum = 1
	</select>
	
    
     <insert id="insertCabeceraServiciosPostventas" parameterClass="reclamoDigitadoCabecera">
        INSERT INTO INT_OCR_CABEC_SERVI_POSTV
          (COD_PAIS,
           COD_CIA,
           NUM_DOCU,
           COD_PERI,
           COD_CLIE,
           NUM_DOCU_CRUC,
           TIP_SOLI,
           COD_SUB_ACCES,
           ACC_FISI,
           FEC_PROC_DOC,
           COD_REGI_ARRI,
           COD_ZONA_ARRI,
           STA_PROC,
           COD_MOTI_RECH,
           COD_TIPO_DOCU,
           IND_ORIG,
           IND_EXPR,
           NUM_LOTE)
        VALUES
          (#codigoPais#,
           (SELECT cod_comp    
              FROM bas_pais_compa
             WHERE cod_pais = #codigoPais#),
           #numeroDocumento#,
           #codigoPeriodo#,
           #codigoCliente#,
           #numeroDocumentoCruce#,
           #tipoSolicitud#,
           #codigoSubAcceso#,
           #accesoFisico#,
           to_char(sysdate,'YYYYMMDD'),
           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_REGI'),
           GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_ZONA'),
           #estadoProceso#,
           #codigoMotivoRechazo#,
           #codigoTipoDocumento#,
           #indicadorOrigen#,
           #indicadorExpress#,
           #numeroLote#)
	</insert>
	
	<insert id="insertDetalleServiciosPostventas" parameterClass="reclamoDigitadoDetalle">
      INSERT INTO INT_OCR_DETAL_SERVI_POSTV
        (COD_PAIS,
         COD_CIA,
         NUM_DOCU,
         COD_CLIE,
         TIP_REFE,
         COD_VENT_DEVU,
         COD_VENT_DESE,
         CAN_PROD_DEVU,
         CAN_PROD_DESE,
         STA_PROC,
         COD_MOTI_RECH,
         MOT_SPV,
         COD_OPER,
         COD_TIPO_OPER,
         COD_TIPO_DOCU,
         COD_ZONA,
         COD_REGI,
         IND_ACCI,
         NUM_LOTE)
      VALUES
        (#codigoPais#,
         (SELECT cod_comp    
            FROM bas_pais_compa
           WHERE cod_pais = #codigoPais#),
         #numeroDocumento#,
         #codigoCliente#,
         #tipoReferencia#,	
      	 #codigoVentaDevuelve#,
         #codigoVentaDesea#,
      	 #cantidadProductosDevuelve#,
         #cantidadProductosDesea#,
      	 #estadoProceso#,
         #codigoMotivoRechazo#,
         #motivoSPV#,
         #codigoOperador#,
      	 #codigoTipoOperacion#,
      	 #codigoTipoDocumento#,		      
      	 GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_ZONA'),
      	 GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codigoCliente#,'COD_REGI'),  
         NULL,
         #numeroLote#)
	</insert>
	
  		<select id="getConcursosList" resultMap="baseResult">
     	select distinct 
     	a.cod_conc CODIGO, 
     	b.val_nomb DESCRIPCION
		from INC_PREMI_PENDI_SOLIC a, INC_CONCU_PARAM_GENER b
		where 
		a.cod_conc = b.num_conc
		and a.IND_PEND = '0'
		and a.EST_REGI = '1'
		group by a.cod_conc, b.val_nomb
	</select>
	
	<select id="getPremiosList" resultMap="baseResult">
		select distinct 
		a.PROD_OID_PROD CODIGO, 
		GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(a.PROD_OID_PROD,'MAE_PRODU','es') DESCRIPCION
		from INC_PREMI_PENDI_SOLIC a
		where a.IND_PEND = '0'
		and a.EST_REGI = '1'
		group by a.PROD_OID_PROD
	</select>
	
	<select id="getRegionesList" resultMap="baseResult">
   		select distinct 
   		a.COD_REGI CODIGO, 
   		b.des_regi DESCRIPCION
		from INC_PREMI_PENDI_SOLIC a, zon_regio b
		where a.cod_regi = b.cod_regi
		and a.IND_PEND = '0'
		and a.EST_REGI = '1'
		group by a.COD_REGI , b.des_regi 
	</select>
	
	<resultMap id="pedidosExpressPremBloqResult" class="java.util.HashMap">
    	<result property="codCliente" 			column="COD_CLIE"/>
    	<result property="consultora" 			column="CONSULTORA"/>
    	<result property="codCampania" 			column="COD_CAMPANIA"/>
    	<result property="desConcurso" 			column="DES_CONCURSO"/>
    	<result property="desRegion" 			column="DES_REGION"/>   	
    	<result property="sap" 					column="SAP"/>
    	<result property="cuv" 					column="CUV"/>
    	<result property="unidades" 			column="UNIDADES"/>
    	<result property="prodOidProd" 			column="PROD_OID_PROD"/>
    	<result property="copaOidParaGral" 		column="COPA_OID_PARA_GRAL"/>
    	<result property="panpOidParaNivePrem" 	column="PANP_OID_PARA_NIVE_PREM"/>
    	<result property="lopaOidLotePremArti" 	column="LOPA_OID_LOTE_PREM_ARTI"/>
    	<result property="ictpOidConcTipoProg" 	column="ICTP_OID_CONC_TIPO_PROG"/>
    	<result property="valPrec" 				column="VAL_PREC"/>
    	<result property="valPrecCont" 			column="VAL_PREC_CONT"/>
   </resultMap>
   
	<select id="getPedidosExpressPremBloqList" parameterClass="java.util.Map" resultMap="pedidosExpressPremBloqResult">
			SELECT 
				a.COD_CLIE COD_CLIE,
				GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(a.COD_CLIE,'NOM_CLIE') CONSULTORA,
				a.CAM_BLOQ  COD_CAMPANIA, 
				b.VAL_NOMB  DES_CONCURSO,
				c.DES_REGI  DES_REGION,				
				a.COD_SAP   SAP,
				a.COD_VENT_FICT CUV,
				a.NUM_UNID_DEMA UNIDADES,
				a.PROD_OID_PROD PROD_OID_PROD,
				a.COPA_OID_PARA_GRAL,
				a.PANP_OID_PARA_NIVE_PREM,
				a.LOPA_OID_LOTE_PREM_ARTI,
				a.ICTP_OID_CONC_TIPO_PROG,
				a.VAL_PREC VAL_PREC,
				a.VAL_PREC_CONT VAL_PREC_CONT
			FROM 
				INC_PREMI_PENDI_SOLIC a, 
				INC_CONCU_PARAM_GENER b, 
				ZON_REGIO c
			where 
				a.COD_CONC = b.NUM_CONC and 
				a.COD_REGI = c.COD_REGI and 
				a.IND_PEND = '0' and 
				a.EST_REGI = '1' and
				( #codCampania# is null or a.CAM_BLOQ = #codCampania# ) and
				( #codConcurso# is null or a.COD_CONC = #codConcurso# ) and
				( #codPremio# is null or a.prod_oid_prod = #codPremio# ) and
				( #codRegion# is null or a.COD_REGI = #codRegion# ) 
				order by a.COD_CLIE
    </select>
	
  	<insert id="insertExcepcionTrueque" parameterClass="java.util.Map">
		INSERT INTO REC_EXCEP_TRUEQ(
		    OID_EXCE_TRUE,
		    COD_SAP_DEVU,
		    COD_SAP_ENVI,
		    USU_DIGI,
		    FEC_DIGI,
		    IND_ELIM
		)
		VALUES(
		    REC_SEQ_EXCEP_TRUEQ.nextval,
		    #codigoSapDevuelve#,
		    #codigoSapEnvia#,
		    #usuarioDigitacion#,
		    sysdate,
		    '0')
	</insert>
	
    <update id="deleteExcepcionTrueque" parameterClass="java.util.Map">
    	UPDATE REC_EXCEP_TRUEQ
    	SET USU_ELIM = #usuarioEliminacion#,
    	FEC_ELIM = sysdate,
    	IND_ELIM = '1'
    	WHERE OID_EXCE_TRUE = #oid#
    </update>
    
	<resultMap id="excepcionesTruequesResult" class="java.util.HashMap">
    	<result property="oid" 					column="OID_EXCE_TRUE"/>
    	<result property="codigoSapDevuelve" 	column="COD_SAP_DEVU"/>
    	<result property="codigoSapEnvia" 		column="COD_SAP_ENVI"/>
    	<result property="usuarioDigitacion" 	column="USU_DIGI"/>
    	<result property="fechaDigitacion" 		column="FEC_DIGI"/>
    </resultMap>
        
    <select id="getExcepcionesTrueques" parameterClass="java.util.Map" resultMap="excepcionesTruequesResult">
    	SELECT 
    		OID_EXCE_TRUE,
		    COD_SAP_DEVU,
		    COD_SAP_ENVI,
		    USU_DIGI,
		    TO_CHAR(FEC_DIGI, 'DD/MM/YYYY HH:MI:SS am') FEC_DIGI
    	FROM REC_EXCEP_TRUEQ
    	WHERE IND_ELIM = '0'
    	
		<isNotEmpty prepend="AND" property="codigoSapDevuelve">
			COD_SAP_DEVU = #codigoSapDevuelve#
		</isNotEmpty>	 
    	
		<isNotEmpty prepend="AND" property="codigoSapEnvia">
			COD_SAP_ENVI = #codigoSapEnvia#
		</isNotEmpty>
    </select>
			 
	<select id="getIndicadorCDRRechazo" parameterClass="java.util.Map" resultClass="string">
		SELECT nvl(a.val_param,'0')
  		  FROM sto_param_gener_occrr a
 	     WHERE a.cod_pais = #codigoPais#
           AND a.cod_para = 'STO_IND_CDR_RECH'
    </select>    
	
	<resultMap class="java.util.HashMap" id="ubicacionConsultoraMapResult">
		<result property="direccion"             column="DIR_CLIE" />
		<result property="ubicacion"             column="UBI_CLIE"/>
	</resultMap>
	
	<select id="getUbicacionConsultora" parameterClass="java.util.Map" resultMap="ubicacionConsultoraMapResult">
		SELECT DES_ABRV_TIPO_VIA||' '|| 
			       VAL_NOMB_VIA ||' '||
			       NUM_PPAL ||' '||
			       VAL_OBSE ||' '|| 'Territorio: '||' '||
			       COD_TERR DIR_CLIE,
			       nivel_1 || DECODE(nivel_2, NULL, '', '/' || nivel_2) ||
			       DECODE(nivel_3, NULL, '', '/' || nivel_3) ||
			       DECODE(nivel_4, NULL, '', '/' || nivel_4) ||
			       DECODE(nivel_5, NULL, '', '/' || nivel_5) ||
			       DECODE(nivel_6, NULL, '', '/' || nivel_6) ||
			       DECODE(nivel_7, NULL, '', '/' || nivel_7) ||
			       DECODE(nivel_8, NULL, '', '/' || nivel_8) ||
			       DECODE(nivel_9, NULL, '', '/' || nivel_9) UBI_CLIE
			  FROM (SELECT a.OID_CLIE_DIRE OID,
			               c.DES_ABRV_TIPO_VIA,
			               a.VAL_NOMB_VIA,
			               a.NUM_PPAL,
			               a.VAL_OBSE,
			               t.COD_TERR,
			               (SELECT des_geog
			                  FROM zon_valor_estru_geopo
			                 WHERE pais_oid_pais = d.pais_oid_pais
			                   AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                   AND orde_2 IS NULL) AS nivel_1,
			               (SELECT des_geog
			                  FROM zon_valor_estru_geopo
			                 WHERE pais_oid_pais = d.pais_oid_pais
			                   AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                   AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                   AND orde_3 IS NULL) AS nivel_2,
			               (SELECT des_geog
			                  FROM zon_valor_estru_geopo
			                 WHERE pais_oid_pais = d.pais_oid_pais
			                   AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                   AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                   AND orde_3 = SUBSTR(a.cod_unid_geog, 13, 6)
			                   AND orde_4 IS NULL) AS nivel_3,
			               CASE
			                 WHEN LENGTH(a.cod_unid_geog) > 18 THEN
			                  (SELECT des_geog
			                     FROM zon_valor_estru_geopo
			                    WHERE pais_oid_pais = d.pais_oid_pais
			                      AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                      AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                      AND orde_3 = SUBSTR(a.cod_unid_geog, 13, 6)
			                      AND orde_4 = SUBSTR(a.cod_unid_geog, 19, 6)
			                      AND orde_5 IS NULL)
			                 ELSE
			                  NULL
			               END AS nivel_4,
			               CASE
			                 WHEN LENGTH(a.cod_unid_geog) > 24 THEN
			                  (SELECT des_geog
			                     FROM zon_valor_estru_geopo
			                    WHERE pais_oid_pais = d.pais_oid_pais
			                      AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                      AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                      AND orde_3 = SUBSTR(a.cod_unid_geog, 13, 6)
			                      AND orde_4 = SUBSTR(a.cod_unid_geog, 19, 6)
			                      AND orde_5 = SUBSTR(a.cod_unid_geog, 25, 6)
			                      AND orde_6 IS NULL)
			                 ELSE
			                  NULL
			               END AS nivel_5,
			               CASE
			                 WHEN LENGTH(a.cod_unid_geog) > 30 THEN
			                  (SELECT des_geog
			                     FROM zon_valor_estru_geopo
			                    WHERE pais_oid_pais = d.pais_oid_pais
			                      AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                      AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                      AND orde_3 = SUBSTR(a.cod_unid_geog, 13, 6)
			                      AND orde_4 = SUBSTR(a.cod_unid_geog, 19, 6)
			                      AND orde_5 = SUBSTR(a.cod_unid_geog, 25, 6)
			                      AND orde_6 = SUBSTR(a.cod_unid_geog, 31, 6)
			                      AND orde_7 IS NULL)
			                 ELSE
			                  NULL
			               END AS nivel_6,
			               CASE
			                 WHEN LENGTH(a.cod_unid_geog) > 36 THEN
			                  (SELECT des_geog
			                     FROM zon_valor_estru_geopo
			                    WHERE pais_oid_pais = d.pais_oid_pais
			                      AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                      AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                      AND orde_3 = SUBSTR(a.cod_unid_geog, 13, 6)
			                      AND orde_4 = SUBSTR(a.cod_unid_geog, 19, 6)
			                      AND orde_5 = SUBSTR(a.cod_unid_geog, 25, 6)
			                      AND orde_6 = SUBSTR(a.cod_unid_geog, 31, 6)
			                      AND orde_7 = SUBSTR(a.cod_unid_geog, 37, 6)
			                      AND orde_8 IS NULL)
			                 ELSE
			                  NULL
			               END AS nivel_7,
			               CASE
			                 WHEN LENGTH(a.cod_unid_geog) > 42 THEN
			                  (SELECT des_geog
			                     FROM zon_valor_estru_geopo
			                    WHERE pais_oid_pais = d.pais_oid_pais
			                      AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                      AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                      AND orde_3 = SUBSTR(a.cod_unid_geog, 13, 6)
			                      AND orde_4 = SUBSTR(a.cod_unid_geog, 19, 6)
			                      AND orde_5 = SUBSTR(a.cod_unid_geog, 25, 6)
			                      AND orde_6 = SUBSTR(a.cod_unid_geog, 31, 6)
			                      AND orde_7 = SUBSTR(a.cod_unid_geog, 37, 6)
			                      AND orde_8 = SUBSTR(a.cod_unid_geog, 43, 6)
			                      AND orde_9 IS NULL)
			                 ELSE
			                  NULL
			               END AS nivel_8,
			               CASE
			                 WHEN LENGTH(a.cod_unid_geog) > 48 THEN
			                  (SELECT des_geog
			                     FROM zon_valor_estru_geopo
			                    WHERE pais_oid_pais = d.pais_oid_pais
			                      AND orde_1 = SUBSTR(a.cod_unid_geog, 1, 6)
			                      AND orde_2 = SUBSTR(a.cod_unid_geog, 7, 6)
			                      AND orde_3 = SUBSTR(a.cod_unid_geog, 13, 6)
			                      AND orde_4 = SUBSTR(a.cod_unid_geog, 19, 6)
			                      AND orde_5 = SUBSTR(a.cod_unid_geog, 25, 6)
			                      AND orde_6 = SUBSTR(a.cod_unid_geog, 31, 6)
			                      AND orde_7 = SUBSTR(a.cod_unid_geog, 37, 6)
			                      AND orde_8 = SUBSTR(a.cod_unid_geog, 43, 6)
			                      AND orde_9 = SUBSTR(a.cod_unid_geog, 49, 6))
			                 ELSE
			                  NULL
			               END AS nivel_9
			          FROM MAE_CLIEN_DIREC a,
			               MAE_TIPO_DIREC  b,
			               SEG_TIPO_VIA    c,
			               MAE_CLIEN       d,
			               MAE_CLIEN_COMUN       f,
			               ZON_TERRI       t
			         WHERE d.OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoCliente#)
			           AND d.OID_CLIE = a.CLIE_OID_CLIE
			           AND a.IND_ELIM = 0
			           AND b.OID_TIPO_DIRE = a.TIDC_OID_TIPO_DIRE
			           AND c.OID_TIPO_VIA = a.TIVI_OID_TIPO_VIA
			           AND a.IND_DIRE_PPAL = 1
			           AND f.CLIE_OID_CLIE(+) = d.OID_CLIE
			           AND f.TICM_OID_TIPO_COMU(+) = 1
			           AND a.TERR_OID_TERR = t.OID_TERR(+)
			         ORDER BY a.OID_CLIE_DIRE DESC)
			 WHERE ROWNUM = 1
	</select>
	
	<select id="getSaldoProducto" parameterClass="java.util.Map" resultClass="integer">
		 SELECT  INT_PKG_RECLA.REC_FN_DEVUE_SALDO_PRODUC( #numeroPedido# , #codigoVenta# ) FROM DUAL
	</select>
	
	<select id="getIndicadorValorStock" parameterClass="java.util.Map" resultClass="string">
		SELECT VAL_PARAM FROM STO_PARAM_GENER_OCCRR WHERE COD_PAIS = #codigoPais# AND COD_PARA = 'STO_IND_VALSTOCK'
	</select>
	
	<procedure id="getPeriodoCDR" parameterClass="java.util.Map" resultClass="string">
        select nvl(sto_pkg_proce_valid_spvc.sto_fn_spvc_perio (#codigoCliente#,#indicadorExpress#, 'L',0),'0') from dual    
    </procedure>
    
    <procedure id="getDescripcionPeriodo" parameterClass="java.util.Map" resultClass="string">
        select gen_pkg_gener.GEN_FN_DEVUELVE_DES_PERIO (#oidPeriodo#) from dual    
    </procedure>
    
    <procedure id="getCodigoOperacionCorrecto" parameterClass="java.util.Map" resultClass="string">
         select nvl(sto_pkg_proce_valid_spvd.sto_fn_spvd_tipo_opera(#codigoOperacion#,#tipoOperacion#,#codigoMotivo#,#indicadorExpress#),'0') from dual    
    </procedure>
	
	<parameterMap id="validacionesParams" class="map" >
		<parameter property="codigoOperacion"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="tipoOperacion"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoMotivo"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="indicadorExpress"      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoPais"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="numeroPedido"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="idPeriodoCDR"           jdbcType="VARCHAR" javaType="java.lang.Integer"  mode="IN"/>	
		<parameter property="usuario"          		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codOperCorrecto"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="mensaje"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
	 
	<procedure id="validTipoOperacionCantidad" parameterMap="validacionesParams" >
        {call sto_pkg_proce_valid_spvd.sto_pr_spvd_vali_anti_oper(?,?,?,?,?,?,?,?,?,?) }
    </procedure>
	
	<parameterMap id="valiExcepProduGanParams" class="map" >
		<parameter property="idPeriodoCDR"          jdbcType="VARCHAR" javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="codigoVenta"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoOperacionSic"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoOperacionSic"      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="oidSoliPosi"           jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>	
		<parameter property="codigoMotivo"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="mensaje"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
 
	 <procedure id="valiExcepProduGan" parameterMap="valiExcepProduGanParams">
         {call sto_pkg_proce_valid_spvd.sto_pr_spvd_vali_eprod_gana(?,?,?,?,?,?,?) }    
    </procedure>

     <procedure id="valiAceptaCDR" parameterMap="valiExcepProduGanParams">
         {call sto_pkg_proce_valid_spvd.sto_pr_spvd_vali_acep_cdr(?,?,?,?,?,?,?) }    
    </procedure>
        
    <parameterMap id="valiUnidadReclamoParams" class="map" >
    	<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoCliente"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidSoliPosi"         jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>
		<parameter property="unidadReclamo"       jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>
		<parameter property="codOperSICC"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoOperSICC"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="mensaje"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
    <procedure id="valiUnidadReclamo" parameterMap="valiUnidadReclamoParams">
         {call sto_pkg_proce_valid_spvd.sto_pr_spvd_vali_unid_recla(?,?,?,?,?,?,?) }    
    </procedure>
    
   <select id="getListCodMotivoRechazo" resultMap="baseResult">
	      	  select cod_moti_rech codigo,
			         des_moti_rech descripcion
			    from STO_RECHA_MOTIV 
			   where cod_tipo_docu = 'SPVC' 
			     and ind_auto = '0'
			     and cod_moti_rech > '50'
    </select>

	<select id="getValorParam" parameterClass="java.util.Map" resultClass="string">
		SELECT VAL_PARAM FROM STO_PARAM_GENER_OCCRR WHERE COD_PAIS = #codigoPais# AND COD_PARA = #codPara#
	</select>

	<select id="getNuevoNumeroPedido" parameterClass="java.util.Map" resultClass="string">
		  select a.val_nume_soli
			from ped_solic_Cabec a
			where TRIM(to_char(a.val_nume_soli)) like #varBusca#
			and a.SOCA_OID_SOLI_CABE is null 
			and rownum = 1
	</select>

<resultMap id="motivoDevolucionList" class="motDevDet">
	    <result property="idMotivoDevolucion" 		column="oid_moti_devo"/>
    	<result property="codigo" 					column="codigo"/>
    	<result property="descripcion" 				column="descripcion"/>
    	<result property="tipoDevolucion" 			column="descTipoDevolucion"/>
    	<result property="indicadorDevolucion" 		column="indicadorDevolucion"/>
    </resultMap>
	
	<select id="getMovitoDevolucionList" parameterClass="java.util.Map" resultMap="motivoDevolucionList">
	 
		SELECT   base.OID_MOTI_DEVO, BASE.Cod_Moti_Devo AS codigo, GEN.VAL_I18N AS descripcion,
            Base.TIP_MOTI_DEVU tipoDevolucion, 
            decode(Base.TIP_MOTI_DEVU, 'C',	'Para ingresar CDR',
			                           'R',	'Motivo Real de CDR',
			                           'A',	'Anulacion',
			                           'No tiene un tipo de motivo')  descTipoDevolucion,
			Base.IND_MOT_DEV indicadorDevolucion 
		  FROM GEN_I18N_SICC_PAIS GEN, SEG_IDIOM IDI, REC_MOTIV_DEVOL BASE
		 WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
		   AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
		   AND IDI.COD_ISO_IDIO = #idioma#
		   AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
		<isNotEmpty prepend="AND" property="tipMotDev">
	 	   base.tip_moti_devu = #tipMotDev#
	 	</isNotEmpty>
		 ORDER BY BASE.Cod_Moti_Devo		
		
	</select>

     <resultMap id="motivoDevolucion" class="motDev">
    	<result property="oidMotiDevo" 		column="oid_moti_devo"/>
    	<result property="codMotiDevo" 	    column="cod_moti_devo"/>
    	<result property="paisOidPais" 		column="pais_oid_pais"/>
    	<result property="indRegMod" 		column="ind_regi_modi"/>
    	<result property="tipMotDev" 		column="tip_moti_devu"/>
    	<result property="descripcionMotivo" 		column="VAL_I18N"/>
    	<result property="indicadorCalidad" 		column="IND_MOT_DEV"/>
    	<result property="codigoOperacionAnulacion" column="COD_OPER_ANUL"/>
		<result property="valorRecuperaDCRS" 		column="VAL_RECU_CDR"/>
		<result property="valorRecuperaPremios" 	column="VAL_RECU_PRE"/>
		<result property="indicadorTipoDevolucion" 	column="IND_TIP_DEV"/>
    </resultMap>
	
	
	<select id="getMovitoDevolucion"  parameterClass="string" resultMap="motivoDevolucion">
		select BASE.oid_moti_devo,
               BASE.cod_moti_devo,
               BASE.pais_oid_pais,
               BASE.ind_regi_modi,
       		   BASE.tip_moti_devu,
       		   GEN.VAL_I18N,
       		   BASE.IND_MOT_DEV,
		       BASE.COD_OPER_ANUL,
		       BASE.VAL_RECU_CDR,
		       BASE.VAL_RECU_PRE,
		       BASE.IND_TIP_DEV 
  		 FROM GEN_I18N_SICC_PAIS GEN, SEG_IDIOM IDI, REC_MOTIV_DEVOL BASE
  		 WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
		   AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
		   AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
  		   and oid_moti_devo = #oidMotiDevo#  
	</select>
	
	
	<delete id="deleteMotivoDevolucion" parameterClass="string" >
        DELETE FROM REC_MOTIV_DEVOL
    	WHERE  oid_moti_devo = #value# 
    </delete>
    
   	<update id="updateMotivoDevolucion" parameterClass="motDev">
   	<![CDATA[ 
    	update gen_i18n_sicc_pais gen	set
               		 gen.val_i18n = #descripcionMotivo#
		 WHERE GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
		   and gen.val_oid = #oidMotiDevo# 
		 ]]>					
	</update>
	<update id="updateMotivoDevolucionIndicador" parameterClass="motDev">
   	<![CDATA[ 
    	update REC_MOTIV_DEVOL base	set
				base.IND_MOT_DEV = decode(#indicadorCalidad#, '1','C',null),
				BASE.COD_OPER_ANUL = #codigoOperacionAnulacion#,
				BASE.VAL_RECU_CDR = #valorRecuperaDCRS#,
				BASE.VAL_RECU_PRE = #valorRecuperaPremios#,
				BASE.IND_TIP_DEV = #indicadorTipoDevolucion#	 
		 WHERE BASE.OID_MOTI_DEVO = #oidMotiDevo# 
		 ]]>					
	</update>			
	<insert id="insertMovitoDevolucion" parameterClass="motDev">
	<![CDATA[ 
    	Insert into REC_MOTIV_DEVOL	(
    	         	oid_moti_devo,
               		cod_moti_devo,
               		pais_oid_pais,
               		ind_regi_modi,
       		   		tip_moti_devu,
       		   		IND_MOT_DEV,
		       		COD_OPER_ANUL,
		       		VAL_RECU_CDR,
		       		VAL_RECU_PRE,
		       		IND_TIP_DEV
       		   		)
 				Values(
 				#oidMotiDevo#,
 				#codMotiDevo#,
 				GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#), 
 				#indRegMod#,
 				#tipMotDev#,
 				decode(#indicadorCalidad#, '1', 'C', null),
 				#codigoOperacionAnulacion#,
 				#valorRecuperaDCRS#,
 				#valorRecuperaPremios#,
 				#indicadorTipoDevolucion#
 				)
 				]]>	
	</insert>
	
	<select id="getNextOidMovitoDevolucion" resultClass="java.lang.Integer">
		SELECT REC_MODV_SEQ.nextval
		  FROM dual
	</select>
	
	<insert id="insertMovitoDescripcion" parameterClass="motDev">
	<![CDATA[ 
 	  Insert into GEN_I18N_SICC_PAIS 
 	      (OID_I18N, 
 	      ATTR_ENTI, 
 	      ATTR_NUM_ATRI, 
 	      IDIO_OID_IDIO, 
 	      VAL_I18N, 
 	      VAL_OID
 	      )
          Values 
          ( 
          gen_i18n_seq.nextval, 
          'REC_MOTIV_DEVOL', 
          1, 
          1, 
          #descripcionMotivo#, 
          #oidMotiDevo#
          )		
 				
 				]]>	
	</insert>

	<select id="getListMotivoDevolucion" resultMap="baseResult">
		 SELECT BASE.Cod_Moti_Devo AS codigo, GEN.VAL_I18N AS descripcion
		 FROM GEN_I18N_SICC_PAIS GEN, SEG_IDIOM IDI, REC_MOTIV_DEVOL BASE
		WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
		  AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
		  AND IDI.COD_ISO_IDIO = 'es'
		  AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
		  and base.TIP_MOTI_DEVU  = 'R'
		ORDER BY BASE.Cod_Moti_Devo
	</select>
	
	<resultMap id="listaBlancaProductosResult" class="listaBlancaProductos">
	   <result property="oidListaBlancaProductos" 	 column="OID_LIST_BLAN"	/>                   
	   <result property="descripcionOperacion" 		 column="VAL_DESC_LARG"	/> 
	   <result property="codigoOperacion" 		 	 column="COD_OPER"	/>     
	   <result property="codigoTipoOperacion" 		 column="TIP_OPER"	/>
	   <result property="codigoVenta"			     column="COD_VENT"	/>
	   <result property="codigoCliente"			     column="COD_CLIE"	/>
	   <result property="descripcionRegion"			 column="DES_REGI"	/>
	   <result property="descripcionZona"			 column="DES_ZONA"/>
	   <result property="codigoPeriodoInicio" 		 column="COD_PERI_INIC"	/>    
	   <result property="codigoPeriodoFinal" 		 column="COD_PERI_FINA"	/>
	   <result property="codigoMotivoReal" 			 column="COD_MOTI_REAL"	/>
	   <result property="descripcionMotivo" 		 column="DES_MOTI"	/>
	 </resultMap>
	
	<select id="getListaBlancaProductosList" parameterClass="java.util.Map" resultMap="listaBlancaProductosResult">
  	  SELECT 
  	  	sto.oid_list_blan, 
  	  	c.val_desc_larg, 
  	  	sto.cod_oper, 
  	  	sto.tip_oper, 
  	  	sto.cod_vent,
  	  	sto.cod_clie,
  	  	(select zr.des_regi from zon_regio zr where zr.oid_regi = sto.oid_regi) des_regi,
  	  	(select zz.des_zona from zon_zona zz where zz.oid_zona = sto.oid_zona) des_zona,
       gen_pkg_gener.gen_fn_devuelve_des_perio
                                            (sto.oid_peri_inic)
                                                               cod_peri_inic,
      DECODE(sto.oid_peri_fina, NULL, '', gen_pkg_gener.gen_fn_devuelve_des_perio(sto.oid_peri_fina)) cod_peri_fina,
		STO.COD_MOTI_REAL,
       (SELECT gen.val_i18n AS descripcion
          FROM gen_i18n_sicc_pais gen,
               seg_idiom idi,
               rec_motiv_devol base
         WHERE gen.idio_oid_idio = idi.oid_idio
           AND base.oid_moti_devo = gen.val_oid
           AND idi.cod_iso_idio = 'es'
           AND gen.attr_enti = 'REC_MOTIV_DEVOL'
           AND base.tip_moti_devu = 'R'
           AND base.cod_moti_devo = sto.COD_MOTI_REAL) des_moti
		  FROM sto_lista_blanc sto, rec_opera c
		 WHERE sto.cod_oper = c.cod_oper
		<iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
			    sto.COD_OPER = #codigoOperacion[]#
  		</iterate>
  		<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
			    sto.OID_REGI = (select oid_regi from zon_regio where cod_regi = #codigoRegion[]#)
  		</iterate>
  		<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
			    sto.OID_ZONA = (select oid_zona from zon_zona where cod_zona = #codigoZona[]#) 
  		</iterate>        	 
		<isNotEmpty property="codigoPeriodoInicio" prepend="AND">
		     (sto.OID_PERI_INIC >= GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoInicio#))
		</isNotEmpty>
		<isNotEmpty property="codigoPeriodoFinal" prepend="AND">
			<![CDATA[
	   			(sto.OID_PERI_FINA <= GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoFinal#))
			]]>	
		</isNotEmpty>
		<isNotEmpty property="codigoMotivoReal" prepend="AND" >
			    sto.COD_MOTI_REAL= #codigoMotivoReal#
		</isNotEmpty>
		<isNotEmpty property="codigoVenta" prepend="AND" >
			    sto.COD_VENT= #codigoVenta#
		</isNotEmpty>
		<isNotEmpty property="codigoCliente" prepend="AND" >
			    sto.COD_CLIE= #codigoCliente#
		</isNotEmpty>
		<iterate prepend="AND" property="codigoTipoOperacion" open="(" close=")" conjunction="OR">
			    (sto.COD_OPER||'-'||sto.TIP_OPER) = #codigoTipoOperacion[]#
  		</iterate>
		AND sto.ind_acti = '1'
 	  ORDER BY 	sto.COD_OPER,
 	  			sto.TIP_OPER 
	</select>
	
	 <select id="getValidaListaBlancaProductos" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(1)
		from STO_LISTA_BLANC
		where COD_MOTI_REAL = #codigoMotivoReal#
		  AND COD_OPER = #codigoOperacion#
		  AND TIP_OPER = #codigoTipoOperacion#
		  AND COD_VENT = #codigoVenta#
    </select> 
		
	<insert id="insertListaBlancaProductos" parameterClass="java.util.Map">
    	INSERT INTO STO_LISTA_BLANC
    	(OID_LIST_BLAN,
    	 OID_ZONA,
    	 OID_REGI,
    	 OID_PERI_INIC,
	     OID_PERI_FINA,
    	 COD_OPER,
    	 TIP_OPER,
    	 COD_VENT,
    	 COD_CLIE,
    	 COD_MOTI_REAL,
    	 USU_CREA,
	     FEC_CREA,
	     DES_OBSE,
    	 IND_ACTI) 
		VALUES 
		(LISTA_BLANC_SEQ.NEXTVAL,
		
			<isNotEmpty property="codigoZona">
		  	GEN_PKG_GENER.gen_fn_devuelve_id_zona(#codigoPais#,'T','VD',#codigoRegion#,#codigoZona#),
		  	</isNotEmpty>
			<isEmpty property="codigoZona">
		  	null,
		  	</isEmpty>
		  
		  	<isNotEmpty property="codigoRegion">
		  	GEN_PKG_GENER.gen_fn_devuelve_id_region (#codigoPais#,'T','VD',#codigoRegion#),
		  	</isNotEmpty>
			<isEmpty property="codigoRegion">
		  	null,
		  	</isEmpty>
		  
		  GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoInicio#),
		  
		  <isNotEmpty property="codigoPeriodoFin">
		    GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoFin#),
		  </isNotEmpty>
		  <isEmpty property="codigoPeriodoFin">
		    null,
		  </isEmpty>
		  #codigoOperacion#,
		  #codigoTipoOperacion#,
		  #codigoVenta#,
		  #codigoCliente#,
		  #codigoMotivoReal#,
		  #usuarioLogin#,
		  SYSDATE,
		  ' ',
		  '1'
		  )
	</insert>
	<update id="updateListaBlancaProductos" parameterClass="java.util.Map">
		UPDATE    STO_LISTA_BLANC
		   SET    COD_VENT = #codigoVenta#,
		   			 COD_CLIE = #codigoCliente#,
				  COD_MOTI_REAL = #codigoMotivoReal#,
				  <isNotEmpty property="codigoPeriodoFin" >
					OID_PERI_FINA = DECODE(#codigoPeriodoFin#, NULL, '', GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoFin#)),				
				  </isNotEmpty>
				  <isNotEmpty property="codigoRegion" >
					OID_REGI = GEN_PKG_GENER.gen_fn_devuelve_id_region(#codigoPais#,'T','VD',#codigoRegion#),					
				  </isNotEmpty>
				  <isNotEmpty property="codigoZona" >
					OID_ZONA = GEN_PKG_GENER.gen_fn_devuelve_id_zona(#codigoPais#,'T','VD',#codigoRegion#,#codigoZona#),		
				  </isNotEmpty>
				  USU_MODI = #usuarioLogin#, 
				  FEC_MODI = SYSDATE
		WHERE     OID_LIST_BLAN = #oidListaBlancaProductos#    
	 </update>
	  
	 <resultMap id="consultarListaBlancaProductosResult" class="listaBlancaProductos">
	  	<result property="oidListaBlancaProductos"  column="OID_LIST_BLAN"/>                                            
		<result property="codigoZona"    			column="COD_ZONA"/>      
		<result property="codigoRegion"          	column="COD_REGI"/>              
		<result property="codigoPeriodoInicio"	    column="COD_PERI_INIC"/>                      
		<result property="codigoPeriodoFinal"  		column="COD_PERI_FINA"/>
		<result property="codigoOperacion" 			column="COD_OPER"/>
		<result property="codigoTipoOperacion" 		column="TIP_OPER"/>      
		<result property="codigoVenta"      		column="COD_VENT"/>
		<result property="codigoCliente"      		column="COD_CLIE"/>
		<result property="codigoMotivoReal"      	column="COD_MOTI_REAL"/>       
	</resultMap> 
	  <select id="consultarListaBlancaProductos" parameterClass="java.util.Map" resultMap="consultarListaBlancaProductosResult">
		SELECT 
		   STO.OID_LIST_BLAN,
		   (SELECT ZZ.COD_ZONA FROM ZON_ZONA ZZ WHERE ZZ.OID_ZONA = STO.OID_ZONA) COD_ZONA,
		   (SELECT ZR.COD_REGI FROM ZON_REGIO ZR WHERE ZR.OID_REGI = STO.OID_REGI) COD_REGI,
		   GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(STO.OID_PERI_INIC) COD_PERI_INIC,
		   DECODE(STO.OID_PERI_FINA, NULL, '', GEN_PKG_GENER.GEN_FN_DEVUELVE_DES_PERIO(STO.OID_PERI_FINA)) COD_PERI_FINA,
		   STO.COD_OPER,
		   STO.TIP_OPER,
		   STO.COD_VENT,
           STO.COD_CLIE,
		   STO.COD_MOTI_REAL
		FROM STO_LISTA_BLANC STO
		WHERE STO.OID_LIST_BLAN = #oidListaBlancaProductos#
    </select>
    
    <update id="deleteListaBlancaProductos" parameterClass="java.util.Map">
		UPDATE    STO_LISTA_BLANC
		   SET    IND_ACTI = '9'
		WHERE     OID_LIST_BLAN = #oidListaBlancaProductos#    
	 </update> 
	 
	 
	 <resultMap id="datosCuvResult" class="datosCuv">
		<result property="codigoVenta"             column="cod_vta"/>                  	   
		<result property="numeroUnidades"          column="UNIDADES"/>           
		
	</resultMap>
	 
	<select id="getCuv" parameterClass="java.util.Map" resultMap="datosCuvResult">
		select decode(PSP.VAL_CODI_VENT,null,PSP.VAL_CODI_VENT_FICT,PSP.VAL_CODI_VENT) cod_vta , 
		PSP.NUM_UNID_ATEN UNIDADES
		from ped_solic_Cabec psc, ped_solic_cabec psc1, ped_solic_posic psp, mae_produ mae
		where PSC.OID_SOLI_CABE = PSC1.SOCA_OID_SOLI_CABE
		and PSC1.OID_SOLI_CABE = PSP.SOCA_OID_SOLI_CABE
		and PSP.PROD_OID_PROD = MAE.OID_PROD
		and PSP.NUM_UNID_ATEN > 0
		and PSC.VAL_NUME_SOLI = #numeroPedido#
		and MAE.COD_SAP = #codigoSap#
		order by PSP.VAL_PREC_CATA_UNIT_LOCA desc

    </select>
    
    <select id="getValidaListaBlanca" parameterClass="java.util.Map" resultClass="integer">
	SELECT  COUNT(1) FROM STO_LISTA_BLANC
	    	       WHERE COD_OPER = #codigoOperacion#
	    			 AND TIP_OPER = #codigoTipoOperacion#
	    			 AND COD_VENT = #codigoVenta#
	    			 AND COD_CLIE = #codigoCliente#
	    			 AND IND_ACTI = '1'
	    			 <isNotEmpty prepend="AND" property="codigoZona">
				  	 	OID_ZONA = GEN_PKG_GENER.gen_fn_devuelve_id_zona(#codigoPais#,'T','VD',#codigoRegion#,#codigoZona#)
				  	 </isNotEmpty>
				  	 <isEmpty prepend="AND" property="codigoZona">
				  	 	OID_ZONA IS NULL
				  	 </isEmpty>
	  			  	 <isNotEmpty prepend="AND" property="codigoRegion">
					  	OID_REGI = GEN_PKG_GENER.gen_fn_devuelve_id_region (#codigoPais#,'T','VD',#codigoRegion#)
				  	 </isNotEmpty>
				  	 <isEmpty prepend="AND" property="codigoRegion">
				  	 	OID_REGI IS NULL
				  	 </isEmpty>
	    			 AND OID_PERI_INIC = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoInicio#)
	    			 <isNotEmpty prepend="AND" property="codigoPeriodoFin">
	    			 	OID_PERI_FINA = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoFin#)
	    			 </isNotEmpty>
	    			 <isEmpty prepend="AND" property="codigoPeriodoFin">
	    			 	OID_PERI_FINA IS NULL
	    			 </isEmpty>
 	    	 		 <isNotEmpty  prepend="AND" property="oidListaBlancaProductos">
	    	 			<![CDATA[OID_LIST_BLAN <> #oidListaBlancaProductos#]]>	
	    	 		 </isNotEmpty>
    </select>
    
	<select id="getValidaRegionxZona" parameterClass="java.util.Map" resultClass="integer" >
		SELECT COUNT(1) FROM ZON_ZONA zz 
			WHERE zz.ZORG_OID_REGI = (SELECT zr.OID_REGI FROM ZON_REGIO zr WHERE zr.COD_REGI = #codigoRegion#) 
			AND zz.COD_ZONA = #codigoZona#
	</select>	
	
    <parameterMap id="valiPedidosParams" class="map" >
    	<parameter property="numeroPedido"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    	<parameter property="mensaje"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>	
    </parameterMap>
    <procedure id="getMensajeValidaPedido" parameterMap="valiPedidosParams">
         {call sto_pkg_proce_valid_spvc.sto_pr_spvc_valid_pedid(?,?) }    
    </procedure>	
	
	<resultMap id="operacionCDRUsuarioResult" class="operacionCDRUsuario">                  
	    <result property="usuario"			 	 column="USE_USUA"	/>         
	    <result property="nombres"			 	 column="NOM_USUA"	/> 
	    <result property="apellidos"	    	 column="APE_USUA"	/>         
	    <result property="operacion"	     	 column="COD_OPER"	/>
	    <result property="tipo"	     			 column="TIP_OPER"	/>    
	    <result property="descripcion" 			 column="VAL_DESC_LARG"	/>
	    <result property="usuarioCreacion" 		 column="USU_CREA"	/>
	    <result property="fechaCreacion"		 javaType="java.sql.Timestamp" column="FEC_CREA"/>
  	</resultMap>
  	
	<!-- Lista de Operaciones por Usuario -->
	<select id="getOperacionesCDRxUsuario" parameterClass="java.util.Map" resultMap="operacionCDRUsuarioResult" >
			SELECT USU.USE_USUA, USU.NOM_USUA, USU.APE_USUA, RUO.COD_OPER, RUO.TIP_OPER, RO.VAL_DESC_LARG, RUO.USU_CREA, RUO.FEC_CREA
			  FROM SEG_USUAR USU, REC_USUAR_OPERA RUO, REC_OPERA RO
			 WHERE USU.USE_USUA = RUO.USU_AUTO
			   AND RUO.COD_OPER = RO.COD_OPER
			 <isNotEmpty  prepend="AND" property="usuario">
	    	 	RUO.USU_AUTO = #usuario#		
	    	 </isNotEmpty>
	    	 <isNotEmpty  prepend="AND" property="nombres">
	    	 	USU.NOM_USUA = #nombres#		
	    	 </isNotEmpty>
	    	 <isNotEmpty  prepend="AND" property="apellidos">
	    	 	USU.APE_USUA = #apellidos#		
	    	 </isNotEmpty>
	    	 <isNotEmpty  prepend="AND" property="operacion">
	    	 	RUO.COD_OPER = #operacion#		
	    	 </isNotEmpty>	    	 
	    	 <isNotEmpty  prepend="AND" property="tipo">
	    	 	RUO.TIP_OPER = #tipo#		
	    	 </isNotEmpty>
	    	 <!-- 
	    	 <isEmpty prepend="AND" property="tipo">
	    	 	RUO.TIP_OPER IS NULL
	    	 </isEmpty>
	    	  -->
	</select>
	
	<!-- Lista de Operaciones(Mantenimiento) -->
	<select id="getOperacionesUsuario" parameterClass="java.util.Map" resultMap="baseResult">
			SELECT DISTINCT NVL(A.COD_OPER_SICC, '-') CODIGO,
			                NVL(B.VAL_DESC_LARG, '-') DESCRIPCION
			  FROM REC_DIGIT_HOMOL_OPER A, REC_OPERA B, REC_TIPOS_OPERA C
			 WHERE B.OID_OPER = C.ROPE_OID_OPER
			   AND B.COD_OPER = A.COD_OPER_SICC
			   AND C.VAL_TIPO_OPER = A.TIPO_OPER_SICC
			 ORDER BY CODIGO
	</select>
	
	<!-- Lista de Tipo de Operaciones segun operacion seleccionada(Mantenimiento) -->
	<select id="getTipoOperacionesByOperacion" parameterClass="java.util.Map" resultMap="baseResult">
			 SELECT	DISTINCT NVL(B.COD_OPER||'-'||A.TIPO_OPER_SICC, '-') CODIGO, 
			 	NVL(B.COD_OPER||'-'||A.TIPO_OPER_SICC, '-') DESCRIPCION			 		
			  FROM REC_DIGIT_HOMOL_OPER A, REC_OPERA B, REC_TIPOS_OPERA C
			 WHERE B.OID_OPER = C.ROPE_OID_OPER
			   AND B.COD_OPER = A.COD_OPER_SICC
			   AND C.VAL_TIPO_OPER = A.TIPO_OPER_SICC
			   <iterate prepend="AND" property="operaciones" open="(" close=")" conjunction="OR">
      	 			A.COD_OPER_SICC = #operaciones[]#
               </iterate>
               			   			   
			 ORDER BY CODIGO
	</select>
	
	<insert id="insertOperacionCDRUsuario" parameterClass="operacionCDRUsuario">
        INSERT INTO REC_USUAR_OPERA (
		        USU_AUTO,		         
		        COD_OPER, 
		        TIP_OPER,		         
		        USU_CREA,
		        FEC_CREA) 
		        VALUES ( 
		        #usuario#, 
		        #operacion#, 
		        #tipo#,
		        #auditInfo.createdBy#,
		        #auditInfo.created#)
    </insert>
    
    <delete id="removeOperacionCDRUsuario" parameterClass="java.util.Map">
        DELETE 
        FROM REC_USUAR_OPERA 
        WHERE USU_AUTO = #usuario#
          AND COD_OPER = #operacion#
          <isNotEmpty  prepend="AND" property="tipo">
	    		TIP_OPER = #tipo#		
	      </isNotEmpty>
	      <isEmpty  prepend="AND" property="tipo">
	    		TIP_OPER IS NULL		
	      </isEmpty>
    </delete>
    
    <insert id="insertOperacionCDRUsuarioAudit" parameterClass="operacionCDRUsuario">
        INSERT INTO REC_AUDIT_USUAR_OPERA (
		        USU_AUTO,		         
		        COD_OPER, 
		        TIP_OPER,		         
		        USU_ELIM,
		        FEC_ELIM,
		        USU_CREA,
		        FEC_CREA) 
		        VALUES ( 
		        #usuario#, 
		        #operacion#, 
		        #tipo#,
		        #auditInfo.createdBy#,
		        #auditInfo.created#,
		        #usuarioCreacion#,
		        #fechaCreacion#)
    </insert>
    
    
    <typeAlias alias="excepcionesValidaciones" type="biz.belcorp.ssicc.dao.spusicc.reclamos.model.ExcepcionesValidaciones"/>
	
	<resultMap id="excepcionesValidacionesResult" 	class="excepcionesValidaciones" >
	    <result property="codigo"					 	column="OID_EXVA" 		/> 
	    <result property="codigoPais" 					column="COD_PAIS" 		/> 
	    <result property="tipoDocumento" 				column="COD_TIPO_DOCU" 			/> 
	    <result property="validaciones" 				column="COD_VALI" 		/>
	    <result property="codigoOrigen" 				column="COD_ORIG" 			/> 
	    <result property="codigoRegion" 				column="COD_REGI" 			/> 
	    <result property="codigoZona" 					column="COD_ZONA" 			/> 
	    <result property="codigoPeriodo" 				column="COD_PERI" /> 
	    <result property="codigoCliente" 				column="COD_CLIE" />	    
	    <result property="fecha" 						javaType="java.sql.Timestamp" column="FEC_PROC"		/> 
	    <result property="indicador"					column="IND_REGI" 			/>
	    <result property="fechaCreacion"				javaType="java.sql.Timestamp" column="FEC_DIGI"		/>
	    <result property="usuarioCreacion"				column="USU_DIGI" 			/>
	    <result property="fechaModificacion"			javaType="java.sql.Timestamp" column="FEC_MODI"		/>
	    <result property="usuarioModificacion"			column="USU_MODI" 			/>	    	    
	    <result property="descValid" column="DES_VALI" />	    	    
	  </resultMap>
	
	<select id="getDevuelveIdSgteCodExcepcionesValidaciones" parameterClass="excepcionesValidaciones" resultClass="long">
		SELECT
			BAS_SEQ_STO_EXCLU_VALID.NEXTVAL
		FROM
			DUAL
	</select>
	
	<insert id="insertExcepcionesValidaciones" parameterClass="excepcionesValidaciones">
    <![CDATA[
	    INSERT INTO STO_EXCLU_VALID(
	    	OID_EXVA,
			COD_PAIS, 
			COD_TIPO_DOCU, 
			COD_VALI,			
			COD_ORIG,
			COD_REGI,
			COD_ZONA, 	
			COD_PERI, 
			COD_CLIE, 
			FEC_PROC,
			IND_REGI,
			FEC_DIGI,
			USU_DIGI,
			FEC_MODI,
			USU_MODI
		)
	    VALUES (
	    	#codigo#, 
		    #codigoPais#,
		    #tipoDocumento#,
		    #validaciones#,
		    #codigoOrigen#,    
		    #codigoRegion#,
		    #codigoZona#,
		    #codigoPeriodo#,
		    #codigoCliente#,
		    #fecha#,
		    #indicador#,
		    #auditInfo.created#,
		    #auditInfo.createdBy#,
		    #auditInfo.lastUpdated#,
		    #auditInfo.updatedBy#		       
	    )
    ]]>
  </insert>
  

	<insert id="insertExcepcionesValidacionesHistorico" parameterClass="excepcionesValidaciones">
    <![CDATA[
	    INSERT INTO STO_HISTO_EXCLU_VALID (
	    	OID_EXVA,
			COD_PAIS, 
			COD_TIPO_DOCU, 
			COD_VALI,			
			COD_ORIG,
			COD_REGI,
			COD_ZONA, 	
			COD_PERI, 
			COD_CLIE, 
			FEC_PROC,
			IND_REGI,
			FEC_DIGI,
			USU_DIGI,
			FEC_MODI,
			USU_MODI
		)
	    VALUES (
	    	#codigo#, 
		    #codigoPais#,
		    #tipoDocumento#,
		    #validaciones#,
		    #codigoOrigen#,    
		    #codigoRegion#,
		    #codigoZona#,
		    #codigoPeriodo#,
		    #codigoCliente#,
		    #fecha#,
		    #indicador#,
		    #auditInfo.created#,
		    #auditInfo.createdBy#,
		    #fechaModificacion#,
		    #usuarioModificacion#   
	    )
    	]]>
  	</insert>
  	  	
  	<delete id="removeExcepcionesValidaciones" parameterClass="java.util.Map">
        DELETE 
        FROM STO_EXCLU_VALID 
        WHERE OID_EXVA = #codigo#          
    </delete>
    
    <select id="getExcepcionesValidaciones" parameterClass="java.util.Map" resultMap="excepcionesValidacionesResult">
		
		 SELECT SEV.OID_EXVA,
				SEV.COD_PAIS, 
				SEV.COD_TIPO_DOCU, 
				SEV.COD_VALI,			
				SEV.COD_ORIG,
				SEV.COD_REGI,
				SEV.COD_ZONA, 	
				SEV.COD_PERI, 
				SEV.COD_CLIE, 
				SEV.FEC_PROC,
				SEV.IND_REGI,
				SEV.FEC_DIGI,
				SEV.USU_DIGI,
				SEV.FEC_MODI,
				SEV.USU_MODI,
				SPV.DES_VALI
		  FROM STO_EXCLU_VALID SEV,STO_PARAM_VALID SPV
		  WHERE SEV.COD_TIPO_DOCU = SPV.COD_TIPO_DOCU 
          AND SEV.COD_VALI = SPV.COD_VALI 
		  AND SEV.COD_PAIS = #codigoPais#
		 		AND SEV.IND_REGI = '1'		 		
				<isNotEmpty prepend="AND" property="tipoDocumento">
                    EXISTS (SELECT 1
                            FROM STO_TIPO_DOCUM_DIGIT T
						    WHERE T.COD_PAIS = SEV.COD_PAIS
						      AND T.COD_TIPO_DOCU = SEV.COD_TIPO_DOCU
						      AND (T.COD_TIPO_DOCU = #tipoDocumento# OR T.COD_TIPO_DOCU_CABE = #tipoDocumento#))
				</isNotEmpty>              
				<isNotEmpty prepend="AND" property="validacion">
					SEV.COD_VALI = #validacion#
				</isNotEmpty>
				<isNotEmpty property="codigoRegion">
					<iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
	      	 			SEV.COD_REGI = #codigoRegion[]#
	            	</iterate> 
	          	</isNotEmpty>
	          	<isNotEmpty property="codigoZona">
					<iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
	      	 			SEV.COD_ZONA = #codigoZona[]#
	            	</iterate> 						
	            </isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoPeriodo">
					SEV.COD_PERI = #codigoPeriodo#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="codigoConsultora">
					SEV.COD_CLIE = #codigoConsultora#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="fecha">
					SEV.FEC_PROC = to_date(#fecha#,'dd/mm/yyyy')					
				</isNotEmpty>
				<isNotEmpty property="codigo">
					<iterate prepend="AND" property="codigo" open="(" close=")" conjunction="OR">
	      	 			SEV.OID_EXVA = #codigo[]#
	            	</iterate> 						
	            </isNotEmpty>				
	</select>
        
	<select id="getExcepcionesValidacionesExist" parameterClass="java.util.Map" resultMap="excepcionesValidacionesResult">
		
		 SELECT SEV.OID_EXVA,
				SEV.COD_PAIS, 
				SEV.COD_TIPO_DOCU, 
				SEV.COD_VALI,			
				SEV.COD_ORIG,
				SEV.COD_REGI,
				SEV.COD_ZONA, 	
				SEV.COD_PERI, 
				SEV.COD_CLIE, 
				SEV.FEC_PROC,
				SEV.IND_REGI,
				SEV.FEC_DIGI,
				SEV.USU_DIGI,
				SEV.FEC_MODI,
				SEV.USU_MODI,
				'' DES_VALI
		  FROM STO_EXCLU_VALID SEV
		 WHERE SEV.COD_PAIS = #codigoPais#
		 		AND SEV.IND_REGI = '1'		 		
				
				<isNotEmpty prepend="AND" property="tipoDocumento">
					SEV.COD_TIPO_DOCU = #tipoDocumento#
				</isNotEmpty>              
				
				<isNotEmpty prepend="AND" property="validacion">
					SEV.COD_VALI = #validacion#
				</isNotEmpty>
				
				<isNotEmpty prepend="AND" property="codigoRegion">					
	      	 		SEV.COD_REGI = #codigoRegion#
	          	</isNotEmpty>
	          	<isEmpty prepend="AND" property="codigoRegion">
	          		SEV.COD_REGI IS NULL
	          	</isEmpty>
	          	
	          	<isNotEmpty prepend="AND" property="codigoZona">					
	      	 		SEV.COD_ZONA = #codigoZona#          		
	            </isNotEmpty>
	            <isEmpty prepend="AND" property="codigoZona">
	          		SEV.COD_ZONA IS NULL
	          	</isEmpty>
								
				<isNotEmpty prepend="AND" property="codigoPeriodo">
					SEV.COD_PERI = #codigoPeriodo#
				</isNotEmpty>
				<isEmpty prepend="AND" property="codigoPeriodo">
	          		SEV.COD_PERI IS NULL
	          	</isEmpty>
								
				<isNotEmpty prepend="AND" property="codigoConsultora">
					SEV.COD_CLIE = #codigoConsultora#
				</isNotEmpty>
				<isEmpty prepend="AND" property="codigoConsultora">
	          		SEV.COD_CLIE IS NULL
	          	</isEmpty>
								
				<isNotEmpty prepend="AND" property="fecha">
					to_date(to_char(SEV.FEC_PROC, 'dd/mm/yyyy'), 'dd/mm/yyyy') = to_date(#fecha#,'dd/mm/yyyy')					
				</isNotEmpty>
				<isEmpty prepend="AND" property="fecha">
	          		SEV.FEC_PROC IS NULL
	          	</isEmpty>
											
	</select>

	<parameterMap id="boletaRecojoProcessParams" class="map" >														
		<parameter property="numeroBoleta"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>			
		<parameter property="mensajeError"			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="usuario"	            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
	</parameterMap>	
	
	<procedure id="activarBoletaRecojoProcess" parameterMap="boletaRecojoProcessParams" >														
		{call INT_PKG_RECLA.int_pr_rec_activa_borec(?,?,?)}												
	</procedure>
	
	<procedure id="eliminarBoletaRecojoProcess" parameterMap="boletaRecojoProcessParams" >														
		{call INT_PKG_RECLA.int_pr_rec_anula_borec(?,?,?)}												
	</procedure>	
    
    <resultMap id="getConsultaRECBoletaRecojoDetailResult" class="java.util.HashMap">
		<result property="codigoCliente"            column="COD_CLIE"/>
		<result property="nombreCliente"        	column="NOM_CLIE"/>
		<result property="numeroBoleta"   			column="NROBOL"/>
		<result property="numeroRecojo"        		column="NUM_RECO"/>
		<result property="gestion"	        		column="GESTION"/>
		<result property="resultado"        		column="RESULTADO"/>
		<result property="fechaEmision1"       		column="FECHAEMISION1"/>
		<result property="fechaRecojo1"       		column="FECHARECOJO1"/>
		<result property="impreso1"		       		column="IMP1"/>
		<result property="enviado1"		       		column="ENV1"/>
		<result property="regreso1"		       		column="REG1"/>
		<result property="loteEnvio1"	       		column="NUM_LOTE_ENVI"/>
		<result property="loteRegreso1"	       		column="NUM_LOTE_DEVU"/>
		<result property="fechaEmision2"       		column="FECHAEMISION2"/>
		<result property="fechaRecojo2"       		column="FECHARECOJO2"/>
		<result property="impreso2"		       		column="IMP2"/>
		<result property="enviado2"		       		column="ENV2"/>
		<result property="regreso2"		       		column="REG2"/>
		<result property="loteEnvio2"	       		column="NUM_LOTE_ENV2"/>
		<result property="loteRegreso2"	       		column="NUM_LOTE_DEV2"/>
	</resultMap>
	
    <select id="getConsultaRECBoletaRecojoDetail" parameterClass="string" resultMap="getConsultaRECBoletaRecojoDetailResult">
			SELECT BOL.COD_CLIE,
			       GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(BOL.COD_CLIE, 'NOM_CLIE') NOM_CLIE,
			       TO_CHAR(BOL.COD_CABE_BORE) NROBOL,
			       TO_CHAR(BOL.NUM_RECO) NUM_RECO,			       
			       (SELECT DES_ESTA_BORE
			          FROM INT_REC_ESTAD_BOREC
			         WHERE OID_ESTA_BORE = ESBO_OID_ESTA_BOR1) GESTION,
			       (SELECT DES_ESTA_BORE
			          FROM INT_REC_ESTAD_BOREC
			         WHERE OID_ESTA_BORE = ESBO_OID_ESTA_BOR2) RESULTADO,
			       TO_CHAR(FEC_INGR, 'DD/MM/YYYY') FECHAEMISION1,
			       TO_CHAR(FEC_RECO, 'DD/MM/YYYY') FECHARECOJO1,
			       DECODE(BOL.IND_ENVI_XERO, 1, 'S', 'N') IMP1,
			       DECODE(BOL.IND_ENVI_YOBE, 1, 'S', 'N') ENV1,
			       DECODE(BOL.IND_REGR_YOBE, 1, 'S', 'N') REG1,
			       BOL.NUM_LOTE_ENVI,
			       BOL.NUM_LOTE_DEVU,
			       TO_CHAR(FEC_ING2, 'DD/MM/YYYY') FECHAEMISION2,
			       TO_CHAR(FEC_REC2, 'DD/MM/YYYY') FECHARECOJO2,
			       DECODE(BOL.IND_ENVI_XER2, 1, 'S', 'N') IMP2,
			       DECODE(BOL.IND_ENVI_YOB2, 1, 'S', 'N') ENV2,
			       DECODE(BOL.IND_REGR_YOB2, 1, 'S', 'N') REG2,
			       BOL.NUM_LOTE_ENV2,
			       BOL.NUM_LOTE_DEV2
			  FROM INT_REC_CABEC_BOREC BOL
			 WHERE BOL.COD_CABE_BORE = #numeroBoleta#
	</select>  
        
	<resultMap id="getResultadoBRListResult" class="comboBase">
		<result property="codigo"             column="COD_ESTA_BORE"/>
		<result property="descripcion"        column="DES_ESTA_BORE"/>
	</resultMap>

	<select id="getResultadoBRList" resultMap="getResultadoBRListResult">
		SELECT COD_ESTA_BORE, 
        	   DES_ESTA_BORE
		FROM INT_REC_ESTAD_BOREC
			   WHERE IND_GEST_CIER = '1'
	</select>
	
	<parameterMap id="executeValidaRelacionBoletaRecojoParams" class="map" >
	    <parameter property="numeroBR"	            	 jdbcType="NUMBER" 	 javaType="java.lang.Long"    mode="IN"/>
	    <parameter property="mensaje"	             	 jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="nroRecojo"	                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="codigoCliente"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="nombreCliente"	             jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>	
    </parameterMap>
	
	<procedure id="executeValidaRelacionBoletaRecojo" parameterMap="executeValidaRelacionBoletaRecojoParams">
		{call INT_PKG_RECLA.INT_PR_REC_VALID_BOREC(?,?,?,?,?)}
	</procedure>
	
	<resultMap id="getListaBoletasBRListResult" class="java.util.HashMap">
		<result property="numeroLoteBR"             column="NUM_LOTE"/>
		<result property="codigoResultadoBR"        column="COD_ESTA_BORE"/>
		<result property="fechaBR"        			column="FEC_INGR"/>
		<result property="cantidadBR"          		column="CANT_BOLE"/>
	</resultMap>
	
	<select id="getListaBoletasBRList" parameterClass="java.util.Map" resultMap="getListaBoletasBRListResult">
		SELECT DISTINCT (NUM_LOTE) NUM_LOTE, 
				COD_ESTA_BORE, 
				TO_CHAR(FEC_INGR, 'dd/MM/yyyy') FEC_INGR, 
				TO_CHAR(COUNT (NUM_LOTE)) CANT_BOLE
           FROM REC_AUDIT_BOREC
			<dynamic prepend="where">         
				<isNotEmpty prepend="AND" property="numeroLote">
					NUM_LOTE = #numeroLote#
		    	</isNotEmpty>
				<isNotEmpty prepend="AND" property="resultadoBR">
					COD_ESTA_BORE = #resultadoBR#
		    	</isNotEmpty>
		    	<isNotEmpty prepend="AND" property="fecha">
					TO_CHAR(FEC_INGR, 'dd/MM/yyyy') = #fecha#
		    	</isNotEmpty>
			</dynamic>
			GROUP BY NUM_LOTE, COD_ESTA_BORE, FEC_INGR
			ORDER BY NUM_LOTE DESC
	</select>
	
	<resultMap id="getListaBoletasDetalleBRListResult" class="java.util.HashMap">
		<result property="numeroLoteBR"         column="NUM_LOTE"/>
		<result property="numeroBoletaRecojo"   column="COD_CABE_BORE"/>
		<result property="numeroRecojo"        	column="NUM_RECO"/>
		<result property="codigoCliente"        column="COD_CLIE"/>
		<result property="codigoResultado"      column="COD_ESTA_BORE"/>
		<result property="usuarioIngreso"       column="USU_INGR"/>
		<result property="fechaIngreso"     	column="FEC_INGR"/>
		<result property="flagProceso"          column="FLAG_PROC"/>
		<result property="descripcionError"     column="DES_ERRO"/>
	</resultMap>
	
	<select id="getListaBoletasDetalleBRList" parameterClass="java.util.Map" resultMap="getListaBoletasDetalleBRListResult">
		SELECT  NUM_LOTE,
				COD_CABE_BORE,
				NUM_RECO,
				COD_CLIE, 
	       		COD_ESTA_BORE, 
	       		USU_INGR,  
	       		TO_CHAR(FEC_INGR , 'dd/MM/yyyy') FEC_INGR, 
	       		FLAG_PROC, 
	       		DES_ERRO
	    FROM REC_AUDIT_BOREC
	    WHERE NUM_LOTE = #numeroLote#
	</select>
	
	<insert id="insertProcesoBoletaTemporal" parameterClass="java.util.Map">
		INSERT INTO REC_GTT_PROCE_BOREC (
			COD_CABE_BORE, 
			NUM_RECO, 
			COD_CLIE, 
			FLAG_PROC
			)VALUES(
			#numeroBoletaRecojo#,
			#numeroRecojo#,
			#codigoCliente#,
			#flagProceso#
			)
	</insert>

	<insert id="insertProcesoBoletaRecojoTemporal" parameterClass="java.util.Map">
		INSERT INTO REC_GTT_PROCE_BOREC (
			COD_CABE_BORE, 
			NUM_RECO, 
			COD_CLIE, 
			FLAG_PROC,
			DES_ERRO
			)VALUES(
			#numeroBR#,
			#nroRecojo#,
			#codigoCliente#,
			(case when #mensaje# is null then '0' else '9' end), 
			#mensaje#
			)
	</insert>

	<resultMap id="getProcesoBoletaTemporalListResult" class="java.util.HashMap">
		<result property="numeroBR"             column="COD_CABE_BORE"/>
		<result property="nroRecojo"        	column="NUM_RECO"/>
		<result property="codigoCliente"       	column="COD_CLIE"/>
		<result property="flag"					column="FLAG_PROC"/>
		<result property="observacion"      	column="DES_ERRO"/>
		<result property="nombre"      			column="NOM_CLIE"/>
	</resultMap>
	
	<select id="getProcesoBoletaTemporalList" resultMap="getProcesoBoletaTemporalListResult">
		SELECT 
			rc.COD_CABE_BORE,
			rc.NUM_RECO,
			rc.COD_CLIE,
			rc.FLAG_PROC,
			rc.DES_ERRO,
			(SELECT c.VAL_NOM1||' '|| c.VAL_NOM2||' '|| c.VAL_APE1||' '|| c.VAL_APE2 FROM MAE_CLIEN c WHERE c.COD_CLIE = rc.COD_CLIE) NOM_CLIE
			FROM REC_GTT_PROCE_BOREC rc
			ORDER BY rc.COD_CABE_BORE 
	</select>
	
    <select id="getProcesoBoletaTemporalListIncorrectas" resultClass="int">
		select count (cod_cabe_bore) from rec_gtt_proce_borec where flag_proc = '9'
    </select>
	
	<delete id="removeBoletaTemporal" parameterClass="java.util.Map">
		DELETE FROM REC_GTT_PROCE_BOREC
			WHERE COD_CABE_BORE = #numeroBoletaRecojo#
			AND NUM_RECO = #numeroRecojo#
			AND COD_CLIE = #codigoCliente#
	</delete>
	
	
	<parameterMap id="executeValidarProcesoBoletaParams" class="java.util.HashMap" >
	    <parameter property="numeroLote"					jdbcType="VARCHAR2" javaType="java.lang.String"	mode="IN"/>
	    <parameter property="codigoResultadoBR"				jdbcType="VARCHAR2" javaType="java.lang.String"	mode="IN"/>
	    <parameter property="usuarioLogin"	  				jdbcType="VARCHAR2" javaType="java.lang.String"	mode="IN"/>
    </parameterMap>
	
	<procedure id="executeValidarProcesoBoleta" parameterMap="executeValidarProcesoBoletaParams">
		{call INT_PKG_RECLA.INT_PR_REC_PROCE_BOREC(?,?,?)}
	</procedure>
	
	<select id="getNumeroLoteBoletasRecojo" resultClass="string">
		SELECT LPAD(REC_SEQ_LOTE_AUDIT_BOREC.nextval, 10, '0') AS NUM_LOTE
		  FROM DUAL
	</select>
	
	<delete id="deleteTablaTemporal">
		DELETE FROM REC_GTT_PROCE_BOREC
	</delete>
	
	<parameterMap id="valiOfertaParams" class="map" >
		<parameter property="oidSoliPosi"    jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>
		<parameter property="cantidad"       jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>
    </parameterMap>
    <procedure id="ofertaDevolucion" parameterMap="valiOfertaParams">
         {call REC_PKG_PROCE.REC_PR_REVIS_OFERT_DEVOL(?,?) }    
    </procedure>
    
    <select id="getMensajeError" resultClass="string">
		select val_mens from REC_GTT_OBTIE_OFERT where ind_busc = '1'
	</select>
	
		<select id="getMensajeOferta" resultClass="string">
		select count(*) from REC_GTT_OBTIE_OFERT where ind_busc = '0'
	</select>
	
	<resultMap id="valoresDetalleMensaje" class="java.util.HashMap">
		<result property="cuv"             column="CUV"/>
		<result property="descripcion"     column="DESC_PROD"/>
		<result property="digitado"        column="Digitado"/>
		<result property="atendidos"	   column="Atendidos"/>
		<result property="factor"      	   column="Factor"/>
		<result property="unidadDevo"      column="UNID_A_DEVO"/>
		<result property="observacion"     column="OBSERVACION"/>
	</resultMap>
	
	<select id="getDetalleMensaje" resultMap="valoresDetalleMensaje">
	   select codi_vent CUV, 
	   		  DESC_PROD,
	          decode(IND_BUSC,'1','S','N') Digitado, 
	          UNID_ATEN Atendidos, 
	          FACT_REPE Factor, 
	          UNID_A_DEVO ,
	          val_mens OBSERVACION 
	from REC_GTT_OBTIE_OFERT
	where unid_a_devo >0
	</select>
	
	
	
	<resultMap id="valoresGttOferta" class="java.util.HashMap">
		<result property="posBusc"     column="pos_busc"/>
		<result property="posOfer"     column="pos_ofer"/>
		<result property="indBusc"     column="ind_busc"/>
		<result property="codiVent"	   column="codi_vent"/>
		<result property="unidAten"    column="unid_aten"/>
		<result property="factRepe"    column="fact_repe"/>
		<result property="unidXDevo"   column="unid_x_devo"/>
		<result property="precProd"    column="prec_prod"/>
		<result property="descProd"    column="desc_prod"/>
		<result property="unidADevo"   column="unid_a_devo"/>
		<result property="unidSoli"    column="unid_soli"/>
		<result property="factOfer"    column="fact_ofer"/>
		<result property="valMens"     column="val_mens"/>
	</resultMap>
	<select id="getGttOferta" resultMap="valoresGttOferta" parameterClass="java.util.Map">
	select  pos_busc ,
			pos_ofer ,
			ind_busc ,
			codi_vent ,
			unid_aten ,
			fact_repe ,
			unid_x_devo ,
			prec_prod ,
			desc_prod ,
			unid_a_devo ,
			unid_soli ,
			fact_ofer ,
			val_mens
			from REC_GTT_OBTIE_OFERT where unid_a_devo > #unidad#  
	</select>
	
	<update id="updateGttOferta" parameterClass="java.util.Map" >
			update REC_GTT_OBTIE_OFERT 
			set val_mens = #mensaje#
			<dynamic prepend="where">
				<isNotEmpty property="posOfer" prepend="and">
					pos_ofer = #posOfer#
				</isNotEmpty>
				<isNotEmpty property="codiVent" prepend="and">
					codi_vent = #codiVent#
				</isNotEmpty>
				<isNotEmpty property="unidADevo" prepend="and">
					unid_a_devo = #unidADevo#
				</isNotEmpty>
			</dynamic>
			    
	
	</update>
	
    <delete id="eliminarAtencionesMasivas">
        DELETE FROM REC_GTT_DETAL_INGRE_ATEN_MAS
    </delete>
    
	<insert id="insertAtencionesMasivasError" parameterClass="java.util.Map">
		INSERT INTO REC_GTT_DETAL_INGRE_ATEN_MAS 
		(
		    COD_CLIE,
		    COD_VENT,
		    NUM_UNID,
		    DES_ERROR
		)
		VALUES 
		(
		    #codigoConsultora#,
		    #codigoVenta#,
		    #cantidad#,
		    #error#
		)
	</insert>
	
    <select id="getValidarCodigoConsultora" parameterClass="java.util.Map"  resultClass="string">
		SELECT DECODE ((SELECT COUNT (cod_clie)
		                  FROM mae_clien
		                 WHERE cod_clie = #codigoConsultora#), 0, 0, 1) EXISTE
		  FROM DUAL
    </select>
    
    <select id="getObtenerCodigoConsultora" parameterClass="string" resultClass="string">
		SELECT MC.COD_CLIE COD_CLIE
		  FROM MAE_CLIEN_IDENT MCI, MAE_CLIEN MC
		 WHERE MCI.CLIE_OID_CLIE = MC.OID_CLIE
		   AND MCI.NUM_DOCU_IDEN = #value#
		   AND MCI.VAL_IDEN_DOCU_PRIN = 1
    </select>
    
	<resultMap id="getAtencionesMasivasListResult" class="java.util.HashMap">
	    <result property="precio"          			column="VAL_PREC"/>
	    <result property="precioContable"           column="VAL_PREC_CONT"/>
	    <result property="codigoSAP"             	column="COD_SAP"/>
	    <result property="descripcionProducto"      column="DES_PROD"/>
	    <result property="idTipoOferta"				column="OID_TIPO_OFERTA"/>
	    <result property="idProducto"    			column="OID_PROD"/>
	    <result property="idMatrizFacturacion"		column="OID_MATR_FACT"/>   
	    <result property="idOperacionReclamo"   	column="OID_OPER_RECL"/>	    
	    <result property="idSolicitud"    			column="OID_SOLI"/>
	    <result property="idParametroNivel"         column="OID_PARA_NIVE"/>   
	    <result property="idLoteArticulo"   		column="OID_LOTE_ARTI"/>	            
	    <result property="idTipoConcurso"   		column="OID_TIPO_CONC"/>
	    <result property="idDetalleOferta"   		column="OID_DETAL_OFER"/>
	    <result property="idFormaPago"    			column="OID_FORMA_PAGO"/>
    </resultMap>
  
    <select id="getAtencionesMasivasPorMatrizList" parameterClass="java.util.Map" resultMap="getAtencionesMasivasListResult">
		 SELECT DISTINCT B.PRECIO_UNITARIO  VAL_PREC,
		        B.IMP_PREC_POSI             VAL_PREC_CONT,
		        D.COD_SAP                   COD_SAP,
		        E.VAL_I18N                  DES_PROD,
		        B.TOFE_OID_TIPO_OFER        OID_TIPO_OFERTA,
		        D.OID_PROD                  OID_PROD,
		        F.OID_MATR_FACT             OID_MATR_FACT,
		        NULL                        OID_OPER_RECL,
		        NULL                        OID_SOLI,
		        NULL                        OID_PARA_NIVE,
		        NULL                        OID_LOTE_ARTI,
		        NULL                        OID_TIPO_CONC,
		        B.OID_DETA_OFER             OID_DETAL_OFER,
		        B.FOPA_OID_FORM_PAGO        OID_FORMA_PAGO
		   FROM PRE_OFERT             A,
		        PRE_OFERT_DETAL       B,
		        PRE_MATRI_FACTU_CABEC C,
		        MAE_PRODU             D,
		        GEN_I18N_SICC_PAIS    E,
		        PRE_MATRI_FACTU       F
		  WHERE A.OID_OFER = B.OFER_OID_OFER
		    AND A.MFCA_OID_CABE = C.OID_CABE
		    AND B.PROD_OID_PROD = D.OID_PROD
		    AND B.OID_DETA_OFER = F.OFDE_OID_DETA_OFER
		    AND E.ATTR_ENTI = 'MAE_PRODU'
		    AND E.VAL_OID = D.OID_PROD
		    AND B.VAL_CODI_VENT = #codigoVenta#
		    AND C.PERD_OID_PERI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#codigoPeriodoReferencia#)
    </select>
    
    <select id="getAtencionesMasivasPorPremioList" parameterClass="java.util.Map" resultMap="getAtencionesMasivasListResult">
			        select 0                         VAL_PREC,
                           j.IMP_PREC_PUBL           VAL_PREC_CONT,
                           d.COD_SAP,
                           e.VAL_I18N            DES_PROD,
                           NULL                      OID_TIPO_OFERTA,
                           d.OID_PROD,
                           NULL                      OID_MATR_FACT,
                           NULL                      OID_OPER_RECL,
                           b.OID_PARA_GRAL           OID_SOLI,
                           h.PANP_OID_PARA_NIVE_PREM OID_PARA_NIVE,
                           i.OID_LOTE_PREM_ARTI      OID_LOTE_ARTI,
                           b.ICTP_OID_TIPO_PROG      OID_TIPO_CONC,
                           NULL                      OID_DETAL_OFER,
                           NULL                      OID_FORMA_PAGO
                      from mae_produ             d,
                           gen_i18n_sicc_pais    e,
                           inc_concu_param_gener b,
                           inc_param_gener_premi f,
                           inc_param_nivel_premi g,
                           inc_premi_artic       h,
                           inc_lote_premi_artic  i,
                           inc_artic_lote        j
                    where e.ATTR_ENTI = 'MAE_PRODU'
                       and e.VAL_OID = d.OID_PROD
                       and f.COPA_OID_PARA_GRAL = b.OID_PARA_GRAL
                       and f.OID_PARA_GENE_PREM = g.PAGP_OID_PARA_GENE_PREM
                       and g.OID_PARA_NIVE_PREM = h.PANP_OID_PARA_NIVE_PREM
                       and h.OID_PREM_ARTI = i.PRAR_OID_PREM_ARTI
                       and i.OID_LOTE_PREM_ARTI = j.LOPA_OID_LOTE_PREM_ARTI
                       and j.PROD_OID_PROD = d.OID_PROD
                       AND J.COD_VENT_FICT = #codigoVenta#
                    UNION ALL
                    select 0                         VAL_PREC,
                           j.IMP_PREC_PUBL           VAL_PREC_CONT,
                           d.COD_SAP,
                           e.VAL_I18N             DES_PROD,
                           NULL                      OID_TIPO_OFERTA,
                           d.OID_PROD,
                           NULL                      OID_MATR_FACT,
                           NULL                      OID_OPER_RECL,
                           b.OID_PARA_GRAL           OID_SOLI,
                           h.PANP_OID_PARA_NIVE_PREM OID_PARA_NIVE,
                           i.OID_LOTE_PREM_ARTI      OID_LOTE_ARTI,
                           b.ICTP_OID_TIPO_PROG      OID_TIPO_CONC,
                           NULL                      OID_DETAL_OFER,
                           NULL                      OID_FORMA_PAGO
                      from mae_produ             d,
                           gen_i18n_sicc_pais    e,
                           inc_concu_param_gener b,
                           inc_param_gener_premi f,
                           inc_param_nivel_premi g,
                           inc_premi_artic       h,
                           inc_lote_premi_artic  i,
                           inc_artic_lote        j,
                           inc_reemp_artic_lote  r
                    where e.ATTR_ENTI = 'MAE_PRODU'
                       and e.VAL_OID = d.OID_PROD
                       and f.COPA_OID_PARA_GRAL = b.OID_PARA_GRAL
                       and f.OID_PARA_GENE_PREM = g.PAGP_OID_PARA_GENE_PREM
                       and g.OID_PARA_NIVE_PREM = h.PANP_OID_PARA_NIVE_PREM
                       and h.OID_PREM_ARTI = i.PRAR_OID_PREM_ARTI
                       and i.OID_LOTE_PREM_ARTI = j.LOPA_OID_LOTE_PREM_ARTI
                       and j.oid_arti_lote = r.arlo_oid_arti_lote
                       and r.prod_oid_prod = d.oid_prod
                       AND R.COD_VENT_FICT = #codigoVenta#
    </select>
    
	<insert id="insertAtencionesMasivasConsultoraVenta" parameterClass="java.util.Map">
		INSERT INTO REC_GTT_DETAL_INGRE_ATEN_MAS
		(
		    COD_CLIE,
		    COD_VENT,
            VAL_PREC,
            VAL_PREC_CONT,
            COD_SAP,
            DES_PROD,
            OID_TIPO_OFER,
            OID_PROD,
            OID_MATR_FACT,
            OID_OPER_RECL,
            OID_SOLI,
            OID_PARA_NIVE,
            OID_LOTE_ARTI,
            OID_TIPO_CONC,
            OID_DETAL_OFER,
            OID_FORM_PAGO,
		    NUM_UNID,
		    DES_ERROR
		)
		VALUES 
		(
		    #codigoConsultora#,
		    #codigoVenta#,
		    to_number(#precio#,'9999999999.99'),
			to_number(#precioContable#,'999999999999.99'),
		    #codigoSAP#,
		    #descripcionProducto#,
		    #idTipoOferta#,
		    #idProducto#,
		    #idMatrizFacturacion#,
		    #idOperacionReclamo#,
		    #idSolicitud#,
		    #idParametroNivel#,
		    #idLoteArticulo#,
		    #idTipoConcurso#,
		    #idDetalleOferta#,
		    #idFormaPago#,
		    #cantidad#,
		    #error#
		)
	</insert>
	
    <select id="getNumeroLoteAtencionesMasivas" resultClass="string">
		  SELECT LPAD(REC_SEQ_LOTE_ATENC.nextval,8,'0') AS NUM_LOTE
		  FROM DUAL
    </select>
	
    <parameterMap id="procesarIngresoAtencionesMasivasParams" class="map" >
        <parameter property="numeroLote"                   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoProducto"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="tipoAtencion"                 jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>						
		<parameter property="codigoCliente"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="campanhaProceso"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="campanhaReferencia"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPais"                   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="mensajeError"				   jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="tipoOperacion"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
    </parameterMap>
	 
	<procedure id="procesarIngresoAtencionesMasivas" parameterMap="procesarIngresoAtencionesMasivasParams" resultClass="string">
        {call REC_PKG_PROCE.REC_PR_PROCE_INGRE_ATEN_MAS(?,?,?,?,?,?,?,?,?,?) }
    </procedure>
    
	<resultMap id="getGTTDetalleIngresoAtencionesMasivasListParams" class="java.util.HashMap">
	    <result property="codigoConsultora"         column="COD_CLIE"/>
	    <result property="codigoVenta"           	column="COD_VENT"/>
	    <result property="precio"          			column="VAL_PREC"/>
	    <result property="precioContable"           column="VAL_PREC_CONT"/>
	    <result property="codigoSAP"             	column="COD_SAP"/>
	    <result property="descripcionProducto"      column="DES_PROD"/>
	    <result property="idTipoOferta"				column="OID_TIPO_OFER"/>
	    <result property="idProducto"    			column="OID_PROD"/>
	    <result property="idMatrizFacturacion"		column="OID_MATR_FACT"/>   
	    <result property="idOperacionReclamo"   	column="OID_OPER_RECL"/>	    
	    <result property="idSolicitud"    			column="OID_SOLI"/>
	    <result property="idParametroNivel"         column="OID_PARA_NIVE"/>   
	    <result property="idLoteArticulo"   		column="OID_LOTE_ARTI"/>	            
	    <result property="idTipoConcurso"   		column="OID_TIPO_CONC"/>
	    <result property="idDetalleOferta"   		column="OID_DETAL_OFER"/>
	    <result property="idFormaPago"    			column="OID_FORM_PAGO"/>
	    <result property="cantidad"   				column="NUM_UNID"/>
	    <result property="error"    				column="DES_ERROR"/>
    </resultMap>
  
    <select id="getGTTDetalleIngresoAtencionesMasivasList" parameterClass="java.util.Map" resultMap="getGTTDetalleIngresoAtencionesMasivasListParams">
		 SELECT COD_CLIE,
			    COD_VENT,
	            VAL_PREC,
	            VAL_PREC_CONT,
	            COD_SAP,
	            DES_PROD,
	            OID_TIPO_OFER,
	            OID_PROD,
	            OID_MATR_FACT,
	            OID_OPER_RECL,
	            OID_SOLI,
	            OID_PARA_NIVE,
	            OID_LOTE_ARTI,
	            OID_TIPO_CONC,
	            OID_DETAL_OFER,
	            OID_FORM_PAGO,
			    NUM_UNID,
			    DES_ERROR
		   FROM REC_GTT_DETAL_INGRE_ATEN_MAS
    </select>
	
    <select id="getCodigoCUVFicticioProducto" parameterClass="java.util.Map" resultClass="java.lang.String" >
      SELECT COD_VENT_FICT
	  FROM INC_ARTIC_LOTE
	  WHERE PROD_OID_PROD = TO_NUMBER(#oidProducto#)
	</select>
	
	<select id="getCodigoConsultoraPorDocumentoIdentidad" parameterClass="java.util.Map"  resultClass="string">
		SELECT mc.COD_CLIE
		  FROM MAE_CLIEN_IDENT ci, MAE_CLIEN mc
		 WHERE ci.CLIE_OID_CLIE = mc.OID_CLIE
		   AND ci.VAL_IDEN_DOCU_PRIN = 1
		   AND ci.NUM_DOCU_IDEN = #documentoIdentidad#
    </select>
    
    <select id="getLongitudTipoDocumento" parameterClass="java.util.Map" resultClass="string">
		SELECT GEN_PKG_GENER.GEN_FN_DEVUELVE_LONG_TIPO_DOCU(#codigoPais#, #tipoDocumento#) FROM DUAL
	</select>
	
	 <select id="getValidaCodigoCliente" parameterClass="string" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM mae_clien WHERE cod_clie = #value#
    </select> 
    
    <select id="getIndicadorNotaMercaderiaPerdida" parameterClass="java.util.Map" resultClass="string">
		  select val_para
		  from BAS_PARAM_PAIS
		 where cod_pais = #codigoPais#
		   and COD_SIST = #codigoSistema#
		   AND COD_PARA = #codigoParametro#
    </select> 
    
    <parameterMap id="getValExcepProduDeseaParams" class="map" >
		<parameter property="idPeriodoCDR"          jdbcType="VARCHAR" javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="codigoVenta"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoOperacionSic"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoOperacionSic"      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="oidSoliPosi"           jdbcType="NUMBER" javaType="java.lang.Long"  	mode="IN"/>
		<parameter property="codigoMotivo"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroBoletaDespacho"  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="mensaje"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
	
	 <procedure id="getValExcepProduDesea" parameterMap="getValExcepProduDeseaParams">
         {call sto_pkg_proce_valid_spvd.sto_pr_spvd_vali_eprod_desea(?,?,?,?,?,?,?,?) }    
    </procedure>
    
    <parameterMap id="getValUnidadDeseaParams" class="map" >
    	<parameter property="codigoPais"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoCliente"       jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidSoliPosi"         jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>
		<parameter property="unidadesDesea"       jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>
		<parameter property="codOperSICC"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoOperSICC"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="mensaje"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
    
    <procedure id="getValUnidadDesea" parameterMap="getValUnidadDeseaParams">
         {call sto_pkg_proce_valid_spvd.sto_pr_spvd_vali_unid_desea(?,?,?,?,?,?,?) }    
    </procedure>
    
	<resultMap id="activacionReclamosGratisResult" class="java.util.HashMap"> 
		<result property="campanaFaltante"          column="COD_PERI_FALT"/>
	    <result property="region"                   column="COD_REGI"/>
	    <result property="zona"                     column="COD_ZONA"/>
	    <result property="seccion"                  column="COD_SECC"/>
	    <result property="codigoCliente"            column="COD_CLIE"/>
	    <result property="oid"            			column="OID_ACTI_RECL_GRAT"/>
        <result property="codigoOperacion"          column="COD_OPER"/>
	    <result property="desOperacion"             column="DES_OPER"/>
	    <result property="codigoTipoOperacion"      column="COD_TIPO_OPER"/>
	    <result property="cuvFaltante"            	column="VAL_CODI_VENT_FALT"/>
	    <result property="sapFaltante"             	column="COD_SAP_FALT"/>
	    <result property="indicadorPremio"          column="IND_PREM"/>
	    <result property="cantidadNoAtendida"   	column="NUM_UNID_FALT"/>
	</resultMap>
    <select id="getActivacionReclamosGratisList" parameterClass="java.util.Map" resultMap="activacionReclamosGratisResult">
		SELECT COD_PERI_FALT,
			   COD_REGI,
			   COD_ZONA,
			   COD_SECC,
               COD_CLIE,
               OID_ACTI_RECL_GRAT,
		       COD_OPER,
		       DES_OPER,
		       COD_TIPO_OPER,
		       VAL_CODI_VENT_FALT,
		       COD_SAP_FALT,
		       decode(IND_PREM,'0','N','S') IND_PREM,
               NUM_UNID_FALT NUM_UNID_FALT
		  FROM REC_ACTIV_RECLA_GRATI
		 WHERE COD_PERI_FALT = #campanaFaltante#
           and IND_ACTI = '0'
           and IND_PREM =  #indPremio#	
			<isNotEmpty property="regionList">
				<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
				   COD_REGI = #regionList[]#
				</iterate>
			</isNotEmpty>
			<isNotEmpty property="zonaList">
				<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
				   COD_ZONA = #zonaList[]#
	           	</iterate>
			</isNotEmpty>
			<isNotEmpty property="seccionList">
				<iterate prepend="AND" property="seccionList" open="(" close=")" conjunction="OR">
				   COD_SECC = #seccionList[]#
	           	</iterate>
			</isNotEmpty>
		   <isNotEmpty property="operacionList">
			<iterate prepend="AND" property="operacionList" open="(" close=")" conjunction="OR">
				COD_OPER = #operacionList[]#
			</iterate>
		   </isNotEmpty>
		   <isNotEmpty prepend="AND" property="codigoCUV">           
				VAL_CODI_VENT_FALT = #codigoCUV#                             
		   </isNotEmpty>
		   <isNotEmpty prepend="AND" property="codigoSAP">           
				COD_SAP_FALT = #codigoSAP#                             
		   </isNotEmpty>
		 GROUP BY COD_PERI_FALT,
		 	   COD_REGI,
		 	   COD_ZONA,
		 	   COD_SECC,
               COD_CLIE,
               OID_ACTI_RECL_GRAT,
		       COD_OPER,
		       DES_OPER,
		       COD_TIPO_OPER,
		       VAL_CODI_VENT_FALT,
		       COD_SAP_FALT,
		       IND_PREM,
               NUM_UNID_FALT
	</select>
	
	<select id="getBuscarCUVReemplazo" parameterClass="java.util.Map"  resultClass="string">
		SELECT E.PRECIO_UNITARIO
	   	  FROM PRE_MATRI_FACTU_CABEC A,
	           CRA_PERIO B,
	           SEG_PERIO_CORPO C,
	           PRE_OFERT D,
	           PRE_OFERT_DETAL E
		 WHERE A.PERD_OID_PERI = B.OID_PERI
		   AND B.PERI_OID_PERI = C.OID_PERI
		   AND C.COD_PERI = #campanaDespacho#
		   AND A.OID_CABE = D.MFCA_OID_CABE
		   AND D.OID_OFER = E.OFER_OID_OFER
		   AND E.VAL_CODI_VENT IN (#codigoCUV#)
    </select> 
    
    <select id="getBuscarSAPReemplazo" parameterClass="java.util.Map"  resultClass="string">
		SELECT OID_PROD
		  FROM MAE_PRODU
		 WHERE COD_SAP = #codigoSAP#
    </select>
    
    <parameterMap id="executeProcesoActivacionReclamosGratisParams" class="map" >
		<parameter property="codigoPais" 				jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoOperacion" 			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoTipoOperacion" 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="campanaFaltante"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="region"                 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="zona"                 		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="seccion"                 	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="cuvFaltante"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="sapFaltante"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	<procedure id="executeProcesoActivacionReclamosGratis" parameterMap="executeProcesoActivacionReclamosGratisParams" >
        {call PED_PKG_CUADR_OFERT.PED_PR_GENER_SOLIC_GRATIS(?,?,?,?,?,?,?,?,?) }
    </procedure>
    
    
    <resultMap id="getValidacionInicialRecepcionCDRResult" class="java.util.HashMap">
	    <result property="varcontrcr"        column="contrcr"/>
	 	<result property="varoidclie"        column="oidclie"/>
	 	<result property="varoidcaberecl"    column="oidcaberecl"/>
	 	<result property="varoidsolicabe"    column="oidsolicabe"/>
	 	<result property="varvalnumesoli"    column="valnumesoli"/>
	 	<result property="varoidperiped"     column="oidperiped"/>
	 	<result property="varoidperirecl"    column="oidperirecl"/>
	 	<result property="varnumrecl"        column="numrecl"/>
	 </resultMap>
    
     <select id="getValidacionInicialRecepcionCDR" parameterClass="java.util.Map"  resultMap="getValidacionInicialRecepcionCDRResult">
		select   count(*) contrcr,
		         max(RCR.CLIE_OID_CLIE) oidclie, 
		         max (rcr.oid_cabe_Recl) oidcaberecl, 
		         max (rcr.soca_oid_soli_Cabe) oidsolicabe, 
		         max (psc.val_nume_soli) valnumesoli, 
		         max (rcr.perd_oid_peri_docu_refe) oidperiped, 
		         max (rcr.perd_oid_peri_recl) oidperirecl, 
		         max (rcr.num_Recl) numrecl
		from REC_CABEC_RECLA rcr, ped_solic_Cabec psc
		where rcr.soca_oid_soli_Cabe = psc.oid_soli_Cabe
		and  RCR.NUM_RECL = #numeroCDR#
    </select>
    
    <resultMap id="getValidacionRecepcionCDRResult" class="java.util.HashMap">
	    <result property="varindesta"        column="indesta"/>
	 	<result property="varindorig"        column="indorig"/>
	 	<result property="varusuingrrec"     column="usuingrrec"/>
	 	<result property="varcontrcd"        column="contrcr"/>
	</resultMap>
    
    <select id="getValidacionRecepcionCDR" parameterClass="java.util.Map"  resultMap="getValidacionRecepcionCDRResult">
		select max(rcc.ind_esta) indesta, 
			   max(rcc.ind_orig) indorig, 
			   max(rcc.usu_ingr_recl) usuingrrec, 
			   count(*) contrcr
	    from INT_RECEP_CDR_CABEC rcc
	    where rcc.oid_cabe_Recl = #varoidcaberecl#
    </select>
    
   
    <select id="getValidacionRecepcionCDRAnuladoDetalle" parameterClass="java.util.Map"  resultClass="int">
		select count(*) varanul  
		from REC_CABEC_RECLA rcr, rec_opera_recla ror, rec_tipos_opera rto, rec_opera ro
		where RCR.OID_CABE_RECL = ROR.CARE_OID_CABE_RECL
			and ROR.TIOP_OID_TIPO_OPER = rto.oid_tipo_oper  
			and RTO.ROPE_OID_OPER = RO.OID_OPER 
			and RO.IND_ANUL = 1
			and RO.IND_DEVU_GENE_ENVI = 0
		and rcr.oid_Cabe_Recl = #varoidcaberecl#
    </select>
    
    <select id="getValidacionRecepcionCDRDetalle" parameterClass="java.util.Map"  resultClass="int">
		select count(*) varcanlin
		from REC_CABEC_RECLA rcr, rec_opera_recla ror, rec_linea_opera_recla rlo
		where RCR.OID_CABE_RECL = ROR.CARE_OID_CABE_RECL
			and ROR.OID_OPER_RECL = RLO.OPRE_OID_OPER_RECL  
			and RLO.TIMO_OID_TIPO_MOVI =2
			and rlo.num_unid_devu = rlo.num_unid_recl
			and rcr.oid_Cabe_Recl = #varoidcaberecl# 
			and exists (select *
				          from rec_opera a, rec_tipos_opera b
				         where b.ROPE_OID_OPER = a.OID_OPER
				           and B.OID_TIPO_OPER = ROR.TIOP_OID_TIPO_OPER
				           and A.COD_OPER not in ('FA', 'FM', 'MF'))
    </select>
    
    <resultMap id="getListaRecepcionCDRReclamosResult" class="java.util.HashMap">
        <result property="numeroRegistro"        column="num_regi"/>
	    <result property="oidCorrelativo"        column="OID_CDR_DETA"/>
	 	<result property="oidProducto"           column="PROD_OID_PROD"/>
	 	<result property="descripcionProducto"   column="val_i18n"/>
	 	<result property="motivo"                column="COD_MOTI"/>
	 	<result property="codigoSAP"             column="COD_SAP"/>
	 	<result property="codigoVenta"           column="cod_vent"/>
	 	<result property="unidadesRecibidas"     column="NUM_UNID_DEVU"/>
	 	<result property="unidadesDisponibles"   column="num_uni_disp"/>
	 	<result property="unidadesDestruccion"   column="num_uni_dest"/>
	 	<result property="unidadesAprovec"       column="num_uni_apro"/>
	 	<result property="indicadorExistencia"   column="ind_exis"/>
	 	<result property="oidCabeReclamo"        column="OID_CABE_RECL"/>
	 	<result property="oidOperReclamo"        column="OID_OPER_RECL"/>
	 	<result property="oidLineaOperReclamo"   column="OID_LINE_OPER_RECL"/>
	 	<result property="indicadorBorrado"      column="IND_BORR"/>
	</resultMap>
    
    <select id="getListaRecepcionCDRReclamos" parameterClass="java.util.Map"  resultMap="getListaRecepcionCDRReclamosResult">
		select   
		      rownum num_regi, 
		      0 OID_CDR_DETA,    
	          RLO.PROD_OID_PROD ,
	          gen.val_i18n, 
	           
	          (SELECT  BASE.Cod_Moti_Devo || ' - ' || GEN.VAL_I18N AS descripcion
				  FROM GEN_I18N_SICC_PAIS GEN, SEG_IDIOM IDI, REC_MOTIV_DEVOL BASE
				WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
				   AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
				   AND IDI.COD_ISO_IDIO = 'es'
				   AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
				   AND BASE.OID_MOTI_DEVO = rlo.MODV_OID_MOTI_DEVO
		      ) COD_MOTI,
	          
	          MP.COD_SAP,
	          decode(PSP.VAL_CODI_VENT_FICT, null,PSP.VAL_CODI_VENT, PSP.VAL_CODI_VENT_FICT) cod_vent,
	          RLO.NUM_UNID_DEVU,
	          0 num_uni_disp, 
	          0 num_uni_dest, 
	          0 num_uni_apro, 
	          '1' ind_exis,
	          RCR.OID_CABE_RECL, 
	          ROr.OID_OPER_RECL, 
	          RLO.OID_LINE_OPER_RECL,
	          'N' IND_BORR
		from REC_CABEC_RECLA rcr, 
		     rec_opera_recla ror, 
		     rec_linea_opera_recla rlo, 
		     mae_produ mp, 
		     ped_solic_posic psp,
		     gen_i18n_sicc_pais gen
		where RCR.OID_CABE_RECL = ROR.CARE_OID_CABE_RECL
		and ROR.OID_OPER_RECL = RLO.OPRE_OID_OPER_RECL  
		and RLO.PROD_OID_PROD = MP.OID_PROD
		and RLO.SOPO_OID_SOLI_POSI = PSP.OID_SOLI_POSI
		and RLO.TIMO_OID_TIPO_MOVI =2
		and rlo.num_unid_devu = rlo.num_unid_recl
		and RCR.OID_CABE_RECL = #varoidcaberecl#  
		and MP.oid_prod = gen.val_oid 
		and gen.attr_enti = 'MAE_PRODU' 
		and exists (select *
			          from rec_opera a, rec_tipos_opera b
			         where b.ROPE_OID_OPER = a.OID_OPER
			           and B.OID_TIPO_OPER = ROR.TIOP_OID_TIPO_OPER
			           and A.COD_OPER not in ('FA', 'FM', 'MF'))
    </select>
    
    <resultMap id="getListaRecepcionCDRDetalleResult" class="java.util.HashMap">
        <result property="numeroRegistro"        column="num_regi"/>
	    <result property="oidCorrelativo"        column="OID_CDR_DETA"/>
	 	<result property="oidProducto"           column="PROD_OID_PROD"/>
	 	<result property="descripcionProducto"   column="val_i18n"/>
	 	<result property="motivo"                column="COD_MOTI"/>
	 	<result property="codigoSAP"             column="COD_SAP"/>
	 	<result property="codigoVenta"           column="cod_vent"/>
	 	<result property="unidadesRecibidas"     column="num_uni_devo"/>
	 	<result property="unidadesDisponibles"   column="num_uni_disp"/>
	 	<result property="unidadesDestruccion"   column="num_uni_dest"/>
	 	<result property="unidadesAprovec"       column="num_uni_apro"/>
	 	<result property="indicadorExistencia"   column="ind_exis"/>
	 	<result property="oidCabeReclamo"        column="OID_CABE_RECL"/>
	 	<result property="oidOperReclamo"        column="OID_OPER_RECL"/>
	 	<result property="oidLineaOperReclamo"   column="OID_LINE_OPER_RECL"/>
	 	<result property="indicadorBorrado"      column="IND_BORR"/>
	</resultMap>
    
    <select id="getListaRecepcionCDRDetalle" parameterClass="java.util.Map"  resultMap="getListaRecepcionCDRDetalleResult">
        Select 
                rownum num_regi, 
            	x.oid_cdr_deta,
		        x.prod_oid_prod,
		        gen.val_i18n, 
		        
		        (SELECT  BASE.Cod_Moti_Devo || ' - ' || GEN.VAL_I18N AS descripcion
				  FROM GEN_I18N_SICC_PAIS GEN, 
				       SEG_IDIOM IDI, 
				       REC_MOTIV_DEVOL BASE,
				       rec_linea_opera_recla rlo
				WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
				   AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
				   AND IDI.COD_ISO_IDIO = 'es'
				   AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
				   AND BASE.OID_MOTI_DEVO = rlo.MODV_OID_MOTI_DEVO
				   and rlo.OID_LINE_OPER_RECL = x.oid_line_oper_recl
		        ) COD_MOTI,
		      
		        x.cod_sap,
		        x.cod_vent,
		        x.num_uni_devo,
		        x.num_uni_disp,
		        x.num_uni_dest,
		        x.num_uni_apro,
		        x.ind_exis,
		        x.oid_cabe_recl,
		        x.oid_oper_recl,
		        x.oid_line_oper_recl,
                'N' IND_BORR
        from INT_RECEP_CDR_DETAL x,
             mae_produ mp,
             gen_i18n_sicc_pais gen
        where x.oid_cabe_Recl =  #varoidcaberecl#  
          and x.PROD_OID_PROD = MP.OID_PROD
          and MP.oid_prod = gen.val_oid 
	      and gen.attr_enti = 'MAE_PRODU' 
    </select>
    
    <resultMap id="getOidDatosClienteResult"    class="java.util.HashMap">
   		<result property="codigoCliente" 			column="COD_CLIE"/>
    	<result property="nombreCliente" 			column="NOM_CLIE"/>
    	<result property="descripcionRegion"       	column="DES_REGI"/>
    	<result property="descripcionZona"         	column="DES_ZONA"/>
    	<result property="codigozona"      			column="COD_ZONA"/>
    	<result property="codigoRegion"      		column="COD_REGI"/>
	</resultMap>  
   
    <select id="getOidDatosCliente" parameterClass="java.util.Map" resultMap="getOidDatosClienteResult">
    	select mc.cod_clie,
    	       mc.VAL_NOM1 || ' ' || mc.VAL_NOM2 || ' ' || mc.VAL_APE1 || ' ' || mc.VAL_APE2 NOM_CLIE,
		       gen_pkg_gener.gen_fn_clien_datos(mc.cod_clie,'DES_REGI') DES_REGI,
		       gen_pkg_gener.gen_fn_clien_datos(mc.cod_clie,'DES_ZONA') DES_ZONA,
		       gen_pkg_gener.gen_fn_clien_datos(mc.cod_clie,'COD_ZONA') COD_ZONA,
		       gen_pkg_gener.gen_fn_clien_datos(mc.cod_clie,'COD_REGI') COD_REGI
		from mae_clien mc
		where mc.oid_clie = #oidCliente#
    </select>
    
    <select id="getDevuelveSecuencialDetalleRecepcionCDR" parameterClass="java.util.Map" resultClass="long">
    	SELECT INT_SEQ_RECEP_CDR_DETAL.NEXTVAL
        FROM dual
    </select>
    
    
    <insert id="insertCabeceraRecepcionCDR" parameterClass="java.util.Map">
    	insert into INT_RECEP_CDR_CABEC(
    		oid_cabe_recl, 
			num_recl, 
			val_nume_soli, 
			oid_peri_docu_refe, 
			oid_peri_recl, 
			ind_orig, 
			ind_esta, 
			usu_ingr_recl, 
			fec_ingr_recl
    	)
    	VALUES (
    		TO_NUMBER(#oidCabeReclamo#),
    		TO_NUMBER(#numeroReclamo#),
    		TO_NUMBER(#numeroPedido#),
    		TO_NUMBER(#oidPeriodoPedido#),
    		TO_NUMBER(#oidPeriodoReclamo#),
    		#indicadorOrigen#,
    		#indicadorEstado#,
    		#codigoUsuario#,
    		SYSDATE
    	)
    </insert>
    
    <update id="updateCabeceraRecepcionCDR" parameterClass="java.util.Map">
        update INT_RECEP_CDR_CABEC
        set 
            num_recl = TO_NUMBER(#numeroReclamo#),
			val_nume_soli =  TO_NUMBER(#numeroPedido#),
			oid_peri_docu_refe = TO_NUMBER(#oidPeriodoPedido#),
			oid_peri_recl = TO_NUMBER(#oidPeriodoReclamo#),
			ind_orig = #indicadorOrigen#,
			ind_esta = #indicadorEstado#,
            usu_modi_recl = #codigoUsuario#,
		    fec_modi_recl = SYSDATE
        where oid_cabe_recl = TO_NUMBER(#oidCabeReclamo#)
    </update>
    
    <delete id="deleteDetalleRecepcionCDR" parameterClass="java.util.Map">
    	delete from INT_RECEP_CDR_DETAL
        where oid_cabe_recl = TO_NUMBER(#oidCabeReclamo#)
    </delete>
    
    <insert id="insertDetalleRecepcionCDR" parameterClass="java.util.Map">
    	INSERT INTO INT_RECEP_CDR_DETAL(
			OID_CDR_DETA,
			prod_oid_prod, 
			cod_sap, 
			cod_vent, 
			num_uni_devo, 
			num_uni_disp, 
			num_uni_dest, 
			num_uni_apro, 
			ind_exis, 
			oid_cabe_recl, 
			oid_oper_recl, 
			oid_line_oper_recl
    	)
    	VALUES (
    	    #oidCorrelativo#,
    	    #oidProducto#,
    		#codigoSAP#,
    		#codigoCUV#,
    		#unidRecibidas#,
    		#unidDisponible#,
    		#unidDestruccion#,
    		#unidAprovec#,
    		#indicadorExistencia#,
    		TO_NUMBER(#oidCabeReclamo#),
    		#oidOperReclamo#,
    		#oidLineaOperReclamo#  	
    	)
    </insert>
    
    <select id="getDevuelveProductoRecepcionCDR" parameterClass="java.util.Map" resultClass="productoAgregacion">
    	select oid_prod as id, 
    	       cod_sap as codigoProducto,
    	       val_i18n as descripcionProducto
	    from mae_produ, gen_i18n_sicc_pais 
	    where oid_prod = val_oid 
	    and attr_enti = 'MAE_PRODU' 
	    and cod_sap = #codigoSAP#
    </select>
   
     <update id="executeProcesoRECEnviarCDRRecepcionados" parameterClass="java.util.Map">
    	UPDATE INT_RECEP_CDR_CABEC
	    SET 
	    	USU_ENVI_SAP = #codigoUsuario#,
	    	FEC_ENVI_SAP = sysdate,
	    	ind_esta = '1'
    	WHERE OID_CABE_RECL = #oidReclamo#
    </update>
	
    <resultMap id="getTramaPedidoListResult" class="java.util.HashMap">
		<result property="valTrama"			column="valtrama" />
		<result property="valPedido"		column="valpedido" />                
	</resultMap>
     
	<select id="getValTramaPedidoList" parameterClass="java.util.Map" resultMap="getTramaPedidoListResult">
		  SELECT '95' || psc.val_nume_soli as valtrama,
	             psc.val_nume_soli         as valpedido
	        FROM rec_repos_anula rra, ped_solic_cabec psc
	       WHERE rra.num_docu_refe = psc.val_nume_soli
	         AND rra.num_lote = #numeroLote#
	         AND rra.cod_esta_proc = '1'
	         AND rra.oid_soli_cabe IS NOT NULL
	</select>
	
	<update id="updateValTramaPedido" parameterClass="java.util.Map">
    	UPDATE rec_repos_anula rra
           SET des_erro_trama = #valMensaje#
         WHERE rra.num_docu_refe = #valPedido#
           AND rra.num_lote = #numeroLote#
           AND rra.cod_esta_proc = '1'
           AND rra.oid_soli_cabe IS NOT NULL
    </update>
	
    <resultMap id="regionZonaBoletaRecojoInteligenteListResult" class="java.util.HashMap">
	    <result property="region" 				column="COD_REGI"/>
    	<result property="zona" 				column="COD_ZONA"/>
    	<result property="descripcionZona" 		column="des_zona"/>
    	<result property="descripcionRegion"	column="des_regi"/>
    </resultMap>
	
	<select id="getRegionZonaBoletaRecojoInteligenteList" parameterClass="java.util.Map" resultMap="regionZonaBoletaRecojoInteligenteListResult">
	 	select IRGB.COD_REGI, IRGB.COD_ZONA,
	       (select zz.des_zona
	          from zon_zona zz, seg_pais sp
	         where zz.pais_oid_pais = sp.oid_pais
	           and sp.cod_pais = #codigoPais#
	           and zz.cod_zona = irgb.cod_zona) des_zona,
	       (select zr.des_regi
	          from zon_regio zr, seg_pais sp
	         where zr.pais_oid_pais = sp.oid_pais
	           and sp.cod_pais = #codigoPais#
	           and zr.cod_regi = irgb.cod_regi) des_regi
		  from INT_REC_GENE_BOREC IRGB
		 where cod_pais = #codigoPais#
		   and irgb.ind_reg = '1'
		   <iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	 			 IRGB.COD_REGI=#codigoRegion[]#
           </iterate>
           <iterate prepend="AND" property="codigoZona" open="(" close=")" conjunction="OR">
      	 			 IRGB.COD_ZONA=#codigoZona[]#
           </iterate>
	 </select>
	 
	 <insert id="insertRegionZonaBoletaRecojoInteligente" parameterClass="regionZonaBoletaRecojoInteligente">
		insert into INT_REC_GENE_BOREC
		  (COD_PAIS,
		   COD_REGI,
		   COD_ZONA,
		   USU_REGI,
		   FEC_REGI,
		   IND_REG)
		values
		  (#codigoPais#,
		   #codigoRegion#,
		   #codigoZona#,
		   #auditInfo.createdBy#,
		   #auditInfo.created#,
		   #indicadorRegistro#)
    </insert>
    
    <select id="getExisteRegionZonaBoletaRecojoInteligenteByCriteria" parameterClass="regionZonaBoletaRecojoInteligente" resultClass="string">
	 	select count(1)
		  from INT_REC_GENE_BOREC IRGB
		 where cod_pais = #codigoPais#
		 	and irgb.ind_reg = '1'
		 <isNotEmpty prepend="AND" property="codigoRegion">           
			IRGB.COD_REGI = #codigoRegion#                             
    	</isNotEmpty>		
		<isNotEmpty prepend="AND" property="codigoZona">           
			IRGB.COD_ZONA = #codigoZona#                             
    	</isNotEmpty> 
	 </select>
   	<update id="updateRegionZonaBoletaRecojoInteligente" parameterClass="java.util.Map">
 		update    INT_REC_GENE_BOREC
		set       IND_REG = #indicadorRegistro#,
           		  USU_ELIM = #codigoUsuario#, 
           		  FEC_ELIM = sysdate 
		where     cod_pais = #codigoPais#
		  <isNotEmpty prepend="AND" property="codigoRegion">           
				COD_REGI = #codigoRegion#                             
    	</isNotEmpty>		
		<isNotEmpty prepend="AND" property="codigoZona">           
				COD_ZONA = #codigoZona#                             
    	</isNotEmpty>
    </update>
	<resultMap id="getRegionByZonaListResult" class="java.util.HashMap">
	    <result property="codigoRegion" 				column="COD_REGI"/>
    </resultMap>    
    <select id="getRegionByZonaList" parameterClass="regionZonaBoletaRecojoInteligente" resultMap="getRegionByZonaListResult">
	 	select ZR.COD_REGI 
		  from INT_REC_GENE_BOREC IRGB, ZON_ZONA ZZ, ZON_REGIO ZR
		 where cod_pais = #codigoPais#
		   and irgb.cod_zona = ZZ.COD_ZONA
		   and zz.zorg_oid_regi = ZR.OID_REGI
		   and irgb.ind_reg = '1'
		   <![CDATA[
		  and irgb.cod_zona <> ' '
		  		]]>
		   
	 </select>
	 
	 <resultMap id="getDataMemoriaByCriteriaResult" class="java.util.HashMap"> 
		<result property="precio" 		        	column="VAL_PREC"/>
	    <result property="codigoVenta"              column="COD_VENT"/>
	    <result property="precioContable"    		column="VAL_PREC_CONT"/>
	    <result property="codigoSAP"                column="COD_SAP"/>
	    <result property="descripcion"	    		column="DES_PROD"/>
	    <result property="idTipoOferta"   			column="OID_TIPO_OFERTA"/>
        <result property="idProducto"		        column="OID_PROD"/>
	    <result property="idMatrizFacturacion"      column="OID_MATR_FACT"/>
	    <result property="idOperacionReclamo"      	column="OID_OPER_RECL"/>
	    <result property="idSolicitud"            	column="OID_SOLI"/>
	    <result property="idParametroNivel"         column="OID_PARA_NIVE"/>
	    <result property="idLoteArticulo"		    column="OID_LOTE_ARTI"/>
	    <result property="idTipoConcurso"			column="OID_TIPO_CONC"/>
	    <result property="idDetalleOferta"          column="OID_DETAL_OFER"/>
	    <result property="idFormaPago"			   	column="OID_FORMA_PAGO"/>
	</resultMap>
    <select id="getDataMemoriaNByCriteria" parameterClass="java.util.Map" resultMap="getDataMemoriaByCriteriaResult">
		SELECT DISTINCT B.PRECIO_UNITARIO    VAL_PREC,
                B.VAL_CODI_VENT      COD_VENT,
                B.IMP_PREC_POSI      VAL_PREC_CONT,
                D.COD_SAP            COD_SAP,
                E.VAL_I18N           DES_PROD,
                B.TOFE_OID_TIPO_OFER OID_TIPO_OFERTA,
                D.OID_PROD           OID_PROD,
                F.OID_MATR_FACT      OID_MATR_FACT,
                NULL                 OID_OPER_RECL,
                NULL                 OID_SOLI,
                NULL                 OID_PARA_NIVE,
                NULL                 OID_LOTE_ARTI,
                NULL                 OID_TIPO_CONC,
                B.OID_DETA_OFER      OID_DETAL_OFER,
                B.FOPA_OID_FORM_PAGO OID_FORMA_PAGO
		  FROM PRE_OFERT             A,
		       PRE_OFERT_DETAL       B,
		       PRE_MATRI_FACTU_CABEC C,
		       MAE_PRODU             D,
		       GEN_I18N_SICC_PAIS    E,
		       PRE_MATRI_FACTU       F
		 WHERE A.OID_OFER = B.OFER_OID_OFER
		   AND A.MFCA_OID_CABE = C.OID_CABE
		   AND B.PROD_OID_PROD = D.OID_PROD
		   AND B.OID_DETA_OFER = F.OFDE_OID_DETA_OFER
		   AND E.ATTR_ENTI = 'MAE_PRODU'
		   AND E.VAL_OID = D.OID_PROD
		   AND C.PERD_OID_PERI =
		       GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#campanhaFaltante#)
		   
		   AND D.PAIS_OID_PAIS = GEN_PKG_GENER.gen_fn_devuelve_id_pais(#codigoPais#)
		   
		   <isNotEmpty property="codigoVenta">
		       AND ( B.VAL_CODI_VENT=NVL(#codigoVenta#,B.VAL_CODI_VENT))
		   </isNotEmpty>
		   <isNotEmpty property="descripcion">
		       AND E.VAL_I18N like '%' || #descripcion# || '%'
		   </isNotEmpty>
		   <isNotEmpty property="codigoSAP">
		       AND ( D.COD_SAP=NVL(#codigoSAP#,D.COD_SAP))
		   </isNotEmpty>
		   <isNotEmpty property="precioInicial">
			   AND B.PRECIO_UNITARIO >= TO_NUMBER(#precioInicial#,'9999999999999.99') 
		   </isNotEmpty>			
		   <isNotEmpty property="precioFinal">
   	<![CDATA[ 
			   AND B.PRECIO_UNITARIO <= TO_NUMBER(#precioFinal#,'9999999999999.99') 
		 ]]>					
		   </isNotEmpty>
	</select>
	<select id="getDataMemoriaSByCriteria" parameterClass="java.util.Map" resultMap="getDataMemoriaByCriteriaResult">
		    select 0                         VAL_PREC,
			       J.COD_VENT_FICT           COD_VENT,
			       j.IMP_PREC_PUBL           VAL_PREC_CONT,
			       d.COD_SAP,
			       e.VAL_I18N                DES_PROD,
			       NULL                      OID_TIPO_OFERTA,
			       d.OID_PROD,
			       NULL                      OID_MATR_FACT,
			       NULL                      OID_OPER_RECL,
			       b.OID_PARA_GRAL           OID_SOLI,
			       h.PANP_OID_PARA_NIVE_PREM OID_PARA_NIVE,
			       i.OID_LOTE_PREM_ARTI      OID_LOTE_ARTI,
			       b.ICTP_OID_TIPO_PROG      OID_TIPO_CONC,
			       NULL                      OID_DETAL_OFER,
			       NULL                      OID_FORMA_PAGO
			  from mae_produ             d,
			       gen_i18n_sicc_pais    e,
			       inc_concu_param_gener b,
			       inc_param_gener_premi f,
			       inc_param_nivel_premi g,
			       inc_premi_artic       h,
			       inc_lote_premi_artic  i,
			       inc_artic_lote        j
			 where e.ATTR_ENTI = 'MAE_PRODU'
			   and e.VAL_OID = d.OID_PROD
			   and f.COPA_OID_PARA_GRAL = b.OID_PARA_GRAL
			   and f.OID_PARA_GENE_PREM = g.PAGP_OID_PARA_GENE_PREM
			   and g.OID_PARA_NIVE_PREM = h.PANP_OID_PARA_NIVE_PREM
			   and h.OID_PREM_ARTI = i.PRAR_OID_PREM_ARTI
			   and i.OID_LOTE_PREM_ARTI = j.LOPA_OID_LOTE_PREM_ARTI
			   and j.PROD_OID_PROD = d.OID_PROD
			   AND D.PAIS_OID_PAIS = GEN_PKG_GENER.gen_fn_devuelve_id_pais(#codigoPais#)
			   <isNotEmpty property="codigoVenta">
			       AND ( J.COD_VENT_FICT=NVL(#codigoVenta#,J.COD_VENT_FICT))
			   </isNotEmpty>
			   <isNotEmpty property="descripcion">
			       AND E.VAL_I18N like '%' || #descripcion# || '%'
			   </isNotEmpty>
			   <isNotEmpty property="codigoSAP">
			       AND ( D.COD_SAP=NVL(#codigoSAP#,D.COD_SAP))
			   </isNotEmpty>
			UNION ALL
			select 0                         VAL_PREC,
			       R.COD_VENT_FICT           COD_VENT,
			       j.IMP_PREC_PUBL           VAL_PREC_CONT,
			       d.COD_SAP,
			       e.VAL_I18N                DES_PROD,
			       NULL                      OID_TIPO_OFERTA,
			       d.OID_PROD,
			       NULL                      OID_MATR_FACT,
			       NULL                      OID_OPER_RECL,
			       b.OID_PARA_GRAL           OID_SOLI,
			       h.PANP_OID_PARA_NIVE_PREM OID_PARA_NIVE,
			       i.OID_LOTE_PREM_ARTI      OID_LOTE_ARTI,
			       b.ICTP_OID_TIPO_PROG      OID_TIPO_CONC,
			       NULL                      OID_DETAL_OFER,
			       NULL                      OID_FORMA_PAGO
			  from mae_produ             d,
			       gen_i18n_sicc_pais    e,
			       inc_concu_param_gener b,
			       inc_param_gener_premi f,
			       inc_param_nivel_premi g,
			       inc_premi_artic       h,
			       inc_lote_premi_artic  i,
			       inc_artic_lote        j,
			       inc_reemp_artic_lote  r
			 where e.ATTR_ENTI = 'MAE_PRODU'
			   and e.VAL_OID = d.OID_PROD
			   and f.COPA_OID_PARA_GRAL = b.OID_PARA_GRAL
			   and f.OID_PARA_GENE_PREM = g.PAGP_OID_PARA_GENE_PREM
			   and g.OID_PARA_NIVE_PREM = h.PANP_OID_PARA_NIVE_PREM
			   and h.OID_PREM_ARTI = i.PRAR_OID_PREM_ARTI
			   and i.OID_LOTE_PREM_ARTI = j.LOPA_OID_LOTE_PREM_ARTI
			   and j.oid_arti_lote = r.arlo_oid_arti_lote
			   and r.prod_oid_prod = d.oid_prod
			   AND D.PAIS_OID_PAIS = GEN_PKG_GENER.gen_fn_devuelve_id_pais(#codigoPais#)
			   <isNotEmpty property="codigoVenta">
			       AND ( R.COD_VENT_FICT=NVL(#codigoVenta#,R.COD_VENT_FICT))
			   </isNotEmpty>
			   <isNotEmpty property="descripcion">
			       AND E.VAL_I18N like '%' || #descripcion# || '%'
			   </isNotEmpty>
			   <isNotEmpty property="codigoSAP">
			       AND ( D.COD_SAP=NVL(#codigoSAP#,D.COD_SAP))
			   </isNotEmpty>
	</select>
	
	<update id="updateActivacionReclamosGratisAsignar" parameterClass="java.util.Map">
		UPDATE REC_ACTIV_RECLA_GRATI
		   SET NUM_LOTE_ATEN        = #numeroLote#,
		       IND_ACTI             = '1',
		       USU_ACTI             = #codigoUsuario#,
		       FEC_ACTI             = sysdate,
		       PERD_OID_PERI_ATEN   = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CRA_PERIO2(#campanhaProceso#),
		       COD_PERI_ATEN        = #campanhaProceso#,
		       PROD_OID_PROD_ATEN   = #idProducto#,
		       COD_SAP_ATEN         = #codigoSAP#,
		       OFDE_OID_DETA_ATEN   = #idDetalleOferta#,
		       VAL_CODI_VENT_ATEN   = #codigoVenta#,
		       VAL_PREC_ATEN        = to_number(#precio#, '9999999999.99'),
		       VAL_PREC_CONT_ATEN   = to_number(#precioContable#, '999999999999.99'),
		       DES_PROD_ATEN        = #descripcionProducto#,
		       OID_TIPO_OFERTA_ATEN = #idTipoOferta#,
		       OID_MATR_FACT_ATEN   = #idMatrizFacturacion#,
		       OID_FORMA_PAGO_ATEN  = #idFormaPago#,
		       OID_PARA_GRAL_ATEN   = #idSolicitud#,
		       OID_PARA_NIVE_ATEN   = #idParametroNivel#,
		       OID_LOTE_ARTI_ATEN   = #idLoteArticulo#,
		       OID_TIPO_CONC_ATEN   = #idTipoConcurso#
		 WHERE OID_ACTI_RECL_GRAT = #oid#
	</update>
	
		
	<resultMap id="getOperacionesReclamoListParam" class="java.util.HashMap">
	    <result property="oidOperacionReclamo" 		column="OID_OPER"/>
    	<result property="codigoOperacionList" 		column="COD_OPER"/>
    	<result property="descripcion" 				column="VAL_DESC_LARG"/>
    	<result property="indAnulacion" 			column="IND_ANUL"/>
    	<result property="indEnvia" 				column="IND_INGR_ENVI"/>
    	<result property="indDevuelve" 				column="VAL_INGR_DEVU"/>
    	<result property="indDevFisicoFact" 		column="IND_DEVU_FISI_FACT"/>
    	<result property="nroCampHistoria" 			column="NUM_CAMP_HIST"/>
    </resultMap>
	
	<select id="getOperacionesReclamoList" parameterClass="java.util.Map" resultMap="getOperacionesReclamoListParam">
		SELECT RC.OID_OPER, 
			   RC.COD_OPER, 
			   RC.VAL_DESC_LARG, 
			   RC.IND_ANUL, 
			   RC.IND_INGR_ENVI, 
		       RC.VAL_INGR_DEVU, 
		       RC.IND_DEVU_FISI_FACT, 
		       RC.NUM_CAMP_HIST
		  FROM REC_OPERA RC, SEG_PAIS SP
		 WHERE RC.PAIS_OID_PAIS = SP.OID_PAIS
		<iterate prepend="AND" property="codigoOperacion" open="(" close=")" conjunction="OR">
			   RC.COD_OPER = #codigoOperacion[]#
        </iterate>
		   AND SP.COD_PAIS = #codigoPais#
	</select>
	
	<select id="getMotivosBloqueoList" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT RMB.OID_MOTI_BLOQ CODIGO,
		       GSP.VAL_I18N DESCRIPCION
		  FROM REC_MOTIV_BLOQU RMB, SEG_PAIS SP, GEN_I18N_SICC_PAIS GSP
		 WHERE RMB.PAIS_OID_PAIS = SP.OID_PAIS
		   AND GSP.ATTR_ENTI = 'REC_MOTIV_BLOQU'
		   AND GSP.VAL_OID = RMB.OID_MOTI_BLOQ
		   AND SP.COD_PAIS = #codigoPais#
	</select>
	
	<select id="getMovimientosAlmacenList" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT BTMA.OID_TIPO_MOVI_ALMA CODIGO,
		       GSP.VAL_I18N DESCRIPCION
		  FROM BEL_TIPO_MOVIM_ALMAC BTMA, SEG_PAIS SP, GEN_I18N_SICC_PAIS GSP
		 WHERE BTMA.PAIS_OID_PAIS = SP.OID_PAIS
		   AND GSP.ATTR_ENTI = 'BEL_TIPO_MOVIM_ALMAC'
		   AND GSP.VAL_OID = BTMA.OID_TIPO_MOVI_ALMA
		   AND SP.COD_PAIS = #codigoPais#
	</select>
	
	<resultMap id="operacionReclamoResult" class="operacionReclamo">
		<result property="oidOperacionReclamo"		column="OID_OPER"/>
		<result property="codigoOperacion"			column="COD_OPER"/>
    	<result property="descripcion" 				column="VAL_DESC_LARG"/>
    	<result property="indAnulacion" 			column="IND_ANUL"/>
    	<result property="indDevFisicoFact" 		column="IND_DEVU_FISI_FACT"/>
    	<result property="nroCampHistoria" 			column="NUM_CAMP_HIST"/>
    	<result property="tipoPrecio" 				column="PECI_OID_PECI"/>
    	<result property="tipoPrecioEnvia" 			column="PENV_OID_PRECIO_ENVIA"/>
    	<result property="codigoMotivoBloqueo" 		column="MOBL_OID_MOTI_BLOQ"/>
    	<result property="indFaltanteMercaderia" 	column="IND_FALT_MERC"/>
    	<result property="indEnvia" 				column="IND_INGR_ENVI"/>
    	<result property="indEnviaGeneraDev" 		column="IND_ENVI_GENE_DEVU"/>
    	<result property="indDevuelve" 				column="VAL_INGR_DEVU"/>
    	<result property="indDevuelveGeneraEnv" 	column="IND_DEVU_GENE_ENVI"/>
    	<result property="codigoMovimientoAlmacen" 	column="TMAL_OID_TIPO_MOVI_ALMA"/>
    	<result property="tipoSolicitud" 			column="TSPA_OID_SOLI_CON_STOC"/>
    	<result property="tipoSolicitudGenera" 		column="TSPA_OID_SOLI_PAIS_GENE"/>
    	<result property="almacen" 					column="ALMC_OID_ALMA"/>
    </resultMap>     	
   	<select id="getOperacionReclamo" parameterClass="map" resultMap="operacionReclamoResult">
		SELECT RO.OID_OPER,
			   RO.COD_OPER,
		       RO.VAL_DESC_LARG,
		       RO.IND_ANUL,
		       RO.IND_DEVU_FISI_FACT,
		       RO.NUM_CAMP_HIST,
		       RO.PECI_OID_PECI,
		       RO.PENV_OID_PRECIO_ENVIA,
		       RO.MOBL_OID_MOTI_BLOQ,
		       RO.IND_FALT_MERC,
		       RO.IND_INGR_ENVI,
		       RO.IND_ENVI_GENE_DEVU,
		       RO.VAL_INGR_DEVU,
		       RO.IND_DEVU_GENE_ENVI,
		       RO.TMAL_OID_TIPO_MOVI_ALMA,
		       RO.TSPA_OID_SOLI_CON_STOC,
		       RO.TSPA_OID_SOLI_PAIS_GENE,
		       RO.ALMC_OID_ALMA
		  FROM REC_OPERA RO
		 WHERE RO.OID_OPER = #oidOperacionReclamo#
   	</select>
   	
   	<select id="getExisteOperacionReclamoByCodigo" parameterClass="java.util.Map" resultClass="integer">
		SELECT COUNT(1)
		  FROM REC_OPERA RO, SEG_PAIS SP
		 WHERE RO.PAIS_OID_PAIS = SP.OID_PAIS
		   AND SP.COD_PAIS = #codigoPais#
		   AND RO.COD_OPER = #codigoOperacion#
	</select>
	
	<select id="getNextOidOperacionReclamo" parameterClass="java.util.Map" resultClass="integer">
		SELECT MAX(RO.OID_OPER) + 1
		  FROM REC_OPERA RO, SEG_PAIS SP
		 WHERE RO.PAIS_OID_PAIS = SP.OID_PAIS 
		   AND SP.COD_PAIS = #codigoPais#
	</select>
	
	<insert id="insertOperacionReclamo" parameterClass="operacionReclamo">
		INSERT INTO REC_OPERA 
		       (OID_OPER,
		        COD_OPER,
		        VAL_DESC_LARG,
		        IND_ANUL,
		        IND_DEVU_FISI_FACT,
		        NUM_CAMP_HIST,
		        PECI_OID_PECI,
		        PENV_OID_PRECIO_ENVIA,
		        MOBL_OID_MOTI_BLOQ,
		        IND_FALT_MERC,
		        IND_INGR_ENVI,
		        IND_ENVI_GENE_DEVU,
		        VAL_INGR_DEVU,
		        IND_DEVU_GENE_ENVI,
		        TMAL_OID_TIPO_MOVI_ALMA,
		        PAIS_OID_PAIS,
		        IND_RECO,
		        TSPA_OID_SOLI_CON_STOC,
				TSPA_OID_SOLI_PAIS_GENE,
				ALMC_OID_ALMA)
		VALUES 
		       (#oidOperacionReclamo#,
		        #codigoOperacion#,
		        #descripcion#,
		        #indAnulacion#,
		        #indDevFisicoFact#,
		        #nroCampHistoria#,
		        #tipoPrecio#,
		        #tipoPrecioEnvia#,
		        #codigoMotivoBloqueo#,
		        #indFaltanteMercaderia#,
		        #indEnvia#,
		        #indEnviaGeneraDev#,
		        #indDevuelve#,
		        #indDevuelveGeneraEnv#,
		        #codigoMovimientoAlmacen#,
		        GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_PAIS(#codigoPais#),
		        0,
		        #tipoSolicitud#,
		        #tipoSolicitudGenera#,
		        #almacen#)
	</insert>
	
	<update id="updateOperacionReclamo" parameterClass="operacionReclamo">
		UPDATE REC_OPERA
		   SET VAL_DESC_LARG = #descripcion#,
		       IND_ANUL = #indAnulacion#,
		       IND_DEVU_FISI_FACT = #indDevFisicoFact#,
		       NUM_CAMP_HIST = #nroCampHistoria#,
		       PECI_OID_PECI = #tipoPrecio#,
		       PENV_OID_PRECIO_ENVIA = #tipoPrecioEnvia#,
		       MOBL_OID_MOTI_BLOQ = #codigoMotivoBloqueo#,
		       IND_FALT_MERC = #indFaltanteMercaderia#,
		       IND_INGR_ENVI = #indEnvia#,
		       IND_ENVI_GENE_DEVU = #indEnviaGeneraDev#,
		       VAL_INGR_DEVU = #indDevuelve#,
		       IND_DEVU_GENE_ENVI = #indDevuelveGeneraEnv#,
		       TMAL_OID_TIPO_MOVI_ALMA = #codigoMovimientoAlmacen#,
		       TSPA_OID_SOLI_CON_STOC = #tipoSolicitud#,
		       TSPA_OID_SOLI_PAIS_GENE = #tipoSolicitudGenera#,
		       ALMC_OID_ALMA = #almacen#
		 WHERE OID_OPER = #oidOperacionReclamo#
	</update>
	
	<delete id="deleteOperacionReclamo" parameterClass="string" >
		DELETE FROM REC_OPERA
 		 WHERE OID_OPER = #value#
    </delete>
    
    <select id="getMotivosRechazoDesbloqueoList" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT RMRD.OID_MOTI_RECH_DESB CODIGO,
		       GSP.VAL_I18N DESCRIPCION
		  FROM REC_MOTIV_RECHA_DESBL RMRD, SEG_PAIS SP, GEN_I18N_SICC_PAIS GSP
		 WHERE RMRD.PAIS_OID_PAIS = SP.OID_PAIS
		   AND GSP.ATTR_ENTI = 'REC_MOTIV_RECHA_DESBL'
		   AND GSP.VAL_OID = RMRD.OID_MOTI_RECH_DESB
		   AND SP.COD_PAIS = #codigoPais#
	</select>
	
	<select id="getNextOidTipoOperacion" resultClass="integer">
		SELECT MAX(RTO.OID_TIPO_OPER) + 1
  		  FROM REC_TIPOS_OPERA RTO
	</select>
	
	<select id="getExisteTipoOperacionByCodigo" parameterClass="java.util.Map" resultClass="integer">
		SELECT COUNT(1)
		  FROM REC_TIPOS_OPERA RTO, REC_OPERA RO, SEG_PAIS SP
		 WHERE RTO.ROPE_OID_OPER = RO.OID_OPER
		   AND RO.PAIS_OID_PAIS = SP.OID_PAIS 
		   AND SP.COD_PAIS = #codigoPais#
		   AND RTO.ROPE_OID_OPER = #oidOperacionReclamo#
		   AND RTO.VAL_TIPO_OPER = #codigoTipoOperacion#
	</select>
	
	<resultMap id="tipoOperacionListByOperacionResult" class="java.util.HashMap">
		<result property="oidTipoOperacion"				column="OID_TIPO_OPER"/>
		<result property="codigoTipoOperacion"			column="VAL_TIPO_OPER"/>
    	<result property="indCampReferenciaUnica" 		column="IND_CAMP_REFE_UNIC"/>
    	<result property="numDiasHaciaAtras" 			column="NUM_DIAS_HACI_ATRA"/>
    	<result property="indInfoBelcorpNoticias" 		column="VAL_INFO_EBEL_NOTI"/>
    	<result property="indDevuelveEstaFactura" 		column="IND_DEVU_ESTA_FACT"/>
    	<result property="indEnviaEstaFactura" 			column="IND_ENVI_ESTA_FACT"/>
    	<result property="oidOperacionReclamo" 			column="ROPE_OID_OPER"/>
    	<result property="codigoMotivoRechazo" 			column="MRDB_OID_MOTI_RECH_DESB"/>
    	<result property="indicadorAccion" 				column="IND_ACCI"/>
    	<result property="descMotivoRechazo" 			column="VAL_I18N"/>
    </resultMap>
   	<select id="getTipoOperacionListByOperacion" parameterClass="java.util.Map" resultMap="tipoOperacionListByOperacionResult">
		SELECT RTO.OID_TIPO_OPER,
		       RTO.VAL_TIPO_OPER,
		       RTO.IND_CAMP_REFE_UNIC,
		       RTO.NUM_DIAS_HACI_ATRA,
		       RTO.VAL_INFO_EBEL_NOTI,
		       RTO.IND_DEVU_ESTA_FACT,
		       RTO.IND_ENVI_ESTA_FACT,
		       RTO.ROPE_OID_OPER,
		       RTO.MRDB_OID_MOTI_RECH_DESB,
		       '1' IND_ACCI,
		       GSP.VAL_I18N
		  FROM REC_TIPOS_OPERA RTO, GEN_I18N_SICC_PAIS GSP
		 WHERE RTO.ROPE_OID_OPER = #oidOperacionReclamo#
		   AND GSP.VAL_OID = RTO.MRDB_OID_MOTI_RECH_DESB
           AND GSP.ATTR_ENTI = 'REC_MOTIV_RECHA_DESBL'
   	</select>
	
	<insert id="insertTipoOperacion" parameterClass="tipoOperacion">
		INSERT INTO REC_TIPOS_OPERA
		       (OID_TIPO_OPER,
		        VAL_TIPO_OPER,
		        IND_CAMP_REFE_UNIC,
		        NUM_DIAS_HACI_ATRA,
		        VAL_INFO_EBEL_NOTI,
		        IND_DEVU_ESTA_FACT,
		        IND_ENVI_ESTA_FACT,
		        ROPE_OID_OPER,
		        MRDB_OID_MOTI_RECH_DESB)
		VALUES 
		       (#oidTipoOperacion#,
		        #codigoTipoOperacion#,
		        #indCampReferenciaUnica#,
		        #numDiasHaciaAtras#,
		        #indInfoBelcorpNoticias#,
		        #indDevuelveEstaFactura#,
		        #indEnviaEstaFactura#,
		        #oidOperacionReclamo#,
		        #codigoMotivoRechazo#)
	</insert>
	
	<update id="updateTipoOperacion" parameterClass="tipoOperacion">
		UPDATE REC_TIPOS_OPERA
		   SET IND_CAMP_REFE_UNIC = #indCampReferenciaUnica#,
		       NUM_DIAS_HACI_ATRA = #numDiasHaciaAtras#,
		       VAL_INFO_EBEL_NOTI = #indInfoBelcorpNoticias#,
		       IND_DEVU_ESTA_FACT = #indDevuelveEstaFactura#,
		       IND_ENVI_ESTA_FACT = #indEnviaEstaFactura#,
		       ROPE_OID_OPER = #oidOperacionReclamo#,
		       MRDB_OID_MOTI_RECH_DESB = #codigoMotivoRechazo#
		 WHERE OID_TIPO_OPER = #oidTipoOperacion#
	</update>
	
	<delete id="deleteTipoOperacion" parameterClass="map" >
		DELETE FROM REC_TIPOS_OPERA
		<dynamic prepend="where">
			<isNotEmpty prepend="AND" property="oidOperacionReclamo">           
				ROPE_OID_OPER = #oidOperacionReclamo#
	    	</isNotEmpty>
			<isNotEmpty prepend="AND" property="oidTipoOperacion">        
				OID_TIPO_OPER = #oidTipoOperacion#                          
	    	</isNotEmpty>
		</dynamic>
    </delete>
    
    <select id="getTiposSolicitudList" resultMap="baseResult">
		SELECT TSP.OID_TIPO_SOLI_PAIS CODIGO,
		       I.VAL_I18N DESCRIPCION
		  FROM PED_TIPO_SOLIC_PAIS TSP, PED_TIPO_SOLIC TS, V_GEN_I18N_SICC I
		 WHERE I.IDIO_OID_IDIO = 1
		   AND I.ATTR_ENTI = 'PED_TIPO_SOLIC'
		   AND I.VAL_OID = TS.OID_TIPO_SOLI
		   AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
		   AND IND_SOLI_NEGA = 0
		 ORDER BY 2
	</select>
	
	<select id="getTiposSolicitudGeneraList" resultMap="baseResult">
		SELECT TSP.OID_TIPO_SOLI_PAIS CODIGO, 
		       I.VAL_I18N DESCRIPCION
		  FROM PED_TIPO_SOLIC_PAIS TSP, PED_TIPO_SOLIC TS, V_GEN_I18N_SICC I
		 WHERE I.IDIO_OID_IDIO = 1
		   AND I.ATTR_ENTI = 'PED_TIPO_SOLIC'
		   AND I.VAL_OID = TS.OID_TIPO_SOLI
		   AND TSP.TSOL_OID_TIPO_SOLI = TS.OID_TIPO_SOLI
		   AND IND_SOLI_NEGA = 1
		 ORDER BY 2
	</select>
	
	<select id="getAlmacenList" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT BA.OID_ALMA CODIGO,
		       GSP.VAL_I18N DESCRIPCION
		  FROM BEL_ALMAC BA, SEG_PAIS SP, GEN_I18N_SICC_PAIS GSP
		 WHERE BA.PAIS_OID_PAIS = SP.OID_PAIS
		   AND GSP.ATTR_ENTI = 'BEL_ALMAC'
		   AND GSP.VAL_OID = BA.OID_ALMA
		   AND SP.COD_PAIS = #codigoPais#
	</select>

	
	<!-- VERIFICA SI SE ACTUALIZA LA OPERACION -->
    <select id="getVerificaOperacion" parameterClass="java.util.Map" resultClass="java.lang.String" >
       	select count(*) from REC_MOTIV_DEVOL 
    	 where IND_TIP_DEV = 'N' 
		 and cod_moti_devo = #codigoMotivo#
	</select>	
	
	<!-- executeReclamoProcesoAbono -->
	<parameterMap id="executeReclamoProcesoAbonoParams" class="map" >														
		<parameter property="numeroBoleta"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>												
	    <parameter property="usuario"             	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>											
		</parameterMap>														
	<procedure id="executeReclamoProcesoAbono" parameterMap="executeReclamoProcesoAbonoParams" >														
		{call INT_PKG_RECLA.int_pr_rec_proce_abono(?,?)}												
	</procedure>
		
	<parameterMap id="valExcepMotivoParams" class="map" >
		<parameter property="idPeriodoCDR"          jdbcType="VARCHAR" javaType="java.lang.Integer"  mode="IN"/>	
		<parameter property="codigoVenta"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoOperacionSic"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoOperacionSic"      jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="oidSoliPosi"           jdbcType="NUMBER" javaType="java.lang.Long"  mode="IN"/>	
		<parameter property="codigoMotivo"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="mensaje"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
 
	 <procedure id="valExcepMotivo" parameterMap="valExcepMotivoParams">
         {call sto_pkg_proce_valid_spvd.sto_pr_spvd_vali_moti_cdr(?,?,?,?,?,?,?) }    
    </procedure>
	
	<select id="getNumeroRecojoParam" parameterClass="java.util.Map" resultClass="string">
	    SELECT num_reco_tota
	    FROM int_rec_num_recoj_borec
	  	WHERE cod_pais = #codigoPais#
	</select>
	
	<select id="getMotivoReclamoList" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT BASE.Cod_Moti_Devo AS codigo, 
		GEN.VAL_I18N AS descripcion
		FROM GEN_I18N_SICC_PAIS GEN, 
		SEG_IDIOM IDI, 
		REC_MOTIV_DEVOL BASE
		WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
		AND BASE.OID_MOTI_DEVO = GEN.VAL_OID
		AND IDI.COD_ISO_IDIO = 'es'
		AND GEN.ATTR_ENTI = 'REC_MOTIV_DEVOL'
		AND TIP_MOTI_DEVU = 'C'		
		AND (( select count(1) 
		          from REC_VALID_MOTIV_DEVUL a
		          where a.cod_oper = #codigoMotivo# )=0
		          or (
		             ( select count(1)    
		             from REC_VALID_MOTIV_DEVUL a
		             where a.cod_oper = #codigoMotivo# )>0
		             and  BASE.Cod_Moti_Devo 
		             in (
		                select cod_moti  
		                from REC_VALID_MOTIV_DEVUL a
		                where a.cod_oper = #codigoMotivo# 
		       ) ) )       		    
          
	</select>
</sqlMap>