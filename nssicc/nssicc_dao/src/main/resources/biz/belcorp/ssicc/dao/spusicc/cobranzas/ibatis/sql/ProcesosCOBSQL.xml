<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="sisicc.ProcesosCOBSQL">

	<typeAlias alias="baseGenericoCob"                         type="biz.belcorp.ssicc.dao.sisicc.model.Base"/>
	<typeAlias alias="cronogramaCartera"                       type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.CronogramaCartera"/>
	<typeAlias alias="llamadaCobranza"                         type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.LlamadaCobranza"/>
	<typeAlias alias="referenciaCobranza"                      type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.ReferenciaCobranza"/>
	<typeAlias alias="referenciaDeudoraCobranza"               type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.ReferenciaDeudoraCobranza"/>
	<typeAlias alias="avalDeudoraCobranza"                     type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.AvalDeudoraCobranza"/>
	<typeAlias alias="cuentaCorrienteConsultora"               type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.CuentaCorrienteConsultora"/>
    <typeAlias alias="movimientoDetalle"                       type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.MovimientoDetalle"/>
    <typeAlias alias="estructuraCOBCargarCronograma"           type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.EstructuraCOBCargarCronograma"/>
    <typeAlias alias="estructuraCOBCargaMasivaGestiones"       type="biz.belcorp.ssicc.dao.spusicc.cobranzas.model.EstructuraCOBCargaMasivaGestiones"/>

	<resultMap id="baseResultCob"          class="baseGenericoCob">
    	<result property="codigo" 		   column="CODIGO" 	/>
    	<result property="descripcion" 	   column="DESCRIPCION"/>
    </resultMap>    
    
    <resultMap id="cronogramaCarteraMantenimiento"   class="cronogramaCartera">           	
    	<result property="codigoPais"                      column="COD_PAIS"/>
    	<result property="codigoSociedad"                  column="COD_SOCI"/>
		<result property="codigoPeriodo"                   column="COD_PERI"/>	   
		<result property="codigoEtapaDeuda"                column="COD_ETAP_DEUD"/>
       	<result property="descriEtapaDeuda"                column="DES_ETAP_DEUD"/>
		<result property="codigoRegion"                    column="COD_REGI"/>
       	<result property="descriRegion"                    column="DES_REGI"/>	   
       	<result property="codigoZona"                      column="COD_ZONA"/>	     			  
       	<result property="fechaGeneracionCartera"    	   column="FEC_GENE_CART"/>	   
        <result property="fechaInicioGestion"        	   column="FEC_INIC_GEST"/>	   
        <result property="fechaCompromisoPago"       	   column="FEC_COMP_PAGO"/>	   
        <result property="fechaCierreCartera"        	   column="FEC_CIER"/>	
    </resultMap>      
    
    <resultMap id="cronogramaCarteraMantenimientoResult"	class="java.util.HashMap">
    	<result property="codigoPais"                       column="COD_PAIS"/>
    	<result property="codigoSociedad"                  	column="COD_SOCI"/>
    	<result property="codigoEtapaDeuda"                 column="COD_ETAP_DEUD"/>
       	<result property="descriEtapaDeuda"                 column="DES_ETAP_DEUD"/>
    	<result property="codigoPeriodo"                   column="COD_PERI"/>		    	
       	<result property="codigoRegion"                     column="COD_REGI"/>       		  
       	<result property="descriRegion"                    	column="DES_REGI"/>	   
       	<result property="codigoZona"                      	column="COD_ZONA"/>	     			  
       	<result property="fechaGeneracionCartera"    		column="FEC_GENE_CART"/>	   
        <result property="fechaInicioGestion"        		column="FEC_INIC_GEST"/>	   
        <result property="fechaCompromisoPago"       		column="FEC_COMP_PAGO"/>	   
        <result property="fechaCierreCartera"        		column="FEC_CIER"/>	           	   
    </resultMap>		
    
    <resultMap id="cronogramaCarteraResult"      class="java.util.HashMap">
		<result property="periodo"                   column="PERIODO"/>	   
       	<result property="etapa"                     column="ETAPA"/>	   
       	<result property="region"                    column="REGION"/>	   
       	<result property="zona"                      column="ZONA"/>	   
  		<result property="fechaInicioFacturacion"    column="FEC_INIC_FACT"/>	   
       	<result property="fechaGeneracionCartera"    column="FEC_GENE_CART"/>	   
        <result property="fechaInicioGestion"        column="FEC_INIC_GEST"/>	   
        <result property="fechaCompromisoPago"       column="FEC_COMP_PAGO"/>	   
        <result property="fechaCierreCartera"        column="FEC_CIER"/>	   
        <result property="duracionGestion"           column="VAL_DIAS_PLAZ"/>	   
    </resultMap>		
     
    <resultMap id="consultoraResult"  		    class="java.util.HashMap">
		<result property="codigoCartera"             column="CARTERA"/>	   
		<result property="codigoEtapaConsultora"     column="ETAPA"/>	 
		<result property="codigoCliente"             column="CODIGO"/>	   
       	<result property="nombreCliente"             column="NOMBRE"/>
       	<result property="region"                    column="REGION"/>	   
       	<result property="zona"                      column="ZONA"/>	   
       	<result property="seccion"                   column="SECCION"/>
       	<result property="territorio"                column="TERRITORIO"/>	   
  		<result property="departamento"              column="DEPARTAMENTO"/>
		<result property="provincia"                 column="PROVINCIA"/>
		<result property="distrito"                  column="DISTRITO"/>		
       	<result property="direccion"    			 column="DIRECCION"/>
       	<result property="referencia"    			 column="REFERENCIA"/>	   
        <result property="mora"                      column="MORA"/>	
        <result property="deudaCartera"              column="DEUDA_CARTERA"/>   
        <result property="deudaTotal"                column="DEUDA_TOTAL"/>   
	    <result property="deudaTotal"                column="DEUDA_TOTAL"/>   
        <result property="fechaAsignacion"           column="FECHA_ASIG"/>   
        <result property="fechaCierre"               column="FECHA_CIERRE"/>
        <result property="fechaNacimiento"           column="FECHA_NACI"/>
        <result property="fechaIngreso"              column="FECHA_INGR"/>   
        <result property="status"               	 column="STATUS"/>   
        <result property="campanaIngreso"            column="CAMPANA_INGRESO"/>	   
        <result property="ultimoPedido"              column="ULTIMO_PEDIDO"/>
        <result property="telefonoFijo"              column="TELE_FIJO"/>
        <result property="telefonoMovil"             column="TELE_MOVIL"/>
        <result property="telefonoTrabajo"           column="TELE_TRABAJO"/> 
    </resultMap>
    
    <resultMap id="carteraResult"  		    class="java.util.HashMap">
     	<result property="codigoCartera"             column="CARTERA"/>	   
		<result property="codigoEtapaConsultora"     column="ETAPA"/>	 
		<result property="codigoCliente"             column="CODIGO"/>
		<result property="digitoControl"             column="COD_DIGI_CRTL"/>	   
       	<result property="nombreCliente"             column="NOMBRE"/>
       	<result property="numeroDocumentoIdentidad"  column="NUM_DOCU_IDEN"/>    
       	<result property="ocupacion"  				 column="VAL_OCUP"/>       	   	
       	<result property="campanhaAsignacion"        column="CAMPANA_ASIG"/>	
       	<result property="fechaAsignacion"           column="FECHA_ASIG"/>         
       	<result property="region"                    column="REGION"/>	   
       	<result property="zona"                      column="ZONA"/>	   
       	<result property="seccion"                   column="SECCION"/>
       	<result property="territorio"                column="TERRITORIO"/>	   
  		<result property="departamento"              column="DEPARTAMENTO"/>
		<result property="provincia"                 column="PROVINCIA"/>
		<result property="distrito"                  column="DISTRITO"/>		
       	<result property="direccion"    			 column="DIRECCION"/>
       	<result property="referencia"    			 column="REFERENCIA"/>	   
        <result property="mora"                      column="MORA"/>	
        <result property="deudaCartera"              column="DEUDA_CARTERA"/>   
        <result property="deudaTotal"                column="DEUDA_TOTAL"/>   	                 
        <result property="fechaCierre"               column="FECHA_CIERRE"/>
        <result property="fechaNacimiento"           column="FECHA_NACI"/>
        <result property="edad"           			 column="EDAD"/>        
        <result property="fechaIngreso"              column="FECHA_INGR"/>   
        <result property="status"               	 column="STATUS"/>   
        <result property="campanaIngreso"            column="CAMPANA_INGRESO"/>	   
        <result property="ultimoPedido"              column="ULTIMO_PEDIDO"/>
        <result property="telefonoFijo"              column="TELE_FIJO"/>
        <result property="telefonoMovil"             column="TELE_MOVIL"/>
        <result property="telefonoTrabajo"           column="TELE_TRABAJO"/>         
        <result property="codigoCobrador"            column="COBRADOR"/>      
        <result property="nombreGerenteZona"         column="NOM_GERE_ZONA"/>
		<result property="nombreLiderSeccion"        column="NOM_LIDE_SECC"/>	  
		<result property="deudaAsignada"        	 column="DEUDA_ASIGNADA"/>
    </resultMap>


    <resultMap id="llamadaCobranzaResult"      class="llamadaCobranza">
		<result property="tipoAccion"                 column="TIPO"/>	   
       	<result property="accionCobranza"             column="ACCION"/>	   
       	<result property="fecha"                      column="FECHA"/>	   
       	<result property="hora"                       column="HORA"/>	   
       	<result property="observacion"                column="OBSERVACION"/>	   
       	<result property="fechaPago"                  column="FECHA_PAGO"/>	          		   
       	<result property="importePago"                column="IMPORTE_PAGO"/>
        <result property="cobrador"                   column="COBRADOR"/>       		          		   
    </resultMap>		
	
	<resultMap id="historialGestionesCobranzaResult" class="java.util.HashMap">
		<result property="etapaDeuda"                 column="ETAPA"/>
		<result property="codigoPeriodo"              column="PERIODO"/>
		<result property="tipoAccion"                 column="TIPO"/>	   
       	<result property="accionCobranza"             column="ACCION"/>	   
       	<result property="fecha"                      column="FECHA"/>	   
       	<result property="hora"                       column="HORA"/>	   
       	<result property="observacion"                column="OBSERVACION"/>	   
       	<result property="fechaPago"                  column="FECHA_PAGO"/>	          		   
       	<result property="importePago"                column="IMPORTE_PAGO"/>
        <result property="cobrador"                   column="COBRADOR"/>       		          		   
    </resultMap>	
        
    <resultMap id="referenciaResult"      class="referenciaCobranza">
		<result property="referencia"                 column="REFER"/>	   	          		   
    </resultMap>		
	
	<resultMap id="referenciasDeudoraResult"      class="referenciaDeudoraCobranza">					
		<result property="tipoReferencia"             column="DES_TIPO_REFER"/>
	    <result property="nombreReferencia"           column="NOM_REFE"/>
		<result property="direccionReferencia"        column="VAL_DIRE"/>
	    <result property="telefonoFijoReferencia"     column="VAL_TELF"/>
	    <result property="telefonoMovilReferencia"    column="VAL_CELU"/>   	          		   
	    <result property="telefonoTrabajoReferencia"  column="VAL_TELF_TRAB"/>
    </resultMap>	
    
    
    
    <resultMap id="avalesDeudoraResult"      class="avalDeudoraCobranza">
		<result property="tipoReferencia"             		column="DES_TIPO_REFER"/>
	    <result property="nombreReferencia"           	    column="NOM_REFE"/>
		<result property="tipoDocumentoReferencia"    	    column="TIPO_DOCU"/>
    	<result property="numeroDocumentoReferencia"  		column="NUM_DOCU_REFE"/>
		<result property="direccionReferencia"        		column="VAL_DIRE"/>
	    <result property="telefonoFijoReferencia"     		column="VAL_TELF"/>
	    <result property="telefonoMovilReferencia"  		column="VAL_TELF_TRAB"/>	   	          		   
    </resultMap>	
    
    	
    <resultMap id="cuentaCorrienteConsultoraResult"      class="cuentaCorrienteConsultora">
		<result property="fechaEmision"                column="FEC_EMIS_DOCU"/>	   
       	<result property="campanaReferencia"           column="CAM_REFE"/>
        <result property="codigoTipoMovimiento"              column="TIP_MOVI"/>
       	<result property="tipoMovimiento"              column="DES_MOVI"/>
        <result property="oidMovimiento"              column="OID_MOVI"/>
       	<result property="oidConsolidado"              column="SOCA_OID_SOLI_CABE"/>
       	<result property="numeroDocumento"             column="NUM_DOCU"/>		          		   
       	<result property="fechaVencimiento"            column="FEC_VENC"/>		          		   
       	<result property="fechaPago"                   column="FEC_PAGO"/>		          		   
       	<result property="cargo"                       column="IMP_CARG"/>		          		   
       	<result property="abono"                       column="IMP_ABON"/>		          		   
    </resultMap>
    
    <resultMap id="movimientoDetalleResult"      class="movimientoDetalle">
		<result property="codigoVenta"                 column="VAL_CODI_VENT"/>
		<result property="codigoVentaPosicion"         column="VAL_CODI_VENT_POSI"/>
        <result property="producto"                    column="PRODUCTO"/>
        <result property="precioCatalogo"              column="PREC_CATA"/>
    	<result property="precioFactura"               column="PREC_FACT"/>
    	<result property="unidadesDemandadas"           column="NUM_UNID_DEMA"/>
    	<result property="unidadesAtendidas"           column="NUM_UNID_ATEN"/>
    	<result property="unidadesFaltantes"           column="UNID_FALT"/>
    	<result property="porcentajeDescuento"         column="PORC_DESC"/>
    	<result property="observacion"                  column="VAL_OBSE"/>
    	<result property="importe"                	   column="IMPORTE"/>   
    	<result property="montoMN"                	   column="MONTOMN"/>   
    </resultMap>

	<!-- OBTIENE LAS ETAPAS POR POR PAIS Y SOCIEDAD-->
	<select id="getEtapasDeudaByPaisSociedad" parameterClass="java.util.Map" resultMap="baseResultCob">
    	SELECT COD_ETAP_DEUD AS CODIGO , 
			   VAL_DESC      AS DESCRIPCION
		FROM COB_ETAPA_DEUDA_PAIS
	    WHERE COD_PAIS= #codigoPais#
	    <isNotEmpty property="codigoSociedad">
	    	AND COD_SOCI= #codigoSociedad#
	    </isNotEmpty>
	    <isNotEmpty property="indicadorCobranzaExterna">
	    	AND IND_COBR_EXTE = #indicadorCobranzaExterna#
	    </isNotEmpty>
		ORDER BY 2 ASC
	</select>

	<!-- OBTIENE LAS CENTRALES DE RIESGO POR POR PAIS Y SOCIEDAD-->
	<select id="getCentralesRiesgoByPaisSociedad" parameterClass="java.util.Map" resultMap="baseResultCob">
    	SELECT COD_CENT_RIES AS CODIGO , 
			   VAL_DESC      AS DESCRIPCION
		FROM COB_CENTR_RIESG_PAIS
	    WHERE (COD_PAIS= #codigoPais#)
	    AND (COD_SOCI= #codigoSociedad#)
		ORDER BY 2 ASC
	</select>
	    
	<!-- OBTIENE OPERSDORES SMS POR POR PAIS Y SOCIEDAD-->
	<select id="getOperadoresSMSByPaisSociedad" parameterClass="java.util.Map" resultMap="baseResultCob">
    	SELECT COD_OPER_SMS  AS CODIGO , 
			   VAL_DESC      AS DESCRIPCION
		FROM COB_OPERA_SMS_PAIS
	    WHERE (COD_PAIS= #codigoPais#)
	    AND (COD_SOCI= #codigoSociedad#)
		ORDER BY 2 ASC
	</select>

    
	<!-- DEVUELVE EL CRONOGRAMA ASOCIADO A LOS FILTROS -->
	<select id="getCronogramaCarteraById" parameterClass="cronogramaCartera" resultMap="cronogramaCarteraMantenimiento">	
		SELECT 
			   CRONO.COD_PAIS 			COD_PAIS,
			   CRONO.COD_SOCI 			COD_SOCI,
		       CRONO.COD_PERI 			COD_PERI,
		       ETAPA.COD_ETAP_DEUD 		COD_ETAP_DEUD,
       		   ETAPA.VAL_DESC 			DES_ETAP_DEUD,
       		   REGIO.COD_REGI 			COD_REGI,
       		   REGIO.DES_REGI 			DES_REGI,
       		   CRONO.COD_ZONA 			COD_ZONA,  		      
       		   TO_CHAR(CRONO.FEC_GENE_CART,'DD/MM/YYYY') 		FEC_GENE_CART,
               TO_CHAR(CRONO.FEC_INIC_GEST,'DD/MM/YYYY') 		FEC_INIC_GEST,
               TO_CHAR(CRONO.FEC_COMP_PAGO,'DD/MM/YYYY') 		FEC_COMP_PAGO,
               TO_CHAR(CRONO.FEC_CIER,'DD/MM/YYYY') 			FEC_CIER           
		FROM COB_CRONO_CARTE CRONO,
     		 COB_ETAPA_DEUDA_PAIS ETAPA,
     		 ZON_REGIO REGIO
		WHERE CRONO.COD_ETAP_DEUD=ETAPA.COD_ETAP_DEUD
		AND CRONO.COD_REGI=REGIO.COD_REGI 
		AND CRONO.COD_PAIS = #codigoPais# 
		AND CRONO.COD_SOCI = #codigoSociedad#
		AND CRONO.COD_ETAP_DEUD = #codigoEtapaDeuda#
		AND CRONO.COD_PERI = #codigoPeriodo#
		AND CRONO.COD_REGI = #codigoRegion#
		AND CRONO.COD_ZONA = #codigoZona#				
    </select>
    
	<select id="getCronogramaCarteraByFilter" parameterClass="java.util.Map" resultMap="cronogramaCarteraMantenimientoResult">	
		SELECT 			   
               CRONO.COD_PAIS 	    COD_PAIS,
			   CRONO.COD_SOCI 		COD_SOCI,
		       ETAPA.COD_ETAP_DEUD 	COD_ETAP_DEUD,
       		   ETAPA.VAL_DESC 		DES_ETAP_DEUD,
       		   CRONO.COD_PERI 		COD_PERI,
       		   REGIO.COD_REGI 		COD_REGI,
       		   REGIO.DES_REGI 		DES_REGI,
       		   CRONO.COD_ZONA 	   	COD_ZONA,  		      
       		   CRONO.FEC_GENE_CART  FEC_GENE_CART,
               CRONO.FEC_INIC_GEST  FEC_INIC_GEST,
               CRONO.FEC_COMP_PAGO  FEC_COMP_PAGO,
               CRONO.FEC_CIER 		FEC_CIER               
		FROM COB_CRONO_CARTE CRONO,
     		 COB_ETAPA_DEUDA_PAIS ETAPA,
     		 ZON_REGIO REGIO
		WHERE CRONO.COD_ETAP_DEUD=ETAPA.COD_ETAP_DEUD
		AND CRONO.COD_REGI=REGIO.COD_REGI 
		AND CRONO.COD_PAIS = #codigoPais# 
		AND CRONO.COD_SOCI = #codigoSociedad#
		AND CRONO.COD_PERI = #codigoPeriodo#
		AND CRONO.COD_ETAP_DEUD = #codigoEtapaDeuda#		
		AND CRONO.COD_REGI = DECODE(#codigoRegion#,null,CRONO.COD_REGI,#codigoRegion#)
		AND CRONO.COD_ZONA = DECODE(#codigoZona#,null,CRONO.COD_ZONA,#codigoZona#)
		AND CRONO.FEC_GENE_CART = DECODE(TO_DATE(#fechaGeneracion#,'DD/MM/YYYY'),NULL,FEC_GENE_CART,TO_DATE(#fechaGeneracion#,'DD/MM/YYYY'))
		ORDER BY 1,2,3,4,5,6,7,8 ASC
    </select>
    
	<select id="getEtapasDeudaByPaisSociedadCobrador" parameterClass="java.util.Map" resultMap="baseResultCob">
	 SELECT DISTINCT 
			  ED.COD_ETAP_DEUD AS CODIGO,
			  ED.VAL_DESC      AS DESCRIPCION
	  FROM 
		   COB_ETAPA_DEUDA_PAIS ED, 
		   COB_PARAM_ASIGN_ZONAS_COBRA PZ
	 WHERE ED.COD_ETAP_DEUD =PZ.COD_ETAP_DEUD
	  	 AND PZ.COD_USUA_COBR = #codigoCobrador#
	 ORDER BY 2 ASC
	     
	</select>

	<!-- DEVUELVE EL CRONOGRAMA ASOCIADO AL PAIS, SOCIEDAD, ETAPA Y PERIODO -->
	<select id="getCronogramaByPaisSociedadEtapaPeriodo" parameterClass="java.util.Map" resultMap="cronogramaCarteraResult">	
		SELECT CRONO.COD_PERI PERIODO,
       		   ETAPA.VAL_DESC ETAPA,
       		   REGIO.DES_REGI REGION,
       		   CRONO.COD_ZONA ZONA,
  		       CRONO.FEC_INIC_FACT FEC_INIC_FACT,
       		   CRONO.FEC_GENE_CART FEC_GENE_CART,
               CRONO.FEC_INIC_GEST FEC_INIC_GEST,
               CRONO.FEC_COMP_PAGO FEC_COMP_PAGO,
               CRONO.FEC_CIER FEC_CIER,
               CRONO.VAL_DIAS_PLAZ VAL_DIAS_PLAZ
		FROM COB_CRONO_CARTE CRONO,
     		 COB_ETAPA_DEUDA_PAIS ETAPA,
     		 ZON_REGIO REGIO
		WHERE CRONO.COD_ETAP_DEUD=ETAPA.COD_ETAP_DEUD
		AND CRONO.COD_REGI=REGIO.COD_REGI 
		AND CRONO.COD_PAIS = #codigoPais# 
		AND CRONO.COD_SOCI = #codigoSociedad#
		AND CRONO.COD_ETAP_DEUD =DECODE(#codigoEtapaDeuda#,NULL,CRONO.COD_ETAP_DEUD,#codigoEtapaDeuda#)
		AND CRONO.COD_PERI = #codigoPeriodo#
		AND CRONO.COD_REGI = DECODE(#codigoRegion#,null,CRONO.COD_REGI,#codigoRegion#)
		AND CRONO.COD_ZONA = DECODE(#codigoZona#,null,CRONO.COD_ZONA,#codigoZona#)
		AND CRONO.FEC_GENE_CART = DECODE(TO_DATE(#fechaGeneracion#,'DD/MM/YYYY'),null,FEC_GENE_CART,TO_DATE(#fechaGeneracion#,'DD/MM/YYYY'))
		ORDER BY 1,2,3,4,5 ASC
    </select>
	
	<!-- OBTIENE LAS REGIONES SEGUN CRONOGRAMA POR POR PAIS, SOCIEDAD y ETAPAS DE DEUDA  -->
	<select id="getRegionesByPaisSociedadEtapaDeuda" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             ZON_REGIO.COD_REGI AS CODIGO,
             ZON_REGIO.DES_REGI AS DESCRIPCION
		FROM COB_ETAPA_COBRA_UA,
			 ZON_REGIO
		WHERE COB_ETAPA_COBRA_UA.COD_REGI = ZON_REGIO.COD_REGI  
		AND COB_ETAPA_COBRA_UA.COD_PAIS=#codigoPais# 
		AND COB_ETAPA_COBRA_UA.COD_SOCI=#codigoSociedad#
		AND COB_ETAPA_COBRA_UA.COD_ETAP_DEUD=#codigoEtapaDeuda#
		ORDER BY 2 ASC		    	
	</select>


    <!-- OBTIENE LAS ZONAS SEGUN CRONOGRAMA POR PAIS, SOCIEDAD, ETAPA DE DEUDA Y REGION  -->
	<select id="getZonasByPaisSociedadEtapaDeudaRegion" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             ZON_ZONA.COD_ZONA AS CODIGO,
             ZON_ZONA .DES_ZONA AS DESCRIPCION
		FROM COB_ETAPA_COBRA_UA,
              ZON_ZONA 
		WHERE COB_ETAPA_COBRA_UA.COD_ZONA = ZON_ZONA.COD_ZONA
		AND COB_ETAPA_COBRA_UA.COD_PAIS=#codigoPais# 
		AND COB_ETAPA_COBRA_UA.COD_SOCI=#codigoSociedad#
		AND COB_ETAPA_COBRA_UA.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_ETAPA_COBRA_UA.COD_REGI=#codigoRegion#
		ORDER BY 2 ASC		    	    	
	</select>

	<!-- OBTIENE LAS REGIONES SIN ASIGNAR POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA Y PERIODO  -->
	<select id="getRegionesSinAsignarByPaisSociedadEtapaDeudaPeriodo" parameterClass="java.util.Map" resultMap="baseResultCob">
	    SELECT DISTINCT 
             ZON_REGIO.COD_REGI AS CODIGO,
             ZON_REGIO.DES_REGI AS DESCRIPCION
        FROM COB_CRONO_CARTE,  
             ZON_REGIO
        WHERE COB_CRONO_CARTE.COD_REGI=ZON_REGIO.COD_REGI 
        AND COB_CRONO_CARTE.COD_PAIS=#codigoPais# 
        AND COB_CRONO_CARTE.COD_SOCI=#codigoSociedad#
        AND COB_CRONO_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
        AND COB_CRONO_CARTE.COD_PERI =#codigoPeriodo#
        AND COB_CRONO_CARTE.IND_GENE_CART=0
        ORDER BY 2 ASC                    
	</select>

    <!-- OBTIENE LAS REGIONES ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA Y PERIODO  -->
	<select id="getRegionesByPaisSociedadEtapaDeudaPeriodo" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_DETAL_ASIGN_CARTE.COD_REGI_CLIE AS CODIGO,
             ZON_REGIO.DES_REGI AS DESCRIPCION
		FROM COB_DETAL_ASIGN_CARTE,
              ZON_REGIO
		WHERE COB_DETAL_ASIGN_CARTE.COD_REGI_CLIE=ZON_REGIO.COD_REGI 
    	AND COB_DETAL_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_DETAL_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_DETAL_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_DETAL_ASIGN_CARTE.COD_PERI =#codigoPeriodo#
		ORDER BY 2 ASC		    	    	    	    	
	</select>

    <!-- OBTIENE LAS ZONAS ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA PERIODO Y REGION  -->
	<select id="getZonasByPaisSociedadEtapaDeudaPeriodoRegion" parameterClass="java.util.Map" resultMap="baseResultCob">
      	SELECT DISTINCT 
             COB_DETAL_ASIGN_CARTE.COD_ZONA_CLIE AS CODIGO,
             ZON_ZONA.DES_ZONA AS DESCRIPCION
		FROM COB_DETAL_ASIGN_CARTE,
              ZON_ZONA
		WHERE COB_DETAL_ASIGN_CARTE.COD_ZONA_CLIE=ZON_ZONA.COD_ZONA
    	AND COB_DETAL_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_DETAL_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_DETAL_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_DETAL_ASIGN_CARTE.COD_PERI=#codigoPeriodo#
    	AND COB_DETAL_ASIGN_CARTE.COD_REGI= #codigoRegion# 
		ORDER BY 2 ASC		    	    	
	</select>

	<!-- OBTIENE LAS CARTERAS ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA, PERIODO Y REGION -->
	<select id="getCarterasByPaisSociedadEtapaDeudaPeriodoRegion" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_CABEC_ASIGN_CARTE.COD_CART AS CODIGO,
             COB_CABEC_ASIGN_CARTE.COD_CART AS DESCRIPCION
		FROM COB_CABEC_ASIGN_CARTE
		WHERE COB_CABEC_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_CABEC_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_CABEC_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_CABEC_ASIGN_CARTE.COD_PERI =#codigoPeriodo#
	    AND COB_CABEC_ASIGN_CARTE.COD_REGI = #codigoRegion#
		ORDER BY 2 ASC		   
	</select>

	<!-- OBTIENE LAS CARTERAS ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA, PERIODO Y REGION -->
	<select id="getCarterasByPaisSociedadEtapaDeudaPeriodoRegionZona" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_CABEC_ASIGN_CARTE.COD_CART AS CODIGO,
             COB_CABEC_ASIGN_CARTE.COD_CART AS DESCRIPCION
		FROM COB_CABEC_ASIGN_CARTE
		WHERE COB_CABEC_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_CABEC_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_CABEC_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_CABEC_ASIGN_CARTE.COD_PERI =#codigoPeriodo#
    	AND COB_CABEC_ASIGN_CARTE.COD_REGI=#codigoRegion#
		ORDER BY 2 ASC		   
	</select>
    
   	<!-- OBTIENE LOS COBRADORES ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA  -->
	<select id="getCobradoresByPaisSociedadEtapaDeuda" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_USUAR_COBRA_PAIS.COD_USUA_COBR AS CODIGO,
             COB_USUAR_COBRA_PAIS.VAL_NOMB_USUA_COBR AS DESCRIPCION
		FROM COB_DETAL_ASIGN_CARTE,
              COB_USUAR_COBRA_PAIS
		WHERE COB_DETAL_ASIGN_CARTE.COD_USUA_COBR = COB_USUAR_COBRA_PAIS.COD_USUA_COBR
		AND COB_DETAL_ASIGN_CARTE.COD_PAIS = COB_USUAR_COBRA_PAIS.COD_PAIS
    	AND COB_DETAL_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_DETAL_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_DETAL_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
        AND COB_DETAL_ASIGN_CARTE.FEC_CIER>=TRUNC(SYSDATE)
		AND COB_USUAR_COBRA_PAIS.IND_SUPE=0
		ORDER BY 2 ASC		   
	</select>
                   
   	<!-- OBTIENE LOS COBRADORES ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA, PERIODO  -->
	<select id="getCobradoresByPaisSociedadEtapaDeudaPeriodo" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_USUAR_COBRA_PAIS.COD_USUA_COBR AS CODIGO,
             COB_USUAR_COBRA_PAIS.VAL_NOMB_USUA_COBR AS DESCRIPCION
		FROM COB_DETAL_ASIGN_CARTE,
              COB_USUAR_COBRA_PAIS
		WHERE COB_DETAL_ASIGN_CARTE.COD_USUA_COBR = COB_USUAR_COBRA_PAIS.COD_USUA_COBR
		AND COB_DETAL_ASIGN_CARTE.COD_PAIS = COB_USUAR_COBRA_PAIS.COD_PAIS
    	AND COB_DETAL_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_DETAL_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_DETAL_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_DETAL_ASIGN_CARTE.COD_PERI =#codigoPeriodo#
		AND COB_USUAR_COBRA_PAIS.IND_SUPE=0
		ORDER BY 2 ASC		   
	</select>

	<!-- OBTIENE LOS COBRADORES ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA, PERIODO ,REGION , ZONA-->
	<select id="getCobradoresByPaisSociedadEtapaDeudaPeriodoRegionZona" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_USUAR_COBRA_PAIS.COD_USUA_COBR AS CODIGO,
             COB_USUAR_COBRA_PAIS.VAL_NOMB_USUA_COBR AS DESCRIPCION
		FROM COB_DETAL_ASIGN_CARTE,
              COB_USUAR_COBRA_PAIS
		WHERE COB_DETAL_ASIGN_CARTE.COD_USUA_COBR = COB_USUAR_COBRA_PAIS.COD_USUA_COBR
		AND COB_DETAL_ASIGN_CARTE.COD_PAIS = COB_USUAR_COBRA_PAIS.COD_PAIS
    	AND COB_DETAL_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_DETAL_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_DETAL_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_DETAL_ASIGN_CARTE.COD_PERI =#codigoPeriodo#
    	AND COB_DETAL_ASIGN_CARTE.COD_REGI_CLIE=#codigoRegion#
		AND COB_USUAR_COBRA_PAIS.IND_SUPE=0
      	AND COB_DETAL_ASIGN_CARTE.COD_ZONA_CLIE=DECODE(#codigoZona#,null,COB_DETAL_ASIGN_CARTE.COD_ZONA_CLIE,#codigoZona#)
		ORDER BY 2 ASC		   
	</select>


    <!-- OBTIENE LOS COBRADORES ASIGNADAS POR POR PAIS, SOCIEDAD, ETAPA DE DEUDA, PERIODO ,REGION , ZONA y CARTERA -->
	<select id="getCobradoresByPaisSociedadEtapaDeudaPeriodoRegionZonaCartera" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_USUAR_COBRA_PAIS.COD_USUA_COBR AS CODIGO,
             COB_USUAR_COBRA_PAIS.VAL_NOMB_USUA_COBR AS DESCRIPCION
		FROM COB_DETAL_ASIGN_CARTE,
              COB_USUAR_COBRA_PAIS
		WHERE COB_DETAL_ASIGN_CARTE.COD_USUA_COBR = COB_USUAR_COBRA_PAIS.COD_USUA_COBR
		AND COB_DETAL_ASIGN_CARTE.COD_PAIS = COB_USUAR_COBRA_PAIS.COD_PAIS
    	AND COB_DETAL_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		AND COB_DETAL_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		AND COB_DETAL_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	AND COB_DETAL_ASIGN_CARTE.COD_PERI =#codigoPeriodo#
    	AND COB_DETAL_ASIGN_CARTE.COD_REGI_CLIE=#codigoRegion#
		AND COB_USUAR_COBRA_PAIS.IND_SUPE=0
      	AND COB_DETAL_ASIGN_CARTE.COD_ZONA_CLIE=DECODE(#codigoZona#,null,COB_DETAL_ASIGN_CARTE.COD_ZONA,#codigoZona#)
      	AND COB_DETAL_ASIGN_CARTE.COD_CART=DECODE(#codigoCartera#,null,COB_DETAL_ASIGN_CARTE.COD_ZONA,#codigoCartera#)	
		ORDER BY 2 ASC		   
	</select>
                            
   	<select id="getCobradoresMultiplesByPaisSociedadEtapaDeudaPeriodoRegion" parameterClass="java.util.Map" resultMap="baseResultCob">
		SELECT DISTINCT 
             COB_USUAR_COBRA_PAIS.COD_USUA_COBR AS CODIGO,
             COB_USUAR_COBRA_PAIS.VAL_NOMB_USUA_COBR AS DESCRIPCION
		FROM COB_DETAL_ASIGN_CARTE,
              COB_USUAR_COBRA_PAIS
		WHERE COB_DETAL_ASIGN_CARTE.COD_USUA_COBR = COB_USUAR_COBRA_PAIS.COD_USUA_COBR
		AND COB_DETAL_ASIGN_CARTE.COD_PAIS = COB_USUAR_COBRA_PAIS.COD_PAIS
          AND COB_DETAL_ASIGN_CARTE.COD_PAIS=#codigoPais# 
		  AND COB_DETAL_ASIGN_CARTE.COD_SOCI=#codigoSociedad#
		  AND COB_DETAL_ASIGN_CARTE.COD_ETAP_DEUD=#codigoEtapaDeuda#
    	  AND COB_DETAL_ASIGN_CARTE.COD_PERI =#codigoPeriodo#
		  AND COB_USUAR_COBRA_PAIS.IND_SUPE=0
		      <iterate prepend="AND" property="codigoRegion" open="(" close=")" conjunction="OR">
      	         COB_DETAL_ASIGN_CARTE.COD_REGI_CLIE = #codigoRegion[]#
              </iterate>
		ORDER BY 2 ASC		  
     
    </select>        
	
  	<select id="getAccionesCobranzaByPaisSociedadEtapa" parameterClass="java.util.Map" resultMap="baseResultCob">
       SELECT COB_ACCIO_COBRA_PAIS.COD_ACCI_COBR AS CODIGO,
		      COB_ACCIO_COBRA_PAIS.DES_ACCI_COBR AS DESCRIPCION
       FROM COB_ACCIO_COBRA_PAIS 
	   WHERE COB_ACCIO_COBRA_PAIS.COD_PAIS = #codigoPais# 
	     AND COB_ACCIO_COBRA_PAIS.COD_SOCI = DECODE(#codigoSociedad#,NULL,COB_ACCIO_COBRA_PAIS.COD_SOCI,#codigoSociedad#)
         AND COB_ACCIO_COBRA_PAIS.COD_ETAP_DEUD = #codigoEtapaDeuda#
	   ORDER BY 2 ASC
    </select>       

   	<select id="getAccionesCobranzaByPaisSociedadEtapaTipoAccion" parameterClass="java.util.Map" resultMap="baseResultCob">
       SELECT COB_ACCIO_COBRA_PAIS.COD_ACCI_COBR AS CODIGO,
		      COB_ACCIO_COBRA_PAIS.DES_ACCI_COBR AS DESCRIPCION
       FROM COB_ACCIO_COBRA_PAIS 
	   WHERE COB_ACCIO_COBRA_PAIS.COD_PAIS = #codigoPais# 
	     AND COB_ACCIO_COBRA_PAIS.COD_SOCI = DECODE(#codigoSociedad#,NULL,COB_ACCIO_COBRA_PAIS.COD_SOCI,#codigoSociedad#)
	     AND COB_ACCIO_COBRA_PAIS.COD_ETAP_DEUD = #codigoEtapaDeuda#
         AND COB_ACCIO_COBRA_PAIS.TIPO_ACCI_COBR = #tipoAccion#
	   ORDER BY 2 ASC
    </select>           
	
	<select id="getAccionesCobranzaByEtapaTipoAccion" parameterClass="java.util.Map" resultMap="baseResultCob">
       SELECT COB_ACCIO_COBRA_PAIS.COD_ACCI_COBR AS CODIGO,
		      COB_ACCIO_COBRA_PAIS.DES_ACCI_COBR AS DESCRIPCION
       FROM COB_ACCIO_COBRA_PAIS 
	   WHERE COB_ACCIO_COBRA_PAIS.COD_ETAP_DEUD = #codigoEtapaDeuda#
         AND COB_ACCIO_COBRA_PAIS.TIPO_ACCI_COBR = #tipoAccion#
	   ORDER BY 2 ASC
    </select>
    
	<select id="getDocumentosContables" parameterClass="java.util.Map" resultMap="baseResultCob">
	   SELECT FAC_TIPO_DOCUM.COD_TIPO_DOCU CODIGO, 
              FAC_TIPO_DOCUM.DES_TIPO_DOCU DESCRIPCION
	   FROM FAC_TIPO_DOCUM
	   ORDER BY 2 ASC
	</select>


    <!-- DEVUELVE La lista de consultoras segun el filtro -->
	<select id="getConsultorasByFilter" parameterClass="java.util.Map" resultMap="consultoraResult">	
		SELECT 
               CARTE.cod_cart               						  CARTERA,
		       CARTE.cod_etap_deud          						  ETAPA,
               CARTE.cod_clie 		 	    						  CODIGO,
		       CARTE.nom_clie 	            						  NOMBRE,
		       CARTE.des_regi_clie 	        						  REGION,
		       CARTE.cod_zona_clie 	        						  ZONA,       
		       CARTE.cod_terr 		        						  TERRITORIO, 
			   CARTE.cod_secc									      SECCION,
			   NVL(gen_pkg_gener.gen_fn_clien_datos_oid(carte.oid_clie,'DES_DPTO'),' ') DEPARTAMENTO,
    		   NVL(gen_pkg_gener.gen_fn_clien_datos_oid(carte.oid_clie,'DES_PROV'),' ') PROVINCIA,
    		   NVL(gen_pkg_gener.gen_fn_clien_datos_oid(carte.oid_clie,'DES_DIST'),' ') DISTRITO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_DIREC_CLIEN(carte.oid_clie) DIRECCION,
		       FIN_PKG_GENER.FIN_FN_OBTIE_DIREC_CLIEN_REFER(carte.oid_clie) 		    REFERENCIA,
		       TO_CHAR(CLIEN.FEC_INGR,'dd/MM/yyyy')										FECHA_INGR,
		       TO_CHAR(ADICI.FEC_NACI,'dd/MM/yyyy')										FECHA_NACI,
		       TRUNC(SYSDATE) - CARTE.Fec_Docu || ' dias' 		      MORA,
		       CARTE.imp_deud_pend 		    					      DEUDA_CARTERA,
 			   CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_TOTAL(carte.oid_clie) DEUDA_TOTAL,
		       TO_CHAR(CARTE.FEC_ASIG,'dd/MM/yyyy')                   FECHA_ASIG,
			   TO_CHAR(CARTE.FEC_CIER,'dd/MM/yyyy')                   FECHA_CIERRE,
			   FIN_PKG_GENER.FIN_FN_OBTIE_DESCR_ESTAT_CLIEN(carte.oid_clie)   	      STATUS,
		       FIN_PKG_GENER.FIN_FN_OBTIE_CAMPA_PRIME_PEDID(carte.oid_clie) 	      CAMPANA_INGRESO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_CAMPA_ULTIM_PEDID(carte.oid_clie) 	      ULTIMO_PEDIDO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_NUMER_TELEF_CLIEN(carte.oid_clie,'TF') 	  TELE_FIJO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_NUMER_TELEF_CLIEN(carte.oid_clie,'TM')      TELE_MOVIL,
		       FIN_PKG_GENER.FIN_FN_OBTIE_NUMER_TELEF_CLIEN(carte.oid_clie,'TT') 	  TELE_TRABAJO
		FROM COB_DETAL_ASIGN_CARTE CARTE,
		     MAE_CLIEN CLIEN,
		     MAE_CLIEN_DATOS_ADICI ADICI
		WHERE CARTE.OID_CLIE=CLIEN.OID_CLIE
		   AND CLIEN.OID_CLIE=ADICI.CLIE_OID_CLIE  
		  AND CARTE.cod_pais = #codigoPais#		  
		  AND CARTE.cod_soci = #codigoSociedad#
		  AND CARTE.cod_etap_deud = #codigoEtapa#
		  AND CARTE.cod_usua_cobr = DECODE(#codigoCobrador#,NULL,CARTE.cod_usua_cobr,'Todos',CARTE.cod_usua_cobr,#codigoCobrador#)
	      AND CARTE.cod_peri = DECODE(#codigoPeriodo#,NULL,CARTE.COD_PERI,#codigoPeriodo#)
		  AND CARTE.cod_regi_clie = DECODE(#codigoRegion#,NULL,CARTE.COD_REGI_CLIE,'Todos',CARTE.COD_REGI_CLIE,#codigoRegion#) 
		  AND CARTE.cod_zona_clie = DECODE(#codigoZona#,NULL,CARTE.COD_ZONA_CLIE,'Todos',CARTE.COD_ZONA_CLIE,#codigoZona#)		
		  AND CARTE.cod_clie = DECODE(#codigoConsultoraSearch#,NULL,CARTE.cod_clie,#codigoConsultoraSearch#)		
          AND CARTE.num_docu_iden = DECODE(#numeroDocumentoSearch#,NULL,CARTE.num_docu_iden,#numeroDocumentoSearch#)		
          AND CARTE.cod_ulti_gest_cobr = DECODE(#gestionFiltro#,NULL,CARTE.COD_ULTI_GEST_COBR,'Todos',CARTE.COD_ULTI_GEST_COBR,#gestionFiltro#)		
          AND CARTE.imp_deud_pend > 0
		  AND CARTE.fec_cier>=TRUNC(SYSDATE)
          $criterioFiltro$
		ORDER BY $criterioOrdenamiento$	      
	</select>

<!-- DEVUELVE La lista de consultoras segun el filtro -->
	<select id="getConsultorasSupervisorByFilter" parameterClass="java.util.Map" resultMap="consultoraResult">	
        SELECT 
               CARTE.cod_cart               						  CARTERA,
		       CARTE.cod_etap_deud          						  ETAPA,
               CARTE.cod_clie 		 	    						  CODIGO,
		       CARTE.nom_clie 	            						  NOMBRE,
		       CARTE.des_regi_clie 	        						  REGION,
		       CARTE.cod_zona_clie 	        						  ZONA,       
		       CARTE.cod_terr 		        						  TERRITORIO, 
			   'A'													  SECCION,
		       CARTE.val_dire 		        						  DIRECCION,
		       CARTE.num_dias_mora||' dias' 						  MORA,
		       CARTE.imp_deud_pend 		    					      DEUDA_CARTERA,
 			   CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_TOTAL(carte.oid_clie) DEUDA_TOTAL,
			   CARTE.FEC_CIER              							  FECHA_CIERRE,
			   'B'   												  STATUS,
		       (SELECT TO_CHAR(FEC_INGR,'dd/MM/yyyy') 
                FROM MAE_CLIEN WHERE OID_CLIE = CARTE.oid_clie) 	  CAMPANA_INGRESO,
		       (SELECT TO_CHAR(max(FEC_SOLI),'dd/MM/yyyy') 
                FROM INT_SOLIC_CONSO_CABEC A 
                WHERE A.COD_CLIE = CARTE.oid_clie) 				      ULTIMO_PEDIDO,
		       NVL(CARTE.NUM_TELE_FIJO ,'') 						  TELE_FIJO,
		       NVL(CARTE.NUM_TELE_MOVI ,'') 					      TELE_MOVIL,
		       NVL(CARTE.NUM_TELE_TRAB ,'') 						  TELE_TRABAJO
		FROM COB_DETAL_ASIGN_CARTE CARTE
		WHERE CARTE.cod_pais = #codigoPais#		  
		  AND CARTE.cod_soci = #codigoSociedad#
		  AND CARTE.cod_etap_deud = #codigoEtapa#
		  AND CARTE.cod_usua_cobr = DECODE(#codigoCobrador#,NULL,CARTE.COD_USUA_COBR,'Todos',CARTE.COD_USUA_COBR,#codigoCobrador#)		
	      AND CARTE.cod_peri = DECODE(#codigoPeriodo#,NULL,CARTE.COD_PERI,#codigoPeriodo#)
		  AND CARTE.cod_regi_clie = DECODE(#codigoRegion#,NULL,CARTE.COD_REGI_CLIE,'Todos',CARTE.COD_REGI_CLIE,#codigoRegion#) 
		  AND CARTE.cod_zona_clie = DECODE(#codigoZona#,NULL,CARTE.COD_ZONA_CLIE,'Todos',CARTE.COD_ZONA_CLIE,#codigoZona#)		
		  AND CARTE.cod_clie = DECODE(#codigoConsultoraSearch#,NULL,CARTE.cod_clie,#codigoConsultoraSearch#)			
          $criterioFiltro$
		ORDER BY $criterioOrdenamiento$	      
	</select>
 
 	<!-- DEVUELVE La lista de consultoras segun el filtro -->
	<select id="getConsultoraSupervisorByFilter" parameterClass="java.util.Map" resultMap="carteraResult">	
		SELECT 
               NVL(CARTE.cod_cart,' ')               						  CARTERA,
		       NVL(CARTE.cod_etap_deud,' ')          						  ETAPA,
               NVL(CLIEN.cod_clie,' ') 		 	    						  CODIGO,
               NVL(CLIEN.cod_digi_ctrl,' ')							 COD_DIGI_CRTL,
		       TRIM(CLIEN.VAL_APE1) || ' ' || TRIM(CLIEN.VAL_APE2) || ' ' ||
       		   TRIM(CLIEN.VAL_NOM1) || ' ' || TRIM(CLIEN.VAL_NOM2) 	  NOMBRE,
		       NVL(CARTE.num_docu_iden,' ')							  NUM_DOCU_IDEN,
		       NVL(ADICI.val_ocup,' ')									VAL_OCUP,	
		       NVL(CARTE.cod_peri,' ')	                        CAMPANA_ASIG,
		       NVL(TO_CHAR(CARTE.FEC_ASIG,'dd/MM/yyyy'),' ')               FECHA_ASIG,	
		       NVL(CARTE.des_regi_clie,' ')									REGION,
		       NVL(CARTE.cod_zona_clie,' ')									ZONA,
		       NVL(CARTE.cod_secc,' ')										SECCION,       
		       NVL(CARTE.cod_terr,0)										TERRITORIO, 			   
			   NVL(gen_pkg_gener.gen_fn_clien_datos_oid(CLIEN.oid_clie,'DES_DPTO'),' ') DEPARTAMENTO,
    		   NVL(gen_pkg_gener.gen_fn_clien_datos_oid(CLIEN.oid_clie,'DES_PROV'),' ') PROVINCIA,
    		   NVL(gen_pkg_gener.gen_fn_clien_datos_oid(CLIEN.oid_clie,'DES_DIST'),' ') DISTRITO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_DIREC_CLIEN(CLIEN.oid_clie) DIRECCION,
		       FIN_PKG_GENER.FIN_FN_OBTIE_DIREC_CLIEN_REFER(CLIEN.oid_clie) 		    REFERENCIA,
		       TO_CHAR(CLIEN.FEC_INGR,'dd/MM/yyyy')										FECHA_INGR,
		       TO_CHAR(ADICI.FEC_NACI,'dd/MM/yyyy')										FECHA_NACI,
		       TO_CHAR(ROUND((TRUNC(SYSDATE) - ADICI.FEC_NACI)/365,0))					EDAD,
		       TRUNC(SYSDATE) - CARTE.Fec_Docu || ' dias' 		      			        MORA,
		      NVL(CARTE.imp_deud_pend,0) 		    					      		DEUDA_CARTERA,
 			   CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_TOTAL(CLIEN.oid_clie) DEUDA_TOTAL,		       
			   NVL(TO_CHAR(CARTE.FEC_CIER,'dd/MM/yyyy'),' ')                   FECHA_CIERRE,
			   FIN_PKG_GENER.FIN_FN_OBTIE_DESCR_ESTAT_CLIEN(CLIEN.oid_clie)   	      STATUS,
		       FIN_PKG_GENER.FIN_FN_OBTIE_CAMPA_PRIME_PEDID(CLIEN.oid_clie) 	      CAMPANA_INGRESO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_CAMPA_ULTIM_PEDID(CLIEN.oid_clie) 	      ULTIMO_PEDIDO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_NUMER_TELEF_CLIEN(CLIEN.oid_clie,'TF') 	  TELE_FIJO,
		       FIN_PKG_GENER.FIN_FN_OBTIE_NUMER_TELEF_CLIEN(CLIEN.oid_clie,'TM')      TELE_MOVIL,
		       FIN_PKG_GENER.FIN_FN_OBTIE_NUMER_TELEF_CLIEN(CLIEN.oid_clie,'TT') 	  TELE_TRABAJO,
		       NVL(CARTE.cod_usua_cobr,' ')											  COBRADOR,
		       NVL(CARTE.val_nom_gere_zona,' ')										  NOM_GERE_ZONA,
		       NVL(CARTE.val_nom_lide_secc,' ')			       		   			      NOM_LIDE_SECC,
		      NULL DEUDA_ASIGNADA
		FROM 
			 MAE_CLIEN CLIEN,
		     COB_DETAL_ASIGN_CARTE CARTE,
		     MAE_CLIEN_DATOS_ADICI ADICI
		WHERE CLIEN.OID_CLIE=ADICI.CLIE_OID_CLIE
		  AND CLIEN.OID_CLIE=CARTE.OID_CLIE(+)  								
		AND CLIEN.COD_CLIE = #codigoConsultoraSearch#			          		
	</select>
      
    <!-- DEVUELVE La lista de consultoras segun el filtro -->
	<select id="getCarteraEjecutivoByFilter" parameterClass="java.util.Map" resultMap="carteraResult">	
		SELECT 
               CARTE.cod_cart               						  					CARTERA,
		       CARTE.cod_etap_deud          						  					ETAPA,
               CARTE.cod_clie 		 	    						  					CODIGO,
               NVL(CLIEN.cod_digi_ctrl,' ')												COD_DIGI_CRTL,
		       CARTE.nom_clie 	            						  				    NOMBRE,
		       CARTE.num_docu_iden														NUM_DOCU_IDEN,
		       NVL(ADICI.val_ocup,' ')													VAL_OCUP,	
		       CARTE.cod_peri                                                           CAMPANA_ASIG,
		       TO_CHAR(CARTE.FEC_ASIG,'dd/MM/yyyy')                   					FECHA_ASIG,		                     
		       CARTE.des_regi_clie 	        						  					REGION,
		       CARTE.cod_zona_clie 	        						  					ZONA,
		       CARTE.cod_secc									      					SECCION,       
		       CARTE.cod_terr 		        						  					TERRITORIO, 			   
			   NVL(CARTE.des_dpto,' ')													DEPARTAMENTO,
    		   NVL(CARTE.des_prov,' ')													PROVINCIA,
    		   NVL(CARTE.des_dist,' ')													DISTRITO,
		       NVL(CARTE.val_dire,' ') 				    								DIRECCION,
		       NVL(CARTE.val_dire_refe,' ') 		    								REFERENCIA,
		       TO_CHAR(CLIEN.FEC_INGR,'dd/MM/yyyy')										FECHA_INGR,
		       TO_CHAR(ADICI.FEC_NACI,'dd/MM/yyyy')										FECHA_NACI,
		       TO_CHAR(ROUND((TRUNC(SYSDATE) - ADICI.FEC_NACI)/365,0))					EDAD,
		       TRUNC(SYSDATE) - CARTE.Fec_Docu || ' dias' 		      					MORA,
		       CARTE.imp_deud_pend 		    					      					DEUDA_CARTERA,
 			   CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_TOTAL(carte.oid_clie) 					DEUDA_TOTAL,		       
			   TO_CHAR(CARTE.FEC_CIER,'dd/MM/yyyy')                   					FECHA_CIERRE,
			   NVL(CARTE.val_desc_esta_clien,' ')	  	      							STATUS,
		       NVL(CARTE.cod_camp_prim_pedi,' ')		 	      						CAMPANA_INGRESO,
		       NVL(CARTE.cod_camp_ulti_pedi,' ')	 	      							ULTIMO_PEDIDO,
		       NVL(CARTE.num_tele_fijo,' ')	 	  										TELE_FIJO,
		       NVL(CARTE.num_tele_movi,' ')	      										TELE_MOVIL,
		       NVL(CARTE.num_tele_trab,' ')	 											TELE_TRABAJO,
		       NVL(CARTE.cod_usua_cobr,' ')												COBRADOR,
		       NVL(CARTE.val_nom_gere_zona,' ')											NOM_GERE_ZONA,
		       NVL(CARTE.val_nom_lide_secc,' ')			       		   			    	NOM_LIDE_SECC,
		      NULL DEUDA_ASIGNADA				   
		FROM COB_DETAL_ASIGN_CARTE CARTE,
		 	 COB_ETAPA_DEUDA_PAIS ETAPA,
		     MAE_CLIEN CLIEN,
		     MAE_CLIEN_DATOS_ADICI ADICI
		WHERE CARTE.OID_CLIE=CLIEN.OID_CLIE
		  AND ETAPA.COD_ETAP_DEUD=CARTE.COD_ETAP_DEUD
		  AND CLIEN.OID_CLIE=ADICI.CLIE_OID_CLIE  		  
		  AND CARTE.cod_etap_deud = #codigoEtapa#
		  AND CARTE.cod_usua_cobr = DECODE(#codigoCobrador#,NULL,CARTE.cod_usua_cobr,'Todos',CARTE.cod_usua_cobr,#codigoCobrador#)
	      AND CARTE.cod_peri = DECODE(#codigoPeriodo#,NULL,CARTE.COD_PERI,#codigoPeriodo#)
		  AND CARTE.cod_regi_clie = DECODE(#codigoRegion#,NULL,CARTE.COD_REGI_CLIE,'Todos',CARTE.COD_REGI_CLIE,#codigoRegion#) 
		  AND CARTE.cod_zona_clie = DECODE(#codigoZona#,NULL,CARTE.COD_ZONA_CLIE,'Todos',CARTE.COD_ZONA_CLIE,#codigoZona#)		
		  AND CARTE.cod_clie = DECODE(#codigoConsultoraSearch#,NULL,CARTE.cod_clie,#codigoConsultoraSearch#)		
          AND CARTE.num_docu_iden = DECODE(#numeroDocumentoSearch#,NULL,CARTE.num_docu_iden,#numeroDocumentoSearch#)		
          AND CARTE.cod_ulti_gest_cobr = DECODE(#gestionFiltro#,NULL,CARTE.COD_ULTI_GEST_COBR,'Todos',CARTE.COD_ULTI_GEST_COBR,#gestionFiltro#)		
          AND CARTE.imp_deud_pend > ETAPA.val_impo_mini_visu
		  AND CARTE.fec_cier>=TRUNC(SYSDATE)
          $criterioFiltro$
		ORDER BY $criterioOrdenamiento$	      
	</select>
    
	<!-- DEVUELVE La lista de consultoras segun el filtro -->
	<select id="getCarteraLlamadaEntranteByFilter" parameterClass="java.util.Map" resultMap="carteraResult">	
		SELECT 		       			
               CARTE.cod_cart               						  					CARTERA,
		       CARTE.cod_etap_deud          						  					ETAPA,
               CARTE.cod_clie 		 	    						  					CODIGO,
               NVL(CLIEN.cod_digi_ctrl,' ')												COD_DIGI_CRTL,
		       CARTE.nom_clie 	            						  				    NOMBRE,
		       CARTE.num_docu_iden														NUM_DOCU_IDEN,
		       NVL(ADICI.val_ocup,' ')													VAL_OCUP,	
		       CARTE.cod_peri                                                           CAMPANA_ASIG,
		       TO_CHAR(CARTE.FEC_ASIG,'dd/MM/yyyy')                   					FECHA_ASIG,		                     
		       CARTE.des_regi_clie 	        						  					REGION,
		       CARTE.cod_zona_clie 	        						  					ZONA,
		       CARTE.cod_secc									      					SECCION,       
		       CARTE.cod_terr 		        						  					TERRITORIO, 			   
			   NVL(CARTE.des_dpto,' ')													DEPARTAMENTO,
    		   NVL(CARTE.des_prov,' ')													PROVINCIA,
    		   NVL(CARTE.des_dist,' ')													DISTRITO,
		       NVL(CARTE.val_dire,' ') 				    								DIRECCION,
		       NVL(CARTE.val_dire_refe,' ') 		    								REFERENCIA,
		       TO_CHAR(CLIEN.FEC_INGR,'dd/MM/yyyy')										FECHA_INGR,
		       TO_CHAR(ADICI.FEC_NACI,'dd/MM/yyyy')										FECHA_NACI,
		       TO_CHAR(ROUND((TRUNC(SYSDATE) - ADICI.FEC_NACI)/365,0))					EDAD,
		       TRUNC(SYSDATE) - CARTE.Fec_Docu || ' dias' 		      					MORA,
		       CARTE.imp_deud_pend 		    					      					DEUDA_CARTERA,
 			   CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_TOTAL(carte.oid_clie) 					DEUDA_TOTAL,		       
			   TO_CHAR(CARTE.FEC_CIER,'dd/MM/yyyy')                   					FECHA_CIERRE,
			   NVL(CARTE.val_desc_esta_clien,' ')	  	      							STATUS,
		       NVL(CARTE.cod_camp_prim_pedi,' ')		 	      						CAMPANA_INGRESO,
		       NVL(CARTE.cod_camp_ulti_pedi,' ')	 	      							ULTIMO_PEDIDO,
		       NVL(CARTE.num_tele_fijo,' ')	 	  										TELE_FIJO,
		       NVL(CARTE.num_tele_movi,' ')	      										TELE_MOVIL,
		       NVL(CARTE.num_tele_trab,' ')	 											TELE_TRABAJO,
		       NVL(CARTE.cod_usua_cobr,' ')												COBRADOR,
		       NVL(CARTE.val_nom_gere_zona,' ')											NOM_GERE_ZONA,
		       NVL(CARTE.val_nom_lide_secc,' ')			       		   			    	NOM_LIDE_SECC,
		      NULL DEUDA_ASIGNADA				   
		FROM COB_DETAL_ASIGN_CARTE CARTE,
		 	 COB_ETAPA_DEUDA_PAIS ETAPA,
		     MAE_CLIEN CLIEN,
		     MAE_CLIEN_DATOS_ADICI ADICI
		WHERE CARTE.OID_CLIE=CLIEN.OID_CLIE
		  AND ETAPA.COD_ETAP_DEUD=CARTE.COD_ETAP_DEUD
		  AND CLIEN.OID_CLIE=ADICI.CLIE_OID_CLIE  		  		  		  	
		  AND CARTE.cod_clie = DECODE(#codigoConsultoraSearch#,NULL,CARTE.cod_clie,#codigoConsultoraSearch#)		
          AND CARTE.num_docu_iden = DECODE(#numeroDocumentoSearch#,NULL,CARTE.num_docu_iden,#numeroDocumentoSearch#)		          
		  AND CARTE.fec_cier>=TRUNC(SYSDATE)          			     
	</select>
	    	
    <!-- DEVUELVE La lista de consultoras segun el filtro -->
	<select id="getCarteraSupervisorByFilter" parameterClass="java.util.Map" resultMap="carteraResult">	
		SELECT 
               CARTE.cod_cart               						  					CARTERA,
		       CARTE.cod_etap_deud          						  					ETAPA,
               CARTE.cod_clie 		 	    						  					CODIGO,
               NVL(CLIEN.cod_digi_ctrl,' ')												COD_DIGI_CRTL,
		       CARTE.nom_clie 	            						  				    NOMBRE,
		       CARTE.num_docu_iden														NUM_DOCU_IDEN,
		       NVL(ADICI.val_ocup,' ')													VAL_OCUP,	
		       CARTE.cod_peri                                                           CAMPANA_ASIG,
		       TO_CHAR(CARTE.FEC_ASIG,'dd/MM/yyyy')                   					FECHA_ASIG,
		       CARTE.des_regi_clie 	        						  					REGION,
		       CARTE.cod_zona_clie 	        						  				    ZONA,      
		       CARTE.cod_secc									      					SECCION, 
		       CARTE.cod_terr 		        						  					TERRITORIO, 			                  		       		       
			   CARTE.des_dpto															DEPARTAMENTO,
    		   CARTE.des_prov															PROVINCIA,
    		   CARTE.des_dist															DISTRITO,
		       CARTE.val_dire 				    										DIRECCION,
		       CARTE.val_dire_refe 		    											REFERENCIA,
		       TO_CHAR(CLIEN.FEC_INGR,'dd/MM/yyyy')										FECHA_INGR,
		       TO_CHAR(ADICI.FEC_NACI,'dd/MM/yyyy')										FECHA_NACI,
		       TO_CHAR(ROUND((TRUNC(SYSDATE) - ADICI.FEC_NACI)/365,0))					EDAD,
		       TRUNC(SYSDATE) - CARTE.Fec_Docu || ' dias' 		      					MORA,
		       CARTE.imp_deud_pend 		    					      					DEUDA_CARTERA,
 			   CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_TOTAL(carte.oid_clie) 					DEUDA_TOTAL,		       
			   TO_CHAR(CARTE.FEC_CIER,'dd/MM/yyyy')                   					FECHA_CIERRE,
		       CARTE.val_desc_esta_clien  	      										STATUS,
		       CARTE.cod_camp_prim_pedi	 	      										CAMPANA_INGRESO,
		       CARTE.cod_camp_ulti_pedi 	      										ULTIMO_PEDIDO,
		       CARTE.num_tele_fijo 	  													TELE_FIJO,
		       CARTE.num_tele_movi      												TELE_MOVIL,
		       CARTE.num_tele_trab 	  													TELE_TRABAJO,	
		       CARTE.cod_usua_cobr														COBRADOR,
		       CARTE.val_nom_gere_zona													NOM_GERE_ZONA,
		       CARTE.val_nom_lide_secc		       		   			    			   	NOM_LIDE_SECC,
		       CARTE.imp_deud_asig                                                      DEUDA_ASIGNADA	   		   
		FROM COB_DETAL_ASIGN_CARTE CARTE,		 	
		     MAE_CLIEN CLIEN,
		     MAE_CLIEN_DATOS_ADICI ADICI
		WHERE CARTE.OID_CLIE=CLIEN.OID_CLIE		  
		  AND CLIEN.OID_CLIE=ADICI.CLIE_OID_CLIE  
		  AND CARTE.cod_pais = #codigoPais#		  
		  AND CARTE.cod_soci = #codigoSociedad#
		  AND CARTE.cod_etap_deud = #codigoEtapa#
		  AND CARTE.cod_usua_cobr = DECODE(#codigoCobrador#,NULL,CARTE.cod_usua_cobr,'Todos',CARTE.cod_usua_cobr,#codigoCobrador#)
	      AND CARTE.cod_peri = DECODE(#codigoPeriodo#,NULL,CARTE.COD_PERI,#codigoPeriodo#)
		  AND CARTE.cod_regi_clie = DECODE(#codigoRegion#,NULL,CARTE.COD_REGI_CLIE,'Todos',CARTE.COD_REGI_CLIE,#codigoRegion#) 
		  AND CARTE.cod_zona_clie = DECODE(#codigoZona#,NULL,CARTE.COD_ZONA_CLIE,'Todos',CARTE.COD_ZONA_CLIE,#codigoZona#)		
		  AND CARTE.cod_clie = DECODE(#codigoConsultoraSearch#,NULL,CARTE.cod_clie,#codigoConsultoraSearch#)		
          AND CARTE.num_docu_iden = DECODE(#numeroDocumentoSearch#,NULL,CARTE.num_docu_iden,#numeroDocumentoSearch#)		
          AND CARTE.cod_ulti_gest_cobr = DECODE(#gestionFiltro#,NULL,CARTE.COD_ULTI_GEST_COBR,'Todos',CARTE.COD_ULTI_GEST_COBR,#gestionFiltro#)		          		  
          $criterioFiltro$
		ORDER BY $criterioOrdenamiento$	      
	</select>
 	
 	<!-- DEVUELVE Lista de llamadas realizadas por un cliente -->
	<select id="getHistorialGestionesCobranza" parameterClass="java.util.Map" resultMap="historialGestionesCobranzaResult">	
		SELECT ED.VAL_DESC ETAPA,
	       COB.COD_PERI PERIODO,
	       COB.TIP_ACCI_COBR TIPO,
	       COB.COD_ACCI_COBR ACCION,
	       TO_CHAR(COB.FEC_GEST, 'dd/MM/yyyy') FECHA,
	       COB.VAL_HORA_GEST HORA,
	       COB.VAL_OBSE OBSERVACION,
	       TO_CHAR(COB.FEC_ACCI_COBR, 'dd/MM/yyyy') FECHA_PAGO,
	       COB.PPA_IMP_PAGO IMPORTE_PAGO,
	       COB.COD_USUA_COBR_PAIS COBRADOR
	  FROM 
		   COB_GESTI_COBRA_PAIS COB,
		   COB_ETAPA_DEUDA_PAIS ED    
	 WHERE COB.COD_ETAP_DEUD = ED.COD_ETAP_DEUD 
	 		AND COB.COD_CLIE = #codigoConsultora#
	 ORDER BY COB.COD_PERI DESC
    </select>
    
<!-- DEVUELVE Lista de llamadas realizadas por un cliente -->
	<select id="getListaLlamadas" parameterClass="java.util.Map" resultMap="llamadaCobranzaResult">	
		SELECT 
              COB.TIP_ACCI_COBR          				 TIPO,
              COB.COD_ACCI_COBR          				 ACCION,
              TO_CHAR(COB.FEC_GEST,'dd/MM/yyyy')         FECHA,
              COB.VAL_HORA_GEST          			     HORA,
		      COB.VAL_OBSE               			     OBSERVACION,					
		      TO_CHAR(COB.FEC_ACCI_COBR,'dd/MM/yyyy')    FECHA_PAGO,
              COB.PPA_IMP_PAGO              			 IMPORTE_PAGO,
              CAR.COD_USUA_COBR                          COBRADOR
		FROM  COB_GESTI_COBRA_PAIS COB,
		      COB_DETAL_ASIGN_CARTE CAR
		WHERE COB.COD_CART=CAR.COD_CART
		  AND COB.COD_CLIE=CAR.COD_CLIE
		  AND COB.COD_CART = #codigoCartera#           	   	
		  AND COB.COD_CLIE = #codigoConsultora#    		  
		ORDER BY cob.NUM_ORDE DESC
    </select>


	<!-- DEVUELVE Lista de gestiones realizadas por un cobrador -->

	<select id="getListaGestionesCartera" parameterClass="java.util.Map" resultMap="llamadaCobranzaResult">	
		SELECT 
              COB.TIP_ACCI_COBR          				 TIPO,
              COB.COD_ACCI_COBR          				 ACCION,
              TO_CHAR(COB.FEC_GEST,'dd/MM/yyyy')         FECHA,
              COB.VAL_HORA_GEST          			     HORA,
		      COB.VAL_OBSE               			     OBSERVACION,					
		      TO_CHAR(COB.FEC_ACCI_COBR,'dd/MM/yyyy')    FECHA_PAGO,
              COB.PPA_IMP_PAGO              			 IMPORTE_PAGO,
              COB.COD_USUA_COBR_PAIS                     COBRADOR                           
		FROM  COB_GESTI_COBRA_PAIS COB,
		      COB_DETAL_ASIGN_CARTE CAR
		WHERE COB.COD_CART=CAR.COD_CART
		  AND COB.COD_CLIE=CAR.COD_CLIE
		  AND COB.COD_CART = #codigoCartera#           	   	
		  AND COB.COD_CLIE = #codigoConsultora#    		  
		ORDER BY cob.NUM_ORDE DESC
    </select>
	
	<!-- DEVUELVE Lista de llamadas realizadas por un cliente -->
	<select id="getReferencias" parameterClass="java.util.Map" resultMap="referenciaResult">	
		SELECT OBSER.VAL_TEXT REFER
		FROM MAE_CLIEN_OBSER OBSER,
             MAE_CLIEN CLIEN
	    WHERE CLIEN.OID_CLIE=OBSER.CLIE_OID_CLIE 
	    AND CLIEN.COD_CLIE=#codigoConsultora# 
    </select>
	
	<!-- DEVUELVE Lista de referencias de la deudora -->
	<select id="getReferenciasDeudora" parameterClass="java.util.Map" resultMap="referenciasDeudoraResult">	
	  SELECT TR.DES_TIPO_REFER,
       		  TRIM(RE.VAL_APE1) || ' ' || TRIM(RE.VAL_APE2) || ' ' ||
       		  TRIM(RE.VAL_NOM1) || ' ' || TRIM(RE.VAL_NOM2) NOM_REFE,
       	      RE.VAL_DIRE,
       		  RE.VAL_TELF,
       		  RE.VAL_CELU,
       	      RE.VAL_TELF_TRAB
  	   FROM MAE_REFER RE, MAE_TIPO_REFER TR
 	   WHERE RE.TIPO_REFE = TR.COD_TIPO_REFER
 	   AND RE.TIPO_REFE IN ('1','2')
  	   AND RE.cod_clie=#codigoConsultora# 
    </select>
    
    <!-- DEVUELVE Lista de avales de la deudora -->
	<select id="getAvalesDeudora" parameterClass="java.util.Map" resultMap="avalesDeudoraResult">	
	   SELECT TR.DES_TIPO_REFER,
       		  TRIM(RE.VAL_APE1) || ' ' || TRIM(RE.VAL_APE2) || ' ' ||
       		  TRIM(RE.VAL_NOM1) || ' ' || TRIM(RE.VAL_NOM2) NOM_REFE,
       		  (SELECT G.VAL_I18N
        	   FROM MAE_TIPO_DOCUM MTD,
                    GEN_I18N_SICC_PAIS G 
       		   WHERE MTD.IND_OBLI=1
       		   AND G.ATTR_ENTI LIKE 'MAE_TIPO_DOCUM'
       		   AND G.VAL_OID=MTD.OID_TIPO_DOCU
       		   AND MTD.COD_TIPO_DOCU=RE.TIPO_DOCU_REFE       		   
       		    <![CDATA[    	  		           	     
        	     AND ROWNUM < 2) TIPO_DOCU	  		   
				]]>,	   				       		   
       		  RE.NUM_DOCU_REFE,
       		  RE.VAL_DIRE,
       		  RE.VAL_TELF,
       	      RE.VAL_TELF_TRAB
  		FROM MAE_REFER RE, 
             MAE_TIPO_REFER TR             
 		WHERE RE.TIPO_REFE = TR.COD_TIPO_REFER
 		AND RE.TIPO_REFE ='3'
  	    AND RE.cod_clie=#codigoConsultora# 
    </select>
        
	<!-- DEVUELVE Lista de detalle de un cliente -->
	<select id="getCuentaCorrienteConsultora" parameterClass="java.util.Map" resultMap="cuentaCorrienteConsultoraResult">
          SELECT   
              TO_CHAR(FEC_EMIS,'dd/MM/yyyy') FEC_EMIS_DOCU,
         NVL (TO_CHAR (CAM_REFE), ' ') CAM_REFE,
         TIP_MOVI,
		    DES_MOVI,
            OID_MOVI,
         SOCA_OID_SOLI_CABE,
         NUM_DOCU,
         NVL (TO_CHAR (FEC_VENC, 'dd/MM/yyyy'), ' ') FEC_VENC,
         NVL (TO_CHAR (FEC_PAGO, 'dd/MM/yyyy'), ' ') FEC_PAGO,
         IMP_CARG,
         IMP_ABON
    FROM (    select   null fec_emis,     
                   '' CAM_REFE,
                   '' TIP_MOVI,
                   'Abono en proceso CDR' DES_MOVI,
                   null OID_MOVI,
                   null SOCA_OID_SOLI_CABE,
                   null NUM_DOCU,
                   null FEC_VENC,
                   null  FEC_PAGO,
                   null IMP_CARG,
                   val_recl_pend IMP_ABON
             from mae_clien
            where cod_clie =  #codigoConsultora#
             <![CDATA[ 
            and nvl(val_recl_pend,0) <> 0
            ]]>
            union
               SELECT FEC_EMIS, CAM_REFE, TIP_MOVI, DES_MOVI, OID_MOVI,SOCA_OID_SOLI_CABE,NUM_DOCU, FEC_VENC, FEC_PAGO, SUM(IMP_CARG) IMP_CARG, SUM(IMP_ABON) IMP_ABON 
       FROM ((    
          SELECT       MCC.FEC_DOCU FEC_EMIS,
                 SPC.COD_PERI CAM_REFE,
                 CASE
                            <![CDATA[ 
                                WHEN MCC.TCAB_OID_TCAB_CREA = 2001 AND MCC.IMP_MOVI > 0 THEN 'P'
                            ]]>
                            <![CDATA[ 
                                WHEN MCC.TCAB_OID_TCAB_CREA = 2001 AND MCC.IMP_MOVI < 0 THEN 'R'
                            ]]>
                                ELSE 'D'
                         END TIP_MOVI,                 
                         CASE
                    WHEN MCC.TCAB_OID_TCAB_CREA = 2001
                       THEN CASE
                              WHEN EXISTS (
                                     SELECT OID_SOLI_CABE
                                       FROM PED_SOLIC_CABEC P,
                                            PED_TIPO_SOLIC_PAIS TP,
                                            PED_TIPO_SOLIC T
                                      WHERE P.SOCA_OID_SOLI_CABE =
                                                        MCC.SOCA_OID_SOLI_CABE
                                        AND P.TSPA_OID_TIPO_SOLI_PAIS =
                                                         TP.OID_TIPO_SOLI_PAIS
                                        AND TP.TSOL_OID_TIPO_SOLI =
                                                               T.OID_TIPO_SOLI
                                        AND P.IND_OC = 1
                                        AND T.IND_SOLI_NEGA = 0)
                                 THEN 'Pedido'
                              ELSE CASE
                                    <![CDATA[ 
                              WHEN MCC.IMP_MOVI > 0
                                    ]]>
                                 THEN 
                                             decode(MCC.SOCA_OID_SOLI_CABE,null,'Atención de Servicio', rec_pkg_proce.REC_FN_SOLIC_PEDID_HIPER(MCC.SOCA_OID_SOLI_CABE)
                                         )
                              ELSE NVL
                                     ((SELECT    'C'
                                              || PERIOCORPO.COD_PERI
                                              || ' '
                                              || OPERA.VAL_DESC_LARG
                                              || ' NRO.'
                                              || CABECRECLA.NUM_RECL
                                                                   AS DESCRIP
                                         FROM PED_SOLIC_CABEC CONS,
                                              PED_SOLIC_CABEC SOLICRECLA,
                                              PED_SOLIC_CABEC SOLICORIGEN,
                                              REC_SOLIC_OPERA SOLICOPERA,
                                              REC_OPERA_RECLA OPERARECLA,
                                              REC_CABEC_RECLA CABECRECLA,
                                              REC_TIPOS_OPERA TIPOSOPERA,
                                              REC_OPERA OPERA,
                                              CRA_PERIO PERIO,
                                              SEG_PERIO_CORPO PERIOCORPO
                                        WHERE CONS.OID_SOLI_CABE =
                                                        MCC.SOCA_OID_SOLI_CABE
                                          AND CONS.OID_SOLI_CABE =
                                                 SOLICRECLA.SOCA_OID_SOLI_CABE
                                          AND SOLICRECLA.SOCA_OID_DOCU_REFE IS NOT NULL
                                          AND SOLICRECLA.OID_SOLI_CABE =
                                                 SOLICOPERA.SOCA_OID_SOLI_CABE
                                          AND SOLICOPERA.OPRE_OID_OPER_RECL =
                                                      OPERARECLA.OID_OPER_RECL
                                          AND OPERARECLA.CARE_OID_CABE_RECL =
                                                      CABECRECLA.OID_CABE_RECL
                                          AND OPERARECLA.TIOP_OID_TIPO_OPER =
                                                      TIPOSOPERA.OID_TIPO_OPER
                                          AND TIPOSOPERA.ROPE_OID_OPER =
                                                                OPERA.OID_OPER
                                          AND SOLICRECLA.SOCA_OID_DOCU_REFE =
                                                     SOLICORIGEN.OID_SOLI_CABE
                                          AND SOLICORIGEN.PERD_OID_PERI =
                                                                PERIO.OID_PERI
                                          AND PERIO.PERI_OID_PERI =
                                                           PERIOCORPO.OID_PERI
                                          AND ROWNUM = 1),
                                                decode(MCC.SOCA_OID_SOLI_CABE,null,'CDR', rec_pkg_proce.REC_FN_SOLIC_PEDID_HIPER(MCC.SOCA_OID_SOLI_CABE)
                                        )
                                     )
                           END
                           END
                            ELSE
                                CASE 
                                   WHEN mcc.subp_oid_subp_crea = 203 THEN
                                     (   select decode(flx.val_nume_orde_cuot,2,'Primera ',3,'Segunda ')||GEN.VAL_I18N ||' de '||flx.cod_peri 
                                           from flx_cuota_flexi_factu_detal flx
                                           where flx.oid_movi_carg_flex = mcc.oid_movi_cc
                                           and flx.oid_peri_cuot_flex = mcc.perd_oid_peri 
                                           and flx.oid_clie = mcc.clie_oid_clie                    
                                      )
                                    WHEN mcc.subp_oid_subp_crea = 204 THEN
                                		'Cargo por Uso Flexipago'
                                   ELSE
                                      GEN.VAL_I18N 
                                END                             
                         END DES_MOVI,
                         MCC.OID_MOVI_CC OID_MOVI,  
                 MCC.SOCA_OID_SOLI_CABE SOCA_OID_SOLI_CABE,
                 MCC.NUM_IDEN_CUOT NUM_DOCU,
                 MCC.FEC_VENC FEC_VENC,
                 NULL FEC_PAGO,
                 CASE
                            <![CDATA[ 
                    WHEN (MCC.IMP_MOVI > 0)
                            ]]>
                       THEN MCC.IMP_MOVI
                    ELSE NULL
                 END IMP_CARG,
                 CASE
                            <![CDATA[ 
                    WHEN (MCC.IMP_MOVI > 0)
                            ]]>
                       THEN NULL
                    ELSE ABS (MCC.IMP_MOVI)
                 END IMP_ABON
            FROM CCC_MOVIM_CUENT_CORRI MCC,
                 CCC_SUBPR CS,
                 CCC_TIPO_ABONO_SUBPR TAS,
                 CCC_TIPO_CARGO_ABONO TCA,
                 GEN_I18N_SICC_PAIS GEN,
                 CRA_PERIO CP,
                 SEG_PERIO_CORPO SPC
           WHERE MCC.SUBP_OID_SUBP_CREA = CS.OID_SUBP
             AND CS.OID_SUBP = TAS.SUBP_OID_SUBP
             AND TAS.TCAB_OID_TCAB = TCA.OID_TIPO_CARG_ABON
             AND GEN.ATTR_ENTI LIKE 'CCC_TIPO_CARGO_ABONO'
             AND GEN.VAL_OID = TCA.OID_TIPO_CARG_ABON
             AND MCC.PERD_OID_PERI = CP.OID_PERI
             AND CP.PERI_OID_PERI = SPC.OID_PERI
             AND MCC.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoConsultora#))
          UNION ALL
          (SELECT MB.FEC_PROC FEC_EMIS,
                 NULL OID_PERI,
                         'B'        TIP_MOVI,  
                         CCB.DES_CC DES_MOVI,
                         MB.OID_MOVI_BANC OID_MOVI,
                 MB.OID_MOVI_BANC SOCA_OID_SOLI_CABE,
                 MB.NUM_LOTE NUM_DOCU,
                 NULL FEC_VENC,
                 MB.FEC_PAGO FEC_PAGO,
                 NULL IMP_CARG,
                 MB.IMP_PAGO IMP_ABON
            FROM CCC_MOVIM_BANCA MB,
                 CCC_CUENT_CORRI_BANCA CCB
           WHERE MB.CCBA_OID_CC_BANC = CCB.OID_CUEN_CORR_BANC
             AND MB.COD_IDEN_PROC = 'P'
             AND CCB.IND_BANC_CHEQ = 0
             AND MB.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoConsultora#))
          UNION ALL
          (SELECT MB.FEC_PROC FEC_EMIS,
                 NULL OID_PERI,
                         'CH'  TIP_MOVI,
                         CCB.DES_CC || ' ' || bc.des_banc DES_MOVI ,
                         MB.OID_MOVI_BANC OID_MOVI,
                 MB.OID_MOVI_BANC SOCA_OID_SOLI_CABE,
                 MB.NUM_LOTE NUM_DOCU,
                 MB.FEC_COBR_CHEQ FEC_VENC,
                 MB.FEC_PAGO FEC_PAGO,
                 NULL IMP_CARG,
                 MB.IMP_PAGO IMP_ABON
            FROM CCC_MOVIM_BANCA MB,
                 CCC_CUENT_CORRI_BANCA CCB,
                 CCC_BANCO_CHEQU BC                
              WHERE MB.CCBA_OID_CC_BANC = CCB.OID_CUEN_CORR_BANC
             AND MB.COD_IDEN_PROC = 'P'
             AND CCB.IND_BANC_CHEQ = 1
             AND MB.COD_BANC_CHEQ = BC.COD_BANC         
             AND MB.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoConsultora#)))             
                     GROUP BY FEC_EMIS, CAM_REFE, TIP_MOVI, DES_MOVI, OID_MOVI,SOCA_OID_SOLI_CABE,NUM_DOCU, FEC_VENC, FEC_PAGO)
             ORDER BY FEC_EMIS DESC                                                               	        
    </select>		
	
    <select id="getDetalleMovimiento" parameterClass="java.util.Map" resultMap="movimientoDetalleResult">
        SELECT OFERTADETALLE.VAL_CODI_VENT VAL_CODI_VENT,
           CONCAT(P.VAL_CODI_VENT, P.VAL_CODI_VENT_FICT) VAL_CODI_VENT_POSI,
           PRODU.COD_SAP || ' ' ||
           PQ_APL_AUX.VALOR_GEN_I18N_SICC(1, PRODU.OID_PROD, 'MAE_PRODU') PRODUCTO,
           P.VAL_PREC_CATA_UNIT_LOCA PREC_CATA,
           P.VAL_PREC_FACT_UNIT_LOCA PREC_FACT,
           P.NUM_UNID_DEMA NUM_UNID_DEMA,
           P.NUM_UNID_ATEN NUM_UNID_ATEN,
           (P.NUM_UNID_POR_ATEN - P.NUM_UNID_ATEN) UNID_FALT,
           NVL(P.VAL_PORC_DESC, 0) PORC_DESC,
           0 UNID_DEVU,
           CASE
             WHEN P.ESPO_OID_ESTA_POSI = 2 
                AND P.STPO_OID_SUBT_POSI = 21 THEN 'Dep.X Monto Máximo'                            				
             WHEN P.ESPO_OID_ESTA_POSI = 2 
                  <![CDATA[ AND P.STPO_OID_SUBT_POSI <> 21 ]]> 
                  AND P.IND_LIMI_VENT = 1 THEN 'Dep.X Faltante Anunciado'
             WHEN P.ESPO_OID_ESTA_POSI = 2 
                  <![CDATA[AND P.STPO_OID_SUBT_POSI <> 21 ]]> 
                  AND P.IND_LIMI_VENT = 0 THEN 'Dep.X Regla del Negocio'
           END VAL_OBSE,
           DECODE(P.VAL_PREC_CATA_UNIT_LOCA,
                  0,
                  0,
                  P.VAL_PREC_TOTA_TOTA_LOCA) IMPORTE,
                  P.VAL_IMPO_DESC_TOTA_LOCA MontoMN
      FROM PED_SOLIC_POSIC P,
           PED_SOLIC_CABEC ORIGEN,
           PED_SOLIC_CABEC CONSOLIDADO,
           MAE_PRODU       PRODU,
           PRE_OFERT_DETAL OFERTADETALLE
     WHERE P.SOCA_OID_SOLI_CABE = ORIGEN.OID_SOLI_CABE
       AND ORIGEN.SOCA_OID_SOLI_CABE = CONSOLIDADO.OID_SOLI_CABE
       AND P.OFDE_OID_DETA_OFER = OFERTADETALLE.OID_DETA_OFER(+)
       AND P.PROD_OID_PROD = PRODU.OID_PROD
       AND CONSOLIDADO.OID_SOLI_CABE = #oidConsolidado#
     ORDER BY OFERTADETALLE.VAL_CODI_VENT, P.NUM_UNID_ATEN
    </select>  

	<select id="getSaldoInicial" parameterClass="java.util.Map" resultClass="string">
		select nvl(CCC_PKG_GENER.CCC_FN_OBTIE_SALDO_TOTAL(#codigoConsultora#),'0') from dual 
	</select>
	
	<select id="getPorcentajeMetaEtapaVentas" parameterClass="java.util.Map" resultClass="int">
       SELECT IMP_PORC_RECU_META
	   FROM COB_ETAPA_DEUDA_PAIS
	   <![CDATA[
	   WHERE COD_ETAP_DEUD='VEN'	
	   ]]>	   					   
	</select>
			
	<resultMap id="EnvioMailsAsignacionCarteraParamsResult" class="java.util.HashMap">																	        	      
			<result property="mailOrigen"          column="VAL_MAIL_ORIG"/>	    			
			<result property="subject"             column="VAL_SUBJ"/>
			<result property="plantilla"           column="NOM_BODY"/>	    
	</resultMap>
	
	<select id="getEnvioMailsAsignacionCarteraParams" parameterClass="java.util.Map" resultMap="EnvioMailsAsignacionCarteraParamsResult">
	   SELECT EEP.VAL_MAIL_ORIG,           	  
              EEP.VAL_SUBJ,
              EEP.NOM_BODY
       FROM FIN_ENVIO_EMAIL_PARAM EEP
       WHERE EEP.COD_PAIS = #codigoPais#
       	<isNotEmpty property="codigoSociedad">
         AND EEP.COD_SOCI = #codigoSociedad#     
       	</isNotEmpty>
         AND EEP.COD_MODU = #codigoModulo#     
         AND EEP.COD_PROCE = #codigoProceso#      
	</select>
	
	<resultMap id="EnvioMailsActualizarCarteraParamsResult" class="java.util.HashMap">																	        	      
			<result property="mailOrigen"          column="VAL_MAIL_ORIG"/>	    
			<result property="mailDestino"         column="VAL_MAIL_DEST"/>
			<result property="subject"             column="VAL_SUBJ"/>
			<result property="plantilla"           column="NOM_BODY"/>	    
	</resultMap>
	
	<select id="getEnvioMailsActualizarCarteraParams" parameterClass="java.util.Map" resultMap="EnvioMailsActualizarCarteraParamsResult">
	   SELECT EEP.VAL_MAIL_ORIG,
           	  COB_PKG_GENER.COB_FN_OBTIE_EMAIL_ACTUA_CARTE(EEP.COD_PAIS,
                                                        EEP.COD_SOCI) VAL_MAIL_DEST,
              EEP.VAL_SUBJ,
              EEP.NOM_BODY
       FROM FIN_ENVIO_EMAIL_PARAM EEP
       WHERE EEP.COD_PAIS = #codigoPais#
         AND EEP.COD_SOCI = #codigoSociedad#     
         AND EEP.COD_MODU = #codigoModulo#     
         AND EEP.COD_PROCE = #codigoProceso#      
	</select>
	
	<resultMap id="EnvioMailsCarterasAsignadasProcesoResult" class="java.util.HashMap">																	        	      
			<result property="descripcionEtapaDeuda"          column="VAL_ETAP_DEUD"/>	    
			<result property="codigoPeriodo"         		  column="COD_PERI"/>
			<result property="descripcionRegion"              column="DES_REGI"/>
			<result property="descripcionZona"           	  column="DES_ZONA"/>	    
			<result property="nombreCobrador"           	  column="VAL_NOMB_USUA_COBR"/>
			<result property="emailCobrador"           	      column="VAL_MAIL"/>
	</resultMap>
	
	<select id="getCarterasAsignadasProceso" parameterClass="java.util.Map" resultMap="EnvioMailsCarterasAsignadasProcesoResult">
	   SELECT 
	      ED.VAL_DESC VAL_ETAP_DEUD,
          CG.COD_PERI COD_PERI,
          (SELECT ZR.DES_REGI
           FROM ZON_REGIO ZR
           WHERE ZR.COD_REGI = CG.COD_REGI) DES_REGI,
           NVL((SELECT ZZ.DES_ZONA
              FROM ZON_ZONA ZZ
             WHERE ZZ.COD_ZONA = CG.COD_ZONA),
            '0000') DES_ZONA,
           TRIM(UC.VAL_NOMB_USUA_COBR) VAL_NOMB_USUA_COBR,
           TRIM(UC.VAL_MAIL) || ',' || TRIM(SU.VAL_MAIL) VAL_MAIL         
       FROM COB_CARTE_GENER_PROCE_ASIGN CG,
          COB_ETAPA_COBRA_UA          EC,
          COB_USUAR_COBRA_PAIS        UC,
          COB_USUAR_COBRA_PAIS        SU,
          COB_ETAPA_DEUDA_PAIS        ED
  	  WHERE CG.COD_PAIS = EC.COD_PAIS
        AND CG.COD_SOCI = EC.COD_SOCI
        AND CG.COD_ETAP_DEUD = EC.COD_ETAP_DEUD
        AND CG.COD_ETAP_DEUD = ED.COD_ETAP_DEUD
        AND EC.COD_ETAP_DEUD = ED.COD_ETAP_DEUD
        AND CG.COD_REGI = EC.COD_REGI
        AND CG.COD_ZONA = EC.COD_ZONA
        AND EC.COD_USUA_COBR = UC.COD_USUA_COBR
        AND ED.COD_USUA_SUPE = SU.COD_USUA_COBR
        AND UC.IND_MAIL_PROC_ASIG = 1
	</select>
	
	  <resultMap id="getGestionesCobranzaConsultoraResult"    class="java.util.HashMap">
    	<result property="codigoCliente"         		column="COD_CLIE"/>
    	<result property="numeroOrden"      		 	column="NUM_ORDE"/>
		<result property="codigoPeriodo"     	 		column="COD_PERI"/>
    	<result property="descripcionEtapa"         	column="ETAPA"/>
    	<result property="codigoCobrador"         	    column="COBRADOR"/>    	
		<result property="fechaGestion"         	    column="FEC_GEST"/>
		<result property="horaGestion"        		    column="VAL_HORA_GEST"/>
		<result property="tipoAccionCobranza"           column="TIP_ACCI_COBR"/>
		<result property="descripcionAccionCobranza"    column="DES_ACCI_COBR"/>
		<result property="valorObservacion"        	    column="VAL_OBSE"/>
		<result property="fechaPromesaPago"        	    column="FEC_ACCI_COBR"/>
		<result property="importePromesaPago"           column="PPA_IMP_PAGO"/>    			
    </resultMap>
    
	<select id="getGestionesCobranzaConsultoraList" parameterClass="java.util.Map" resultMap="getGestionesCobranzaConsultoraResult">
	   SELECT 
		  GES.COD_CLIE,
          ROWNUM NUM_ORDE,,
          DET.COD_PERI,
          ETA.VAL_DESC ETAPA,
          GES.COD_USUA_COBR_PAIS COBRADOR,
          GES.FEC_GEST,
          GES.VAL_HORA_GEST,
          GES.TIP_ACCI_COBR,
          ACC.DES_ACCI_COBR,
          GES.VAL_OBSE,
          GES.FEC_ACCI_COBR,
          GES.PPA_IMP_PAGO
       FROM 
          COB_GESTI_COBRA_PAIS  GES,
          COB_ACCIO_COBRA_PAIS  ACC,
          COB_DETAL_ASIGN_CARTE DET,
          COB_ETAPA_DEUDA_PAIS ETA
       WHERE GES.COD_ACCI_COBR = ACC.COD_ACCI_COBR
   		 AND GES.COD_CART = DET.COD_CART
   		 AND GES.COD_CLIE = DET.COD_CLIE
   		 AND ETA.COD_ETAP_DEUD = DET.COD_ETAP_DEUD
   		 AND GES.COD_CLIE = #codigoCliente#
 	   ORDER BY 2 DESC
      </select>
      
    <parameterMap id="paramGenerarCronograma" class="java.util.Map" >
		<parameter property="codigoPais"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
                                                                              		        
    <procedure id="executeGenerarCronograma" parameterMap="paramGenerarCronograma" >
		{call COB_PKG_PROCE.COB_PR_GENER_CRONO_CARTE(?, ?, ?,?)}
    </procedure>
		     
	<parameterMap id="paramActualizarCronogramaCartera" class="java.util.Map" >
		<parameter property="codigoPais"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEtapaDeuda"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoRegion"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoUsuario"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="tipoExcepcion"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaExcepcion"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
                                                                              		        
    <procedure id="executeActualizarCronogramaCartera" parameterMap="paramActualizarCronogramaCartera" >
		{call COB_PKG_PROCE.COB_PR_VALID_REGIS_FECHA_EXCEP(?,?,?,?,?,?,?,?,?)}
    </procedure>
    
    
	<parameterMap id="paramAsignacionCartera" class="java.util.Map" >
		<parameter property="codigoPais"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"           jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEtapaDeuda"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodo"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoRegion"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZona"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="fechaGeneracionCartera"   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
		<parameter property="codigoUsuario"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
			   
    <procedure id="executeAsignacionCartera" parameterMap="paramAsignacionCartera" >
		{call COB_PKG_PROCE.COB_PR_ASIGN_CARTE(?, ?, ?, ?, ?,?,?,?)}
    </procedure>
    
    <parameterMap id="paramAsignacionAutomaticaCartera" class="java.util.Map" >
		<parameter property="codigoUsuario"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroLote"   		   	   jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
		<parameter property="codigoError"   		   jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
			   
    <procedure id="executeAsignacionAutomaticaCartera" parameterMap="paramAsignacionAutomaticaCartera" >
		{call COB_PKG_PROCE.COB_PR_ASIGN_CARTE_AUTOM(?, ?, ?)}
    </procedure>
    
    <parameterMap id="paramActualizarCartera" class="java.util.Map" >
		<parameter property="codigoPais"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
				   
    <procedure id="executeActualizarCartera" parameterMap="paramActualizarCartera" >
		{call COB_PKG_PROCE.COB_PR_ACTUA_CARTE(?, ?, ?)}
    </procedure>
        
    <parameterMap id="paramActualizarIncobrable" class="java.util.Map" >
		<parameter property="codigoPais"                  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoSociedad"              jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodoInicial"        jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoPeriodoFinal"          jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoUsuario"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
				   
    <procedure id="executeActualizarIncobrable" parameterMap="paramActualizarIncobrable" >
		{call COB_PKG_REPOR_COBRA.COB_PR_GENER_INCOB_UA(?, ?, ?,?,?)}
    </procedure>  
   
    <parameterMap id="paramInsertarGestionCobranza" class="java.util.Map" >
		<parameter property="codigoCartera"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
        <parameter property="codigoConsultora"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="tipoAccion"                   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="accionCobranza"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="observaciones"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="fechaPago"          		   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="importePago"                  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>        
    </parameterMap>

   <procedure id="saveLlamadaConsultora" parameterMap="paramInsertarGestionCobranza" >
		{call COB_PKG_PROCE.COB_PR_INSER_GESTI_COBRA(?,?,?,?,?,?,?)}
    </procedure>     

    <parameterMap id="paramInsertarGestionCartera" class="java.util.Map" >
		<parameter property="codigoCartera"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEtapaDeuda"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoCobrador"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="codigoConsultora"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="tipoAccion"                   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="accionCobranza"               jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="observaciones"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="fechaPago"          		   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="importePago"                  jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="codigoPeriodo"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>        
    </parameterMap>

   <procedure id="saveGestionCartera" parameterMap="paramInsertarGestionCartera" >
		{call COB_PKG_PROCE.COB_PR_INSER_GESTI_CARTE(?,?,?,?,?,?,?,?,?,?)}
    </procedure>           
   
   <parameterMap id="paramActualizarTelefonoDeudora" class="java.util.Map" >
		<parameter property="codigoCartera"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEtapaDeuda"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>		
        <parameter property="codigoConsultora"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="tipoTelefono"         		   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
        <parameter property="nuevoTelefono"      		   jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>                       
    </parameterMap>
    
   <procedure id="actualizarTelefonoDeudora" parameterMap="paramActualizarTelefonoDeudora" >
		{call COB_PKG_PROCE.COB_PR_ACTUA_TELEF_DEUDO(?,?,?,?,?)}
    </procedure>           
   
   <parameterMap id="paramRebajarTemporalCarteraDeudora" class="java.util.Map" >
		<parameter property="codigoCartera"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEtapaDeuda"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoCobrador"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
        <parameter property="codigoConsultora"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>                       
    </parameterMap>
    
   <procedure id="rebajarTemporalCarteraDeudora" parameterMap="paramRebajarTemporalCarteraDeudora" >
		{call COB_PKG_PROCE.COB_PR_REBAJ_TEMPO_CARTE_DEUDO(?,?,?,?)}
    </procedure>
    
    <parameterMap id="paramRebajarDefinitivoCarteraDeudora" class="java.util.Map" >
		<parameter property="codigoCartera"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEtapaDeuda"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoCobrador"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
        <parameter property="codigoConsultora"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>                       
    </parameterMap>
    
   <procedure id="rebajarDefinitivoCarteraDeudora" parameterMap="paramRebajarDefinitivoCarteraDeudora" >
		{call COB_PKG_PROCE.COB_PR_REBAJ_DEFIN_CARTE_DEUDO(?,?,?,?)}
    </procedure>
    
    <parameterMap id="paramBloquearFinancieroDeudora" class="java.util.Map" >
		<parameter property="codigoCartera"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEtapaDeuda"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="codigoCobrador"                jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
        <parameter property="codigoConsultora"             jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>                       
    </parameterMap>
    
   <procedure id="bloquearFinancieroDeudora" parameterMap="paramBloquearFinancieroDeudora" >
		{call COB_PKG_PROCE.COB_PR_BLOQ_FINAN_DEUDO(?,?,?,?)}
    </procedure>                
   
	<resultMap id="getListaCobradoresMapResult"    class="java.util.HashMap">
    	<result property="codigoCobrador" column="COD_USUA_COBR"/>
    	<result property="nombreCobrador" column="VAL_NOMB_USUA_COBR"/>
    	<result property="emailCobrador" column="VAL_MAIL"/>
    </resultMap>
         
    <select id="getListaCobradores" parameterClass="java.util.Map" resultMap="getListaCobradoresMapResult">
		SELECT   
		D.COD_USUA_COBR, 
		E.VAL_NOMB_USUA_COBR, 
		E.VAL_MAIL
		FROM COB_CABEC_ASIGN_CARTE C, COB_DETAL_ASIGN_CARTE D, COB_USUAR_COBRA_PAIS E
		WHERE C.COD_CART = D.COD_CART
		AND D.COD_USUA_COBR = E.COD_USUA_COBR
		AND C.NUM_LOTE_ASIGN = #numeroLote#
		AND E.IND_MAIL_PROC_ASIG = 1
		GROUP BY D.COD_USUA_COBR, E.VAL_NOMB_USUA_COBR, E.VAL_MAIL    
    </select>

	<resultMap id="getListaSupervisoresMapResult"    class="java.util.HashMap">
    	<result property="codigoEtapa" column="COD_ETAP_DEUD"/>
    	<result property="descripcionEtapa" column="VAL_DESC"/>
    	<result property="nombreSupervisor" column="VAL_NOMB_USUA_COBR"/>
    	<result property="emailSupervisor" column="VAL_MAIL"/>
    </resultMap>

    <select id="getListaSupervisores" parameterClass="java.util.Map" resultMap="getListaSupervisoresMapResult">
		SELECT 
		F.COD_ETAP_DEUD,
		F.VAL_DESC,
		G.VAL_NOMB_USUA_COBR,
		G.VAL_MAIL
		FROM COB_CABEC_ASIGN_CARTE C,
		     COB_ETAPA_DEUDA_PAIS F,
		     COB_USUAR_COBRA_PAIS G     
		WHERE C.COD_ETAP_DEUD = F.COD_ETAP_DEUD
		  AND F.COD_USUA_SUPE = G.COD_USUA_COBR
		  AND G.IND_MAIL_PROC_ASIG = 1
		  AND C.NUM_LOTE_ASIGN = #numeroLote#
		GROUP BY 
		    F.COD_ETAP_DEUD,
		    F.VAL_DESC,
		    G.VAL_NOMB_USUA_COBR,
		    G.VAL_MAIL
    </select>

	<resultMap id="getListaCuerpoEmailCobradorMapResult"    class="java.util.HashMap">
    	<result property="codigoEtapa" column="COD_ETAP_DEUD"/>
    	<result property="descripcionEtapa" column="VAL_DESC"/>
    	<result property="codigoPeriodo" column="COD_PERI"/>
    	<result property="codigoRegion" column="COD_REGI_CLIE"/>
    	<result property="importeAsignado" column="IMP_DEUD_ASIG"/>
    	<result property="casosAsignados" column="VAL_CANT_CART_ASIG"/>
    	<result property="fechaCierre" column= "FEC_CIER"/>
    </resultMap>
    
    <select id="getListaCuerpoEmailCobrador" parameterClass="java.util.Map" resultMap="getListaCuerpoEmailCobradorMapResult">
		SELECT 
		D.COD_ETAP_DEUD,
		F.VAL_DESC,
		D.COD_PERI, 
		D.COD_REGI_CLIE,
		SUM(D.IMP_DEUD_ASIG) IMP_DEUD_ASIG,
		COUNT(1) VAL_CANT_CART_ASIG,
		TO_CHAR(D.FEC_CIER, 'DD/MM/YYYY') FEC_CIER
		FROM COB_CABEC_ASIGN_CARTE C,
		     COB_DETAL_ASIGN_CARTE D,
		     COB_USUAR_COBRA_PAIS E,
		     COB_ETAPA_DEUDA_PAIS F    
		WHERE C.COD_CART = D.COD_CART
		AND D.COD_USUA_COBR = E.COD_USUA_COBR
		AND C.COD_ETAP_DEUD = F.COD_ETAP_DEUD
		AND D.COD_ETAP_DEUD = F.COD_ETAP_DEUD
		AND C.NUM_LOTE_ASIGN = #numeroLote#
		AND D.COD_USUA_COBR = #codigoCobrador#
		AND E.IND_MAIL_PROC_ASIG = 1
		GROUP BY D.COD_ETAP_DEUD, F.VAL_DESC,D.COD_PERI, D.COD_REGI_CLIE, D.FEC_CIER
		ORDER BY  D.COD_ETAP_DEUD, D.COD_PERI, D.COD_REGI_CLIE, D.FEC_CIER
    </select>
    
	<resultMap id="getListaCuerpoEmailSupervisorMapResult"    class="java.util.HashMap">
    	<result property="codigoSupervisor" column="COD_USUA_COBR"/>
    	<result property="nombreSupervisor" column="VAL_NOMB_USUA_COBR"/>
    	<result property="emailSupervisor" column="VAL_MAIL"/>
    	<result property="codigoEtapa" column="COD_ETAP_DEUD"/>
    	<result property="codigoPeriodo" column="COD_PERI"/>
    	<result property="codigoRegion" column="COD_REGI_CLIE"/>
    	<result property="importeAsignado" column="IMP_DEUD_ASIG"/>
    	<result property="casosAsignados" column="VAL_CANT_CART_ASIG"/>
    	<result property="fechaCierre" column= "FEC_CIER"/>
    </resultMap>
    
    <select id="getListaCuerpoEmailSupervisor" parameterClass="java.util.Map" resultMap="getListaCuerpoEmailSupervisorMapResult">
		SELECT 
		D.COD_USUA_COBR,
		E.VAL_NOMB_USUA_COBR,
		E.VAL_MAIL,
		D.COD_ETAP_DEUD,
		D.COD_PERI, 
		D.COD_REGI_CLIE,
		SUM(D.IMP_DEUD_ASIG) IMP_DEUD_ASIG,
		COUNT(1) VAL_CANT_CART_ASIG, 
		TO_CHAR(D.FEC_CIER, 'DD/MM/YYYY') FEC_CIER
		FROM COB_CABEC_ASIGN_CARTE C,
		     COB_DETAL_ASIGN_CARTE D,
		     COB_USUAR_COBRA_PAIS E     
		WHERE C.COD_CART = D.COD_CART
		AND D.COD_USUA_COBR = E.COD_USUA_COBR
		AND C.NUM_LOTE_ASIGN = #numeroLote#
		AND C.COD_ETAP_DEUD = #codigoEtapa#
		AND E.IND_MAIL_PROC_ASIG = 1
		GROUP BY D.COD_USUA_COBR, E.VAL_NOMB_USUA_COBR, E.VAL_MAIL, D.COD_ETAP_DEUD, D.COD_PERI, D.COD_REGI_CLIE, D.FEC_CIER
		ORDER BY  D.COD_USUA_COBR, D.COD_ETAP_DEUD, D.COD_PERI, D.COD_REGI_CLIE, D.FEC_CIER
    </select>
                    
	<resultMap id="mensajeResultListadoCorreosGerenteZonaMap" class="java.util.HashMap">
    	<result property="codigoRegion"			column="COD_REGI"/>
    	<result property="correoGerenteRegion" 	column="EMA_GR"/>
    	<result property="codigoZona" 			column="COD_ZONA"/>
    	<result property="correoGerenteZona" 	column="EMA_GZ"/>
    	<result property="descripcionRegion" 	column="DES_REGI"/>
    	<result property="descripcionZona" 		column="DES_ZONA"/>
	</resultMap>
    
    <select id="getListadoCorreosGerenteZona" resultMap="mensajeResultListadoCorreosGerenteZonaMap">
			SELECT ZR.COD_REGI, 
			       (SELECT VAL_EMAI
			          FROM MAE_CLIEN_DATOS_ADICI DA
			         WHERE DA.CLIE_OID_CLIE = ZR.CLIE_OID_CLIE) EMA_GR,
			       ZZ.COD_ZONA,
			       (SELECT VAL_EMAI
			          FROM MAE_CLIEN_DATOS_ADICI DA
			         WHERE DA.CLIE_OID_CLIE = ZZ.CLIE_OID_CLIE) EMA_GZ,
			       ZR.DES_REGI,
			       ZZ.DES_ZONA
			  FROM ZON_ZONA ZZ, ZON_REGIO ZR
			 WHERE ZZ.ZORG_OID_REGI = ZR.OID_REGI
			   AND ZR.IND_ACTI = 1
			   AND ZZ.IND_ACTI = 1
    </select>
    
	<resultMap id="documentoCuerpoMensajeCorreoCarteraFFVVResult" class="java.util.HashMap">
    	<result property="periodo"			column="COD_PERI"/>
		<result property="zona"				column="COD_ZONA"/>
		<result property="facturadoNeto"	column="IMP_FACT_NETO"/>
		<result property="recaudado"		column="COB_31"/>
		<result property="porcentajeRecup"	column="PORC_RECU"/>
		<result property="saldo"			column="IMP_SALD_PEND"/>
		<result property="falta87"			column="IMP_FALT_87"/>
		<result property="falta90"			column="IMP_FALT_90"/>
		<result property="falta93"			column="IMP_FALT_93"/>
		<result property="falta95"			column="IMP_FALT_95"/>
		<result property="fechaCierre"		column="FEC_CIER_ZONA"/>
	</resultMap>
  
	<select id="getDatosCuerpoMensajeCorreoCarteraFFVV" parameterClass="java.util.Map" resultMap="documentoCuerpoMensajeCorreoCarteraFFVVResult">
		SELECT 
		   c.cod_peri,    
           c.cod_zona, 
           to_char(SUM(nvl(c.imp_fact_neto, 0)), '999,999,999.99') imp_fact_neto, 
           to_char(SUM(nvl(c.cob_dias_vent, 0)), '999,999,999.99') cob_31,
		   CASE
            WHEN SUM(nvl(c.imp_fact_neto, 0)) > 0 THEN
             to_char(ROUND(SUM(nvl(c.cob_dias_vent, 0))/SUM(c.imp_fact_neto)*100,2) , '999,999,999.99')
            ELSE '0.00'
		   END porc_recu,
           to_char(SUM(nvl(c.imp_sald_pend_sac, 0)), '999,999,999.99') imp_sald_pend,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
			       CASE
		        WHEN (SUM(c.imp_fact_neto)*0.87) -  SUM(c.cob_dias_vent) > 0 THEN 
                 to_char(ROUND(((SUM(c.imp_fact_neto)*0.87) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
                ELSE '0.00'
		      END    
            ELSE '0.00'
		   END imp_falt_87,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
			       CASE 
		        WHEN (SUM(c.imp_fact_neto)*0.90) -  SUM(c.cob_dias_vent) > 0 THEN 
                 to_char(ROUND(((SUM(c.imp_fact_neto)*0.90) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
                ELSE '0.00'
		      END    
            ELSE '0.00'
		   END imp_falt_90,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
		      CASE
		        WHEN (SUM(c.imp_fact_neto)*0.93) -  SUM(c.cob_dias_vent) > 0 THEN 
                 to_char(ROUND(((SUM(c.imp_fact_neto)*0.93) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
                ELSE '0.00'
		      END    
            ELSE '0.00'
		   END imp_falt_93,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
		      CASE
		        WHEN (SUM(c.imp_fact_neto)*0.95) -  SUM(c.cob_dias_vent) > 0 THEN 
                 to_char(ROUND(((SUM(c.imp_fact_neto)*0.95) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
                ELSE '0.00'
		      END    
            ELSE '0.00'
		   END imp_falt_95,
		   nvl(to_char(MIN(c.fec_cier_vent), 'DD/MM/YYYY'), ' ') fec_cier_zona             
		FROM cob_repor_estad_recup_cobra c
		WHERE c.cod_peri = #codigoPeriodo#
		AND c.cod_regi = #codigoRegion#
		<isNotEmpty property="codigoZona">
			AND c.cod_zona =  #codigoZona#
			GROUP BY c.cod_peri, c.des_regi, c.cod_zona
		</isNotEmpty>		

		<isEmpty property="codigoZona">
			GROUP BY c.cod_peri, c.des_regi, c.cod_zona, c.des_zona
			ORDER BY c.cod_zona ASC
		</isEmpty>		
		
	</select>
	
    <select id="getParamEmailGerenteRegion" parameterClass="java.util.Map" resultClass="java.lang.String">
			SELECT val_para
			  FROM bas_param_pais
			 WHERE cod_pais = #codigoPais#
			   AND cod_sist = 'IMP'
			   AND nom_para = 'emaGerenteRegionDefecto'
			   AND ind_acti = '1'
   	</select>
   	
  	<select id="getParametroGenericoSistema" parameterClass="java.util.Map" resultClass="java.lang.String">
			SELECT VAL_PARA
			FROM BAS_PARAM_PAIS
			WHERE COD_PAIS  = #codigoPais#
 			 AND COD_SIST = #codigoSistema#
			 AND NOM_PARA = #nombreParametro#
	</select>
                    
	<select id="getDatosCuerpoMensajeCorreoCarteraFFVVGR" resultMap="documentoCuerpoMensajeCorreoCarteraFFVVResult">
	
		SELECT 
		   c.cod_peri,    
		   <isNotEmpty property="flagAgruparZonas">
		   		c.cod_zona, 
		   </isNotEmpty>		   
		   <isEmpty property="flagAgruparZonas">
		   		c.cod_regi cod_zona,
		   </isEmpty>		   		    
		   to_char(SUM(nvl(c.imp_fact_neto, 0)), '999,999,999.99') imp_fact_neto, 
		   to_char(SUM(nvl(c.cob_dias_vent, 0)), '999,999,999.99') cob_31,
		   CASE
		    WHEN SUM(nvl(c.imp_fact_neto, 0)) > 0 THEN
		     to_char(ROUND((SUM(nvl(c.cob_dias_vent, 0))/SUM(c.imp_fact_neto)*100),2), '999,999,999.99') 
		    ELSE '0.00'
		   END porc_recu,
		   to_char(SUM(c.imp_sald_pend_sac), '999,999,999.99') imp_sald_pend,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
		      CASE
		        WHEN (SUM(c.imp_fact_neto)*0.87) -  SUM(c.cob_dias_vent) > 0 THEN 
		         to_char(ROUND(((SUM(c.imp_fact_neto)*0.87) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
		        ELSE '0.00'
		      END    
		    ELSE '0.00'
		   END imp_falt_87,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
		      CASE
		        WHEN (SUM(c.imp_fact_neto)*0.90) -  SUM(c.cob_dias_vent) > 0 THEN 
		         to_char(ROUND(((SUM(c.imp_fact_neto)*0.90) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
		        ELSE '0.00'
		      END    
		    ELSE '0.00'
		   END imp_falt_90,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
		      CASE
		        WHEN (SUM(c.imp_fact_neto)*0.93) -  SUM(c.cob_dias_vent) > 0 THEN 
		         to_char(ROUND(((SUM(c.imp_fact_neto)*0.93) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
		        ELSE '0.00'
		      END    
		    ELSE '0.00'
		   END imp_falt_93,
		   CASE
		    WHEN SUM(c.imp_fact_neto) > 0 THEN
		      CASE
		        WHEN (SUM(c.imp_fact_neto)*0.95) -  SUM(c.cob_dias_vent) > 0 THEN 
		         to_char(ROUND(((SUM(c.imp_fact_neto)*0.95) -  SUM(c.cob_dias_vent)),2), '999,999,999.99')
		        ELSE '0.00'
		      END    
		    ELSE '0.00'
		   END imp_falt_95,
		nvl(to_char(MIN(c.fec_cier_vent), 'DD/MM/YYYY'), ' ') fec_cier_zona          
		FROM cob_repor_estad_recup_cobra c
		WHERE c.cod_peri = #codigoPeriodo#
		AND c.cod_regi = #codigoRegion#

		<isNotEmpty property="flagAgruparZonas">
			GROUP BY c.cod_peri, c.des_regi, c.cod_zona
			ORDER BY c.cod_zona ASC
		</isNotEmpty>		   
		<isEmpty property="flagAgruparZonas">
			GROUP BY c.cod_peri, c.cod_regi
		</isEmpty>		   
	
	</select>
	
	<resultMap id="getCabeceraMovimientoBancoResult"    class="java.util.HashMap">
    	<result property="banco" column="DES_CC"/>
    	<result property="fechaPago" column="FEC_PAGO"/>
    	<result property="fechaProceso" column="FEC_PROC"/>
    	<result property="usuario" column="COD_USUA"/>
    </resultMap>
    
	<select id="getCabeceraMovimientoBanco" parameterClass="java.util.Map" resultMap="getCabeceraMovimientoBancoResult">
		SELECT ccb.des_cc, 
				NVL (TO_CHAR (mb.fec_pago, 'DD/MM/YYYY'), ' ') fec_pago,
		       	NVL (TO_CHAR (mb.fec_proc, 'DD/MM/YYYY'), ' ') fec_proc, 
		       	mb.cod_usua
		  FROM ccc_movim_banca mb, 
		  			ccc_cuent_corri_banca ccb
		 WHERE mb.ccba_oid_cc_banc = ccb.oid_cuen_corr_banc
		   AND mb.oid_movi_banc = #oidMovimiento#
	</select>
	
	<resultMap id="getDetalleMovimientoBancoResult"    class="java.util.HashMap">
    	<result property="campanyaCargo" column="COD_PERI"/>
    	<result property="fechaCargo" column="FEC_DOCU"/>
    	<result property="tipoCargo" column="DES_SUBP"/>
    	<result property="fechaAplicacion" column="FEC_APLI"/>
    	<result property="importeAbonado" column="IMP_ABON"/>
    </resultMap>
    
	<select id="getDetalleMovimientoBanco" parameterClass="java.util.Map" resultMap="getDetalleMovimientoBancoResult">
		SELECT   spc.cod_peri,
		         NVL (TO_CHAR (mcc.fec_docu, 'DD/MM/YYYY'), ' ') fec_docu,
		         su.des_subp, 
		         NVL (TO_CHAR (cad.fec_apli, 'DD/MM/YYYY'), ' ') fec_apli,
		         TO_CHAR (NVL (cad.imp_abon, 0), '999,999,999.99') imp_abon
		    FROM ccc_aplic_abono_cargo cad,
		         ccc_movim_cuent_corri mcc,
		         ccc_subpr su,
		         cra_perio cp,
		         seg_perio_corpo spc
		   WHERE cad.cmba_oid_movi_banc = #oidMovimiento#
		     AND cad.mvcc_oid_movi_carg = mcc.oid_movi_cc
		     AND mcc.subp_oid_subp_crea = su.oid_subp
		     AND mcc.perd_oid_peri = cp.oid_peri
		     AND cp.peri_oid_peri = spc.oid_peri
		ORDER BY cad.oid_movi_abon ASC
	</select>
	
	<resultMap id="getDetalleMovimientoCuentaResult"    class="java.util.HashMap">
    	<result property="campanya" column="COD_PERI"/>
    	<result property="tipoMovimiento" column="DES_SUBP"/>
    	<result property="fechaMovimiento" column="FEC_DOCU"/>
    	<result property="fechaVencimiento" column="FEC_VENC"/>
    	<result property="codigoUsuario" column="COD_USUA"/>
    	<result property="observaciones" column="VAL_OBSE"/>
    </resultMap>
    
	<select id="getDetalleMovimientoCuenta" parameterClass="java.util.Map" resultMap="getDetalleMovimientoCuentaResult">
		SELECT spc.cod_peri, 
			   su.des_subp,
		       NVL (TO_CHAR (mcc.fec_docu, 'DD/MM/YYYY'), ' ') fec_docu, 
		       NVL (TO_CHAR (mcc.fec_venc, 'DD/MM/YYYY'), ' ') fec_venc, 
		       mcc.cod_usua, 
		       mcc.val_obse
		  FROM ccc_movim_cuent_corri mcc,
		       ccc_subpr su,
		       cra_perio cp,
		       seg_perio_corpo spc
		 WHERE mcc.oid_movi_cc = #oidMovimiento#
		   AND mcc.subp_oid_subp_crea = su.oid_subp
		   AND mcc.perd_oid_peri = cp.oid_peri
		   AND cp.peri_oid_peri = spc.oid_peri
	</select>
	
	<parameterMap id="executeProcesoCOBGenerarCarteraCorporativaParams" class="map" >
		<parameter property="codigoUsuario"            jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
	<procedure id="executeProcesoCOBGenerarCarteraCorporativa" parameterMap="executeProcesoCOBGenerarCarteraCorporativaParams" >
		{call COB_PKG_PROCE.COB_PR_ENVIO_CARTE_CORPO(?)}
	</procedure>

	
   <!-- OBTIENE EL DIRECTORIO DEL SERVIDOR -->
	<select id="getPathUpload" parameterClass="java.util.Map" resultClass="string">
       SELECT VAL_PARA
       FROM CCC_PARAM_GENER
       WHERE COD_PARA = 'PathUpload'
	</select>
	
	<select id="getValidarRegistroCargarCronograma" parameterClass="java.util.Map" resultClass="int">
		 SELECT COUNT(1)
		 FROM cob_crono_carte
	     WHERE cod_pais = #codigoPais#
	       AND cod_peri = #codigoPeriodo#
	       AND cod_etap_deud = #codigoEtapa#
	       ANd cod_regi = #codigoRegion#
	      
	</select>
	
	<select id="getValidarCodigoCliente" parameterClass="java.util.Map" resultClass="int">
		 select count(1)
		  from mae_clien mc, seg_pais sp
		 where mc.pais_oid_pais = sp.oid_pais
		   and sp.cod_pais = #codigoPais#
		   and mc.cod_clie=#codigoCliente#
	</select>
	
	<select id="getValidarCodigoEtapaAccion" parameterClass="java.util.Map" resultClass="int">
		 select count(1)
		  from COB_ACCIO_COBRA_PAIS
		 where cod_pais = #codigoPais#
		   and cod_etap_deud = #codigoEtapa#
		   and tipo_acci_cobr = #tipoAccion#
		   and cod_acci_cobr = #codigoAccion#
	</select>
	
	<select id="getValidarCodigoCobrador" parameterClass="java.util.Map" resultClass="int">
		 select count(1)
		  from COB_USUAR_COBRA_PAIS
		 where cod_pais = #codigoPais#
		   and VAL_NOMB_USUA_COBR = #codigoCobrador#
	</select>
	
	<insert id="insertCargaMasivaGestiones" parameterClass="estructuraCOBCargaMasivaGestiones">
		insert into TMP_CARGA_MASIVA_GESTIONES
		  (NUM_ORDE,
		   COD_USUA_COBR_PAIS,
		   COD_ETAP_DEUD,
		   COD_PERI,
		   COD_CLIE,
		   TIP_ACCI_COBR,
		   COD_ACCI_COBR,
		   OBSERVACION,
		   FEC_GEST,
		   FEC_COMP_PAGO,
		   PPA_IMP_PAGO,
		   NVA_DIRECCION,
		   NVA_TELEFONO,
		   NVA_TIPO_TELEFONO)
		values
		  (#numeroOrden#,
		   #codigoCobrador#,
		   #codigoDeuda#,
		   #codigoPeriodo#,
		   #codigoCliente#,
		   #tipoAccion#,
		   #codigoAccion#,
		   #observacion#,
		   TO_DATE(#fechaGestion#,'dd/mm/yyyy'),
		   TO_DATE(#fechaCompromisoPago#,'dd/mm/yyyy'),
		   to_number(#importeCompromisoPago#,'9999999999.99'),
		   #nuevaDireccion#,
		   #nuevoTelefono#,
		   #tipoTelefono#)    
	</insert>
	
	<delete id="deleteTemporalCargaMasivaGestiones">
        TRUNCATE TABLE TMP_CARGA_MASIVA_GESTIONES
    </delete>
    
    <parameterMap id="paramExecuteProcesarCargaMasivaGestiones" class="java.util.Map" >
		<parameter property="codigoPais" 			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indIngresado" 			jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT"/>
    </parameterMap>
    <procedure id="executeProcesarCargaMasivaGestiones" parameterMap="paramExecuteProcesarCargaMasivaGestiones" >
		{call COB_PKG_PROCE.COB_PR_INSER_CARGA_MASIV_GESTI(?,?)}
    </procedure>
	  
	<select id="getValidarCargarCronograma" parameterClass="java.util.Map" resultClass="int">
		 SELECT COUNT(1)
		 FROM cob_crono_carte
	     WHERE cod_pais = #codigoPais#
	       AND cod_peri = #codigoPeriodo#
	       AND cod_etap_deud = #codigoEtapa#
	       AND cod_regi = #codigoRegion#
	       AND IND_GENE_CART = 0
	       AND COD_CART IS NULL
	</select>
   
	<select id="getDevuelveDescripcionEtapa" parameterClass="java.util.Map" resultClass="string">
    	SELECT VAL_DESC 
		FROM COB_ETAPA_DEUDA_PAIS
	    WHERE COD_PAIS= #codigoPais#
	      AND COD_ETAP_DEUD = #codigoEtapa#
	</select>
	
	
   <update id="updateCargarCronograma" parameterClass="estructuraCOBCargarCronograma" >	
		 update cob_crono_carte
		 set fec_gene_cart = to_date(#fechaInicio#, 'dd/mm/yyyy'),
             fec_inic_gest = to_date(#fechaInicio#, 'dd/mm/yyyy'),
             fec_cier= to_date(#fechaCierre#, 'dd/mm/yyyy')
	     WHERE cod_pais = #codigoPais#
	       AND cod_peri = #codigoPeriodo#
	       AND cod_etap_deud = #codigoEtapa#
	       ANd cod_regi = #codigoRegion#	
    </update>

    <procedure id="executeGenerarDataGerentesFFVV">
		{call COB_PKG_PROCE.COB_PR_GENER_INFOR_GEREN_FFVV}
    </procedure>
    
    <parameterMap id="paramExecuteGenerarDataFFVVFTP" class="java.util.Map" >
		<parameter property="codigoUsuario" 			jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="executeGenerarDataFFVVFTP" parameterMap="paramExecuteGenerarDataFFVVFTP" >
		{call COB_PKG_REPOR.COB_PR_REPOR_FFVV_FTP(?)}
    </procedure>
    
    <resultMap id="obtenerRegionesAResult" class="java.util.HashMap">																	        	      
		<result property="codigoRegion"          column="COD_REGI"/>	    
	</resultMap>
	<select id="obtenerRegionesA" parameterClass="string" resultMap="obtenerRegionesAResult">
		SELECT COD_REGI
		  FROM COB_TEMPO_FFVV_REGIA
		 WHERE COD_USUA = #value#
	</select>
	
	<resultMap id="obtenerZonasAResult" class="java.util.HashMap">																	        	      
		<result property="codigoZona"          column="COD_ZONA"/>
	</resultMap>
	<select id="obtenerZonasA" parameterClass="java.util.Map" resultMap="obtenerZonasAResult">
		SELECT COD_ZONA
		  FROM COB_TEMPO_FFVV_ZONAA
		 WHERE COD_USUA = #codigoUsuario#
		   AND COD_REGI = #codigoRegion#
	</select>
	
	<resultMap id="obtenerProveedoresEtapasResult" class="java.util.HashMap">																	        	      
		<result property="codigoProveedor"      column="COD_PROVE"/>	    
		<result property="nombreProveedor"      column="NOM_PROVE"/>
		<result property="codigoEtapa"          column="COD_ETAPA"/>	    
		<result property="nombreEtapa"          column="NOM_ETAPA"/>
	</resultMap>
	<select id="obtenerProveedoresEtapas" parameterClass="string" resultMap="obtenerProveedoresEtapasResult">
		SELECT
		   u.cod_usua_cobr COD_PROVE,
		   u.val_nomb_usua_cobr NOM_PROVE,
		   e.cod_etap_deud COD_ETAPA,
		   e.val_desc NOM_ETAPA
		  FROM
		   cob_detal_asign_carte d,
		   cob_usuar_cobra_pais u,
		   cob_etapa_deuda_pais e,
		   cob_envio_email_segui_cobra m
		  WHERE d.cod_etap_deud = e.cod_etap_deud
		    AND d.cod_usua_cobr = u.cod_usua_cobr
		    AND u.ind_supe = 0
		    AND d.cod_etap_deud = m.cod_etap_deud
		    AND d.cod_usua_cobr = m.cod_usua_cobra
		  GROUP BY u.cod_usua_cobr, u.val_nomb_usua_cobr, m.val_mail, m.val_mail_copi, e.num_secu_etap, e.cod_etap_deud, e.val_desc
		  order by u.cod_usua_cobr
	</select>

	<select id="getValidarConsultoraIncobrablesMigradas" parameterClass="java.util.Map" resultClass="int">
		SELECT COUNT(1) 
		  FROM ccc_consu_casti_cabec
		 WHERE ind_acti = 1 AND cod_clie = #codigoConsultora#
	</select>

	<select id="getCuentaCorrienteConsultoraIncobrablesMigradas" parameterClass="java.util.Map" resultMap="cuentaCorrienteConsultoraResult">
	SELECT  
	         TO_CHAR (A.FEC_EMIS, 'dd/MM/yyyy') FEC_EMIS_DOCU, 
	         NVL (TO_CHAR (A.CAM_REFE), ' ') CAM_REFE, 
	         A.TIP_MOVI, 
	         A.DES_MOVI, 
	         A.OID_MOVI, 
	         A.SOCA_OID_SOLI_CABE, 
	         A.NUM_DOCU, 
	         NVL (TO_CHAR (A.FEC_VENC, 'dd/MM/yyyy'), ' ') FEC_VENC, 
	         NVL (TO_CHAR (A.FEC_PAGO, 'dd/MM/yyyy'), ' ') FEC_PAGO, 
	         A.IMP_CARG,
	         A.IMP_ABON 
	    FROM
	    (
	          (SELECT SYSDATE FEC_ORDER, 
	                         FEC_CAST FEC_EMIS, 
	                         COD_CAMP_DEUD CAM_REFE,
	                         'I' TIP_MOVI,
	                         'Deuda Castigada' DES_MOVI,
	                         NULL OID_MOVI, 
	                         NULL SOCA_OID_SOLI_CABE,
	                         NULL NUM_DOCU,
	                         FEC_CAST FEC_VENC, 
	                         NULL FEC_PAGO,
	                         IMP_DEUD_ACTU IMP_CARG, 
	                         NULL IMP_ABON
	              FROM CCC_CONSU_CASTI_CABEC
	            WHERE IND_ACTI = 1 AND OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoConsultora#))
	            UNION ALL 
              (SELECT FEC_EMIS FEC_ORDER, FEC_EMIS, CAM_REFE, TIP_MOVI, DES_MOVI, OID_MOVI,SOCA_OID_SOLI_CABE,NUM_DOCU, FEC_VENC, FEC_PAGO, SUM(IMP_CARG) IMP_CARG, SUM(IMP_ABON) IMP_ABON 
               FROM ((    
                  SELECT       MCC.FEC_DOCU FEC_EMIS,
                         SPC.COD_PERI CAM_REFE,
                         CASE
                            <![CDATA[ 
                                WHEN MCC.TCAB_OID_TCAB_CREA = 2001 AND MCC.IMP_MOVI > 0 THEN 'P'
                            ]]>
                            <![CDATA[ 
                                WHEN MCC.TCAB_OID_TCAB_CREA = 2001 AND MCC.IMP_MOVI < 0 THEN 'R'
                            ]]>
                                ELSE 'D'
                         END TIP_MOVI,                 
                         CASE
                            WHEN MCC.TCAB_OID_TCAB_CREA = 2001
                               THEN CASE
                                      WHEN EXISTS (
                                             SELECT OID_SOLI_CABE
                                               FROM PED_SOLIC_CABEC P,
                                                    PED_TIPO_SOLIC_PAIS TP,
                                                    PED_TIPO_SOLIC T
                                              WHERE P.SOCA_OID_SOLI_CABE =
                                                                MCC.SOCA_OID_SOLI_CABE
                                                AND P.TSPA_OID_TIPO_SOLI_PAIS =
                                                                 TP.OID_TIPO_SOLI_PAIS
                                                AND TP.TSOL_OID_TIPO_SOLI =
                                                                       T.OID_TIPO_SOLI
                                                AND P.IND_OC = 1
                                                AND T.IND_SOLI_NEGA = 0)
                                         THEN 'Pedido'
                                      ELSE CASE
                                         <![CDATA[ 
                                        WHEN MCC.IMP_MOVI > 0
                                    ]]>
                                         THEN 
                                             decode(MCC.SOCA_OID_SOLI_CABE,null,'Atención de Servicio', rec_pkg_proce.REC_FN_SOLIC_PEDID_HIPER(MCC.SOCA_OID_SOLI_CABE)
											 )
                                      ELSE NVL
                                             ((SELECT    'C'
                                                      || PERIOCORPO.COD_PERI
                                                      || ' '
                                                      || OPERA.VAL_DESC_LARG
                                                      || ' NRO.'
                                                      || CABECRECLA.NUM_RECL
                                                                           AS DESCRIP
                                                 FROM PED_SOLIC_CABEC CONS,
                                                      PED_SOLIC_CABEC SOLICRECLA,
                                                      PED_SOLIC_CABEC SOLICORIGEN,
                                                      REC_SOLIC_OPERA SOLICOPERA,
                                                      REC_OPERA_RECLA OPERARECLA,
                                                      REC_CABEC_RECLA CABECRECLA,
                                                      REC_TIPOS_OPERA TIPOSOPERA,
                                                      REC_OPERA OPERA,
                                                      CRA_PERIO PERIO,
                                                      SEG_PERIO_CORPO PERIOCORPO
                                                WHERE CONS.OID_SOLI_CABE =
                                                                MCC.SOCA_OID_SOLI_CABE
                                                  AND CONS.OID_SOLI_CABE =
                                                         SOLICRECLA.SOCA_OID_SOLI_CABE
                                                  AND SOLICRECLA.SOCA_OID_DOCU_REFE IS NOT NULL
                                                  AND SOLICRECLA.OID_SOLI_CABE =
                                                         SOLICOPERA.SOCA_OID_SOLI_CABE
                                                  AND SOLICOPERA.OPRE_OID_OPER_RECL =
                                                              OPERARECLA.OID_OPER_RECL
                                                  AND OPERARECLA.CARE_OID_CABE_RECL =
                                                              CABECRECLA.OID_CABE_RECL
                                                  AND OPERARECLA.TIOP_OID_TIPO_OPER =
                                                              TIPOSOPERA.OID_TIPO_OPER
                                                  AND TIPOSOPERA.ROPE_OID_OPER =
                                                                        OPERA.OID_OPER
                                                  AND SOLICRECLA.SOCA_OID_DOCU_REFE =
                                                             SOLICORIGEN.OID_SOLI_CABE
                                                  AND SOLICORIGEN.PERD_OID_PERI =
                                                                        PERIO.OID_PERI
                                                  AND PERIO.PERI_OID_PERI =
                                                                   PERIOCORPO.OID_PERI
                                                  AND ROWNUM = 1),
                                                decode(MCC.SOCA_OID_SOLI_CABE,null,'CDR', rec_pkg_proce.REC_FN_SOLIC_PEDID_HIPER(MCC.SOCA_OID_SOLI_CABE)
                                                )
                                             )
                                   END
                                   END
                            ELSE
                                CASE 
                                   WHEN mcc.subp_oid_subp_crea = 203 THEN
                                     (   select decode(flx.val_nume_orde_cuot,2,'Primera ',3,'Segunda ')||GEN.VAL_I18N ||' de '||flx.cod_peri 
                                           from flx_cuota_flexi_factu_detal flx
                                           where flx.oid_movi_carg_flex = mcc.oid_movi_cc
                                           and flx.oid_peri_cuot_flex = mcc.perd_oid_peri 
                                           and flx.oid_clie = mcc.clie_oid_clie                    
                                      )
                                    WHEN mcc.subp_oid_subp_crea = 204 THEN
                                		'Cargo por Uso Flexipago'
                                   ELSE
                                      GEN.VAL_I18N 
                                END                             
                         END DES_MOVI,
                         MCC.OID_MOVI_CC OID_MOVI,  
                         MCC.SOCA_OID_SOLI_CABE SOCA_OID_SOLI_CABE,
                         MCC.NUM_IDEN_CUOT NUM_DOCU,
                         MCC.FEC_VENC FEC_VENC,
                         NULL FEC_PAGO,
                         CASE
                            <![CDATA[ 
                             WHEN (MCC.IMP_MOVI > 0)
                            ]]>
                               THEN MCC.IMP_MOVI
                            ELSE NULL
                         END IMP_CARG,
                         CASE
                            <![CDATA[ 
                             WHEN (MCC.IMP_MOVI > 0)
                            ]]>
                               THEN NULL
                            ELSE ABS (MCC.IMP_MOVI)
                         END IMP_ABON
                    FROM CCC_MOVIM_CUENT_CORRI MCC,
                         CCC_SUBPR CS,
                         CCC_TIPO_ABONO_SUBPR TAS,
                         CCC_TIPO_CARGO_ABONO TCA,
                         GEN_I18N_SICC_PAIS GEN,
                         CRA_PERIO CP,
                         SEG_PERIO_CORPO SPC
                   WHERE MCC.SUBP_OID_SUBP_CREA = CS.OID_SUBP
                     AND CS.OID_SUBP = TAS.SUBP_OID_SUBP
                     AND TAS.TCAB_OID_TCAB = TCA.OID_TIPO_CARG_ABON
                     AND GEN.ATTR_ENTI LIKE 'CCC_TIPO_CARGO_ABONO'
                     AND GEN.VAL_OID = TCA.OID_TIPO_CARG_ABON
                     AND MCC.PERD_OID_PERI = CP.OID_PERI
                     AND CP.PERI_OID_PERI = SPC.OID_PERI
                     AND MCC.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoConsultora#))
                  UNION ALL
                  (SELECT MB.FEC_PROC FEC_EMIS,
                         NULL OID_PERI,
                         'B'        TIP_MOVI,  
                         CCB.DES_CC DES_MOVI,
                         MB.OID_MOVI_BANC OID_MOVI,
                         MB.OID_MOVI_BANC SOCA_OID_SOLI_CABE,
                         MB.NUM_LOTE NUM_DOCU,
                         NULL FEC_VENC,
                         MB.FEC_PAGO FEC_PAGO,
                         NULL IMP_CARG,
                         MB.IMP_PAGO IMP_ABON
                    FROM CCC_MOVIM_BANCA MB,
                         CCC_CUENT_CORRI_BANCA CCB
                   WHERE MB.CCBA_OID_CC_BANC = CCB.OID_CUEN_CORR_BANC
                     AND MB.COD_IDEN_PROC = 'P'
                     AND CCB.IND_BANC_CHEQ = 0
                     AND MB.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoConsultora#))
                  UNION ALL
                  (SELECT MB.FEC_PROC FEC_EMIS,
                         NULL OID_PERI,
                         'CH'  TIP_MOVI,
                         CCB.DES_CC || ' ' || bc.des_banc DES_MOVI ,
                         MB.OID_MOVI_BANC OID_MOVI,
                         MB.OID_MOVI_BANC SOCA_OID_SOLI_CABE,
                         MB.NUM_LOTE NUM_DOCU,
                         MB.FEC_COBR_CHEQ FEC_VENC,
                         MB.FEC_PAGO FEC_PAGO,
                         NULL IMP_CARG,
                         MB.IMP_PAGO IMP_ABON
                    FROM CCC_MOVIM_BANCA MB,
                         CCC_CUENT_CORRI_BANCA CCB,
                         CCC_BANCO_CHEQU BC                
                      WHERE MB.CCBA_OID_CC_BANC = CCB.OID_CUEN_CORR_BANC
                     AND MB.COD_IDEN_PROC = 'P'
                     AND CCB.IND_BANC_CHEQ = 1
                     AND MB.COD_BANC_CHEQ = BC.COD_BANC         
                     AND MB.CLIE_OID_CLIE = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_CLIENTE(#codigoConsultora#))) 
                     GROUP BY FEC_EMIS, CAM_REFE, TIP_MOVI, DES_MOVI, OID_MOVI,SOCA_OID_SOLI_CABE,NUM_DOCU, FEC_VENC, FEC_PAGO)
					) A
					ORDER BY A.FEC_ORDER DESC
    </select>
    
    <select id="existeCarteraAsignada" parameterClass="java.util.Map" resultClass="integer">
		SELECT COUNT(1) 
		  FROM COB_CRONO_CARTE CCC
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_SOCI = #codigoSociedad#
		   AND COD_ETAP_DEUD = #codigoEtapaDeuda#
		   AND COD_PERI = #codigoPeriodo#
		   AND COD_REGI = #codigoRegion#
		   AND COD_ZONA = #codigoZona#
		   AND CCC.IND_GENE_CART = '1'
		   AND CCC.COD_CART IS NOT NULL
	</select>
	
	<update id="cierreCarteraDetalleMovimiento" parameterClass="java.util.Map">
		UPDATE COB_DETAL_MOVIM_CARTE
	       SET FEC_CIER = TO_DATE(#fechaCierreCartera#, 'DD/MM/YYYY')
	 	 WHERE COD_PAIS = #codigoPais#
	       AND COD_ETAP_DEUD = #codigoEtapaDeuda#
	       AND COD_PERI = #codigoPeriodo#
	       AND COD_REGI = #codigoRegion#
	       AND COD_ZONA = #codigoZona#
  	</update>
  	
  	<update id="cierreCarteraDetalleAsignacion" parameterClass="java.util.Map">
		UPDATE COB_DETAL_ASIGN_CARTE
		   SET FEC_CIER = TO_DATE(#fechaCierreCartera#, 'DD/MM/YYYY')
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_SOCI = #codigoSociedad#
		   AND COD_ETAP_DEUD = #codigoEtapaDeuda#
		   AND COD_PERI = #codigoPeriodo#
		   AND COD_REGI = #codigoRegion#
		   AND COD_ZONA = #codigoZona#
  	</update>
  	
  	<update id="cierreCarteraCabaceraAsignacion" parameterClass="java.util.Map">
		UPDATE COB_CABEC_ASIGN_CARTE
		   SET FEC_CIER = TO_DATE(#fechaCierreCartera#, 'DD/MM/YYYY')
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_SOCI = #codigoSociedad#
		   AND COD_ETAP_DEUD = #codigoEtapaDeuda#
		   AND COD_PERI = #codigoPeriodo#
		   AND COD_REGI = #codigoRegion#
		   AND COD_ZONA = #codigoZona#
  	</update>
  	
  	<!-- Modificaciones realizadas para la pantalla Cuenta Corriente por Campaña 30/06/2015 -->
  	<resultMap id="getAbonoProcesoCDRResult" class="java.util.HashMap">																	        	      
		<result property="descripcionMovimiento"      column="DES_MOVI"/>	    
		<result property="abono"      column="IMP_ABON"/>
	</resultMap>
	
  	<select id="getAbonoProcesoCDR" parameterClass="java.util.Map" resultMap="getAbonoProcesoCDRResult">
  		 select  'Abono en proceso CDR' DES_MOVI, 
             val_recl_pend IMP_ABON
             from mae_clien
            where cod_clie =  #codigoCliente#
            <![CDATA[   
            	and nvl(val_recl_pend,0) <> 0
            ]]>
  	</select>
  	<!-- FIN Modificaciones realizadas para la pantalla Cuenta Corriente por Campaña -->
</sqlMap>