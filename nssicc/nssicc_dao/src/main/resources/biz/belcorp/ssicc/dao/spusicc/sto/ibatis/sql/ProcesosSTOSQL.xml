<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="spusicc.ProcesosSTOSQL">

<typeAlias alias="validacionDocumento" type="biz.belcorp.ssicc.dao.spusicc.sto.model.ValidacionDocumento"/>
<typeAlias alias="detallePedidoFolio" type="biz.belcorp.ssicc.dao.spusicc.pedidos.model.DetallePedidoFolio"/>

	<resultMap id="baseResult"          class="baseGenerico">
    	<result property="codigo" 		column="CODIGO" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
	   
	<typeAlias alias="detalleDocumentoExcepcion" type="biz.belcorp.ssicc.dao.spusicc.sto.model.DetalleDocumentoExcepcion"/>
	
	<resultMap id="baseResult"          class="baseGenerico">
    	<result property="codigo" 		column="CODIGO" 	/>
    	<result property="descripcion" 	column="DESCRIPCION"/>
    </resultMap>
    
    <resultMap id="detalleDocumentoExcepcionResult" 	 class="detalleDocumentoExcepcion">
		<result property="codigoPais"			 	column ="COD_PAIS"/>		                     			
		<result property="codigoValidacion"			column ="COD_VALI"/>
		<result property="descripcionTipoDocumento"	column ="DES_TIPO_DOCU"/>
		<result property="numeroLote"		 		column ="NUM_LOTE"/>
		<result property="numeroDocumento"			column ="DOCU_NUM_DOCU"/>
		<result property="indAprobacion"			column ="IND_APRO"/>	
		<result property="indGestionable"			column ="IND_GEST"/>	
		<result property="fechaAprobacion"		 	column ="FEC_APRO"/>
		<result property="usuarioApro"		 		column ="USU_APRO"/>
		<result property="indLevaError"		 		column ="IND_LEVA_ERRO"/>
	</resultMap>

<typeAlias alias="datosCliente" type="biz.belcorp.ssicc.dao.spusicc.sto.model.DatosCliente"/>

 <resultMap id="datosClienteResult" 	 class="datosCliente">
		<result property="codigoCliente"			 	column ="COD_CLIE"/>		                     			
		<result property="indActivo"					column ="IND_ACTI"/>
		<result property="tipoCliente"					column ="TIPO_CLIE"/>
		<result property="subTipoCliente"		 		column ="SUBTIPO_CLIE"/>
		<result property="primerApellido"				column ="VAL_APE1"/>
		<result property="segundoApellido"				column ="VAL_APE2"/>	
		<result property="primerNombre"					column ="VAL_NOM1"/>	
		<result property="segundoNombre"		 		column ="VAL_NOM2"/>
		<result property="status"		 		        column ="STATUS"/>
		<result property="bloqueo"		 				column ="BLOQUEO"/>
		<result property="zona"		 					column ="ZONA"/>
		<result property="territorio"		 			column ="TERRITORIO"/>
		<result property="direccion"		 			column ="DIRECCION"/>	             			                     			
		<result property="telefono"		 				column ="TELEFONO"/>	
	</resultMap>
	
 <typeAlias alias="gestionDocumento" type="biz.belcorp.ssicc.dao.spusicc.sto.model.GestionDocumento"/>

 <resultMap id="gestionDocumentoResult" 	 class="gestionDocumento">
 		<result property="codTipoDocu"			 	    column ="TIPO_DOCU"/>
 		<result property="codigoPais"			 	    column ="COD_PAIS"/>
		<result property="tipoDocumento"			 	column ="DES_TIPO_DOCU"/>		                     			
		<result property="lote"							column ="NUM_LOTE"/>
		<result property="numeroDocumento"				column ="SEC_NUME_DOCU"/>
		<result property="validacion"		 			column ="COD_VALI"/>
		<result property="detalle"						column ="DES_CORT_MENS"/>
		<result property="indGestionable"				column ="IND_GEST"/>
		<result property="indAprobado"					column ="IND_APRO"/>
		<result property="fecha"		 				column ="FEC_DIGI"/>
	    <result property="fechaModificacion"		 	column ="FEC_MODI"/>
       <result property="documento"		 	            column ="COD_TIPO_DOCU"/>
		<result property="codigoRegion"		 	        column ="COD_REGI"/>
        <result property="descripcionRegion"		    column ="DES_REGI"/>
        <result property="codigoZonaActual"		 	    column ="COD_ZONA_ACTUAL"/>
        <result property="codigoZona"		 	        column ="COD_ZONA"/>
        <result property="codigoCliente"		 	    column ="COD_CLIE"/>
		<result property="indCabecera"		 	        column ="IND_CABE"/>
		<result property="numSecPadre"		 	        column ="SEC_NUME_DOCU_CABE"/>
	    <result property="codDocuCabec"		 	        column ="COD_TIPO_DOCU_CABE"/>
	    <result property="numDocumento"		   			column ="NUM_DOCU"/>
	    <result property="desValidacion"		   		column ="DES_VALI"/>
		<result property="desValidacionLarga"		   	column ="DES_LARG_MENS"/>
		<result property="numDocu"		   			    column ="NUM_DOCU"/>
		<result property="codigoOperacion"		   		column ="COD_OPER"/>
		<result property="documentoReferencia"		   	column ="NUM_DOCU_CRUC"/>
		<result property="periodoReferencia"		   	column ="OID_PERI_REFE"/>
		<result property="codigoPeriodo"		   		column ="COD_PERI"/>
		<result property="periodoReferencia"		   	column ="OID_PERI_REFE"/>
		<result property="exeProcApro"		   			column ="EXE_PROC_APRO"/>
		<result property="exeProcDesa"		   			column ="EXE_PROC_DESA"/>
		<result property="exeProcRech"		   			column ="EXE_PROC_RECH"/>
		<result property="descripcionOrigen"		   	column ="DES_ORIG"/>
		<result property="descripcionOrigenDetalle"		   	column ="DES_ORIG_DET"/>
		<result property="totalEstimado"		   		column ="VAL_TOTA_ESTIM"/>
		<result property="saldo"		   			    column ="VAL_SALD"/>
		<result property="nombreCliente"		   		column ="NOM_CLIE"/>
		<result property="indGestionRechazo"		   	column ="IND_RECH_GEST"/>
		<result property="tipClasi"                     column="TIP_CLASI"/>
		<result property="ped1"                         column="PED_1"/>
		<result property="ped2"                         column="PED_2"/>
		<result property="ped3"                         column="PED_3"/>
		<result property="ped4"                         column="PED_4"/>
		<result property="ped5"                         column="PED_5"/>
		<result property="ped6"                         column="PED_6"/>
		<result property="ped7"                         column="PED_7"/>
		<result property="ped8"                         column="PED_8"/>
		<result property="cdr1"                         column="CDR_1"/>
		<result property="cdr2"                         column="CDR_2"/>
		<result property="cdr3"                         column="CDR_3"/>
		<result property="cdr4"                         column="CDR_4"/>
		<result property="cdr5"                         column="CDR_5"/>
		<result property="cdr6"                         column="CDR_6"/>
		<result property="cdr7"                         column="CDR_7"/>
		<result property="cdr8"                         column="CDR_8"/>
		<result property="numDocuIden"                  column="NUM_DOCU_IDEN"/>
		<result property="telefono1"                    column="TELEFONO1"/>
		<result property="telefono2"                    column="TELEFONO2"/>
		<result property="estatus"                      column="ESTATUS"/>
		<result property="unidadesDevuelve"             column="unidades_devuelve"/>
		<result property="unidadesEnvia"                column="unidades_envia"/>
		<result property="precioCatalogo"               column="precio_catalogo"/>
		<result property="precioContable"               column="precio_contable"/>
		<result property="codigoZonaArribo"             column="cod_zona_arri"/>
		<result property="codigoRechazo"                column="COD_RECHAZO"/>
		<result property="descripcionRechazo"           column="DES_RECHAZO"/>
		<result property="montoMeta"           			column="MONTO_META"/>
		<result property="seccion"           			column="SECCION"/>
		<result property="codSeccion"         			column="CODSECCION"/>
		<result property="totalPedido"         			column="TOTAL_PEDI"/>
		<result property="indDocumentoIdentidad" 	    column="IND_DOCU_IDEN"/>
		<result property="indRechazoOrigen" 	    	column="IND_RECH_ORIG"/>
		<result property="motivo"			 	    	column="motivo"/>
		<result property="codVenta"          			column="COD_VENT" />
		<result property="indicadorPROL"				column="IND_PROL" />
		<result property="fechaIngreso"					column="FEC_INGR" />
		<result property="rechazo"						column="RECH_SC" />
		<result property="montoPedido"					column="VAL_MONT_PEDI" />
		<result property="campanyaPrimerPedido"			column="CAM_PRIM_PEDI" />
		<result property="porcentajeDesviacion"					column="VAL_PORC_DESV" />
		<result property="promedioPedido"					column="VAL_PROM_PEDI" />
		<result property="montoReal"					column="VAL_MONT_REAL" />
		<result property="mensaje"					column="VAL_OBSE_MENS" />
		<result property="indViewMotiGest"			column="IND_VIEW_MOTI_GEST" />
</resultMap>

<typeAlias alias="validacionErrorDocumento" type="biz.belcorp.ssicc.dao.spusicc.sto.model.ValidacionErrorDocumento"/>

<typeAlias alias="ordenCompraCabecera" type="biz.belcorp.ssicc.dao.spusicc.sto.model.OrdenCompraCabecera"/>

<resultMap id="ordenCompraCabeceraResult" class="ordenCompraCabecera">                                      
    <result property="codPais"                	column="COD_PAIS" />
    <result property="codPeriodo"               column="COD_PERI" />
    <result property="codCliente"             	column="COD_CLIE" />
    <result property="fechaSolicitud"     		column="FEC_SOLI" />
	<result property="numCliente"        		column="NUM_CLIE" />
	<result property="tipoSolicitud"          	column="TIPO_SOLI" />
	<result property="codSubAcceso"          	column="COD_SBAC" />
	<result property="codAcceso"          		column="COD_ACCE" />
	<result property="tipoDespacho"          	column="TIPO_DESP" />
	<result property="estadoProceso"          	column="STA_PROC" />
	<result property="numLote"          		column="NUM_LOTE" />
	<result property="numDocumento"          	column="DOCU_NUM_DOCU" />
	<result property="codMotivoRechazo"         column="COD_MOTI_RECH" />
	<result property="codRegion"          		column="COD_REGI_ARRI" />
	<result property="codZona"          		column="COD_ZONA" />
    <result property="numSecuencia"          	column="SEC_NUME_DOCU" />
    <result property="montoPedido"              column="VAL_MONT_PEDI" />
	<result property="indValiExisCronograma"	column="IND_VALI_EXIS_CRON" />
	<result property="indValiVencCronograma"    column="IND_VALI_VENC_CRON" />
	<result property="oidPeriodo"          		column="PERD_OID_PERI" />
	<result property="oidZona"          		column="ZZON_OID_ZONA" />
	<result property="codigoZonaArribo"         column="COD_ZONA_ARRI" />
	<result property="montoFlexipago"          	column="MON_FLEX" />
	<result property="indUtilizaFlex"          	column="UTI_FLEX" />
	<result property="indAceptaFlex"         	column="ACE_FLEX" />
	<result property="oidMotiGes"         	    column="OID_MOTI_GEST" />
	<result property="valObseGestion"         	column="VAL_OBSE_GEST" />
  </resultMap>   

<typeAlias alias="ordenCompraDetalle" type="biz.belcorp.ssicc.dao.spusicc.sto.model.OrdenCompraDetalle"/>

<resultMap id="ordenCompraDetalleResult" class="ordenCompraDetalle">                                      
    <result property="codPais"                column="COD_PAIS" />                    
    <result property="codPeriodo"                column="COD_PERI" />              
    <result property="codCliente"             column="COD_CLIE" />     
	<result property="codVenta"          column="COD_VENT" />                
	<result property="tipoPosicion"          column="TIP_POSIC" />
	<result property="valUniDemandadas"          column="VAL_UNID_DEM" />
	<result property="estadoProceso"          column="STA_PROC" />
	<result property="numLote"          column="NUM_LOTE" />
	<result property="numDocumento"          column="DOCU_NUM_DOCU" />
	<result property="codMotivoRechazo"          column="COD_MOTI_RECH" />
	<result property="numSecuencia"          column="SEC_NUME_DOCU" />
	<result property="descripcionProducto"          column="DES_PROD" />
	<result property="precio"          column="VAL_PREC_CATA_UNIT_LOCA" />
	<result property="total"          column="TOTAL" />	
	<result property="stock"          column="STOCK" />
	<result property="indicadorError"          column="IND_ERRO" />
  </resultMap>   

<typeAlias alias="solicitudCredito" type="biz.belcorp.ssicc.dao.spusicc.sto.model.SolicitudCredito"/>

<resultMap id="solicitudCreditoResult" class="solicitudCredito">                                      
    <result property="codPais"                    column="COD_PAIS" />                    
    <result property="codCompania"                column="COD_COMP" />              
    <result property="codCliente"                 column="COD_CLIE" />     
	<result property="numDocumento"               column="NUM_DOCU" />   
    <result property="fechaProceso"               column="FEC_PROC" />           
	<result property="unidadAdministrativa"       column="UNI_ADMI" />
	<result property="tipoIngreso"                column="TIP_INGR" />
	<result property="codPeriodo"                 column="COD_PERI" />
	<result property="codClienteRetenido"    		  column="COD_CLIE_RETE" />
	<result property="codPremio"                  column="COD_PREM" />
	<result property="valApellido1"               column="VAL_APE1" />
	<result property="valApellido2"               column="VAL_APE2" />
	<result property="valNombre1"                 column="VAL_NOM1" />
	<result property="valNombre2"                 column="VAL_NOM2" />
    <result property="fechaNacimiento"               column="FEC_NACI" />           
	<result property="tipoDocumento"              column="TIP_DOCU" />                 
    <result property="numDocuIdentidad"           column="NUM_DOCU_IDEN" />              
    <result property="numRUC"                     column="NUM_RUC" />                 
    <result property="indEstaCivil"               column="IND_ESTA_CIVI" />                      
	  <result property="indNivelEducativo"          column="IND_NIVE_EDUC" />                 
	  <result property="valDirecCliente"            column="VAL_DIRE_CLIE" />          
	  <result property="valBarrCliente"             column="VAL_BARR_CLIE" />                 
	  <result property="valCiudCliente"             column="VAL_CIUD_CLIE" />                       
	  <result property="valDepaCliente"             column="VAL_DEPA_CLIE" />    
	  <result property="valTelfCliente"             column="VAL_TELF_CLIE" />             
	  <result property="valCeluCliente"             column="VAL_CELU_CLIE" />         
	  <result property="valTelfTrabajo"             column="VAL_TELF_TRAB" />                     
	  <result property="indVentaDirecta"            column="IND_VENT_DIRE" />     
	  <result property="valMailCliente"             column="VAL_MAIL_CLIE" />                                   
	  <result property="tipoDocuFiador"             column="TIP_DOCU_FIAD" />              
	  <result property="codDocuFiador"              column="COD_DOCU_IDFI" />                 
	  <result property="valApellido1Fiador"         column="VAL_APE1_FIAD" />                      
	  <result property="valApellido2Fiador"         column="VAL_APE2_FIAD" />                 
	  <result property="valNombre1Fiador"           column="VAL_NOM1_FIAD" />          
	  <result property="valNombre2Fiador"           column="VAL_NOM2_FIAD" />                 
	  <result property="valDireFiador"              column="VAL_DIRE_FIAD" />                       
	  <result property="valBarrFiador"              column="VAL_BARR_FIAD" />    
	  <result property="valCiudFiador"              column="VAL_CIUD_FIAD" />             
	  <result property="valDepaFiador"              column="VAL_DEPA_FIAD" />         
	  <result property="valTelfFiador"              column="VAL_TEFL_FIAD" />                     
	  <result property="valCeluFiador"              column="VAL_CELU_FIAD" />            
	  <result property="valTelfTrabaFiador"         column="VAL_TELF_TRFI" />                            
	  <result property="valRegionArribo"            column="VAL_REGI_ARRI" />              
	  <result property="valZonaArribo"              column="VAL_ZONA_ARRI" />                 
	  <result property="indEstaProceso"             column="IND_STAT_PROC" />                      
	  <result property="indMotivoRechazo"           column="IND_MOTI_RECH" />                 
	  <result property="tipoViaCliente"             column="TIP_VIA_CLIE" />          
	  <result property="valNombreVia"               column="VAL_NOMB_VICL" />                 
	  <result property="numDireCliente"             column="NUM_DIRE_CLIE" />                       
	  <result property="codDepaCliente"             column="COD_DEPA_CLIE" />    
	  <result property="codProvCliente"             column="COD_PROV_CLIE" />             
	  <result property="codDistCliente"             column="COD_DIST_CLIE" />         
	  <result property="codSectCliente"             column="COD_SECT_CLIE" />                     
	  <result property="tipoViaFiador"              column="TIP_VIA_FIAD" />          
	  <result property="valNomViaFiador"            column="VAL_NOMB_VIFI" />                              
	  <result property="numDireFiador"              column="NUM_DIRE_FIAD" />              
	  <result property="codDepaFiador"              column="COD_DEPA_FIAD" />                 
	  <result property="codProvFiador"              column="COD_PROV_FIAD" />                      
	  <result property="codDistFiador"              column="COD_DIST_FIAD" />                 
	  <result property="codSectFiador"              column="COD_SECT_FIAD" />          
	           
	   <result property="numSecuencia"           column="SEC_NUME_DOCU" />               
	   <result property="numLote"           column="NUM_LOTE" />   
	   <result property="indicadorTelefonoOK"              column="IND_TELE_OK" />   
	   <result property="indicadorSituacionCrediticia"     column="IND_SITU_CRED" />   
	   <result property="indicadorSinSaldoAmbasMarcas"     column="IND_SIN_SALD_AMBA_MARC" />  	
	   
	   <result property="delegacionCliente"     	 column="VAL_DELE_CLIE"/>
		<result property="codigoPostalCliente"     	 column="VAL_CODI_POST_CLIE"/>     
		<result property="direccionEntrega"     	 column="VAL_DIRE_ENTRE_CLIE"/>     
		<result property="barrioEntrega"     		 column="VAL_BARR_ENTRE_CLIE"/>     
		<result property="delegacionEntrega"     	 column="VAL_DELE_ENTRE_CLIE"/>     
		<result property="departamentoEntrega"     	 column="VAL_DEPA_ENTRE_CLIE"/>     
		<result property="telefonoEntrega"     		 column="VAL_TELE_ENTRE_CLIE"/>     
		<result property="celularEntrega"     		 column="VAL_CELU_ENTRE_CLIE"/>     
		<result property="apellido1RefFamiliar"      column="VAL_APE1_REFE_FAMI_CLIE"/>     
		<result property="nombre1RefFamiliar"     	 column="VAL_NOM1_REFE_FAMI_CLIE"/>     
		<result property="direccionRefFamiliar"      column="VAL_DIRE_REFE_FAMI_CLIE"/>     
		<result property="barrioRefFamiliar"     	 column="VAL_BARR_REFE_FAMI_CLIE"/>     
		<result property="delegacionRefFamiliar"     column="VAL_DELE_REFE_FAMI_CLIE"/>     
		<result property="ciudadRefFamiliar"     	 column="VAL_CIUD_REFE_FAMI_CLIE"/>     
		<result property="departamentoRefFamiliar"   column="VAL_DEPA_REFE_FAMI_CLIE"/>     
		<result property="telefonoRefFamiliar"     	 column="VAL_TELE_REFE_FAMI_CLIE"/>     
		<result property="celularRefFamiliar"     	 column="VAL_CELU_REFE_FAMI_CLIE"/>     
		<result property="tipoVinculoRefFamiliar"    column="VAL_TIPO_VINC_REFE_FAMI_CLIE"/>     
		<result property="apellido1RefNoFamiliar"    column="VAL_APE1_REFE_NOFA_CLIE"/>     
		<result property="nombre1RefNoFamiliar"      column="VAL_NOM1_REFE_NOFA_CLIE"/>     
		<result property="telefonoRefNoFamiliar"     column="VAL_TELE_REFE_NOFA_CLIE"/>     
		<result property="celularRefNoFamiliar"      column="VAL_CELU_REFE_NOFA_CLIE"/>     
		<result property="tipoVinculoRefNoFamiliar"  column="VAL_TIPO_VINC_REFE_NOFA_CLIE"/>     
		<result property="nombreEmpresaFiador"     	 column="VAL_NOMB_EMPR_FIAD"/>     
		<result property="direccionEmpresaFiador"    column="VAL_DIRE_EMPR_FIAD"/>     
		<result property="cargoFiador"     			 column="VAL_CARG_FIAD"/>     
		<result property="tipoVinculoFiador"     	 column="VAL_TIPO_VINC_FIAD"/> 
		<result property="requiereFactura"     		 column="VAL_REQU_FACT"/> 
		<result property="direccionContribuyente"    column="VAL_DIRE_CONT"/> 
		<result property="barrioContribuyente"     	 column="VAL_BARR_CONT"/> 
		<result property="delegacionContribuyente"   column="VAL_DELE_CONT"/> 
		<result property="ciudadContribuyente"     	 column="VAL_CIUD_CONT"/> 
		<result property="departamentoContribuyente" column="VAL_DEPA_CONT"/> 
		<result property="codigoPostalContribuyente" column="VAL_CODI_POST_CONT"/> 
		<result property="numeroContribuyente"     	 column="VAL_NUME_CONT"/> 
		<result property="direccionRefNoFamiliar"    column="VAL_DIRE_REFE_NOFA_CLIE"/>
	    <result property="codSexoCliente"    		 column="COD_SEXO"/>  
	  	<result property="codigoCiudadDomicilio"           column="CIUD_COD_CIUD_DOMI" />
	  	<result property="codigoCiudadDomicilioUbigeo"     column="CIUD_COD_UGEO_REGI_DOMI" />
	  	<result property="villaPoblacionDomicilio"         column="DES_VILLA_POBL_DOMI" />
	  	<result property="codigoCiudadEntrega"         	   column="CIUD_COD_CIUD_ENTR" />
	  	<result property="codigoCiudadEntregaUbigeo"       column="CIUD_COD_UGEO_REGI_ENTR" />
	  	<result property="villaPoblacionEntrega"           column="DES_VILLA_POBL_ENTR" />			    
  <result property="montoInfoComercial"              column="VAL_MONT_INFO_COME" />
	  	<result property="estadoComercial"              column="VAL_ESTA_INFO_COME" />	  	
	  	<result property="nombresInfocorp"              column="VAL_NOMB_INFO_COME" />	  
	  	<result property="explicacionInfocorp"              column="VAL_EXPL_INFO_COME" />	  	  				    
	  	<result property="tipoMeta"              column="TIP_META" />
	  	<result property="descripcionMeta"              column="DES_META" />
	  	<result property="montoMeta"              column="VAL_MNTO_META" />
	  	<result property="oidMotiGes"              column="OID_MOTI_GEST" />
	  	<result property="valObseGestion"              column="VAL_OBSE_GEST" />
	  	<result property="codigoLiderRecomendante"              column="COD_LIDE_RECO" /> 	  				    
	  	<result property="indicadorFacturacionElectronica"              column="IND_REQU_IMPR_BOLE" />
	  	
	  	<result property="nacionalidad"              column="COD_NACI" />
	  	<result property="tipoPersona"              column="COD_TIPO_PERS" />
	  	<result property="origenIngreso"              column="COD_ORIG_INGR" />
	  	<result property="territorioCorresponde"              column="COD_TERR_CORR" />
	  	<result property="direccionDomicilioIgualDireccionEntrega"              column="IND_DIRD_DIRE" />
	  	<result property="dirDomManzana"              column="DOM_MANZ" />
	  	<result property="dirDomEtapa"              column="DOM_ETAP" />
	  	<result property="dirDomCallePrincipal"              column="DOM_CALL_PRIN" />
	  	<result property="dirDomCalleSecundaria"              column="DOM_CALL_SECU" />
	  	<result property="dirDomNumero"              column="DOM_NUM" />
	  	<result property="dirDomReferencia"              column="DOM_REFE" />
	  	<result property="dirEntManzana"              column="ENT_MANZ" />
	  	<result property="dirEntEtapa"              column="ENT_ETAP" />
	  	<result property="dirEntNumero"              column="ENT_NUM" />
	  	<result property="dirEntCallePrincipal"              column="ENT_CALL_PRIN" />
	  	<result property="dirEntCalleSecundaria"              column="ENT_CALL_SECU" />
	  	<result property="dirEntReferencia"              column="ENT_REFE" />
  </resultMap>   

<typeAlias alias="solicitudPostVentaCabecera" type="biz.belcorp.ssicc.dao.spusicc.sto.model.SolicitudPostVentaCabecera"/>
<resultMap id="solicitudPostVentaCabeceraResult" class="solicitudPostVentaCabecera">                                      
  <result property="nombre"			 	      column ="NOMBRE"/>       
  <result property="codigoPais"			 	      column ="COD_PAIS"/>		        
<result property="codPeriodo"							column ="COD_PERI"/>            
<result property="codCliente"				      column ="COD_CLIE"/>            
<result property="numLote"		 			      column ="NUM_LOTE"/>            
<result property="codTipoDocumento"				column ="DOCU_COD_TIPO_DOCU"/>  
<result property="numDocumento"				    column ="NUM_DOCU"/>	          
<result property="numSecuencia"					  column ="SEC_NUME_DOCU"/>	      
<result property="codCia"		 				      column ="COD_CIA"/>             
<result property="numDocuRUC"		 	        column ="NUM_DOCU_CRUC"/>       
<result property="tipoSolicitud"		 	    column ="TIP_SOLI"/>   					
<result property="codSubAcceso"		 	      column ="COD_SUB_ACCE"/>        
<result property="accFisi"		            column ="ACC_FISI"/>            
<result property="fechaProcesoDoc"		 	  column ="FEC_PROC_DOCU"/>       
<result property="codRegion"		 	        column ="COD_REGI_ARRI"/>       
<result property="codZona"		 	          column ="COD_ZONA_ARRI"/>       
<result property="estadoProceso"		 	    column ="STA_PROC"/>  					
<result property="codMotivoRechazo"		 	  column ="COD_MOTI_RECH"/>	
<result property="observaciones"		 	  column ="DES_OBSE"/>				
<result property="periodoReferencia"		 	  column ="OID_PERI_REFE"/>	
 </resultMap>   

<typeAlias alias="solicitudPostVentaDetalle" type="biz.belcorp.ssicc.dao.spusicc.sto.model.SolicitudPostVentaDetalle"/>

<resultMap id="solicitudPostVentaDetalleResult" class="solicitudPostVentaDetalle">                                      
  <result property="nombre"			 	      column ="NOMBRE"/>         
  <result property="codigoPais"			 	      column ="COD_PAIS"/>		        
	<result property="codPeriodo"							column ="COD_PERI"/>            
	<result property="codCliente"				      column ="COD_CLIE"/>            
	<result property="numLote"		 			      column ="NUM_LOTE"/>            
	<result property="codTipoDocumento"				column ="DOCU_COD_TIPO_DOCU"/>  
	<result property="numDocumento"				    column ="NUM_DOCU"/>	          
	<result property="codCia"					  column ="COD_CIA"/>	      
	<result property="tipoReferencia"		 		 column ="TIP_REFE"/>             
	<result property="codVentaDevu"		 	        column ="COD_VENT_DEVU"/>
	<result property="descVentaDevu"		 	        column ="DESC_VENTA_DEVUELTA"/>
	<result property="codVentaDese"		 	    column ="COD_VENT_DESE"/>
	<result property="descVentaDese"		 	    column ="DESC_VENTA_DESEADA"/>
	<result property="canVentaDevu"		 	      column ="CAN_VENT_DEVU"/>        
	<result property="canVentaDese"		            column ="CAN_VENT_DESE"/>            
	<result property="estadoProceso"		 	  column ="STA_PROC"/>       
	<result property="codMotivoRechazo"		 	        column ="COD_MOTI_RECH"/>       
	<result property="codOperacion"		 	          column ="COD_OPER"/>       
	<result property="codTipoOperacion"		 	    column ="COD_TIPO_OPER"/>  					
	<result property="numSecuencia"		 	  column ="SEC_NUME_DOCU"/>		
	<result property="codRegion"		 	    column ="COD_REGI"/>  					
	<result property="codZona"		 	  column ="COD_ZONA"/>		
	<result property="observaciones"		 	  column ="DES_OBSE"/>
	<result property="codMotDevolucion"		 	  column ="COD_MOT_DEVOLUCION"/>		
	<result property="descMotDevolucion"		 	  column ="DESC_MOT_DEVOLUCION"/>
	<result property="montoMinimo"		 	  column ="DESCRIPCION"/>
	<result property="valorDeseado"		 	  column ="VAL_PREC_CATA_ENVI"/>
	<result property="valorDevuelve"		 	  column ="VAL_PREC_CATA_DEVU"/>
	<result property="montoTotal"		 	  column ="VAL_TOTA_PAGA_LOCA"/>
	<result property="numeroCruce"		 	  column ="NUM_DOCU_CRUC"/>
	<result property="periodoReferencia"		 	  column ="OID_PERI_REFE"/>
	<result property="oidSoliDevuelve"		 	  column ="OID_SOLI_POSI_DEVU"/>
	<result property="precioUniDevuelve"		 	  column ="PRE_UNIT_DEVU"/>
	<result property="origen"		 	  column ="ORIGEN"/>
	<result property="fechaRegistro"		 	  column ="FEC_DIGI"/>
	<result property="usuarioRegistro"		 	  column ="USU_DIGI"/>
	<result property="fechaModificacion"		 	  column ="FEC_MODI"/>
	<result property="usuarioModificacion"		 	  column ="USU_MODI"/>

  </resultMap>   

<typeAlias alias="clasificacionConsultora" type="biz.belcorp.ssicc.dao.spusicc.sto.model.ClasificacionConsultora"/>

<resultMap id="clasificacionConsultoraResult" class ="clasificacionConsultora">
	<result property="desClas"			 	  column ="DESC_CLASI"/>         
	<result property="desTipoClas"			  column ="DESC_TIPO_CLAS"/>		        
	<result property="codTipoCliente"		  column ="COD_TIPO_CLIE"/>            
	<result property="codSubTipoCliente"	  column ="COD_SUBT_CLIE"/>            
	<result property="codTipoClas"		 	  column ="COD_TIPO_CLAS"/>            
	<result property="codClas"				  column ="COD_CLAS"/>  
	<result property="indOrde"				  column ="IND_ORDE"/>	          
</resultMap>

<typeAlias alias="consultaValidaciones" type="biz.belcorp.ssicc.dao.spusicc.sto.model.ConsultaValidaciones"/>

<resultMap id="consultaValidacionesResult" class="consultaValidaciones">                                      
    <result property="tipoDocumento"                column="DESTIPODOCU" />              
    <result property="fecha"                   column="FECDIGI" />     
    <result property="fechaModificacion"     column="FECMODI" />                   
	<result property="lote"                 column="NUMLOTE" />    
	<result property="codRegion"                 column="COD_REGI" />                   
	<result property="codZona"                 column="COD_ZONA" />
	<result property="codZonaActual"                 column="COD_ZONA_ACTUAL" />      
	<result property="cliente"                 column="COD_CLIE" />
	<result property="nomcliente"                 column="NOM_CLIE" />      
	<result property="totalCarga"          column="CARGADAS" />
	<result property="correctas"          column="CORRECTAS" /> 
   <result property="erradas"          column="ERRADAS" />	
   <result property="rechazadas"          column="RECHAZADAS" />
   <result property="detallesOK"          column="DETALLESOK_CABECERRADAS" />
   <result property="codigoPeriodo"          column="COD_PERI" />
    <result property="numeroPreimpreso"         column="NUM_DOCU" />
    <result property="indicadorDNInuevoCliente" column="IND_NUEV_CLIE" />
    <result property="montoCupon" 				column="MONTO_CUPON" />
  </resultMap>    

<typeAlias alias="consultaPedidos"    type="biz.belcorp.ssicc.dao.spusicc.sto.model.ConsultaPedidos"/>
<typeAlias alias="consultaPedidosGP1" type="biz.belcorp.ssicc.dao.spusicc.sto.model.ConsultaPedidosGP1"/>
<typeAlias alias="consultaPolizas"    type="biz.belcorp.ssicc.dao.spusicc.sto.model.ConsultaPolizas"/>
<typeAlias alias="actualizacionDatos" type="biz.belcorp.ssicc.dao.spusicc.sto.model.ActualizacionDatos"/>
<typeAlias alias="ordenTransporte"    type="biz.belcorp.ssicc.dao.spusicc.sto.model.OrdenTransporte"/>

<resultMap id="actualizacionDatosResult" class="actualizacionDatos">                                      
       
<result property="codPais"                    column="COD_PAIS" />                    
  <result property="codCompania"                column="COD_COMP" />              
  <result property="codCliente"                 column="COD_CLIE" />     
	<result property="numDocumento"               column="NUM_DOCU" />   
<result property="fechaProceso"               column="FEC_PROC" />           
	<result property="unidadAdministrativa"       column="UNI_ADMI" />
	<result property="codPeriodo"                 column="COD_PERI" />
	<result property="valApellido1"               column="VAL_APE1" />
	<result property="valApellido2"               column="VAL_APE2" />
	<result property="valNombre1"                 column="VAL_NOM1" />
	<result property="valNombre2"                 column="VAL_NOM2" />
	<result property="tipoDocumento"              column="TIP_DOCU" />                 
  <result property="numDocuIdentidad"           column="NUM_DOCU_IDEN" />              
  <result property="numRUC"                     column="NUM_RUC" />                       
  <result property="valDirecCliente"            column="VAL_DIRE_CLIE" />          
  <result property="valBarrCliente"             column="VAL_BARR_CLIE" />                 
  <result property="valCiudCliente"             column="VAL_CIUD_CLIE" />                       
  <result property="valDepaCliente"             column="VAL_DEPA_CLIE" />    
  <result property="valTelfCliente"             column="VAL_TELF_CLIE" />             
  <result property="valCeluCliente"             column="VAL_CELU_CLIE" />         
  <result property="valTelfTrabajo"             column="VAL_TELF_TRAB" />                     
  <result property="valMailCliente"             column="VAL_MAIL_CLIE" />                                                          
  <result property="valRegionArribo"            column="VAL_BARR_ARRI" />              
  <result property="valZonaArribo"              column="VAL_ZONA_ARRI" />                 
  <result property="indEstaProceso"             column="IND_STAT_PROC" />                      
  <result property="indMotivoRechazo"           column="IND_MOTI_RECH" />                 
  <result property="tipoViaCliente"             column="TIP_VIA_CLIE" />          
  <result property="valNombreVia"               column="VAL_NOMB_VICL" />                 
  <result property="numDireCliente"             column="NUM_DIRE_CLIE" />                       
  <result property="codDepaCliente"             column="COD_DEPA_CLIE" />    
  <result property="codProvCliente"             column="COD_PROV_CLIE" />             
  <result property="codDistCliente"             column="COD_DIST_CLIE" />         
  <result property="codSectCliente"             column="COD_SECT_CLIE" />                       
  <result property="codTipoDocumento"           column="DOCU_COD_TIPO_DOCU" />           
  <result property="numSecuencia"           column="SEC_NUME_DOCU" />               
  <result property="numLote"           column="NUM_LOTE" />   
  <result property="direccionEntrega"           column="VAL_DIRE_ENTRE_CLIE" />  
  <result property="telefonoEntrega"           column="VAL_TELE_ENTRE_CLIE" />  
  <result property="celularEntrega"           column="VAL_CELU_ENTRE_CLIE" />    
  <result property="indicadorValidacionOK"           column="IND_DIRE" />
  <result property="codigoCiudadDomicilio"           column="CIUD_COD_CIUD_DOMI" />
  <result property="codigoCiudadDomicilioUbigeo"     column="CIUD_COD_UGEO_REGI_DOMI" />
  <result property="villaPoblacionDomicilio"         column="DES_VILLA_POBL_DOMI" />
  <result property="codigoCiudadEntrega"         	 column="CIUD_COD_CIUD_ENTR" />
  <result property="codigoCiudadEntregaUbigeo"       column="CIUD_COD_UGEO_REGI_ENTR" />
  <result property="villaPoblacionEntrega"           column="DES_VILLA_POBL_ENTR" />
  
  	<result property="nacionalidad"              column="COD_NACI" />
	<result property="territorioCorresponde"              column="COD_TERR_CORR" />
	<result property="direccionDomicilioIgualDireccionEntrega"              column="IND_DIRD_DIRE" />
	<result property="dirDomManzana"              column="DOM_MANZ" />
	<result property="dirDomEtapa"              column="DOM_ETAP" />
	<result property="dirDomCallePrincipal"              column="DOM_CALL_PRIN" />
	<result property="dirDomCalleSecundaria"              column="DOM_CALL_SECU" />
	<result property="dirDomNumero"              column="DOM_NUM" />
	<result property="dirDomReferencia"              column="DOM_REFE" />
	<result property="dirEntBarrio"              column="val_barr_entre_clie" />
	<result property="dirEntManzana"              column="ENT_MANZ" />
	<result property="dirEntEtapa"              column="ENT_ETAP" />
	<result property="dirEntNumero"              column="ENT_NUM" />
	<result property="dirEntCallePrincipal"              column="ENT_CALL_PRIN" />
	<result property="dirEntCalleSecundaria"              column="ENT_CALL_SECU" />
	<result property="dirEntReferencia"              column="ENT_REFE" />
  </resultMap>   


<typeAlias alias="duplaCyzone" type="biz.belcorp.ssicc.dao.spusicc.sto.model.DuplaCyzone"/>

<resultMap id="duplaCyzoneResult" class="duplaCyzone">                                      
       
    <result property="codPais"                    column="COD_PAIS" />                    
  	<result property="codCompania"                column="COD_COMP" />              
  	<result property="codCliente"                 column="COD_CLIE" />     
	<result property="numDocumento"               column="NUM_DOCU" />   
 	<result property="fechaNacimiento"            column="FEC_NACI" />     
  	<result property="fechaProceso"               column="FEC_PROC" />           
	<result property="codPeriodo"                 column="COD_PERI" />
	<result property="valApellido1"               column="VAL_APE1" />
	<result property="valApellido2"               column="VAL_APE2" />
	<result property="valNombre1"                 column="VAL_NOM1" />
	<result property="valNombre2"                 column="VAL_NOM2" />
    <result property="indDuplaNueva"              column="IND_DUPL_NUEV" />
	<result property="indActuDatos"               column="IND_ACTU_DATO" />
	<result property="indEnvio"                   column="IND_ENVI" /> 
  	<result property="valTelfCliente"             column="VAL_TELF_CLIE" />             
  	<result property="valCeluCliente"             column="VAL_CELU_CLIE" />                    
  	<result property="valMailCliente"             column="VAL_MAIL_CLIE" />                                                          
  	<result property="valRegionArribo"            column="COD_REGI_ARRI" />              
  	<result property="valZonaArribo"              column="COD_ZONA_ARRI" />                 
  	<result property="indEstaProceso"             column="COD_STAT_PROC" />                      
  	<result property="indMotivoRechazo"           column="COD_MOTI_RECH" />                          
  	<result property="codTipoDocumento"           column="DOCU_COD_TIPO_DOCU" />           
  	<result property="numSecuencia"               column="SEC_NUME_DOCU" />               
    <result property="numLote"                    column="NUM_LOTE" />   
  </resultMap>    


<typeAlias alias="cuponPago" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CuponPago"/>

<resultMap id="cuponPagoResult" class="cuponPago">                                      
       
    <result property="codPais"                    column="COD_PAIS" />                    
  	<result property="codCompania"                column="COD_COMP" />              
  	<result property="codCliente"                 column="COD_CLIE" />     
	<result property="numDocumento"               column="NUM_DOCU" />   
  	<result property="fechaProceso"               column="FEC_PROC" />           
	<result property="codPeriodo"                 column="COD_PERI" />                                                         
  	<result property="codRegion"            	  column="COD_REGI" />              
  	<result property="codZona"                    column="COD_ZONA" />                 
  	<result property="indEstaProceso"             column="STA_PROC" />                      
  	<result property="indMotivoRechazo"           column="COD_MOTI_RECH" /> 
	<result property="impValor"           		  column="IMP_VALO" />  
    <result property="valorDeuda"           	  column="VAL_DEUD" />   
    <result property="estadoCupon"           	  column="STA_CUPO" /> 
    <result property="indRechazoSello"            column="IND_RECH_SELL" />                     
  	<result property="codTipoDocumento"           column="DOCU_COD_TIPO_DOCU" />           
  	<result property="numSecuencia"               column="SEC_NUME_DOCU" />               
    <result property="numLote"                    column="NUM_LOTE" />
    <result property="codigoVerificador"          column="COD_VERI" />   
    <result property="codigoZonaArribo"           column="COD_ZONA_ARRI" />
    
  </resultMap>    

	<typeAlias alias="cuponRechazoSello" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CuponRechazoSello"/>

<resultMap id="cuponRechazoSelloResult" class="cuponRechazoSello">                                      
       
    <result property="codigoPais"                    column="COD_PAIS" />                                
  	<result property="codigoCliente"                 column="COD_CLIE" />     
	<result property="numDocumento"                  column="NUM_DOCU" />   
	<result property="valor"           		         column="IMP_VALO" />  
    <result property="indicadorRechazo"              column="IND_RECH_SELL" />                        
  </resultMap>    

<typeAlias alias="accesoRolSTO" type="biz.belcorp.ssicc.dao.spusicc.sto.model.AccesoRolSTO"/>

<resultMap id="accesoRolSTOResult" class="accesoRolSTO">                                      
       
    <result property="codigoPais"                    column="COD_PAIS" />                                
  	<result property="codigoTipoDocumento"           column="COD_TIPO_DOCU" />     
	<result property="codigoAccion"                  column="COD_ACCI" />   
	<result property="nivelAccion"           		 column="NIV_ACCI" />  
    <result property="desAccion"              		 column="DES_ACCI" />        
 	<result property="indicadorActivo"               column="IND_ACTI" />        
 	<result property="estadoAccion"                  column="ESTADO" />              

         
  </resultMap>    
 
 <typeAlias alias="documentoReferencia" type="biz.belcorp.ssicc.dao.spusicc.sto.model.DocumentoReferencia"/>
 
 <resultMap id="documentoReferenciaResult" class="documentoReferencia">                                      
       
    <result property="codigoPeriodo"                    column="VAL_NOMB_PERI" />                                
  	<result property="descripcion"           			column="VAL_I18N" />     
	<result property="fechaFacturacion"                  column="FEC_FACT" />   
	<result property="numeroSolicitud"           		 column="VAL_NUME_SOLI" />  
                      
  </resultMap>    

  <typeAlias alias="cuponPagoSearch" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CuponPagoSearch"/>
 
 <resultMap id="cuponPagoSearchResult" class="cuponPagoSearch">                                      
       
    <result property="codigoPais"                    column="COD_PAIS" />                                
  	<result property="codigoCliente"           		 column="COD_REFE_PAGO" />     
	<result property="nombreCliente"                 column="NOMBRE" />   
	<result property="valorPagado"           		 column="IMP_VALO" />  
	<result property="fechaRegistro"           		 column="FEC_PROC" />  
	<result property="indRechazoSello"           	 column="IND_RECH_SELL" />  
	<result property="numDocumento"           		 column="NUM_DOCU" />
	<result property="numeroDocumentoIdentidad"      column="num_docu_iden" />    
                       
  </resultMap>    
  

  <typeAlias alias="operacionCodigoVenta" type="biz.belcorp.ssicc.dao.spusicc.sto.model.OperacionCodigoVenta"/>
 
 <resultMap id="operacionCodigoVentaResult" class="operacionCodigoVenta">                                      
       
    <result property="codigoPais"                    column="COD_PAIS" />                                
  	<result property="numeroLinea"           			column="NUM_LINE" />     
	<result property="operacion"                  column="OPERACION" />   
	<result property="cuvCambia"           		 column="COD_VENT_DEVU" />  
	<result property="cantidadCambia"           		 column="CAN_VENT_DEVU" />  
	<result property="motivoDevolucion"           		 column="MOTI_DEVO" />  
	<result property="cuvDeseado"           		 column="COD_VENT_DESE" />  
	<result property="cantidadDeseada"           		 column="CAN_PROD_DESE" /> 
	<result property="gestion"           		 column="GESTION" /> 
	<result property="rechazado"           		 column="RECHAZADO" /> 
	<result property="enviado"           		 column="ENVIADO" /> 
	<result property="eliminado"           		 column="ELIMINADO" /> 
                       
  </resultMap>    
  
  
   <typeAlias alias="cDRsAnteriores" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CDRsAnteriores"/>
 
 <resultMap id="cDRsAnterioresResult" class="cDRsAnteriores">                                      
       
    <result property="numeroReclamo"                    column="NUM_RECL" />                                
  	<result property="estado"           		 		column="ESTADO" />     
	<result property="fechaIngreso"                     column="FEC_INGR" />   
	<result property="descripcion"           		 	column="VAL_DESC_LARG" />  
	<result property="unidadesReclamadas"               column="NUM_UNID_RECL" />                     
  </resultMap> 
  
     <typeAlias alias="codigoVentaPedido" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CodigoVentaPedido"/>
 
 <resultMap id="codigoVentaPedidoResult" class="codigoVentaPedido">                                      
       
    <result property="codigoVenta"                    	column="CUV" />                                
  	<result property="codigoSAP"           		 		column="SAP" />     
	<result property="descripcion"                     	column="PRODUCTO" />   
	<result property="precioCatalogo"           		column="VAL_PREC_CATA_UNIT_LOCA" />  
	<result property="precioFactura"               		column="PRECIO_FACTURA" />            
	<result property="unidadesAtendidas"               	column="NUM_UNID_ATEN" />  
	<result property="unidadesFaltantes"               	column="NUM_UNID_FALT" />  
	<result property="porcentajeDescuento"              column="VAL_PORC_DESC" />  
	<result property="importe"               			column="IMPORTE" />
	<result property="tipoSolicitud"                    column="TIPO_DE_SOLICITUD"/>           
    <result property="recProcesados"                    column="NUM_RECL_PRO"/>
    <result property="recGestion"                       column="NUM_RECL_PEN"/>	           
	<result property="desOrigen"                        column="ORIGEN"/>
	<result property="oidSoli"                          column="OID_SOLI_POSI"/>	
  </resultMap> 
  
       <typeAlias alias="codigoVentaMatriz" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CodigoVentaMatriz"/>
 
 <resultMap id="codigoVentaMatrizResult" class="codigoVentaMatriz">                                      
       
    <result property="codigoVenta"                    	column="CUV" />                                
  	<result property="codigoSAP"           		 		column="SAP" />     
	<result property="descripcion"                     	column="PRODUCTO" />   
	<result property="precio"           		        column="PRECIO" />       
  </resultMap>
  
  <typeAlias alias="validacionVencimientoCronograma" type="biz.belcorp.ssicc.dao.spusicc.sto.model.ValidacionVencimientoCronograma"/>
  
   <resultMap id="validacionVencimientoCronogramaResult" class="validacionVencimientoCronograma">                                      
       
    <result property="codigoZona"                    	column="COD_ZONA" />                                
  	<result property="fechaInicial"           		 		column="FEC_INI" />     
	<result property="fechaFinal"                     	column="FEC_FIN" />
	<result property="codigoActividad"                     	column="COD_ACTI" />   
	<result property="codigoActividadAuxiliar"                     	column="COD_ACTI_AUX" />   
	<result property="codigoPeriodo"                     	column="COD_PERI" />      
  </resultMap>
  
	<typeAlias alias="postVenta" type="biz.belcorp.ssicc.dao.spusicc.sto.model.PostVenta"/>  
  
  
	<resultMap id="getPostVentaResult" class="PostVenta">                                      
    <result property="consultora"                    	column="consultora" />                                
  	<result property="nombre"           		 		column="nombre" />     
	<result property="zona"                     	column="zona" />   
	</resultMap>
	
	<typeAlias alias="ingresoMetas" type="biz.belcorp.ssicc.dao.spusicc.sto.model.IngresoMetas"/>
	
	<resultMap id="ingresoMetasResult" class="ingresoMetas">                                      
	    <result property="codPais"                    column="COD_PAIS" />
	  	<result property="codCompania"                column="COD_COMP" />
	  	<result property="codCliente"                 column="COD_CLIE" />
		<result property="numDocumento"               column="NUM_DOCU" />
		<result property="numLine"               	  column="NUM_LINE" />
	  	<result property="fechaProceso"               column="FEC_PROC" />
		<result property="codCampanaProc"             column="COD_CAMPPROC" />
	  	<result property="tipMeta"            	  	  column="TIPO_META" />
	  	<result property="montoMeta"                  column="MNTO_META" />
	  	<result property="direccion"             	  column="DIRECCION" />
	  	<result property="indMotivoRechazo"           column="COD_MOTI_RECH" />
	  	<result property="numSecuencia"               column="SEC_NUME_DOCU" />
	    <result property="numLote"                    column="NUM_LOTE" />
	    <result property="codCampanaInicio"           column="COD_CAMP_INIC" />
	    <result property="codigoRegionArribo"         column="COD_REGI_ARRI" />
	    <result property="codigoZonaArribo"           column="COD_ZONA_ARRI" />
	    <result property="codigoEstado"               column="COD_ESTADO" />
	    <result property="descripcionEstado"          column="DES_ESTADO" />
	</resultMap>
	
        <typeAlias alias="cartaInvitacionFlexipago" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CartaInvitacionFlexipago"/>
	
	<resultMap id="ingresoCartaInvitacionFlexipagoResult" class="cartaInvitacionFlexipago">                                      
	    <result property="codigoPais"             column="COD_PAIS" />
	  	<result property="estadoProceso"          column="COD_ESTA_OCR" />
	  	<result property="indMotivoRechazo"       column="MOT_RECH_OCR" />
		<result property="numeroPreImpreso"       column="NUM_DOCU" />
		<result property="codigoConsultora"  	  column="COD_CLIE" />
	  	<result property="codigoRegion"           column="COD_REGI" />
		<result property="codigoZona"             column="COD_ZONA" />
	  	<result property="tipoDocumentoIden"      column="COD_TIPO_DOCU_IDEN" />
	  	<result property="numDocumentoIden"       column="NUM_DOCU_IDEN" />
	  	<result property="indFirmaCliente"        column="IND_FIRM_CONS" />
	  	<result property="indFirmaReprLegal"      column="IND_FIRM_REPR_LEGA" />
	  	<result property="numLote"      		  column="NUM_LOTE" />
	  	<result property="numSecuencia"      	  column="SEC_NUME_DOCU" />
	</resultMap>

	<typeAlias alias="familiaSegura" type="biz.belcorp.ssicc.dao.spusicc.sto.model.FamiliaSegura"/>
	
	<resultMap id="familiaSeguraResult" class="familiaSegura">
		<result property="codPais"                    	column="COD_PAIS" />
	  	<result property="codCompania"                	column="COD_COMP" />
	  	<result property="fechaProceso"               	column="FEC_PROC" />
	  	<result property="codCampanaProc"             	column="COD_CAMP_PROC" />
	  	<result property="codCliente"                 	column="COD_CLIE" />
	  	<result property="codTipoDocumentoIdentidad"  	column="TIP_DOCU_IDEN" />
	  	<result property="codNumeDocumentoIdentidad"  	column="NUM_DOCU_IDEN" />
	  	<result property="codCampanaInicio"           	column="COD_CAMP_INIC" />
	  	<result property="numCoasegurado"             	column="NUM_COAS" />
	  	<result property="numSecuencia"               	column="SEC_NUME_DOCU" />
	    <result property="numLote"                    	column="NUM_LOTE" />
	    <result property="codCampanaRegistro"         	column="COD_CAMP_REGI" />
	    <result property="nomBeneficiario1"           	column="NOM_BENE1" />
	    <result property="codTipoDocumentoIdentidad1"   column="TIP_DOCU1" />
	    <result property="codNumeDocumentoIdentidad1"   column="NUM_DOCU1" />
	    <result property="nomBeneficiario2"           	column="NOM_BENE2" />
	    <result property="codTipoDocumentoIdentidad2"   column="TIP_DOCU2" />
	    <result property="codNumeDocumentoIdentidad2"   column="NUM_DOCU2" />
	    <result property="fechaNacimiento"              column="FEC_NACI" />
	    <result property="codSexo"              		column="COD_SEXO" />
	    <result property="codEstadoCivil"              	column="COD_ESTA_CIVI" />
	    <result property="valEdad"              		column="VAL_EDAD" />
	    <result property="codEstadoOCR"              	column="COD_ESTA_OCR" />
	    <result property="motRechazoOCR"              	column="MOT_RECH_OCR" />
	    <result property="codigoRegion"              	column="COD_REGION" />
	    <result property="codigoZona"              		column="COD_ZONA" />
	    <result property="firmaBlanco"              	column="IND_FIRM" />
	</resultMap>
	
	<typeAlias alias="detalleOferta" type="biz.belcorp.ssicc.dao.spusicc.sto.model.DetalleOferta"/>
	
	<resultMap id="detalleOfertaResult" class="detalleOferta">
	    <result property="oidSoliCabe"           column="OID_SOLI_CABE" />
	  	<result property="oidProd"               column="PROD_OID_PROD" />
	  	<result property="oidOfer"               column="OID_OFER" />
	</resultMap>

	<resultMap id="detalleOfertaListResult"  class="java.util.HashMap">
	    <result property="oidSoliPosi"		    column="OID_SOLI_POSI"/>	                                                                       
    	<result property="codVenta"				column="COD_VENTA"/>
    	<result property="descProd"				column="DESC_PROD"/>
    	<result property="tipo" 				column="TIPO"/>
    	<result property="numUnidFact" 			column="NUM_UNID_FACT"/>
    	<result property="numReclPro" 			column="NUM_RECL_PRO"/>
    	<result property="numReclPen" 			column="NUM_RECL_PEN"/>
    	<result property="descOferta" 			column="DES_OFERTA"/>
	</resultMap>
  
  
   <typeAlias alias="historicoSolicitudesAprobadas" type="biz.belcorp.ssicc.dao.spusicc.sto.model.HistoricoSolicitudesAprobadas"/>
 
	 <resultMap id="getHistoricoSolicitudesAprobadasResult" class="historicoSolicitudesAprobadas">                                      
	   		<result property="codPeri"  		column="COD_PERI" />
			<result property="codOper"          column="COD_OPER" />
			<result property="numDocu"          column="NUM_DOCU" />
			<result property="fecIngr"          column="FEC_INGR" />
			<result property="codVentDevu"      column="COD_VENT_DEVU" />
			<result property="descripcion"      column="DESCRIPCION" />
			<result property="canVentDevu"      column="CAN_VENT_DEVU" />
			<result property="valPrecCataDevu"  column="VAL_PREC_CATA_DEVU" />
			<result property="motivo"           column="MOTIVO" />
	  </resultMap>    
  
  
  
<select id="getTiposDocumentosSTO" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT DISTINCT T.COD_TIPO_DOCU CODIGO,
		       T.DES_TIPO_DOCU DESCRIPCION
		  FROM STO_TIPO_DOCUM_DIGIT T , SEG_USUAR U, SEG_USUAR_ROL UR, STO_TIPO_DOCUM_ROL S
		 WHERE U.COD_USUA = UR.USUA_COD_USUA 
		     AND UR.PAIS_COD_PAIS = S.COD_PAIS
			 AND S.COD_PAIS=T.COD_PAIS
			  AND UR.ROL_COD_ROL = S.ROL_COD_ROL
			 AND S.COD_TIPO_DOCU = T.COD_TIPO_DOCU
			AND S.EST_DOCU_ROL='1'
			AND UR.EST_UROL = '1'
			AND U.USE_USUA = #codigoUsuario#
			AND UR.PAIS_COD_PAIS = #codigoPais#
		   AND T.IND_CABE = '1'
		   <isNotEmpty property="indicadorPantalla">
           AND NVL($indicadorPantalla$,'0') = '1' 
           </isNotEmpty>
	</select>
	
	
	<select id="getLevantamientoErroresValidacionList" parameterClass="java.util.Map" resultMap="detalleDocumentoExcepcionResult">
		SELECT A.COD_PAIS,
			   A.COD_VALI,
		       B.DES_TIPO_DOCU,
		       A.NUM_LOTE,
		       A.DOCU_NUM_DOCU,
		       A.IND_APRO,
		       A.IND_GEST,
		       A.FEC_APRO,
		       A.USU_APRO,
		       A.IND_LEVA_ERRO
		FROM STO_DETAL_DOCUM_EXCEP A
		     , STO_TIPO_DOCUM_DIGIT B
		     , STO_PARAM_VALID C
		WHERE A.COD_TIPO_DOCU = B.COD_TIPO_DOCU
		      AND A.COD_VALI = C.COD_VALI
		      AND A.COD_PAIS =#codigoPais#
		      AND A.COD_TIPO_DOCU =#tipoDocumento#
	</select>

 <!-- OBTIENE LA LISTA DE TIPO DE DOCUMENTOS -->

	<select id="getComponentesDocumentosSTO" parameterClass="java.util.Map" resultMap="baseResult">
       SELECT T.COD_TIPO_DOCU CODIGO,
         T.DES_TIPO_DOCU DESCRIPCION
		  FROM STO_TIPO_DOCUM_DIGIT T
		 WHERE T.COD_PAIS = #codigoPais#
		   AND (T.COD_TIPO_DOCU = #codigoTipo# OR T.COD_TIPO_DOCU_CABE = #codigoTipo# )
		 ORDER BY T.IND_CABE DESC
	</select>
   
	 <select id="getTipoDocumentoDigitado" resultClass="biz.belcorp.ssicc.dao.spusicc.sto.model.TipoDocumentoDigitado">
		SELECT COD_PAIS			codPais,						           
				COD_TIPO_DOCU		codTipoDocu,				           
				DES_TIPO_DOCU		desTipoDocu,				           
				IND_CABE			indCabe,						           
				VAL_NOMB_ENTI		valNombEnti,				           
				COD_TIPO_DOCU_CABE	codTipoDocuCabe,	             
				SIST_COD_SIST		sistCodSist,				           
				INTE_COD_INTE		inteCodInte,				           
				NUM_LOTE			numLote,						           
				FEC_DIGI			fecDigi,						           
				USU_DIGI			usuDigi,						           
				FEC_MODI			fecModi,						           
				USU_MODI			usuModi,      
				EXE_PROC_ENVI		exeProcEnvi,     
				EXE_PROC_HIST		exeProcHist,
				IND_STO_ACTI        indSTOActivo,
                IND_VISU_ERRO       indVisualErrores,
                COD_PROC_BATC       codigoProcesoBatch    
		  FROM STO_TIPO_DOCUM_DIGIT
		  WHERE COD_TIPO_DOCU = #valor#
  </select>
  <parameterMap id="executeInicializacionRegistrosProcesoParams" class="map" >
		<parameter property="codigoPais"              	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoTipo"	   			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoUsuario"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="numeroProceso"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="indicadorMasivo"	        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoPeriodo"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  </parameterMap>
  <procedure id="executeInicializacionRegistrosProceso" parameterMap="executeInicializacionRegistrosProcesoParams">
    {call STO_PKG_GENER.STO_PR_INIC_REGIS_VALID(?,?,?,?,?,?)}    	
  </procedure>
    
	<select id="getTiposDocumentosIdentidadSTO" parameterClass="java.util.Map" resultMap="baseResult">
       select t.cod_tipo_docu as CODIGO,
	        t.val_sigl as DESCRIPCION
	   from MAE_TIPO_DOCUM  t
       order by t.cod_tipo_docu
	</select>
   
	<select id="getConsultaClientesList" parameterClass="java.util.Map" resultMap="datosClienteResult">
		
		SELECT 
			mc.cod_clie AS COD_CLIE,
			decode(mcda.IND_ACTI,0,'No','Si') AS IND_ACTI,
			dmtc.VAL_I18N AS TIPO_CLIE,
			dmsc.VAL_I18N AS SUBTIPO_CLIE,
			dmec.VAL_I18N as STATUS,
			mcb.VAL_MOTI_BLOQ as BLOQUEO,
			mc.VAL_APE1 as VAL_APE1,
			mc.VAL_APE2 as VAL_APE2,
			mc.VAL_NOM1  as VAL_NOM1,
			mc.VAL_NOM2  as VAL_NOM2,
			zz.DES_ZONA as zona,
			zt.COD_TERR as territorio,
			(SELECT NVL(STV.DES_ABRV_TIPO_VIA,'') FROM SEG_TIPO_VIA STV WHERE STV.OID_TIPO_VIA =  mcd.TIVI_OID_TIPO_VIA) || ' ' || mcd.VAL_NOMB_VIA || ', ' || mcd.VAL_OBSE  AS DIRECCION,
			dtel.telefono AS TELEFONO
				   
FROM mae_clien mc, MAE_CLIEN_DATOS_ADICI mcda, MAE_CLIEN_TIPO_SUBTI mcts,mae_clien_bloqu mcb,MAE_CLIEN_UNIDA_ADMIN mcua, MAE_CLIEN_DIREC mcd,
ZON_TERRI_ADMIN zta,
ZON_TERRI zt,
ZON_SECCI zs,
ZON_ZONA zz,
mae_clien_ident x,
MAE_TIPO_DOCUM c,
(select VAL_I18N, VAL_OID from GEN_I18N_SICC_COMUN where ATTR_ENTI = 'MAE_TIPO_CLIEN') dmtc,
(select VAL_I18N, VAL_OID from GEN_I18N_SICC_COMUN where ATTR_ENTI = 'MAE_SUBTI_CLIEN') dmsc,
(select VAL_I18N, VAL_OID from GEN_I18N_SICC_COMUN where ATTR_ENTI = 'MAE_ESTAT_CLIEN') dmec,
(
		select
			mcc.CLIE_OID_CLIE,
			mcc.VAL_TEXT_COMU telefono
		from
			MAE_CLIEN_COMUN mcc,
			MAE_TIPO_COMUN mtc
		where
			mcc.TICM_OID_TIPO_COMU = mtc.OID_TIPO_COMU 
			and mtc.COD_TIPO_COMU in ('TF')
		order by 1	
	) dtel

where
mc.oid_clie = mcda.clie_oid_clie
and mc.oid_clie = mcts.clie_oid_clie
and mc.oid_clie = mcua.clie_oid_clie
and x.CLIE_OID_CLIE =mc.OID_CLIE 
and mcua.ind_acti = 1
and x.TDOC_OID_TIPO_DOCU =c.OID_TIPO_DOCU 
and mc.OID_CLIE = mcua.CLIE_OID_CLIE
and mcua.ZTAD_OID_TERR_ADMI = zta.OID_TERR_ADMI
and zta.terr_oid_terr = zt.oid_terr 
and zta.ZSCC_OID_SECC = zs.OID_SECC
and zs.ZZON_OID_ZONA = zz.OID_ZONA	

and mc.oid_clie = mcd.clie_oid_clie	
and mcd.IND_DIRE_PPAL = 1	
and mcd.IND_ELIM = 0

and mc.OID_CLIE = dtel.CLIE_OID_CLIE(+)


and mc.oid_clie = mcb.clie_oid_clie (+)
and mcb.fec_desb is null
and mcts.TICL_OID_TIPO_CLIE = dmtc.VAL_OID
and mcts.SBTI_OID_SUBT_CLIE = dmsc.VAL_OID
and mcda.ESTA_OID_ESTA_CLIE = dmec.VAL_OID
and c.cod_tipo_docu =#tipoDocumento# 
AND X.NUM_DOCU_IDEN LIKE #numeroDocumento#

	</select>
	
    <select id="executeGenerarCodigoClienteSTO" parameterClass="java.util.Map" resultClass="string">
   		 SELECT STO_PKG_GENER.STO_FN_DEVUE_CODIG_CLIEN(#codigoPais#) FROM DUAL
    </select>
	
	<parameterMap id="updateNumeroSolicitudParams" class="map" >
	    <parameter property="codigoPais"	             jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
    <procedure id="updateNumeroSolicitud" 
   			  parameterMap="updateNumeroSolicitudParams" >
		{call STO_PKG_GENER.STO_PR_UPDAT_NUMER_SOLIC(?)}
    </procedure> 

  <parameterMap id="STOGrabarPedRecParams" class="map" >		    
  		<parameter property="codigoUsuario"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoPais"              	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	
  </parameterMap>

  <procedure id="STOGrabarPedRec" parameterMap="STOGrabarPedRecParams">
    {call sto_pkg_envio_valid_sicc.STO_PR_GRABA_PED_REC(?,?)}    	
  </procedure>


	<select id="getValidacionesByDocumento" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT P.COD_VALI CODIGO,
           P.COD_VALI || ' - ' || P.DES_VALI DESCRIPCION
      FROM STO_PARAM_SECUE_VALID S,
           STO_PARAM_VALID       P,
           STO_TIPO_DOCUM_DIGIT  T
     WHERE T.COD_PAIS = P.COD_PAIS
       AND T.COD_TIPO_DOCU = P.COD_TIPO_DOCU
       AND P.COD_PAIS = S.COD_PAIS
       AND P.COD_TIPO_DOCU = S.COD_TIPO_DOCU
       AND P.COD_VALI = S.COD_VALI
       AND (T.COD_TIPO_DOCU =  'OCC' OR T.COD_TIPO_DOCU_CABE = 'OCC')
       AND T.COD_PAIS = 'PE'
       AND S.EST_REGI = '1'
       AND (T.IND_VISU_ERRO = '0' OR (T.IND_VISU_ERRO = '1' 
                                      AND EXISTS (SELECT 1
                                                    FROM STO_DETAL_DOCUM_EXCEP E,
                                                         STO_DOCUM_DIGIT       D
                                                   WHERE D.COD_PAIS = E.COD_PAIS
                                                     AND D.COD_TIPO_DOCU = E.COD_TIPO_DOCU
                                                     AND D.NUM_LOTE = E.NUM_LOTE
                                                     AND D.SEC_NUME_DOCU = E.SEC_NUME_DOCU
                                                     AND E.COD_VALI = P.COD_VALI
                                                     AND E.COD_TIPO_DOCU = P.COD_TIPO_DOCU
                                                     AND E.COD_PAIS = P.COD_PAIS
                                                     AND D.IND_RECH = '0'
                                                     AND D.IND_ENVI = '0')))
     ORDER BY S.NUM_SECU
		  
	</select>
	
	<select id="getGestionDocumentoList" parameterClass="java.util.Map" resultMap="gestionDocumentoResult">
	SELECT #tipoDocumento# TIPO_DOCU,
	       A.COD_PAIS,
	       B.DES_TIPO_DOCU,
	       A.NUM_LOTE NUM_LOTE,
		   A.SEC_NUME_DOCU,
		   A.COD_VALI COD_VALI,
		   D.DES_CORT_MENS,
		   DECODE(C.IND_GEST,'1','SI','NO') IND_GEST, 
		   DECODE(A.IND_APRO,'1','SI','NO') IND_APRO,
		   TO_CHAR(E.FEC_DIGI,'DD/MM/YYYY') FEC_DIGI,
	       TO_CHAR(E.FEC_MODI,'DD/MM/YYYY') FEC_MODI,
		   A.COD_TIPO_DOCU,
		   E.COD_REGI,
		   GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(E.COD_CLIE, 'COD_ZONA') COD_ZONA_ACTUAL,
		   E.COD_ZONA,
		   E.COD_CLIE,
		   (SELECT F.DES_REGI 
		      FROM ZON_REGIO F
		     WHERE E.COD_REGI=F.COD_REGI) DES_REGI,
		   B.IND_CABE,
		   E.SEC_NUME_DOCU_CABE,
	       B.COD_TIPO_DOCU_CABE,
		   E.NUM_DOCU,
		   C.DES_VALI,
		   C.IND_VIEW_MOTI_GEST,
		   D.DES_LARG_MENS,
		   E.NUM_DOCU NUM_DOCU,
		   <isEqual property="tipoDocumento" compareValue="SPVC">
		   DECODE(A.COD_TIPO_DOCU,'SPVD',sto_pkg_gener.sto_fn_devue_codi_oper(A.COD_PAIS,A.NUM_LOTE,A.SEC_NUME_DOCU), NULL) COD_OPER,
		   DECODE(A.COD_TIPO_DOCU,'SPVC',sto_pkg_gener.sto_fn_devue_docu_cruc(A.COD_PAIS,A.COD_TIPO_DOCU,A.NUM_LOTE,A.SEC_NUME_DOCU,NULL),
		                                 DECODE(A.COD_TIPO_DOCU,'SPVD',sto_pkg_gener.sto_fn_devue_docu_cruc(A.COD_PAIS,A.COD_TIPO_DOCU,A.NUM_LOTE,A.SEC_NUME_DOCU,E.SEC_NUME_DOCU_CABE),NULL)) NUM_DOCU_CRUC,
		   DECODE(A.COD_TIPO_DOCU,'SPVC',sto_pkg_gener.sto_fn_devue_peri_refe(A.COD_PAIS,A.COD_TIPO_DOCU, A.NUM_LOTE,A.SEC_NUME_DOCU,NULL),
		                                 DECODE(A.COD_TIPO_DOCU,'SPVD',sto_pkg_gener.sto_fn_devue_peri_refe(A.COD_PAIS,A.COD_TIPO_DOCU, A.NUM_LOTE,A.SEC_NUME_DOCU,E.SEC_NUME_DOCU_CABE),NULL)) OID_PERI_REFE,
		   </isEqual>
	       <isNotEqual property="tipoDocumento" compareValue="SPVC">
	       NULL COD_OPER,
	       NULL NUM_DOCU_CRUC,
	       NULL OID_PERI_REFE,
	       </isNotEqual>
		   E.COD_PERI,
		   C.EXE_PROC_APRO,
		   C.EXE_PROC_DESA,
		   B.EXE_PROC_RECH,
		   (SELECT DISTINCT O.DES_ORIG
              FROM STO_ORIGE_DOCUM       O,
                   STO_COMBI_ORIGE_DOCUM C
             WHERE O.COD_PAIS = E.COD_PAIS
               AND O.COD_TIPO_DOCU = A.COD_TIPO_DOCU
               AND O.COD_PAIS = A.COD_PAIS
               AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
               AND O.COD_ORIG = C.COD_ORIG
               AND C.IND_RECE_OCR = E.IND_RECE_OCR 
               AND C.IND_RECE_WEB = E.IND_RECE_WEB
               AND C.IND_RECE_DD = E.IND_RECE_DD
               AND C.IND_RECE_DIGI = E.IND_RECE_DIGI
               AND C.IND_RECE_CC = E.IND_RECE_CC
               AND C.IND_RECE_MENS = E.IND_RECE_MENS
               AND C.IND_RECE_ONLI = E.IND_RECE_ONLI
               AND C.IND_RECE_IVR = E.IND_RECE_IVR) DES_ORIG,
			<isEqual property="tipoDocumento" compareValue="SPVC">
              DECODE(A.cod_tipo_docu,
                             'SPVD',
                             (select gen_pkg_gener.gen_fn_devue_orige_pedid_posic(pos.soca_oid_soli_cabe,pd.cod_vent_devu) origen
                                from int_solic_conso_poven_detal pd,
                                        ped_solic_posic  pos                           
                               where pd.oid_soli_posi_devu = pos.oid_soli_posi(+) 
                               and pd.sec_nume_docu = a.sec_nume_docu),
                             '') DES_ORIG_DET,  
			</isEqual>
	       <isNotEqual property="tipoDocumento" compareValue="SPVC">
	       NULL DES_ORIG_DET,
	       </isNotEqual>
          <isEqual property="tipoDocumento" compareValue="OCC">
          DECODE(A.COD_TIPO_DOCU,
                 'OCC', (SELECT NVL(SUM(DET.VAL_UNID_DEM * DET.VAL_PREC_CATA_UNIT_LOCA * DET.VAL_FACT_REPE),0)
                           FROM INT_SOLIC_CONSO_DETAL DET,
                                INT_SOLIC_CONSO_CABEC CAB
                          WHERE CAB.COD_PAIS = DET.COD_PAIS
                            AND CAB.COD_PERI = DET.COD_PERI
                            AND CAB.COD_CLIE = DET.COD_CLIE
                            AND CAB.NUM_LOTE = DET.NUM_LOTE
                            AND CAB.COD_PAIS = A.COD_PAIS
                            AND CAB.SEC_NUME_DOCU = A.SEC_NUME_DOCU
                            AND CAB.NUM_LOTE = A.NUM_LOTE), 
                 0)  VAL_TOTA_ESTIM,
           DECODE(A.COD_TIPO_DOCU,
                 'OCC', (SELECT NVL(NVL(CAB.VAL_SALD_DEUD,0) - NVL(P.VAL_RECL_PEND,0),0)
                           FROM INT_SOLIC_CONSO_CABEC CAB
                          WHERE CAB.COD_PAIS = A.COD_PAIS
                            AND CAB.SEC_NUME_DOCU = A.SEC_NUME_DOCU
                            AND CAB.NUM_LOTE = A.NUM_LOTE), 
                 0)  VAL_SALD,
           </isEqual>
	       <isNotEqual property="tipoDocumento" compareValue="OCC">
	       0 VAL_TOTA_ESTIM,
	       0 VAL_SALD,
	       </isNotEqual>  
	       <isEqual property="tipoDocumento" compareValue="SCC">
           (SELECT TRIM(CC.VAL_APE1) || ' ' || TRIM(CC.VAL_APE2) || ', ' || TRIM(CC.VAL_NOM1) || ' ' || TRIM(CC.VAL_NOM2)
                           FROM INT_SOLIC_CONSO_CREDI CC  
                          WHERE CC.SEC_NUME_DOCU = E.SEC_NUME_DOCU
                            AND CC.NUM_LOTE      = E.NUM_LOTE) NOM_CLIE,
           </isEqual>
	       <isNotEqual property="tipoDocumento" compareValue="SCC">
           TRIM(P.VAL_APE1) || ' ' || TRIM(P.VAL_APE2) || ', ' || TRIM(P.VAL_NOM1) || ' ' || TRIM(P.VAL_NOM2) NOM_CLIE,
           </isNotEqual>
       DECODE(C.IND_RECH_GEST,'1','SI','NO') IND_RECH_GEST,
       (SELECT GEN.VAL_I18N
          FROM GEN_I18N_SICC_COMUN   GEN,
               MAE_CLIEN_DATOS_ADICI A
         WHERE A.ESTA_OID_ESTA_CLIE = GEN.VAL_OID
           AND A.CLIE_OID_CLIE = P.OID_CLIE
           AND GEN.ATTR_ENTI = 'MAE_ESTAT_CLIEN') TIP_CLASI,       
       <isEqual property="indPedCdr" compareValue="1">
	    <![CDATA[       
         (SELECT sum(decode(spc.cod_peri,E.COD_PERI,mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,
               cra_perio cp,
               seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_1,
         (SELECT sum(decode(spc.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,1),mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,cra_perio cp,seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_2,
         (SELECT sum(decode(spc.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,2),mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,cra_perio cp,seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_3,
         (SELECT sum(decode(spc.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,3),mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,cra_perio cp,seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_4,
         (SELECT sum(decode(spc.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,4),mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,cra_perio cp,seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_5,
         (SELECT sum(decode(spc.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,5),mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,cra_perio cp,seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_6,
         (SELECT sum(decode(spc.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,6),mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,cra_perio cp,seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_7,
         (SELECT sum(decode(spc.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,7),mcc.imp_movi,0)) ped_1
          FROM ccc_movim_cuent_corri mcc,cra_perio cp,seg_perio_corpo spc
          WHERE mcc.perd_oid_peri = cp.oid_peri AND cp.peri_oid_peri = spc.oid_Peri
              and mcc.tcab_oid_tcab_crea = 2001 and mcc.imp_movi > 0 and mcc.clie_oid_clie = p.oid_clie) ped_8,
          ]]>
	   </isEqual>
	   <isNotEqual property="indPedCdr" compareValue="1">
	     0 ped_1,
	     0 ped_2,
	     0 ped_3,
	     0 ped_4,
	     0 ped_5,
	     0 ped_6,
	     0 ped_7,
            0 ped_8,
	   </isNotEqual> 
	   <isEqual property="indPedCdr" compareValue="1">
        <![CDATA[
          nvl((SELECT  sum(decode(periocorpo.cod_peri,E.COD_PERI,mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_1,
          nvl((SELECT  sum(decode(periocorpo.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,1),mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_2,
          nvl((SELECT  sum(decode(periocorpo.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,2),mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_3,
          nvl((SELECT  sum(decode(periocorpo.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,3),mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_4,
          nvl((SELECT  sum(decode(periocorpo.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,4),mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_5,
          nvl((SELECT  sum(decode(periocorpo.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,5),mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_6,
          nvl((SELECT  sum(decode(periocorpo.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,6),mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_7,
          nvl((SELECT  sum(decode(periocorpo.cod_peri,GEN_FN_PERIO_ATRAS(E.COD_PERI,7),mcc1.imp_movi,0)) CDR_0
          FROM ccc_movim_cuent_corri mcc1, ped_solic_cabec cons, ped_solic_cabec solicrecla,
               ped_solic_cabec solicorigen,cra_perio perio,seg_perio_corpo periocorpo
          WHERE cons.oid_soli_cabe = mcc1.soca_oid_soli_cabe AND cons.oid_soli_cabe = solicrecla.soca_oid_soli_cabe
                AND solicrecla.soca_oid_docu_refe IS NOT NULL AND solicrecla.soca_oid_docu_refe = solicorigen.oid_soli_cabe
                AND solicorigen.perd_oid_peri = perio.oid_peri AND perio.peri_oid_peri = periocorpo.oid_peri
                and mcc1.imp_movi < 0  and mcc1.tcab_oid_tcab_crea = 2001 and mcc1.clie_oid_clie = p.oid_clie),0) cdr_8,
          ]]>
	   </isEqual>
	   <isNotEqual property="indPedCdr" compareValue="1"> 
             0 cdr_1,
             0 cdr_2,
             0 cdr_3,
             0 cdr_4,
             0 cdr_5,
             0 cdr_6,
             0 cdr_7,
             0 cdr_8,
	   </isNotEqual>
	   <isEqual property="tipoDocumento" compareValue="SCC">       
       (SELECT scr.NUM_DOCU_IDEN
          FROM INT_SOLIC_CONSO_CREDI scr
          WHERE scr.NUM_LOTE = a.NUM_LOTE
          AND scr.SEC_NUME_DOCU = a.SEC_NUME_DOCU) NUM_DOCU_IDEN,
       </isEqual>
	   <isNotEqual property="tipoDocumento" compareValue="SCC">
         (SELECT NUM_DOCU_IDEN
  		  FROM MAE_CLIEN_IDENT
 		 WHERE CLIE_OID_CLIE = P.OID_CLIE
   		   AND VAL_IDEN_DOCU_PRIN = '1') NUM_DOCU_IDEN,
       </isNotEqual>
        GEN_PKG_GENER.GEN_FN_CLIEN_TEXTO_COMUN(p.OID_CLIE,'TF') TELEFONO1,
        GEN_PKG_GENER.GEN_FN_CLIEN_TEXTO_COMUN(p.OID_CLIE,'TM') TELEFONO2,
        (SELECT gen.val_i18n
	     FROM mae_clien_datos_adici a, gen_i18n_sicc_comun gen
		 WHERE a.esta_oid_esta_clie = gen.val_oid
		 AND gen.attr_enti = 'MAE_ESTAT_CLIEN'
		 AND a.clie_oid_clie = p.OID_CLIE) ESTATUS,
	   <isEqual property="tipoDocumento" compareValue="SPVC">
		to_number(DECODE(A.COD_TIPO_DOCU,'SPVD',(select nvl(pd.can_vent_devu,'0')
                                                   from int_solic_conso_poven_detal pd
                                                  where pd.sec_nume_docu = A.SEC_NUME_DOCU),'0')) unidades_devuelve,
          to_number(DECODE(A.COD_TIPO_DOCU,'SPVD',(select nvl(pd.can_prod_dese,'0')
                                                     from int_solic_conso_poven_detal pd
                                                    where pd.sec_nume_docu = A.SEC_NUME_DOCU),'0')) unidades_envia,
          to_number(DECODE(A.COD_TIPO_DOCU,'SPVD',(select nvl(pd.val_prec_cata_devu,'0')
                                                     from int_solic_conso_poven_detal pd
                                                    where pd.sec_nume_docu = A.SEC_NUME_DOCU),'0')) precio_catalogo,
          to_number(DECODE(A.COD_TIPO_DOCU,'SPVD',(select nvl(pd.val_prec_cont_devu,'0')
                                                     from int_solic_conso_poven_detal pd
                                                    where pd.sec_nume_docu = A.SEC_NUME_DOCU),'0')) precio_contable,
       </isEqual>
	   <isNotEqual property="tipoDocumento" compareValue="SPVC">
	   0 unidades_devuelve,
	   0 unidades_envia,
	   0 precio_catalogo,
	   0 precio_contable,
	   </isNotEqual>
       E.cod_zona_arri,
       <isEqual property="tipoDocumento" compareValue="OCC">
       CASE 
           WHEN (A.COD_VALI = 'OCC-37' OR A.COD_VALI = 'OCC-15') THEN
            (SELECT rm.COD_MOTI_RECH 
		       FROM sto_recha_motiv rm,
		      		INT_SOLIC_CONSO_CABEC scc
		 	  WHERE rm.cod_modu = 'OCR'
		 	    AND rm.COD_MOTI_RECH = scc.cod_moti_rech
		 		AND scc.SEC_NUME_DOCU = E.SEC_NUME_DOCU 
		 		AND scc.NUM_LOTE = E.NUM_LOTE
		 		AND scc.IND_RECE_OCR = '1')
		  ELSE ''
       END COD_RECHAZO,
       CASE 
         WHEN (A.COD_VALI = 'OCC-37' OR A.COD_VALI = 'OCC-15') THEN
           (SELECT rm.DES_MOTI_RECH 
		 	  FROM sto_recha_motiv rm,
		      	   INT_SOLIC_CONSO_CABEC scc
		     WHERE rm.cod_modu = 'OCR'
		 	   AND rm.COD_MOTI_RECH = scc.cod_moti_rech
		 	   AND scc.SEC_NUME_DOCU = E.SEC_NUME_DOCU  
		 	   AND scc.NUM_LOTE = E.NUM_LOTE 
		 	   AND scc.IND_RECE_OCR = '1')
	     ELSE ''  
        END DES_RECHAZO,
        </isEqual>
	   <isNotEqual property="tipoDocumento" compareValue="OCC">
	   NULL COD_RECHAZO,
	   NULL DES_RECHAZO,
	   </isNotEqual>
       <isEqual property="tipoDocumento" compareValue="SIM">       
       (SELECT TO_CHAR(sim.VAL_MNTO_META)
		 	  FROM INT_SOLIC_CONSO_INGRE_METAS sim
          	 WHERE sim.NUM_DOCU = e.NUM_DOCU
               AND sim.NUM_LOTE = a.NUM_LOTE
               AND sim.SEC_NUME_DOCU = a.SEC_NUME_DOCU) MONTO_META,
       </isEqual>
	   <isNotEqual property="tipoDocumento" compareValue="SIM">
       NULL MONTO_META,
       </isNotEqual>
       gen_pkg_gener.GEN_FN_CLIEN_DATOS(e.cod_clie,'DES_SECC') SECCION,
       gen_pkg_gener.GEN_FN_CLIEN_DATOS(e.cod_clie,'COD_SECC') CODSECCION,
       <isEqual property="tipoDocumento" compareValue="OCC">  
       (SELECT occ.val_mont_pedi
          FROM int_solic_conso_cabec occ
         WHERE occ.sec_nume_docu = E.SEC_NUME_DOCU 
           AND occ.num_lote      = E.NUM_LOTE) TOTAL_PEDI,
		DECODE((SELECT occ.IND_DOCU_IDEN
          FROM int_solic_conso_cabec occ
         WHERE occ.sec_nume_docu = E.SEC_NUME_DOCU 
           AND occ.num_lote      = E.NUM_LOTE),'1','SI','NO') IND_DOCU_IDEN,
       </isEqual>
	   <isNotEqual property="tipoDocumento" compareValue="OCC">
       NULL TOTAL_PEDI,
	   NULL IND_DOCU_IDEN,
	   </isNotEqual>
	   <isEqual property="tipoDocumento" compareValue="SPVC">
		 DECODE(A.COD_TIPO_DOCU,
                        'SPVD',
                        (select xxx.descripcion
                           from int_solic_conso_poven_detal pd,
                                            (SELECT gen.val_i18n AS descripcion,
                                                    base.cod_moti_devo
                                               FROM gen_i18n_sicc_pais gen,
                                                    seg_idiom          idi,
                                                    rec_motiv_devol    base
                                              WHERE gen.idio_oid_idio = idi.oid_idio
                                                AND base.oid_moti_devo = gen.val_oid
                                                AND idi.cod_iso_idio = 'es'
                                                AND gen.attr_enti = 'REC_MOTIV_DEVOL') xxx                           
                          where PD.MOT_SPV = xxx.cod_moti_devo(+) 
                          and pd.sec_nume_docu = A.SEC_NUME_DOCU),
                        '') motivo,  
	   </isEqual>
	   <isNotEqual property="tipoDocumento" compareValue="SPVC">
	   NULL motivo,
	   </isNotEqual>
	   <isEqual property="tipoDocumento" compareValue="OCC"> 
		DECODE(A.COD_VALI,'OCD-2',(SELECT cd.cod_vent 
		  FROM int_solic_conso_detal cd 
		 WHERE cd.num_lote = A.NUM_LOTE 
		 AND cd.sec_nume_docu = A.sec_nume_docu),NULL) COD_VENT, 
	   </isEqual> 
	   <isEqual property="tipoDocumento" compareValue="SPVC">
		DECODE(A.COD_TIPO_DOCU,
              'SPVD',
              (SELECT cd.cod_vent_devu
                 FROM int_solic_conso_poven_detal cd
                WHERE cd.num_lote = A.NUM_LOTE
                  AND cd.sec_nume_docu = A.sec_nume_docu),
              NULL) COD_VENT,
	   </isEqual>
	   <isNotEqual property="tipoDocumento" compareValue="OCC"> 
	   		<isNotEqual property="tipoDocumento" compareValue="SPVC">
		NULL COD_VENT, 
	   </isNotEqual> 
	   </isNotEqual> 
	   (SELECT 	DISTINCT O.IND_RECH_ORIG
          FROM 	STO_ORIGE_DOCUM       O,
        		STO_COMBI_ORIGE_DOCUM C
  		 WHERE O.COD_PAIS = E.COD_PAIS
    	   AND O.COD_TIPO_DOCU = A.COD_TIPO_DOCU
    	   AND O.COD_PAIS = A.COD_PAIS
    	   AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
    	   AND O.COD_ORIG = C.COD_ORIG
    	   AND C.IND_RECE_OCR = E.IND_RECE_OCR 
           AND C.IND_RECE_WEB = E.IND_RECE_WEB
           AND C.IND_RECE_DD = E.IND_RECE_DD
           AND C.IND_RECE_DIGI = E.IND_RECE_DIGI
           AND C.IND_RECE_CC = E.IND_RECE_CC
           AND C.IND_RECE_MENS = E.IND_RECE_MENS
           AND C.IND_RECE_ONLI = E.IND_RECE_ONLI
           AND C.IND_RECE_IVR = E.IND_RECE_IVR) IND_RECH_ORIG,
        <isEqual property="tipoDocumento" compareValue="OCC">   
	       DECODE((SELECT cab.ind_vali_prol
			        FROM  int_solic_conso_cabec cab
			        WHERE CAB.SEC_NUME_DOCU = E.SEC_NUME_DOCU
			        AND CAB.NUM_LOTE = E.NUM_LOTE
			        AND CAB.COD_CLIE = e.cod_clie        
			        ),'1','SI','NO')IND_PROL, 
		   sto_pkg_gener.sto_fn_devue_recha_solcr(E.COD_CLIE) RECH_SC, 
         (SELECT VAL_MONT_PEDI
            FROM INT_SOLIC_CONSO_CABEC
           WHERE SEC_NUME_DOCU = E.SEC_NUME_DOCU) VAL_MONT_PEDI, 
		</isEqual>
		<isNotEqual property="tipoDocumento" compareValue="OCC">
	   		'NO' IND_PROL,
	   		NULL RECH_SC,
	   NULL VAL_MONT_PEDI, 
	   </isNotEqual>
	   TO_CHAR(p.FEC_INGR,'DD/MM/YYYY') FEC_INGR,
	<isEqual property="tipoDocumento" compareValue="OCC">
		(SELECT spc.cod_peri
		  FROM mae_clien_prime_conta mcpc, cra_perio crp, seg_perio_corpo spc
		 WHERE mcpc.perd_oid_peri = crp.oid_peri
		   AND crp.peri_oid_peri = spc.oid_peri
		   AND mcpc.clie_oid_clie = p.oid_clie) cam_prim_pedi,
	</isEqual>    
    <isNotEqual property="tipoDocumento" compareValue="OCC">
    	'' cam_prim_pedi,
    </isNotEqual>
    <isEqual property="tipoDocumento" compareValue="OCC">
        (SELECT val_porc_desv
           FROM int_solic_conso_cabec
          WHERE sec_nume_docu = e.sec_nume_docu
            AND num_lote = e.num_lote
            AND cod_clie = e.cod_clie) val_porc_desv,
        (SELECT val_prom_pedi
           FROM int_solic_conso_cabec
          WHERE sec_nume_docu = e.sec_nume_docu
            AND num_lote = e.num_lote
            AND cod_clie = e.cod_clie) val_prom_pedi,
        (SELECT val_mont_real
           FROM int_solic_conso_cabec
          WHERE sec_nume_docu = e.sec_nume_docu
            AND num_lote = e.num_lote
            AND cod_clie = e.cod_clie) val_mont_real,
    </isEqual>
    <isNotEqual property="tipoDocumento" compareValue="OCC">
    	NULL val_porc_desv,
        NULL val_prom_pedi,
        NULL val_mont_real,
    </isNotEqual>
        REPLACE(A.VAL_OBSE_MENS,'/','\n') VAL_OBSE_MENS
   FROM STO_DETAL_DOCUM_EXCEP A
      , STO_TIPO_DOCUM_DIGIT B
      , STO_PARAM_VALID C
      , STO_MENSA_VALID D
	  , STO_DOCUM_DIGIT E
      , mae_clien p
     WHERE C.COD_TIPO_DOCU = B.COD_TIPO_DOCU
       AND C.COD_PAIS = B.COD_PAIS
	   AND A.COD_VALI = C.COD_VALI
	   AND A.COD_TIPO_DOCU = C.COD_TIPO_DOCU
	   AND A.COD_PAIS = C.COD_PAIS
	   AND A.COD_VALI = D.COD_VALI
	   AND A.COD_MENS = D.COD_MENS
	   AND A.COD_PAIS = D.COD_PAIS	          
       AND A.COD_PAIS=E.COD_PAIS
	   AND A.COD_TIPO_DOCU=E.COD_TIPO_DOCU
	   AND A.NUM_LOTE=E.NUM_LOTE
	   AND A.SEC_NUME_DOCU=E.SEC_NUME_DOCU
	   AND E.IND_ENVI='0'
	   AND E.IND_RECH='0'
	   AND e.cod_clie = p.cod_clie (+)
	   AND A.COD_TIPO_DOCU IN
       (SELECT COD_TIPO_DOCU
          FROM STO_TIPO_DOCUM_DIGIT
         WHERE COD_TIPO_DOCU = #tipoDocumento#
            OR COD_TIPO_DOCU_CABE = #tipoDocumento#)
	   AND A.COD_PAIS = #codigoPais#
	   <isNotEmpty property="numeroDocumento">
	   AND E.NUM_DOCU LIKE '%' || TRIM(#numeroDocumento#) || '%'
	   </isNotEmpty>
	   <isNotEmpty property="codigoPeriodo">
	   AND E.COD_PERI = #codigoPeriodo#
	   </isNotEmpty>
       <isNotEmpty property="validacion">
	   AND A.COD_VALI = #validacion#
	   </isNotEmpty>
	   <isNotEmpty property="numLote">
	   AND A.NUM_LOTE = #numLote#
	   </isNotEmpty>
	   <isNotEmpty property="numDocu">
	   AND A.SEC_NUME_DOCU = #numDocu#
	   </isNotEmpty>
	   <isNotEmpty property="indDocu">
	   AND B.IND_CABE = #indDocu#
	   </isNotEmpty>
	   <isNotEmpty property="indGest">
	   AND C.IND_GEST = #indGest#
	   </isNotEmpty>
	    <isNotEmpty property="indAprob">
	   AND A.IND_APRO = #indAprob#
	   </isNotEmpty>
	    <isNotEmpty property="codigoOrigen">
	   AND EXISTS (
                   SELECT 1
                     FROM STO_ORIGE_DOCUM       O,
                          STO_COMBI_ORIGE_DOCUM C
                    WHERE O.COD_PAIS = A.COD_PAIS
                      AND O.COD_TIPO_DOCU = A.COD_TIPO_DOCU
                      AND O.COD_PAIS = C.COD_PAIS
                      AND O.COD_TIPO_DOCU = C.COD_TIPO_DOCU
                      AND O.COD_ORIG = C.COD_ORIG
                      AND C.IND_RECE_OCR =  E.IND_RECE_OCR 
                      AND C.IND_RECE_WEB =  E.IND_RECE_WEB
                      AND C.IND_RECE_DD = E.IND_RECE_DD
                      AND C.IND_RECE_DIGI = E.IND_RECE_DIGI
                      AND C.IND_RECE_CC = E.IND_RECE_CC
                      AND C.IND_RECE_MENS = E.IND_RECE_MENS
                      AND C.IND_RECE_ONLI = E.IND_RECE_ONLI
                      AND C.IND_RECE_IVR = E.IND_RECE_IVR
                      AND C.COD_ORIG = #codigoOrigen#
       )
	   </isNotEmpty>
	   <isNotEmpty property="fechaInicio">
	   <![CDATA[
	   AND E.FEC_DIGI>=TO_DATE(#fechaInicio#,'DD/MM/YYYY HH24:MI')
	   ]]>
	   </isNotEmpty>
	   <isNotEmpty property="fechaFin">
	   <![CDATA[
	   AND E.FEC_DIGI<=TO_DATE(#fechaFin#,'DD/MM/YYYY HH24:MI')
	   ]]>
	   </isNotEmpty>
	   <isNotEmpty property="fechaInicioProceso">
	   <![CDATA[
	   AND E.FEC_MODI>= TO_DATE(#fechaInicioProceso#,'DD/MM/YYYY HH24:MI')
	   ]]>
	   </isNotEmpty>
	   <isNotEmpty property="fechaFinProceso">
	   <![CDATA[
	   AND E.FEC_MODI<= TO_DATE(#fechaFinProceso#,'DD/MM/YYYY HH24:MI')
	   ]]>
	   </isNotEmpty>
	   <isNotEmpty property="codigoZonaArribo">
	   	AND E.COD_ZONA_ARRI=#codigoZonaArribo#
	   </isNotEmpty>
		<isNotEmpty property="regionList">	
		<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		              				 E.COD_REGI  = #regionList[]#
	    </iterate> 
	    </isNotEmpty> 
	    <isNotEmpty property="zonaList">
		<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		              				 E.COD_ZONA   = #zonaList[]#
	    </iterate>  
	    </isNotEmpty>   
	    <isNotEmpty property="clienteList">	
		<iterate prepend="AND" property="clienteList" open="(" close=")" conjunction="OR">
		              				 E.COD_CLIE  = #clienteList[]#
	    </iterate> 
	    </isNotEmpty> 	
	    <isNotEmpty property="documentoIdentidad">
		    <isEqual property="tipoDocumento" compareValue="SCC">       
		       and exists(SELECT scr.NUM_DOCU_IDEN
		          					   FROM INT_SOLIC_CONSO_CREDI scr
		          						WHERE scr.NUM_LOTE = a.NUM_LOTE
		          							AND scr.SEC_NUME_DOCU = a.SEC_NUME_DOCU
		          							and scr.NUM_DOCU_IDEN =  #documentoIdentidad# ) 
	       </isEqual>
	     
		   <isNotEqual property="tipoDocumento" compareValue="SCC">
	         and exists(SELECT NUM_DOCU_IDEN
	  		  		    FROM MAE_CLIEN_IDENT
	 		 			WHERE CLIE_OID_CLIE = P.OID_CLIE
	   		   			AND VAL_IDEN_DOCU_PRIN = '1'
	   		   			and NUM_DOCU_IDEN = #documentoIdentidad#) 
	       </isNotEqual>	    			    
	    </isNotEmpty> 	
	ORDER BY E.COD_REGI,E.COD_ZONA, E.COD_CLIE, A.COD_TIPO_DOCU, A.SEC_NUME_DOCU
	</select>

 <select id="getNumeroProcesoActual" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		  SELECT TO_CHAR(SYSDATE,'YYYYMMDD') || 
		         LPAD(NVL(MAX(SUBSTR(HP.PROC_NUM_PROC,9,4)),0)+1,4,'0')   
		    FROM STO_HISTO_PROCE HP
		   WHERE HP.DOCU_COD_TIPO_DOCU = #codigoTipo#
		     AND HP.PAIS_COD_PAIS = #codigoPais#
		     AND TRUNC(SYSDATE) = TRUNC(HP.FEC_IPRO)
</select>
<insert id="insertInicioProcesoSTO" parameterClass="java.util.Map">
    	
	    INSERT INTO STO_HISTO_PROCE
			  (PAIS_COD_PAIS,
			   DOCU_COD_TIPO_DOCU,
			   PROC_NUM_PROC,
			   FEC_IPRO,
			   IND_LOER,
			   USU_PROC,
			   IND_ESPR)
			VALUES
			  (#codigoPais#,
			   #codigoTipo#,
			   #numeroProceso#,
			   SYSDATE,
			   '0',
			   #codigoUsuario#,
			   '1')
	   
	</insert>
	<update id="updateFinProcesoSTO" parameterClass="java.util.Map">
        UPDATE STO_HISTO_PROCE
			   SET FEC_FPRO           = SYSDATE,
			       IND_LOER           = #indicadorLogError#,
			       LOG_PROC           = #logSTO#,
			       IND_ESPR           = '0'
			 WHERE PAIS_COD_PAIS = #codigoPais#
			   AND DOCU_COD_TIPO_DOCU = #codigoTipo#
			   AND PROC_NUM_PROC = #numeroProceso#
  	</update>

<select id="getAccionesGestionSTO" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT DISTINCT G.COD_ACCI CODIGO,
		       G.DES_ACCI DESCRIPCION
		  FROM STO_TIPO_DOCUM_DIGIT T , SEG_USUAR U, SEG_USUAR_ROL UR, STO_TIPO_DOCUM_ACCIO_ROL S, STO_TIPO_DOCUM_ACCIO K, STO_ACCIO_GESTI G
		 WHERE U.COD_USUA = UR.USUA_COD_USUA 
		     AND UR.PAIS_COD_PAIS = S.COD_PAIS
			 AND T.COD_TIPO_DOCU=#tipoDocumento#
			 AND S.COD_PAIS=T.COD_PAIS
			  AND UR.ROL_COD_ROL = S.ROL_COD_ROL
			 AND S.COD_TIPO_DOCU = T.COD_TIPO_DOCU
			 AND K.COD_TIPO_DOCU= T.COD_TIPO_DOCU
			 AND S.COD_ACCI=G.COD_ACCI
			 AND K.COD_ACCI=G.COD_ACCI
			 AND G.COD_PAIS=S.COD_PAIS
             AND G.COD_PAIS=K.COD_PAIS
			AND S.EST_DOCU_ACCI_ROL='1'
			AND UR.EST_UROL = '1'
			AND U.USE_USUA = #usuario#
			AND UR.PAIS_COD_PAIS = #codigoPais# 
		     AND  T.IND_CABE = '1'
			AND K.IND_ACTI='1'
			AND K.IND_VISU='1'
		 ORDER BY G.COD_ACCI
	</select>
<!--CABECERAS-->
	<update id="updateNumeroProceso" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			   SET NUM_PROC = #numeroProceso#		       
			 WHERE COD_PAIS = #codigoPais#
			   AND COD_TIPO_DOCU = #codigoTipo#
			   AND NUM_LOTE =#numLote#
               AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>


	<update id="updateAprobarDocumentosSTO" parameterClass="java.util.Map">
        UPDATE STO_DETAL_DOCUM_EXCEP 
			   SET IND_APRO           = '1'       
			 WHERE COD_PAIS = #codigoPais#
			   AND COD_TIPO_DOCU = #codigoTipo#
			   AND COD_VALI = #codigoValidacion#
			   AND NUM_LOTE = #numLote#
			   AND SEC_NUME_DOCU=#numDocumento#
  	</update>
	
   <update id="updateDesaprobarDocumentosSTO" parameterClass="java.util.Map">
        UPDATE STO_DETAL_DOCUM_EXCEP 
			   SET IND_APRO           = '0'       
			 WHERE COD_PAIS = #codigoPais#
			   AND COD_TIPO_DOCU = #codigoTipo#
			   AND COD_VALI = #codigoValidacion#
			   AND NUM_LOTE = #numLote#
			   AND SEC_NUME_DOCU=#numDocumento#
  	</update>

	<update id="updateIndicadorRechazoOCC" parameterClass="java.util.Map">
		UPDATE INT_SOLIC_CONSO_CABEC C
			   SET C.IND_ERRO_RECH = '1',
			       C.COD_MOTI_RECH = #motivoRechazo#			   
			 WHERE C.NUM_LOTE = #numLote#
			   AND C.SEC_NUME_DOCU = #numDocumento#             
  	</update>

	 <update id="updateRechazarDocumentosSTO" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT 
			   SET IND_RECH           = '1'    , 
				   USU_MODI			  =#usuario#,
				   FEC_MODI			  =SYSDATE,	
                   COD_MOTI_RECH      =#motivoRechazo#,
                   VAL_OBSE_RECH_DEFI = #observaciones#			  
			 WHERE COD_PAIS = #codigoPais#
		      AND COD_TIPO_DOCU IN
		          (SELECT T.COD_TIPO_DOCU
		             FROM STO_TIPO_DOCUM_DIGIT T
		            WHERE T.COD_TIPO_DOCU = #codigoTipo#
		               OR T.COD_TIPO_DOCU_CABE = #codigoTipo#)
		      AND (SEC_NUME_DOCU_CABE = #numDocumento# OR
		          SEC_NUME_DOCU = #numDocumento#)
			   AND NUM_LOTE = #numLote#
			   
  	</update>

  <select id="getMensajesxAccionSTO" parameterClass="java.util.Map" resultClass="string">
   		 SELECT DES_MENS
		FROM STO_ACCIO_GESTI
	    WHERE COD_PAIS=#codigoPais#
           AND COD_ACCI=#codigoAccion#
    </select>

<update id="updateNumeroProcesoDetalles" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			   SET NUM_PROC           = #numeroProceso#		       
			 WHERE COD_PAIS = #codigoPais#
			   AND COD_TIPO_DOCU = #codigoTipoDetalle#
			   AND NUM_LOTE =#numLote#
               AND SEC_NUME_DOCU_CABE=#numDocumento#
			   
  	</update>
<select id="getCodigoDetalle" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		  SELECT COD_TIPO_DOCU 
		  FROM STO_TIPO_DOCUM_DIGIT 
		  WHERE COD_TIPO_DOCU_CABE=#codigoTipo#
</select>

<select id="getOrdenCompraCabecera" parameterClass="java.util.Map" resultMap="ordenCompraCabeceraResult">
		  SELECT B.COD_PAIS AS COD_PAIS,
				 B.COD_PERI AS COD_PERI,
				 B.COD_CLIE AS COD_CLIE,
				 B.FEC_SOLI AS FEC_SOLI,
				 B.NUM_CLIE AS NUM_CLIE,
				 B.TIPO_SOLI AS TIPO_SOLI,
				 B.COD_SBAC AS COD_SBAC,
				 B.COD_ACCE AS COD_ACCE,
				 B.TIP_DESP AS TIPO_DESP,
				 B.STA_PROC AS STA_PROC,
				 B.NUM_LOTE AS NUM_LOTE,
				 B.DOCU_NUM_DOCU AS DOCU_NUM_DOCU,
			     DECODE(B.IND_ERRO_RECH,'0',NULL, DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,B.COD_MOTI_RECH), NULL, B.COD_MOTI_RECH,STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,B.COD_MOTI_RECH)))AS  COD_MOTI_RECH,
				 B.COD_REGI AS COD_REGI_ARRI,
			     B.COD_ZONA AS COD_ZONA,
				 B.SEC_NUME_DOCU SEC_NUME_DOCU,
				 B.VAL_MONT_PEDI VAL_MONT_PEDI,
				 B.IND_VALI_EXIS_CRON IND_VALI_EXIS_CRON,
				 B.IND_VALI_VENC_CRON IND_VALI_VENC_CRON,
				 B.PERD_OID_PERI PERD_OID_PERI,
				 B.ZZON_OID_ZONA ZZON_OID_ZONA,
				 B.COD_ZONA_ARRI,
       			 B.VAL_MNTO_FLEX MON_FLEX,
       			 B.IND_UTIL_FLEX UTI_FLEX,
       			 DECODE(B.IND_ACEP_FLEX,1,'S','N') ACE_FLEX,
       			 C.OID_MOTI_GEST AS OID_MOTI_GEST,
			     C.VAL_OBSE_GEST AS VAL_OBSE_GEST
		    FROM INT_SOLIC_CONSO_CABEC B, STO_DOCUM_DIGIT  C
		   WHERE B.COD_PAIS = #codigoPais#
		     AND B.SEC_NUME_DOCU = C.SEC_NUME_DOCU
		     AND B.NUM_LOTE = C.NUM_LOTE 
			 AND B.NUM_LOTE = #numLote#
			 AND B.SEC_NUME_DOCU = #numDocumento#
</select>

<update id="updateOrdenCompraCabecera" parameterClass="java.util.Map">
           UPDATE INT_SOLIC_CONSO_CABEC
			  SET COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  NUM_CLIE=#numCliente#,
				  TIPO_SOLI=#tipoSolicitud#,
				  COD_SBAC=#codSubAcc#,
				  COD_ACCE=#codAcc#,
				  TIP_DESP=#tipoDespacho#,
				  STA_PROC=#estadoProceso#,
		          COD_REGI = GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codCliente#,'COD_REGI'),
		          COD_ZONA = GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codCliente#,'COD_ZONA'),
			      VAL_MONT_PEDI=#montoPedido#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				   AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>
  	
  	
<select id="getOrdenCompraDetalle" parameterClass="java.util.Map" resultMap="ordenCompraDetalleResult">
		  SELECT COD_PAIS AS COD_PAIS,
				 COD_PERI AS COD_PERI,
				 COD_CLIE AS COD_CLIE,
				 COD_VENT AS COD_VENT,
				 TIP_POSIC AS TIP_POSIC,
				VAL_UNID_DEM AS VAL_UNID_DEM, 
				STA_PROC AS STA_PROC,
				NUM_LOTE AS NUM_LOTE,
				DOCU_NUM_DOCU AS DOCU_NUM_DOCU,
			    DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH), NULL, COD_MOTI_RECH,STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH))AS  COD_MOTI_RECH,
			    SEC_NUME_DOCU as SEC_NUME_DOCU,
			    DES_PROD as DES_PROD,
			    VAL_PREC_CATA_UNIT_LOCA as VAL_PREC_CATA_UNIT_LOCA,
			    DECODE(VAL_PREC_CATA_UNIT_LOCA,NULL,0,VAL_PREC_CATA_UNIT_LOCA*VAL_UNID_DEM) AS TOTAL,
			    NULL STOCK,
			    NULL IND_ERRO			    
		  FROM INT_SOLIC_CONSO_DETAL  
		  WHERE COD_PAIS=#codigoPais#
				AND NUM_LOTE =#numLote#
				AND SEC_NUME_DOCU=#numDocumento#
				
</select>



<update id="updateOrdenCompraDetalle" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_DETAL
			  SET
                  COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  COD_VENT=#codVenta#,
				  TIP_POSIC=#tipoPosicion#,
				  VAL_UNID_DEM=#valUnidadesDemandadas#,
				  STA_PROC=#estadoProceso#,
				  COD_MOTI_RECH=#motivoRechazo#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				   AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>


<select id="getSolicitudCredito" parameterClass="java.util.Map" resultMap="solicitudCreditoResult">
		  SELECT A.COD_PAIS AS COD_PAIS,             
			A.COD_PAIS AS COD_PAIS,             
			A.COD_COMP AS COD_COMP,             
			A.COD_CLIE AS COD_CLIE,             
			A.NUM_DOCU AS NUM_DOCU,             
			TO_CHAR(A.FEC_PROC,'DD/MM/YYYY') AS FEC_PROC,             
			A.UNI_ADMI AS UNI_ADMI,             
			A.TIP_INGR AS TIP_INGR,             
			A.COD_PERI AS COD_PERI,             
			A.COD_CLIE_RETE AS COD_CLIE_RETE,   
			A.COD_PREM AS COD_PREM,             
			A.VAL_APE1 AS VAL_APE1,             
			A.VAL_APE2 AS VAL_APE2,             
			A.VAL_NOM1 AS,VAL_NOM1,              
			A.VAL_NOM2 AS VAL_NOM2,             
			TO_CHAR(A.FEC_NACI,'DD/MM/YYYY') AS FEC_NACI,             
			A.TIP_DOCU AS TIP_DOCU,             
			A.NUM_DOCU_IDEN AS NUM_DOCU_IDEN,   
			A.NUM_RUC AS NUM_RUC,               
			A.IND_ESTA_CIVI AS IND_ESTA_CIVI,   
			A.IND_NIVE_EDUC AS IND_NIVE_EDUC,   
			A.VAL_DIRE_CLIE AS VAL_DIRE_CLIE,   
			A.VAL_BARR_CLIE AS VAL_BARR_CLIE,   
			A.VAL_CIUD_CLIE AS VAL_CIUD_CLIE,   
			A.VAL_DEPA_CLIE AS VAL_DEPA_CLIE,   
			A.VAL_TELF_CLIE AS VAL_TELF_CLIE,   
			A.VAL_CELU_CLIE AS VAL_CELU_CLIE,   
			A.VAL_TELF_TRAB AS VAL_TELF_TRAB,   
			A.IND_VENT_DIRE AS IND_VENT_DIRE,   
			A.VAL_MAIL_CLIE AS VAL_MAIL_CLIE,   
			A.TIP_DOCU_FIAD AS TIP_DOCU_FIAD,   
			A.COD_DOCU_IDFI AS COD_DOCU_IDFI,   
			A.VAL_APE1_FIAD AS VAL_APE1_FIAD,   
			A.VAL_APE2_FIAD AS VAL_APE2_FIAD,   
			A.VAL_NOM1_FIAD AS VAL_NOM1_FIAD,   
			A.VAL_NOM2_FIAD AS VAL_NOM2_FIAD,   
			A.VAL_DIRE_FIAD AS VAL_DIRE_FIAD,   
			A.VAL_BARR_FIAD AS VAL_BARR_FIAD,   
			A.VAL_CIUD_FIAD AS VAL_CIUD_FIAD ,  
			A.VAL_DEPA_FIAD AS VAL_DEPA_FIAD ,  
			A.VAL_TEFL_FIAD AS VAL_TEFL_FIAD ,  
			A.VAL_CELU_FIAD AS VAL_CELU_FIAD ,  
			A.VAL_TELF_TRFI AS VAL_TELF_TRFI ,  
			A.VAL_REGI_ARRI AS VAL_REGI_ARRI ,  
			A.VAL_ZONA_ARRI AS VAL_ZONA_ARRI,   
			A.IND_STAT_PROC AS IND_STAT_PROC,   
			DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,A.IND_MOTI_RECH), NULL, A.IND_MOTI_RECH,STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,A.IND_MOTI_RECH))AS  IND_MOTI_RECH,  
			A.TIP_VIA_CLIE  AS TIP_VIA_CLIE,   
			A.VAL_NOMB_VICL AS VAL_NOMB_VICL,   
			A.NUM_DIRE_CLIE AS NUM_DIRE_CLIE,   
			A.COD_DEPA_CLIE AS COD_DEPA_CLIE,   
			A.COD_PROV_CLIE AS COD_PROV_CLIE,   
			A.COD_DIST_CLIE AS COD_DIST_CLIE,   
			A.COD_SECT_CLIE AS COD_SECT_CLIE,   
			A.TIP_VIA_FIAD  AS TIP_VIA_FIAD ,   
			A.VAL_NOMB_VIFI AS VAL_NOMB_VIFI,   
			A.NUM_DIRE_FIAD AS NUM_DIRE_FIAD,   
			A.COD_DEPA_FIAD AS COD_DEPA_FIAD,   
			A.COD_PROV_FIAD AS COD_PROV_FIAD,   
			A.COD_DIST_FIAD AS COD_DIST_FIAD,   
			A.COD_SECT_FIAD AS COD_SECT_FIAD,   
			A.SEC_NUME_DOCU AS SEC_NUME_DOCU,
			A.NUM_LOTE AS NUM_LOTE,
			A.IND_TELE_OK AS IND_TELE_OK,
			A.IND_SITU_CRED AS IND_SITU_CRED,
			A.IND_SIN_SALD_AMBA_MARC AS IND_SIN_SALD_AMBA_MARC,
			A.VAL_DELE_CLIE                AS VAL_DELE_CLIE               ,    
			A.VAL_CODI_POST_CLIE           AS VAL_CODI_POST_CLIE          ,  
			A.VAL_DIRE_ENTRE_CLIE          AS VAL_DIRE_ENTRE_CLIE           ,
			A.VAL_BARR_ENTRE_CLIE          AS VAL_BARR_ENTRE_CLIE           ,
			A.VAL_DELE_ENTRE_CLIE          AS VAL_DELE_ENTRE_CLIE           ,
			A.VAL_DEPA_ENTRE_CLIE          AS VAL_DEPA_ENTRE_CLIE           ,
			A.VAL_TELE_ENTRE_CLIE          AS VAL_TELE_ENTRE_CLIE           ,
			A.VAL_CELU_ENTRE_CLIE          AS VAL_CELU_ENTRE_CLIE           ,
			A.VAL_APE1_REFE_FAMI_CLIE      AS VAL_APE1_REFE_FAMI_CLIE     , 
			A.VAL_NOM1_REFE_FAMI_CLIE      AS VAL_NOM1_REFE_FAMI_CLIE     , 
			A.VAL_DIRE_REFE_FAMI_CLIE      AS VAL_DIRE_REFE_FAMI_CLIE     , 
			A.VAL_BARR_REFE_FAMI_CLIE      AS VAL_BARR_REFE_FAMI_CLIE     , 
			A.VAL_DELE_REFE_FAMI_CLIE      AS VAL_DELE_REFE_FAMI_CLIE     , 
			A.VAL_CIUD_REFE_FAMI_CLIE      AS VAL_CIUD_REFE_FAMI_CLIE     , 
			A.VAL_DEPA_REFE_FAMI_CLIE      AS VAL_DEPA_REFE_FAMI_CLIE     , 
			A.VAL_TELE_REFE_FAMI_CLIE      AS VAL_TELE_REFE_FAMI_CLIE     , 
			A.VAL_CELU_REFE_FAMI_CLIE      AS VAL_CELU_REFE_FAMI_CLIE     , 
			A.VAL_TIPO_VINC_REFE_FAMI_CLIE AS VAL_TIPO_VINC_REFE_FAMI_CLIE,       
			A.VAL_APE1_REFE_NOFA_CLIE      AS VAL_APE1_REFE_NOFA_CLIE     , 
			A.VAL_NOM1_REFE_NOFA_CLIE      AS VAL_NOM1_REFE_NOFA_CLIE     , 
			A.VAL_TELE_REFE_NOFA_CLIE      AS VAL_TELE_REFE_NOFA_CLIE     , 
			A.VAL_CELU_REFE_NOFA_CLIE      AS VAL_CELU_REFE_NOFA_CLIE     , 
			A.VAL_TIPO_VINC_REFE_NOFA_CLIE AS VAL_TIPO_VINC_REFE_NOFA_CLIE,       
			A.VAL_NOMB_EMPR_FIAD           AS VAL_NOMB_EMPR_FIAD          ,
			A.VAL_DIRE_EMPR_FIAD           AS VAL_DIRE_EMPR_FIAD             ,
			A.VAL_CARG_FIAD                AS VAL_CARG_FIAD                  ,    
			A.VAL_TIPO_VINC_FIAD           AS VAL_TIPO_VINC_FIAD             ,
			A.IND_REQU_FACT                AS VAL_REQU_FACT                  ,
			A.VAL_DIRE_CONT                AS VAL_DIRE_CONT               ,
			A.VAL_BARR_CONT                AS VAL_BARR_CONT               ,
			A.VAL_DELE_CONT                AS VAL_DELE_CONT               ,
			A.VAL_CIUD_CONT                AS VAL_CIUD_CONT               ,
			A.VAL_DEPA_CONT                AS VAL_DEPA_CONT               ,
			A.VAL_CODI_POST_CONT           AS VAL_CODI_POST_CONT             ,
			A.VAL_NUME_CONT                AS VAL_NUME_CONT               ,
			A.VAL_DIRE_REFE_NOFA_CLIE      AS VAL_DIRE_REFE_NOFA_CLIE,
			A.COD_SEXO                       AS COD_SEXO,
			A.CIUD_COD_CIUD_DOMI             AS CIUD_COD_CIUD_DOMI,
			A.CIUD_COD_UGEO_REGI_DOMI         AS CIUD_COD_UGEO_REGI_DOMI,
			A.DES_VILLA_POBL_DOMI             AS DES_VILLA_POBL_DOMI,
			A.CIUD_COD_CIUD_ENTR             AS CIUD_COD_CIUD_ENTR,
			A.CIUD_COD_UGEO_REGI_ENTR         AS CIUD_COD_UGEO_REGI_ENTR,
			A.DES_VILLA_POBL_ENTR             AS DES_VILLA_POBL_ENTR,
			A.VAL_MONT_INFO_COME             AS VAL_MONT_INFO_COME,
			A.VAL_ESTA_INFO_COME             AS VAL_ESTA_INFO_COME,
			A.VAL_NOMB_INFO_COME           as VAL_NOMB_INFO_COME,
			A.VAL_EXPL_INFO_COME           as VAL_EXPL_INFO_COME,
			A.TIP_META AS TIP_META,
			A.DES_META AS DES_META,
			A.VAL_MNTO_META AS VAL_MNTO_META,
			B.OID_MOTI_GEST AS OID_MOTI_GEST,
			B.VAL_OBSE_GEST AS VAL_OBSE_GEST,
			A.COD_LIDE_RECO,
			A.IND_REQU_IMPR_BOLE,
			A.COD_NACI,
			A.COD_TIPO_PERS,
			A.COD_ORIG_INGR,
			A.COD_TERR_CORR,
			A.IND_DIRD_DIRE,
			A.DOM_MANZ,
			A.DOM_ETAP,
			A.DOM_CALL_PRIN,
			A.DOM_CALL_SECU,
			A.DOM_NUM,
			A.DOM_REFE,
			A.ENT_MANZ,
			A.ENT_ETAP,
			A.ENT_NUM,
			A.ENT_CALL_PRIN,
			A.ENT_CALL_SECU,
			A.ENT_REFE
		  	FROM INT_SOLIC_CONSO_CREDI A, STO_DOCUM_DIGIT  B  
			WHERE  A.SEC_NUME_DOCU = B.SEC_NUME_DOCU 
			AND A.NUM_LOTE = B.NUM_LOTE
			AND A.COD_PAIS=#codigoPais#
			AND A.NUM_LOTE =#numLote#
			AND A.SEC_NUME_DOCU=#numDocumento#
</select>

<update id="updateSolicitudCredito" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CREDI
			  SET
                  COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  COD_COMP=#codCompania#,
				  UNI_ADMI=#uniAdministrativa#,
				  TIP_INGR=#tipoIngreso#,
				  COD_CLIE_RETE=#codClienteRetenido#,
				  COD_PREM=#codPremio#,
				  VAL_APE1=#apellido1#,
				  VAL_APE2=#apellido2#,
				  VAL_NOM1=#nombre1#,
                  VAL_NOM2=#nombre2#,
				  TIP_DOCU=#tipoDocumento#,
				  NUM_DOCU_IDEN=#numDocuIdentidad#,
				  NUM_RUC=#numRUC#,
				  IND_ESTA_CIVI=#indEstaCivil#,
				  IND_NIVE_EDUC=#indNivelEducativo#,
				  VAL_DIRE_CLIE=#direcCliente#,
				  VAL_BARR_CLIE=#barrioCliente#,
				  VAL_CIUD_CLIE=#ciudadCliente#,
				  VAL_DEPA_CLIE=#depaCliente#,
				  VAL_TELF_CLIE=#telfCliente#,
				  VAL_CELU_CLIE=#celularCliente#,
				  VAL_TELF_TRAB=#telfTrabajoCliente#,
				  IND_VENT_DIRE =#indVentaDirecta#,
				  VAL_MAIL_CLIE=#email#,
				  TIP_DOCU_FIAD=#tipoDocuFiador#,
				  COD_DOCU_IDFI=#codDocuFiador#,
				  VAL_APE1_FIAD=#apellido1Fiador#,
				  VAL_APE2_FIAD=#apellido2Fiador#,
				  VAL_NOM1_FIAD=#nombre1Fiador#,
				  VAL_NOM2_FIAD=#nombre2Fiador#,
				  VAL_DIRE_FIAD=#direcFiador#,
				  VAL_BARR_FIAD=#barrioFiador#,
				  VAL_CIUD_FIAD=#ciudadFiador#,
				  VAL_DEPA_FIAD=#depaFiador#,
				  VAL_TEFL_FIAD=#telfFiador#,
				  VAL_CELU_FIAD=#celularFiador#,
				  VAL_TELF_TRFI=#telfTrabajoFiador#,
				  VAL_REGI_ARRI=#codRegion#,
				  VAL_ZONA_ARRI=#codZona#,
				  IND_STAT_PROC=#indEstaProceso#,
				  IND_MOTI_RECH = substr(#indMotivoRechazo#,1,1),
				  TIP_VIA_CLIE=#tipoViaCliente#,
				  VAL_NOMB_VICL=#nombreVia#,
				  NUM_DIRE_CLIE=#numDireCliente#,
				  COD_DEPA_CLIE=#codDepaCliente#,
				  COD_PROV_CLIE=#codProvCliente#,
				  COD_DIST_CLIE=#codDistCliente#,
				  COD_SECT_CLIE=#codSectCliente#,
				  TIP_VIA_FIAD=#tipoViaFiador#,
				  VAL_NOMB_VIFI=#nombreViaFiador#,
				  NUM_DIRE_FIAD=#numDireFiador#,
				  COD_DEPA_FIAD=#codDepaFiador#,
				  COD_PROV_FIAD=#codProvFiador#,
				  COD_DIST_FIAD=#codDistFiador#,
				  COD_SECT_FIAD=#codSectFiador#,
				  FEC_PROC=TO_DATE(#fecProceso#,'DD/MM/YYYY'),
				  FEC_NACI=TO_DATE(#fecNacimiento#,'DD/MM/YYYY'),				  
				  IND_TELE_OK=#indicadorTelefonoOK#,
				  IND_SITU_CRED=#indicadorSituacionCrediticia#,
				  IND_SIN_SALD_AMBA_MARC=#indicadorSinSaldoAmbasMarcas#,
				  		
				  VAL_DELE_CLIE=#delegacionCliente#,
					VAL_CODI_POST_CLIE=#codigoPostalCliente#,
					VAL_DIRE_ENTRE_CLIE=#direccionEntrega#,
					VAL_BARR_ENTRE_CLIE=#barrioEntrega#,
					VAL_DELE_ENTRE_CLIE=#delegacionEntrega#,
					VAL_DEPA_ENTRE_CLIE=#departamentoEntrega#,
					VAL_TELE_ENTRE_CLIE=#telefonoEntrega#,
					VAL_CELU_ENTRE_CLIE=#celularEntrega#,
					VAL_APE1_REFE_FAMI_CLIE=#apellido1RefFamiliar#,
					VAL_NOM1_REFE_FAMI_CLIE=#nombre1RefFamiliar#,
					VAL_DIRE_REFE_FAMI_CLIE=#direccionRefFamiliar#,
					VAL_BARR_REFE_FAMI_CLIE=#barrioRefFamiliar#,
					VAL_DELE_REFE_FAMI_CLIE=#delegacionRefFamiliar#,
					VAL_CIUD_REFE_FAMI_CLIE=#ciudadRefFamiliar#,
					VAL_DEPA_REFE_FAMI_CLIE=#departamentoRefFamiliar#,
					VAL_TELE_REFE_FAMI_CLIE=#telefonoRefFamiliar#,
					VAL_CELU_REFE_FAMI_CLIE=#celularRefFamiliar#,
					VAL_TIPO_VINC_REFE_FAMI_CLIE=#tipoVinculoRefFamiliar#,
					VAL_APE1_REFE_NOFA_CLIE=#apellido1RefNoFamiliar#,
					VAL_NOM1_REFE_NOFA_CLIE=#nombre1RefNoFamiliar#,
					VAL_TELE_REFE_NOFA_CLIE=#telefonoRefNoFamiliar#,
					VAL_CELU_REFE_NOFA_CLIE=#celularRefNoFamiliar#,
					VAL_TIPO_VINC_REFE_NOFA_CLIE=#tipoVinculoRefNoFamiliar#,
					VAL_NOMB_EMPR_FIAD=#nombreEmpresaFiador#,
					VAL_DIRE_EMPR_FIAD=#direccionEmpresaFiador#,
					VAL_CARG_FIAD=#cargoFiador#,
					VAL_TIPO_VINC_FIAD=#tipoVinculoFiador#,
					IND_REQU_FACT=#requiereFactura#,
					VAL_DIRE_CONT=#direccionContribuyente#,
					VAL_BARR_CONT=#barrioContribuyente#,
					VAL_DELE_CONT=#delegacionContribuyente#,
					VAL_CIUD_CONT=#ciudadContribuyente#,
					VAL_DEPA_CONT=#departamentoContribuyente#,
					VAL_CODI_POST_CONT=#codigoPostalContribuyente#,
					VAL_NUME_CONT=#numeroContribuyente#,
					VAL_DIRE_REFE_NOFA_CLIE=#direccionRefNoFamiliar#,
					COD_SEXO=#codSexoCliente#,
				  	CIUD_COD_CIUD_DOMI =#codigoCiudadDomicilio#,
				  	CIUD_COD_UGEO_REGI_DOMI=#codigoCiudadDomicilio#,
				  	DES_VILLA_POBL_DOMI=#villaPoblacionDomicilio#,
				  	CIUD_COD_CIUD_ENTR=#codigoCiudadEntrega#,
				  	CIUD_COD_UGEO_REGI_ENTR=#codigoCiudadEntrega#,
				  	DES_VILLA_POBL_ENTR =#villaPoblacionEntrega#,
					VAL_MONT_INFO_COME =to_number(#montoInfoCom#,'9999999999.99'),
   					VAL_ESTA_INFO_COME =#estado#,	   			
   					IND_ERRO_INFO_COME =#error#,   					
   					VAL_NOMB_INFO_COME = substr(#nombresInfocorp#,0,400),
   					VAL_EXPL_INFO_COME = substr(#explicacionInfocorp#,0,1000)   ,
   								  										  	  
   					TIP_META = #tipoMeta#,
				    DES_META = #descripcionMeta#,
				    VAL_MNTO_META = #montoMeta#,				
   					COD_LIDE_RECO = #codigoLiderRecomendante#,
   					IND_REQU_IMPR_BOLE = #indicadorFacturacionElectronica#,
   					COD_NACI = #nacionalidad#,
					COD_TIPO_PERS = #tipoPersona#,
					COD_ORIG_INGR = #origenIngreso#,
					COD_TERR_CORR = #territorioCorresponde#,
					IND_DIRD_DIRE = #direccionDomicilioIgualDireccionEntrega#,
					DOM_MANZ = #dirDomManzana#,
					DOM_ETAP = #dirDomEtapa#,
					DOM_CALL_PRIN = #dirDomCallePrincipal#,
					DOM_CALL_SECU = #dirDomCalleSecundaria#,
					DOM_NUM = #dirDomNumero#,
					DOM_REFE = #dirDomReferencia#,
					ENT_MANZ = #dirEntManzana#,
					ENT_ETAP = #dirEntEtapa#,
					ENT_NUM = #dirEntNumero#,
					ENT_CALL_PRIN = #dirEntCallePrincipal#,
					ENT_CALL_SECU = #dirEntCalleSecundaria#,
					ENT_REFE = #dirEntReferencia#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				  AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>
  	<update id="updateSTOSolicitudCredito" parameterClass="java.util.Map">
      UPDATE STO_DOCUM_DIGIT
         SET COD_CLIE =#codCliente#,
             FEC_MODI =SYSDATE,
             COD_ZONA_ARRI = #codZona#,
             OID_MOTI_GEST = #oidMotiGes#,
             VAL_OBSE_GEST = #valObseGestion#
       WHERE COD_PAIS=#codigoPais#
         AND NUM_LOTE =#numLote#
         AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>
<select id="getSolicitudPostVentaCabecera" parameterClass="java.util.Map" resultMap="solicitudPostVentaCabeceraResult">
		  SELECT GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(I.COD_CLIE,'NOM_CLIE') NOMBRE,
                 I.COD_PAIS AS COD_PAIS,
				 I.COD_PERI AS COD_PERI,
				 I.COD_CLIE AS COD_CLIE,
				 I.NUM_LOTE AS NUM_LOTE,
				 I.DOCU_COD_TIPO_DOCU AS DOCU_COD_TIPO_DOCU,
				 I.NUM_DOCU AS NUM_DOCU, 
				 I.SEC_NUME_DOCU AS SEC_NUME_DOCU,
				 I.COD_CIA AS COD_CIA,
				 I.NUM_DOCU_CRUC AS NUM_DOCU_CRUC,
			     I.TIP_SOLI AS TIP_SOLI,
			     I.COD_SUB_ACCE as COD_SUB_ACCE,
				 I.ACC_FISI AS ACC_FISI,
				 I.FEC_PROC_DOCU AS FEC_PROC_DOCU,
				 I.COD_REGI_ARRI AS COD_REGI_ARRI,
				 I.COD_ZONA_ARRI AS COD_ZONA_ARRI,
				 I.STA_PROC AS STA_PROC,
				 I.COD_MOTI_RECH AS COD_MOTI_RECH,
				 I.DES_OBSE AS DES_OBSE,
				 (SELECT O.COD_PERI 
					FROM CRA_PERIO C, 
					SEG_PERIO_CORPO O 
					WHERE 
					O.OID_PERI = C.PERI_OID_PERI 
					AND C.OID_PERI = I.OID_PERI_REFE) OID_PERI_REFE					
		    FROM INT_SOLIC_CONSO_POVEN_CABEC I
		   WHERE I.COD_PAIS=#codigoPais#
  		     AND I.NUM_LOTE =#numLote#
  		     AND I.SEC_NUME_DOCU=#numDocumento#
</select>

<select id="getSolicitudPostVentaDetalle" parameterClass="java.util.Map" resultMap="solicitudPostVentaDetalleResult">
	SELECT GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(I.COD_CLIE,'NOM_CLIE') NOMBRE,
	       I.COD_PAIS AS COD_PAIS,
	       I.COD_PERI AS COD_PERI,
	       I.COD_CLIE AS COD_CLIE,
	       I.NUM_LOTE AS NUM_LOTE,
		   I.DOCU_COD_TIPO_DOCU AS DOCU_COD_TIPO_DOCU,
		   I.NUM_DOCU AS NUM_DOCU, 
		   I.COD_CIA AS COD_CIA,
		   I.TIP_REFE AS TIP_REFE,
		   I.COD_VENT_DEVU AS COD_VENT_DEVU,
		   ( SELECT gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(MP.OID_PROD,'MAE_PRODU',#codigoIso#) 
	           FROM PRE_MATRI_FACTU_CABEC PF, PRE_OFERT PO, PRE_OFERT_DETAL P, MAE_PRODU MP
              WHERE PF.PERD_OID_PERI = (
		                                SELECT max(OID_PERI_REFE)
                                          FROM INT_SOLIC_CONSO_POVEN_CABEC
                                         WHERE SEC_NUME_DOCU IN (
		                                                SELECT SEC_NUME_DOCU_CABE
		                                                FROM STO_DOCUM_DIGIT
		                                                WHERE SEC_NUME_DOCU=#numDocumento#
		                                                AND COD_TIPO_DOCU = 'SPVD'
		                                            )
		                                          )
		                      AND PO.MFCA_OID_CABE = PF.OID_CABE
		                      AND PO.OID_OFER = P.OFER_OID_OFER
		                      AND P.VAL_CODI_VENT = TO_NUMBER(I.COD_VENT_DEVU)
		                      AND MP.OID_PROD = P.PROD_OID_PROD
		                ) AS DESC_VENTA_DEVUELTA,
		              I.COD_VENT_DESE as COD_VENT_DESE,
		              (SELECT gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(MP.OID_PROD,'MAE_PRODU',#codigoIso#) 
		                      FROM PRE_MATRI_FACTU_CABEC PF, PRE_OFERT PO, PRE_OFERT_DETAL P, MAE_PRODU MP
		                      WHERE PF.PERD_OID_PERI = (
		                                                  SELECT MAX(OID_PERI_REFE)
		                                                  FROM INT_SOLIC_CONSO_POVEN_CABEC
		                                                  WHERE SEC_NUME_DOCU IN (
		                                                      SELECT SEC_NUME_DOCU_CABE
		                                                      FROM STO_DOCUM_DIGIT
		                                                      WHERE SEC_NUME_DOCU=#numDocumento#
		                                                      AND COD_TIPO_DOCU = 'SPVD'
		                                                  )
		                                                )
		                            AND PO.MFCA_OID_CABE = PF.OID_CABE
		                            AND PO.OID_OFER = P.OFER_OID_OFER
		                            AND P.VAL_CODI_VENT = TO_NUMBER(I.COD_VENT_DESE)
		                            AND MP.OID_PROD = P.PROD_OID_PROD
		                      ) AS DESC_VENTA_DESEADA,
		              I.CAN_VENT_DEVU AS CAN_VENT_DEVU,
		              I.CAN_PROD_DESE AS CAN_VENT_DESE,
		              I.STA_PROC AS STA_PROC,
		              I.COD_MOTI_RECH AS COD_MOTI_RECH,
		              I.COD_OPER AS COD_OPER,
		              I.COD_TIPO_OPER AS COD_TIPO_OPER,
		              I.SEC_NUME_DOCU as SEC_NUME_DOCU,
		              I.COD_REGI as COD_REGI,
		              I.COD_ZONA as COD_ZONA,
		              I.DES_OBSE AS DES_OBSE,
		              
		              I.MOT_SPV AS COD_MOT_DEVOLUCION,
		              gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION((select oid_moti_devo
		                                                 from rec_motiv_devol
		                                                where cod_moti_devo =
		                                                      I.MOT_SPV),
		                                               'REC_MOTIV_DEVOL',
		                                               #codigoIso#) AS DESC_MOT_DEVOLUCION,
		              (
                       select decode(
                       (
                       select count(*)
                       from
                       ped_solic_posic pos,
                       pre_ofert_detal det,
                       pre_matri_factu mat,
                       pre_matri_reemp ree
                       where pos.OFDE_OID_DETA_OFER = det.OID_DETA_OFER
                       and det.OID_DETA_OFER = mat.OFDE_OID_DETA_OFER
                       and mat.OID_MATR_FACT = ree.MAFA_OID_COD_REEM
                       and pos.OID_SOLI_POSI = i.OID_SOLI_POSI_DEVU
                       ),
                       0,
                        (                                    
                            SELECT GEN.VAL_I18N
                            FROM gen_i18n_sicc_comun  GEN,
                                 SEG_IDIOM            IDI,
                                 PED_SUBTI_POSIC BASE,
                                 ped_solic_posic pos2
                           WHERE GEN.IDIO_OID_IDIO = IDI.OID_IDIO
                             AND BASE.OID_SUBT_POSI = GEN.VAL_OID
                             AND IDI.COD_ISO_IDIO = #codigoIso#
                             AND BASE.OID_SUBT_POSI = pos2.STPO_OID_SUBT_POSI
                             AND GEN.ATTR_ENTI = 'PED_SUBTI_POSIC'
                             AND pos2.OID_SOLI_POSI = I.OID_SOLI_POSI_DEVU
                        )
                        ,
                        'Reemplazo'
                        )
				         FROM DUAL
				        ) DESCRIPCION,
				        NVL(I.VAL_PREC_CATA_ENVI,0)  VAL_PREC_CATA_ENVI,     
				        NVL(I.VAL_PREC_CATA_DEVU,0)  VAL_PREC_CATA_DEVU,
				        (
				            select VAL_TOTA_PAGA_LOCA
				            from ped_solic_cabec
				            where oid_soli_cabe = c.oid_cabe
				           
				        ) VAL_TOTA_PAGA_LOCA,
				       C.NUM_DOCU_CRUC NUM_DOCU_CRUC,
				       (SELECT O.COD_PERI 
						FROM CRA_PERIO G, 
						SEG_PERIO_CORPO O 
						WHERE 
						O.OID_PERI = G.PERI_OID_PERI 
						and G.OID_peri = C.OID_PERI_REFE) OID_PERI_REFE,
						I.OID_SOLI_POSI_DEVU,
						(
					        SELECT nvl(OFDE.PRECIO_UNITARIO,0)
					        FROM PED_SOLIC_POSIC POSIC,
					        PRE_OFERT_DETAL OFDE
					        WHERE OID_SOLI_POSI =  i.oid_soli_posi_devu
					        AND POSIC.OFDE_OID_DETA_OFER = OFDE.OID_DETA_OFER
					       ) PRE_UNIT_DEVU,
						GEN_PKG_GENER.gen_fn_devue_orige_pedid_posic((select nvl(POSIC.SOCA_OID_SOLI_CABE,0) 
						                     FROM PED_SOLIC_POSIC POSIC 
						                     WHERE OID_SOLI_POSI =  i.oid_soli_posi_devu ),I.COD_VENT_DEVU) origen,
           				TO_CHAR(I.FEC_DIGI, 'DD/MM/YYYY HH24:MI:SS') FEC_DIGI,
           				I.USU_DIGI,
           				TO_CHAR(I.FEC_MODI, 'DD/MM/YYYY HH24:MI:SS') FEC_MODI, 
           				I.USU_MODI
		        FROM INT_SOLIC_CONSO_POVEN_DETAL I,		         
		         INT_SOLIC_CONSO_POVEN_CABEC C             
		        WHERE I.COD_PAIS=#codigoPais#
		      AND I.NUM_LOTE =#numLote#
		      AND I.SEC_NUME_DOCU=#numDocumento#
			  AND C.cod_pais=i.cod_pais 
			  AND C.num_docu=i.num_docu 
			  AND C.num_lote=i.num_lote 
			  and c.cod_clie =i.cod_clie
</select>

<update id="updateSolicitudPostVentaCabecera" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_POVEN_CABEC
           SET COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  COD_CIA=#codCia#,
				  NUM_DOCU_CRUC=#numRuc#,
				  TIP_SOLI=#tipoSolicitud#,
				 COD_SUB_ACCE=#codSubAcc#,
				  ACC_FISI=#accesoFisi#,
				  STA_PROC=#estadoProceso#,
				  COD_MOTI_RECH=#motivoRechazo#,
				  COD_REGI_ARRI=#codRegion#,
                  COD_ZONA_ARRI=#codZona#,
				  DES_OBSE=#observaciones#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				   AND SEC_NUME_DOCU=#numDocumento#
  	</update>

<update id="updateSolicitudPostVentaDetalle" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_POVEN_DETAL
			  SET COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  COD_CIA=#codCia#,
				  TIP_REFE=#tipoReferencia#,
				  COD_VENT_DEVU=#codVentaDevu#,
				  COD_VENT_DESE=#codVentaDese#,
				  CAN_VENT_DEVU=#canVentaDevu#,
				  CAN_PROD_DESE=#canVentaDese#,
				  STA_PROC=#estadoProceso#,
				  COD_MOTI_RECH=#motivoRechazo#,
				  COD_OPER=#codOperacion#,
                  COD_TIPO_OPER=#codTipoOperacion#,
				  DES_OBSE=#observaciones#,
				  MOT_SPV=#motivoDevolucion#,
				  OID_SOLI_POSI_DEVU=#oidSoli#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				   AND SEC_NUME_DOCU=#numDocumento#
  	</update>

    <select id="getConsultaValidacionesList" parameterClass="java.util.Map" resultMap="consultaValidacionesResult">
	 SELECT B.DES_TIPO_DOCU AS DESTIPODOCU,
        <isNotEmpty property="agruFecDigi">
            TO_CHAR(E.FEC_DIGI,'DD/MM/YYYY') AS FECDIGI,
        </isNotEmpty>
		<isEmpty property="agruFecDigi">
            null AS FECDIGI,
        </isEmpty>
		<isNotEmpty property="agruFecProce">
            TO_CHAR(E.FEC_MODI,'DD/MM/YYYY') AS FECMODI,
        </isNotEmpty>
		<isEmpty property="agruFecProce">
            null AS FECMODI,
        </isEmpty>
		<isNotEmpty property="agrupacionClinte">
			nvl(GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(E.COD_CLIE, 'COD_ZONA'),null) AS COD_ZONA_ACTUAL,
            E.COD_CLIE AS COD_CLIE,
            nvl(GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(E.COD_CLIE,'NOM_CLIE'),null) AS NOM_CLIE,
        </isNotEmpty>
		<isEmpty property="agrupacionClinte">
			null AS COD_ZONA_ACTUAL,
            null AS COD_CLIE,
            null AS NOM_CLIE,
        </isEmpty>
        <isNotEmpty property="agruNumeroPreimpreso">
            E.NUM_DOCU AS NUM_DOCU,
        </isNotEmpty>
		<isEmpty property="agruNumeroPreimpreso">
            null AS NUM_DOCU,
        </isEmpty>
        <isNotEmpty property="agruLote">
            E.NUM_LOTE AS NUMLOTE,
        </isNotEmpty>
		<isEmpty property="agruLote">
            null AS NUMLOTE,
        </isEmpty>
		<isNotEmpty property="agruRegion">
            X.DES_REGI  AS COD_REGI,   
        </isNotEmpty>
		<isEmpty property="agruRegion">
            null AS COD_REGI,  
        </isEmpty>
		<isNotEmpty property="agruZona">
            E.COD_ZONA AS COD_ZONA,	 
        </isNotEmpty>
		<isEmpty property="agruZona">
            null AS COD_ZONA, 
        </isEmpty>
		<isNotEmpty property="isActualizacionDatos">
          	(select decode(ad.ind_vali_dnin_clie,'1','SI','NO')
			   from int_solic_conso_actua_datos ad
              where ad.sec_nume_docu = E.SEC_NUME_DOCU) AS IND_NUEV_CLIE,
        </isNotEmpty>
		<isEmpty property="isActualizacionDatos">
            null AS IND_NUEV_CLIE,
        </isEmpty>
		    COUNT(E.COD_PAIS) AS CARGADAS,
		    SUM(E.IND_ENVI) AS CORRECTAS,
		    SUM((SELECT COUNT(DISTINCT R.SEC_NUME_DOCU) FROM STO_DETAL_DOCUM_EXCEP R WHERE R.COD_PAIS=E.COD_PAIS AND R.COD_TIPO_DOCU=E.COD_TIPO_DOCU AND R.NUM_LOTE=E.NUM_LOTE AND R.SEC_NUME_DOCU = E.SEC_NUME_DOCU AND R.IND_LEVA_ERRO = 0 AND R.IND_APRO = 0  AND E.IND_RECH = 0 AND ROWNUM = 1)) AS ERRADAS,
		    SUM(E.IND_RECH) AS RECHAZADAS,
		    SUM((DECODE(E.IND_ENVI,0,1,0))-DECODE(((SELECT COUNT(1) FROM STO_DETAL_DOCUM_EXCEP R WHERE R.COD_PAIS=E.COD_PAIS AND R.COD_TIPO_DOCU=E.COD_TIPO_DOCU AND R.NUM_LOTE=E.NUM_LOTE AND R.SEC_NUME_DOCU = E.SEC_NUME_DOCU AND R.IND_LEVA_ERRO = 0 AND R.IND_APRO = 0 AND ROWNUM = 1)+E.IND_RECH),0,0,1)) AS DETALLESOK_CABECERRADAS,
		
		<isNotEmpty property="isCuponPago">
          	(SELECT cp.imp_valo
			   FROM int_solic_conso_cupon_pago  cp
              where cp.sec_nume_docu = E.SEC_NUME_DOCU) AS MONTO_CUPON,
        </isNotEmpty>
		<isEmpty property="isCuponPago">
            null AS MONTO_CUPON,
        </isEmpty>
        
		<isNotEmpty property="agruPeriodo">
            E.COD_PERI AS COD_PERI	 
        </isNotEmpty>
		<isEmpty property="agruPeriodo">
            null AS COD_PERI 
        </isEmpty>	
   FROM STO_TIPO_DOCUM_DIGIT B, 
        STO_DOCUM_DIGIT E,
        ZON_REGIO X      
   WHERE E.COD_PAIS =#codigoPais#
	   AND E.COD_TIPO_DOCU = B.COD_TIPO_DOCU
	   AND (E.COD_TIPO_DOCU =#tipoDocumento# OR (B.COD_TIPO_DOCU_CABE=#tipoDocumento#))
	   AND X.COD_REGI(+)=E.COD_REGI
	   <isNotEmpty property="codigoCliente">
       AND (E.COD_CLIE like #codigoCliente# || '%')
       </isNotEmpty>	
       <isNotEmpty property="numLote">
	   AND ( E.NUM_LOTE=NVL(#numLote#,E.NUM_LOTE))
	   </isNotEmpty>
	   <isNotEmpty property="numPreimpreso">
	   AND ( E.NUM_DOCU=NVL(#numPreimpreso#,E.NUM_DOCU))
	   </isNotEmpty>
	   <isNotEmpty property="indDocu">
	   AND ( B.IND_CABE=NVL(#indDocu#,B.IND_CABE))
	   </isNotEmpty>
	    <isNotEmpty property="codigoPeriodo">
	   AND ( E.COD_PERI=NVL(#codigoPeriodo#,E.COD_PERI))
	   </isNotEmpty>
	   <isNotEmpty property="fechaInicio">
	   <![CDATA[
	   AND ( E.FEC_DIGI>=NVL(TO_DATE(#fechaInicio#,'DD/MM/YYYY HH24:MI'),E.FEC_DIGI))
	   ]]>
	   </isNotEmpty>
	   <isNotEmpty property="fechaFin">
	   <![CDATA[
	   AND ( E.FEC_DIGI<=NVL(TO_DATE(#fechaFin#,'DD/MM/YYYY HH24:MI'),E.FEC_DIGI))
	    ]]>
	   </isNotEmpty>
	   <isNotEmpty property="fechaInicioProceso">
	   <![CDATA[
	   AND (E.FEC_MODI>= NVL(TO_DATE(#fechaInicioProceso#,'DD/MM/YYYY HH24:MI'),E.FEC_MODI))
	   ]]>
	   </isNotEmpty>
	   <isNotEmpty property="fechaFinProceso">
	   <![CDATA[
	   AND ( E.FEC_MODI<= NVL(TO_DATE(#fechaFinProceso#,'DD/MM/YYYY HH24:MI'),E.FEC_MODI))
	   ]]>
	   </isNotEmpty>			
		<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		              				 E.COD_REGI  = #regionList[]#
	    </iterate>  
		<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		              				 E.COD_ZONA   = #zonaList[]#
	    </iterate>     	
	   GROUP BY  B.DES_TIPO_DOCU
			<isNotEmpty property="agruFecDigi">
                      ,TO_CHAR(E.FEC_DIGI,'DD/MM/YYYY')
            </isNotEmpty>
			<isNotEmpty property="agruFecProce">
                     ,TO_CHAR(E.FEC_MODI,'DD/MM/YYYY')
            </isNotEmpty>
 			<isNotEmpty property="agruLote">
                     ,E.NUM_LOTE
            </isNotEmpty>
 			<isNotEmpty property="agruRegion">
                     ,X.DES_REGI
            </isNotEmpty>
			<isNotEmpty property="agruZona">
                     ,E.COD_ZONA
            </isNotEmpty>
			<isNotEmpty property="agrupacionClinte">
                     ,E.COD_CLIE
            </isNotEmpty>	
            <isNotEmpty property="agruPeriodo">
                     ,E.COD_PERI
            </isNotEmpty>	
            <isNotEmpty property="agruNumeroPreimpreso">
                     ,E.NUM_DOCU
            </isNotEmpty> 		
            <isNotEmpty property="isActualizacionDatos">
            	     ,E.SEC_NUME_DOCU
            </isNotEmpty>	
            <isNotEmpty property="isCuponPago">
            	     ,E.SEC_NUME_DOCU
            </isNotEmpty>
		ORDER BY  
		    <isNotEmpty property="agrupacionClinte">
                     E.COD_CLIE,
            </isNotEmpty>
			<isNotEmpty property="agruZona">
                     E.COD_ZONA,
            </isNotEmpty>	
			<isNotEmpty property="agruRegion">
                     X.DES_REGI,
            </isNotEmpty>
			<isNotEmpty property="agruLote">
                     E.NUM_LOTE,
            </isNotEmpty>
			<isNotEmpty property="agruFecDigi">
                     TO_CHAR(E.FEC_DIGI,'DD/MM/YYYY'),
            </isNotEmpty>
			<isNotEmpty property="agruFecProce">
                     TO_CHAR(E.FEC_MODI,'DD/MM/YYYY'),
            </isNotEmpty>
            <isNotEmpty property="agruPeriodo">
                     E.COD_PERI,
            </isNotEmpty>	
             <isNotEmpty property="agruNumeroPreimpreso">
                     E.NUM_DOCU,
             </isNotEmpty> 			
				     B.DES_TIPO_DOCU 
	</select>

    <parameterMap id="executeAlmacenamientoSTOHistoricoParams" class="map" >
		<parameter property="codigoPais"        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="numLote"	   	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaInicio"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="fechaFin"	        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoTipo"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    
   <procedure id="executeOCCHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_ORDEN_COMPR(?,?,?,?,?,?)}
    </procedure>
	
	 <procedure id="executeSCCHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_SOLIC_CREDI(?,?,?,?,?,?)}
    </procedure>

	 <procedure id="executeSPVCHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_SOLIC_POVEN(?,?,?,?,?,?)}
    </procedure>

    <procedure id="executeSADHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_ACTUA_DATOS(?,?,?,?,?,?)}
    </procedure>
    
    <procedure id="executeDCYZHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_DUPLA_CYZON(?,?,?,?,?,?)}
    </procedure>

	<procedure id="executeCUPHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_CUPON_PAGO(?,?,?,?,?,?)}
    </procedure>

	<procedure id="executeOTHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_ORDEN_TRANS(?,?,?,?,?,?)}
    </procedure>

	<procedure id="executeSIMHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_INGRE_METAS(?,?,?,?,?,?)}
    </procedure>

    <procedure id="executeFASHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.sto_pr_histo_famil_segur(?,?,?,?,?,?)}
    </procedure>
    
    <procedure id="executeCIFHistorico"  parameterMap="executeAlmacenamientoSTOHistoricoParams" >
		{call STO_PKG_PROCE_GENER.sto_pr_histo_carta_flexi(?,?,?,?,?,?)}
    </procedure>
    

    <select id="getTiposDocumentosHistoricoSTO" parameterClass="java.util.Map" resultMap="baseResult">
     	SELECT DISTINCT T.COD_TIPO_DOCU CODIGO,
		       T.DES_TIPO_DOCU DESCRIPCION
		  FROM STO_TIPO_DOCUM_DIGIT T , SEG_USUAR U, SEG_USUAR_ROL UR, STO_TIPO_DOCUM_ROL S
		 WHERE U.COD_USUA = UR.USUA_COD_USUA 
		     AND UR.PAIS_COD_PAIS = S.COD_PAIS
			 AND S.COD_PAIS=T.COD_PAIS
			  AND UR.ROL_COD_ROL = S.ROL_COD_ROL
			 AND S.COD_TIPO_DOCU = T.COD_TIPO_DOCU
			AND S.EST_DOCU_ROL='1'
			AND UR.EST_UROL = '1'
			AND U.USE_USUA = #codigoUsuario#
			AND UR.PAIS_COD_PAIS = #codigoPais#
		     AND  T.IND_CABE = '1'
		 ORDER BY T.COD_TIPO_DOCU
	</select>

	<select id="getParametroSTO" parameterClass="java.util.Map" resultClass="java.lang.String">
     	SELECT STO_PKG_GENER.STO_FN_OBTEN_PARAM_OCR(#codigoPais#,#codigoParametro#) FROM DUAL	 
	</select>

	<select id="getSecuenciaSTONextValue" resultClass="string">
   		 SELECT SEQ_DOCU_STO.NEXTVAL FROM DUAL
    </select>
    
	<insert id="insercionDetalles" parameterClass="java.util.Map">
    	
	    INSERT INTO INT_SOLIC_CONSO_DETAL
			  (COD_PAIS,
			   COD_PERI,
			   COD_CLIE,
			   COD_VENT,
			   TIP_POSIC,
			   DES_PROD,
			   VAL_UNID_DEM,
			   STA_PROC,
			   IND_COMP_MTMI,
			   FEC_DIGI,
			   VAL_UNID_COMP,
			   IND_ERRO_RECH,
			   NUM_LOTE,
			   IND_ERRO_SSE,
			   SEC_NUME_DOCU,
			   VAL_PREC_CATA_UNIT_LOCA,
			   IND_ENVI_STO,
			   USU_DIGI,
			   SEC_NUME_DOCU_CABE,
			   IND_RECE_OCR,
			   IND_RECE_WEB,
			   IND_RECE_DD,
			   IND_RECE_DIGI,
			   IND_RECE_CC,
			   IND_RECE_MENS,  
			   IND_RECE_ONLI,
			   IND_RECE_IVR)
			VALUES
			  (#codigoPais#,
			   #codigoPeriodo#,			   			   
			   (SELECT cod_clie 
			      FROM sto_docum_digit 
			     WHERE sec_nume_docu = #numSecuenciaCabecera#
			       AND num_lote =  #numLote#
			       AND cod_tipo_docu = 'OCC'),
			   #codigoVenta#,
			   #tipoPosicion#,
			   #desProducto#,
			   #numUnidades#,
			   'A',
			   '0',
			   SYSDATE,
			   0,
			   '0',
			   #numLote#,
			   '0',
			   #numSecuencia#,
			   #precioCatalogo#,
			   '1',
			   #usuario#,
			   #numSecuenciaCabecera#,
			   '0',
			   '0',
			   '0',
			   '0',
			   '0',
			   '0',
			   '0',
			   '0'
			   )
	   
	</insert>

    <insert id="insercionDetallesSTODocumDigit" parameterClass="java.util.Map">
    	
	    INSERT INTO STO_DOCUM_DIGIT
			  (COD_PAIS,
			   COD_TIPO_DOCU,
			   NUM_LOTE,
			   SEC_NUME_DOCU,
			   IND_ENVI,
			   IND_RECH,
			   FEC_DIGI,
			   COD_ZONA,
			   COD_CLIE,
			   COD_REGI,
			   SEC_NUME_DOCU_CABE,
			   COD_PERI,
			   USU_DIGI,
			   FEC_MODI,
			   USU_MODI,
			   IND_RECE_OCR,
			   IND_RECE_WEB,
			   IND_RECE_DD,
			   IND_RECE_DIGI,
			   IND_RECE_CC,
			   IND_RECE_MENS,  
			   IND_RECE_ONLI,
			   IND_RECE_IVR
			   )
			VALUES
			  (#codigoPais#,
			   'OCD',
			   #numLote#,
			   #numSecuencia#,
			   '0',
			   '0',
			   SYSDATE,
			   #codZona#,
			   #codigoCliente#,
			   #codRegion#,
			   #numSecuenciaCabecera#,
			   #codigoPeriodo#,
			   #usuario#,
			   SYSDATE,
			   #usuario#,
			   '0',
			   '0',
			   '0',
			   '0',
			   '0',
			   '0',
			   '0',
			   '0')	   
	</insert>
	

	
	<select id="getDetallesOCC" parameterClass="java.util.Map" resultMap="ordenCompraDetalleResult">
		  SELECT COD_PAIS COD_PAIS,
				 D.COD_PERI COD_PERI,
		         D.COD_CLIE COD_CLIE,
		         D.COD_VENT COD_VENT,
		         D.TIP_POSIC TIP_POSIC,
		         D.VAL_UNID_DEM VAL_UNID_DEM,
		         D.STA_PROC STA_PROC,
		         D.NUM_LOTE NUM_LOTE,
		         D.DOCU_NUM_DOCU DOCU_NUM_DOCU,
		         D.COD_MOTI_RECH COD_MOTI_RECH,
		         D.SEC_NUME_DOCU SEC_NUME_DOCU,
		         D.DES_PROD DES_PROD,
		         D.VAL_PREC_CATA_UNIT_LOCA VAL_PREC_CATA_UNIT_LOCA,
		         DECODE(D.VAL_PREC_CATA_UNIT_LOCA, NULL, 0,D.VAL_PREC_CATA_UNIT_LOCA * D.VAL_UNID_DEM) TOTAL,
		       (SELECT SUM(B.VAL_SALD)  FROM BEL_STOCK B WHERE D.PROD_OID_PROD = B.PROD_OID_PROD GROUP BY B.PROD_OID_PROD ) STOCK,       
		       (SELECT COUNT (1) FROM STO_DETAL_DOCUM_EXCEP E WHERE E.COD_PAIS = #codigoPais# AND E.COD_TIPO_DOCU = #tipoDocumento# AND E.SEC_NUME_DOCU = D.SEC_NUME_DOCU) IND_ERRO
		    FROM INT_SOLIC_CONSO_DETAL D
		   WHERE D.COD_PAIS =#codigoPais#
		     AND D.NUM_LOTE = #numLote#
		     AND D.COD_PERI = #codPeriodo#
		     AND D.COD_CLIE = #codCliente#
		     AND D.STA_PROC = 'A'

</select>
	
	<delete id="deleteDocumExecepciones" parameterClass="java.util.Map">
       delete from sto_detal_docum_excep 
       where  COD_PAIS=#codigoPais#
       		 AND SEC_NUME_DOCU=#numSecuencia#
       		  AND NUM_LOTE=#numLote#
    </delete>
    
    <delete id="deleteDocumDigitados" parameterClass="java.util.Map">
       delete from STO_DOCUM_DIGIT
       WHERE COD_PAIS=#codigoPais#
       		  AND SEC_NUME_DOCU=#numSecuencia#
       		  AND NUM_LOTE=#numLote#
    </delete>
    
       <delete id="deleteConsolidado" parameterClass="java.util.Map">
       delete from INT_SOLIC_CONSO_DETAL
        where COD_PAIS = #codigoPais#
              AND COD_PERI=#codPeriodo#
              AND NUM_LOTE=#numLote#
              AND COD_CLIE=#codCliente#
              AND COD_VENT=#codigoVenta#
    </delete>
    
    <update id="updateDetalle" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_DETAL
			   SET VAL_UNID_DEM=#unidades#,
			   	   FEC_MODI= SYSDATE,
			   	   USU_MODI=#usuario#
			 WHERE COD_PAIS = #codigoPais#
			   AND COD_PERI = #codPeriodo#
			   AND COD_CLIE = #codCliente#
			   AND NUM_LOTE= #numLote#
			   AND COD_VENT=#codigoVenta#
  	</update>
   
     <update id="updateCabeceraDesactiva" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CABEC
			   SET IND_ERRO_MTMI='0',
			       IND_ERRO_MTMA='0',
			       VAL_MONT_PEDI=NULL
			 WHERE COD_PAIS = #codigoPais#
			   AND COD_PERI = #codPeriodo#
			   AND COD_CLIE = #codCliente#
			   AND NUM_LOTE= #numLote#
		
  	</update>
    
	<select id="getIndicadorMontoMinimo" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		SELECT IND_VAL_MTMI
		  FROM INT_SOLIC_CONSO_CABEC A
		 WHERE A.COD_PAIS = #codigoPais#
		   AND A.COD_PERI=#codPeriodo#
		   AND A.COD_CLIE=#codCliente#
		   AND A.NUM_LOTE=#numLote#
	</select>
	
	<select id="getIndicadorMontoMaximo" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		SELECT IND_VAL_MTMA
		  FROM INT_SOLIC_CONSO_CABEC A
		 WHERE A.COD_PAIS = #codigoPais#
		   AND A.COD_PERI=#codPeriodo#
		   AND A.COD_CLIE=#codCliente#
		   AND A.NUM_LOTE=#numLote#
	</select>
	
	<parameterMap id="executeMontosParams" class="map" >
		<parameter property="codigoPais"        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codPeriodo"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codCliente"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="numLote"	        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>

  <parameterMap id="STOClasificaParams" class="map" >		    
  		<parameter property="codCliente"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  </parameterMap>

  <procedure id="executeClasificacionConsultora" parameterMap="STOClasificaParams">
    {call sto_pkg_gener.sto_pr_clasi_consu(?)}    	
  </procedure>
  
<select id="getClasificacionConsultora" parameterClass="java.util.Map" resultMap="clasificacionConsultoraResult">
		SELECT T.DESC_CLASI,
		       T.DESC_TIPO_CLAS,
		       T.COD_TIPO_CLIE,
		       T.COD_SUBT_CLIE,
		       T.COD_TIPO_CLAS,
		       T.COD_CLAS,
		       T.IND_ORDE
		  FROM GTT_STO_CLASI_CONSU T
</select>

  <resultMap id="getEstadisticaUltimasCampanasResult"  class="java.util.HashMap">
		<result property="descripcion"	    column="DESCRIPCION"/>
		<result property="total"      column="TOTAL"/>
  </resultMap>
  
   <select id="getEstadisticaUltimasCampanas" parameterClass="java.util.Map" resultMap="getEstadisticaUltimasCampanasResult">
SELECT TEMP.DESCRIPCION, TEMP.TOTAL
FROM (
	select OP.val_desc_larg AS DESCRIPCION, COUNT(O.OID_OPER_RECL) AS TOTAL, 1 AS ORDEN
	from rec_cabec_recla r,
	     rec_opera_recla o,
	     rec_tipos_opera top,
	     rec_opera op,
	     mae_clien m
	where r.PERD_OID_PERI_RECL >= 
	(
	    SELECT OID_PERI
	    FROM ( SELECT ROWNUM FILA,
	             C.OID_PERI,
	             C.VAL_NOMB_PERI,
	             C.FEC_INIC
	    FROM CRA_PERIO C
	    <![CDATA[
	    WHERE FEC_INIC <= TRUNC(SYSDATE)
	    ]]>
	    ORDER BY FEC_INIC DESC
	    ) A
	    WHERE  A.FILA = (
	                    SELECT P.VAL_PARAM
	                    FROM STO_PARAM_GENER_OCCRR P
	                    WHERE P.COD_PAIS = #codigoPais#
	                          AND P.COD_PARA = 'STO_CANT_CAMP'
	                    )
	)
	and o.care_oid_cabe_recl = r.oid_cabe_recl
	and o.ESOP_OID_ESTA_OPER in (5,2)
	and o.TIOP_OID_TIPO_OPER = top.oid_tipo_oper
	and top.rope_oid_oper = op.OID_OPER 
	and op.COD_OPER in ( 'DN','CM','FM','FA','TM')
	AND r.clie_oid_clie = m.oid_clie
	AND m.cod_clie = #codCliente#
	group by OP.val_desc_larg
	UNION
	select 'Pedidos' AS DESCRIPCION,count(p.oid_soli_cabe) AS TOTAL, 2 AS ORDEN
	from ped_solic_cabec p,
	    mae_clien m
	where p.tspa_oid_tipo_soli_pais = (select p2.oid_tipo_soli_pais  from Ped_Tipo_Solic p1, Ped_Tipo_Solic_pais p2
	                                       where p1.oid_tipo_soli = p2.tsol_oid_tipo_soli
	                                       and p1.cod_tipo_soli = 'SOC')
	and p.perd_oid_peri >= 
	(
		    SELECT OID_PERI
		    FROM ( SELECT ROWNUM FILA,
		             C.OID_PERI,
		             C.VAL_NOMB_PERI,
		             C.FEC_INIC
		    FROM CRA_PERIO C
		    <![CDATA[
		    WHERE FEC_INIC <= TRUNC(SYSDATE)
		    ]]>
		    ORDER BY FEC_INIC DESC
		    ) A
		    WHERE  A.FILA = (
		                    SELECT P.VAL_PARAM
		                    FROM STO_PARAM_GENER_OCCRR P
		                    WHERE P.COD_PAIS = #codigoPais#
		                          AND P.COD_PARA = 'STO_CANT_CAMP'
		                    )
	)
	and p.esso_oid_esta_soli = 1
	and p.clie_oid_clie = m.oid_clie 
	and m.cod_clie = #codCliente#
	and not exists (
	                select 1
	                from ped_solic_cabec
	                where oid_soli_cabe = p.soca_oid_soli_cabe 
	                and esso_oid_esta_soli = 4
	                )
	 ) TEMP
	ORDER BY ORDEN ASC
	</select>
    
    <procedure id="executeMontoMinimo"  parameterMap="executeMontosParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_MONTO_MINIM(?,?,?,?)}
    </procedure>
    
     <procedure id="executeMontoMaximo"  parameterMap="executeMontosParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_MONTO_MAXIM(?,?,?,?)}
    </procedure>
    
    <procedure id="executeRevertirMontoMinimo"  parameterMap="executeMontosParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_REVER_MONTO_MINIM(?,?,?,?)}
    </procedure>
    
     <procedure id="executeRevertirMontoMaximo"  parameterMap="executeMontosParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_REVER_MONTO_MAXIM(?,?,?,?)}
    </procedure>
    
    <select id="verificacionDetalles" parameterClass="java.util.Map" resultMap="baseResult">
     	SELECT T.COD_PAIS CODIGO,
		       T.COD_PERI DESCRIPCION
		  FROM INT_SOLIC_CONSO_DETAL T
		 WHERE T.COD_PAIS=#codigoPais#
		 AND   T.COD_PERI=#periodo#
		 AND   T.COD_CLIE=#codCliente#
		 AND   T.NUM_LOTE=#numLote#
		 AND   T.COD_VENT=#codigoVenta#	 
	</select>
	
	 <select id="getListExcepciones" parameterClass="java.util.Map" resultMap="baseResult">
     	SELECT T.COD_PAIS CODIGO,
	          T.COD_VALI DESCRIPCION
	FROM STO_DETAL_DOCUM_EXCEP T
	WHERE T.COD_PAIS=#codigoPais#
     AND  T.COD_TIPO_DOCU='OCC'     
	 AND  T.NUM_LOTE=#numLote#
	 AND  T.SEC_NUME_DOCU=#numSecuencia#
	 AND (T.COD_VALI=#valMinimo# OR T.COD_VALI=#valMaximo#)
		 
	</select>
	    
   <select id="getIndicadorSTO" parameterClass="java.util.Map" resultClass="string">
   		 SELECT STO_PKG_GENER.STO_FN_DEVUE_INDIC_ACTIV_STO(#codigoPais#,#tipoDocumento#) FROM DUAL
    </select>
    
	<select id="getActualizacionDatos" parameterClass="java.util.Map" resultMap="actualizacionDatosResult">
		  SELECT COD_PAIS AS COD_PAIS,             
COD_COMP AS COD_COMP,             
COD_CLIE AS COD_CLIE,             
NUM_DOCU AS NUM_DOCU,             
TO_CHAR(FEC_PROC,'DD/MM/YYYY') AS FEC_PROC,             
UNI_ADMI AS UNI_ADMI,                         
COD_PERI AS COD_PERI,                        
VAL_APE1 AS VAL_APE1,             
VAL_APE2 AS VAL_APE2,             
VAL_NOM1 AS,VAL_NOM1,              
VAL_NOM2 AS VAL_NOM2,                         
TIP_DOCU AS TIP_DOCU,             
NUM_DOCU_IDEN AS NUM_DOCU_IDEN,   
NUM_RUC AS NUM_RUC,               
VAL_DIRE_CLIE AS VAL_DIRE_CLIE,   
VAL_BARR_CLIE AS VAL_BARR_CLIE,   
VAL_CIUD_CLIE AS VAL_CIUD_CLIE,   
VAL_DEPA_CLIE AS VAL_DEPA_CLIE,   
VAL_TELF_CLIE AS VAL_TELF_CLIE,   
VAL_CELU_CLIE AS VAL_CELU_CLIE,   
VAL_TELF_TRAB AS VAL_TELF_TRAB,   
VAL_MAIL_CLIE AS VAL_MAIL_CLIE,     
VAL_BARR_ARRI AS VAL_BARR_ARRI ,  
VAL_ZONA_ARRI AS VAL_ZONA_ARRI,   
IND_STAT_PROC AS IND_STAT_PROC,   
DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,IND_MOTI_RECH), NULL, IND_MOTI_RECH,STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,IND_MOTI_RECH))AS  IND_MOTI_RECH,  
TIP_VIA_CLIE  AS TIP_VIA_CLIE,   
VAL_NOMB_VICL AS VAL_NOMB_VICL,   
NUM_DIRE_CLIE AS NUM_DIRE_CLIE,   
COD_DEPA_CLIE AS COD_DEPA_CLIE,   
COD_PROV_CLIE AS COD_PROV_CLIE,   
COD_DIST_CLIE AS COD_DIST_CLIE,   
COD_SECT_CLIE AS COD_SECT_CLIE,   
DOCU_COD_TIPO_DOCU AS DOCU_COD_TIPO_DOCU,
SEC_NUME_DOCU AS SEC_NUME_DOCU,
NUM_LOTE AS NUM_LOTE,
VAL_DIRE_ENTRE_CLIE AS VAL_DIRE_ENTRE_CLIE,
VAL_TELE_ENTRE_CLIE AS VAL_TELE_ENTRE_CLIE,
VAL_CELU_ENTRE_CLIE AS VAL_CELU_ENTRE_CLIE,
			IND_DIRE AS IND_DIRE,
			CIUD_COD_CIUD_DOMI,
			CIUD_COD_UGEO_REGI_DOMI,
			DES_VILLA_POBL_DOMI,
			CIUD_COD_CIUD_ENTR,
			CIUD_COD_UGEO_REGI_ENTR,
			DES_VILLA_POBL_ENTR,
			COD_NACI,
			COD_TERR_CORR,
			IND_DIRD_DIRE,
			DOM_MANZ,
			DOM_ETAP,
			DOM_CALL_PRIN,
			DOM_CALL_SECU,
			DOM_NUM,
			DOM_REFE,
			val_barr_entre_clie,
			ENT_MANZ,
			ENT_ETAP,
			ENT_NUM,
			ENT_CALL_PRIN,
			ENT_CALL_SECU,
			ENT_REFE
		  FROM INT_SOLIC_CONSO_ACTUA_DATOS  
		  WHERE COD_PAIS=#codigoPais#
				AND DOCU_COD_TIPO_DOCU=#codigoTipo#
				AND NUM_LOTE =#numLote#
				AND SEC_NUME_DOCU=#numDocumento#
				
</select>

<update id="updateActualizacionDatos" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_ACTUA_DATOS
			  SET
                  COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  COD_COMP=#codCompania#,
				 UNI_ADMI=#uniAdministrativa#,
				  VAL_APE1=#apellido1#,
				  VAL_APE2=#apellido2#,
				  VAL_NOM1=#nombre1#,
                  VAL_NOM2=#nombre2#,
				  TIP_DOCU=#tipoDocumento#,
				  NUM_DOCU_IDEN=#numDocuIdentidad#,
				  NUM_RUC=#numRUC#,
				  VAL_DIRE_CLIE=#direcCliente#,
				  VAL_BARR_CLIE=#barrioCliente#,
				  VAL_CIUD_CLIE=#ciudadCliente#,
				  VAL_DEPA_CLIE=#depaCliente#,
				  VAL_TELF_CLIE=#telfCliente#,
				  VAL_CELU_CLIE=#celularCliente#,
				  VAL_TELF_TRAB=#telfTrabajoCliente#,
				  VAL_MAIL_CLIE=#email#,
				  VAL_BARR_ARRI=#codRegion#,
				  VAL_ZONA_ARRI=#codZona#,
				  IND_STAT_PROC=#indEstaProceso#,
				  IND_MOTI_RECH =#indMotivoRechazo#,
				  TIP_VIA_CLIE=#tipoViaCliente#,
				  VAL_NOMB_VICL=#nombreVia#,
				  NUM_DIRE_CLIE=#numDireCliente#,
				  COD_DEPA_CLIE=#codDepaCliente#,
				  COD_PROV_CLIE=#codProvCliente#,
				  COD_DIST_CLIE=#codDistCliente#,
				  COD_SECT_CLIE=#codSectCliente#,
				  FEC_PROC=TO_DATE(#fecProceso#,'DD/MM/YYYY'),
				  VAL_DIRE_ENTRE_CLIE=#direccionEntrega#,
				  VAL_TELE_ENTRE_CLIE=#telefonoEntrega#,
				  VAL_CELU_ENTRE_CLIE=#celularEntrega#,
				  IND_DIRE = #indicadorValidacionOK#,
				  CIUD_COD_CIUD_DOMI =#codigoCiudadDomicilio#,
				  CIUD_COD_UGEO_REGI_DOMI=#codigoCiudadDomicilio#,
				  DES_VILLA_POBL_DOMI=#villaPoblacionDomicilio#,
				  CIUD_COD_CIUD_ENTR=#codigoCiudadEntrega#,
				  CIUD_COD_UGEO_REGI_ENTR=#codigoCiudadEntrega#,
				  DES_VILLA_POBL_ENTR =#villaPoblacionEntrega#,
				  COD_NACI = #nacionalidad#,
				  COD_TERR_CORR = #territorioCorresponde#,
				  IND_DIRD_DIRE = #direccionDomicilioIgualDireccionEntrega#,
				  DOM_MANZ = #dirDomManzana#,
				  DOM_ETAP = #dirDomEtapa#,
				  DOM_CALL_PRIN = #dirDomCallePrincipal#,
				  DOM_CALL_SECU = #dirDomCalleSecundaria#,
				  DOM_NUM = #dirDomNumero#,
				  DOM_REFE = #dirDomReferencia#,
				  val_barr_entre_clie = #dirEntBarrio#,
				  ENT_MANZ = #dirEntManzana#,
				  ENT_ETAP = #dirEntEtapa#,
				  ENT_NUM = #dirEntNumero#,
				  ENT_CALL_PRIN = #dirEntCallePrincipal#,
				  ENT_CALL_SECU = #dirEntCalleSecundaria#,
				  ENT_REFE = #dirEntReferencia#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				   AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>

<select id="getDuplaCyzone" parameterClass="java.util.Map" resultMap="duplaCyzoneResult">
		  SELECT COD_PAIS AS COD_PAIS,             
		  		COD_COMP AS COD_COMP,             
		  		COD_CLIE AS COD_CLIE,             
				NUM_DOCU AS NUM_DOCU,     
				TO_CHAR(FEC_NACI,'DD/MM/YYYY') AS FEC_NACI,        
				TO_CHAR(FEC_PROC,'DD/MM/YYYY') AS FEC_PROC,                                    
				COD_PERI AS COD_PERI,                        
				VAL_APE1 AS VAL_APE1,             
				VAL_APE2 AS VAL_APE2,             
				VAL_NOM1 AS,VAL_NOM1,              
				VAL_NOM2 AS VAL_NOM2,                         
				IND_DUPL_NUEV AS IND_DUPL_NUEV,
				IND_ACTU_DATO AS IND_ACTU_DATO,
				IND_ENVI AS IND_ENVI,
				VAL_TELF_CLIE AS VAL_TELF_CLIE,   
				VAL_CELU_CLIE AS VAL_CELU_CLIE,   
				VAL_MAIL_CLIE AS VAL_MAIL_CLIE,     
				COD_REGI_ARRI AS COD_REGI_ARRI,  
				COD_ZONA_ARRI AS COD_ZONA_ARRI,   
				COD_STAT_PROC AS COD_STAT_PROC,   
				DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH), NULL, COD_MOTI_RECH,STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH))AS  COD_MOTI_RECH,  
				DOCU_COD_TIPO_DOCU AS DOCU_COD_TIPO_DOCU,
				SEC_NUME_DOCU AS SEC_NUME_DOCU,
				NUM_LOTE AS NUM_LOTE
		  FROM INT_SOLIC_CONSO_DUPLA_CYZON 
		  WHERE COD_PAIS=#codigoPais#
				AND DOCU_COD_TIPO_DOCU=#codigoTipo#
				AND NUM_LOTE =#numLote#
				AND SEC_NUME_DOCU=#numDocumento#
				
</select>

<update id="updateDuplaCyzone" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_DUPLA_CYZON
			  SET
                  COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  COD_COMP=#codCompania#,
				  VAL_APE1=#apellido1#,
				  VAL_APE2=#apellido2#,
				  VAL_NOM1=#nombre1#,
                  VAL_NOM2=#nombre2#,
				  VAL_TELF_CLIE=#telfCliente#,
				  VAL_CELU_CLIE=#celularCliente#,
				  VAL_MAIL_CLIE=#email#,
				  COD_REGI_ARRI=#codRegion#,
				  COD_ZONA_ARRI=#codZona#,
				  COD_STAT_PROC=#indEstaProceso#,
				  COD_MOTI_RECH =#indMotivoRechazo#,
			      IND_DUPL_NUEV=#indDuplaNueva#,
				  IND_ENVI=#indEnvio#,
				  IND_ACTU_DATO=#indActuDatos#,
				  FEC_PROC=TO_DATE(#fecProceso#,'DD/MM/YYYY'),
	 			  FEC_NACI= TO_DATE(#fecNacimiento#,'DD/MM/YYYY')
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				  AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>

<select id="getCuponPago" parameterClass="java.util.Map" resultMap="cuponPagoResult">
		  SELECT COD_PAIS AS COD_PAIS,             
		  		COD_COMP AS COD_COMP,             
		  		COD_CLIE AS COD_CLIE,             
				NUM_DOCU AS NUM_DOCU,        
				TO_CHAR(FEC_PROC,'DD/MM/YYYY') AS FEC_PROC,                                    
				COD_PERI AS COD_PERI,                        
				COD_REGI AS COD_REGI,  
				COD_ZONA AS COD_ZONA,   
				STA_PROC AS STA_PROC,   
				DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH), NULL, COD_MOTI_RECH,STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH))AS  COD_MOTI_RECH,  
				TRIM(TO_CHAR(IMP_VALO,'9999999999999.99')) IMP_VALO,
			    VAL_DEUD AS VAL_DEUD,
			    STA_CUPO AS STA_CUPO,
			    IND_RECH_SELL AS IND_RECH_SELL,
			    DOCU_COD_TIPO_DOCU AS DOCU_COD_TIPO_DOCU,
				SEC_NUME_DOCU AS SEC_NUME_DOCU,
				NUM_LOTE AS NUM_LOTE,
				COD_VERI AS COD_VERI,
				COD_ZONA_ARRI
		  FROM INT_SOLIC_CONSO_CUPON_PAGO 
		  WHERE COD_PAIS=#codigoPais#
				AND DOCU_COD_TIPO_DOCU=#codigoTipo#
				AND NUM_LOTE =#numLote#
				AND SEC_NUME_DOCU=#numDocumento#
				
</select>

<update id="updateCuponPago" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CUPON_PAGO
			  SET
                  COD_PERI= #codPeriodo#,
			   	  COD_CLIE =#codCliente#,
				  COD_COMP=#codCompania#,
				  COD_REGI=#codRegion#,
				  COD_ZONA=#codZona#,
                  IMP_VALO=TO_NUMBER(#impValor#,'9999999999999.99'),
				  STA_CUPO=#estadoCupon#,
				  IND_RECH_SELL=#indRechazoSello#,
				  VAL_DEUD=#valorDeuda#,
				  STA_PROC=#indEstaProceso#,
				  COD_MOTI_RECH =#indMotivoRechazo#,
				  FEC_PROC=TO_DATE(#fecProceso#,'DD/MM/YYYY'),
	 			  COD_VERI=(SELECT COD_DIGI_CTRL FROM MAE_CLIEN A WHERE A.COD_CLIE= #codCliente#),
	 			  COD_ZONA_ARRI = #codigoZonaArribo#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				  AND SEC_NUME_DOCU=#numSecDocumento#
			   
  	</update>

<select id="getCuponesRechazoSello" parameterClass="java.util.Map" resultMap="cuponRechazoSelloResult">
		SELECT A.COD_PAIS,
			   A.COD_CLIE,
		       A.NUM_DOCU,
		       TRIM(TO_CHAR(A.IMP_VALO,'9999999999999.99')),
		       A.IND_RECH_SELL
		       
		FROM int_solic_conso_cupon_pago A
		WHERE
		      A.COD_PAIS =#codigoPais#
		      <isNotEmpty property="codigoCliente">
                  AND (A.COD_CLIE like #codigoCliente# )
             </isNotEmpty>	
			 <isNotEmpty property="numDocu">
                  AND (A.NUM_DOCU = #numDocu# )
             </isNotEmpty>
	</select>

<update id="bloqueoCuponSTO" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CUPON_PAGO
			  SET
				  IND_RECH_SELL='1'
				  	 			  
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_DOCU =#numDocumento#

			   
  	</update>

	<update id="desbloqueoCuponSTO" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CUPON_PAGO
			  SET
				  IND_RECH_SELL='0'
				  	 			  
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_DOCU =#numDocumento#

			   
  	</update>


<select id="getMotivosRechazo" parameterClass="java.util.Map" resultMap="baseResult">
     select 
            t.cod_moti_rech AS CODIGO, 
            t.des_moti_rech AS DESCRIPCION
     from sto_recha_motiv t 
     where t.cod_pais=#codigoPais#
       and t.cod_tipo_docu =#tipoDocumento#
	   AND COD_MODU='STO'
	   AND IND_AUTO='0'
	</select>

<select id="getAccionesByRol" parameterClass="java.util.Map" resultMap="accesoRolSTOResult">
	SELECT A.COD_PAIS AS COD_PAIS,
           A.COD_TIPO_DOCU AS COD_TIPO_DOCU,     
           NULL AS COD_ACCI,     
	       1 AS NIV_ACCI,     
           A.COD_TIPO_DOCU AS DES_ACCI,     
           NULL AS IND_ACTI,     
	      (SELECT COUNT(1) FROM STO_TIPO_DOCUM_ROL R WHERE  R.COD_TIPO_DOCU=A.COD_TIPO_DOCU AND         
	       R.ROL_COD_ROL=#codigoRol# AND  R.EST_DOCU_ROL='1') AS ESTADO  
	FROM  STO_TIPO_DOCUM_DIGIT A    
	WHERE A.COD_PAIS=#codigoPais#   
 	  AND A.IND_CABE='1'
	
	  UNION    

	SELECT AC.COD_PAIS AS COD_PAIS,			
		    AC.COD_TIPO_DOCU AS COD_TIPO_DOCU,
		    AC.COD_ACCI AS COD_ACCI, 
            AC.NIV_ACCI AS NIV_ACCI, 
            AG.DES_ACCI AS DES_ACCI, 
            AC.IND_ACTI AS IND_ACTI,
	       (SELECT COUNT(1) FROM STO_TIPO_DOCUM_ACCIO_ROL R WHERE R.COD_ACCI=AC.COD_ACCI AND R.COD_TIPO_DOCU=AC.COD_TIPO_DOCU AND
	       R.ROL_COD_ROL=#codigoRol# AND  R.EST_DOCU_ACCI_ROL='1') AS ESTADO
	FROM STO_TIPO_DOCUM_ACCIO AC, STO_ACCIO_GESTI AG
    WHERE AC.COD_PAIS=#codigoPais#
	  AND AC.COD_PAIS=AG.COD_PAIS
	  AND AC.COD_ACCI=AG.COD_ACCI
	  AND AC.IND_ACTI='1'
   ORDER BY 2,4
	</select>

 <select id="getCodigoRolDocumento" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		SELECT ROL_COD_ROL
		  FROM STO_TIPO_DOCUM_ROL A
		 WHERE  A.COD_TIPO_DOCU = #codigoDocumento#
		  AND A.ROL_COD_ROL=#codigoRol#
	</select>

 <select id="getCodigoRolDocumentoAccion" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		SELECT ROL_COD_ROL
		  FROM STO_TIPO_DOCUM_ACCIO_ROL A
		 WHERE  A.COD_TIPO_DOCU = #codigoDocumento#
		  AND A.ROL_COD_ROL=#codigoRol#
		  AND A.COD_ACCI=#codigoAccion#
	</select>

<insert id="insertRolDocumento" parameterClass="java.util.Map">
    	
	    INSERT INTO STO_TIPO_DOCUM_ROL
			  (COD_PAIS,
			   COD_TIPO_DOCU,
			   ROL_COD_ROL,
			   USU_DIGI,
			   FEC_DIGI,
				EST_DOCU_ROL)
			VALUES
			  (#codigoPais#,
			   #codigoDocumento#,
			   #codigoRol#,
			   #usuario#,
			   SYSDATE,
			   #estado#)
	   
</insert>

<insert id="insertRolDocumentoAccion" parameterClass="java.util.Map">
    	
	    INSERT INTO STO_TIPO_DOCUM_ACCIO_ROL
			  (COD_PAIS,
			   COD_TIPO_DOCU,
			   COD_ACCI,
			   ROL_COD_ROL,
			   USU_DIGI,
			   FEC_DIGI,
			   EST_DOCU_ACCI_ROL)
			VALUES
			  (#codigoPais#,
			   #codigoDocumento#,
			   #codigoAccion#,
			   #codigoRol#,
			   #usuario#,
			   SYSDATE,
			  #estado#)
	   
</insert>

<update id="updateRolDocumento" parameterClass="java.util.Map">
        UPDATE STO_TIPO_DOCUM_ROL A
			  SET  
				  A.EST_DOCU_ROL=#estado#
	 			  
			 WHERE   A.COD_TIPO_DOCU = #codigoDocumento#
		          AND A.ROL_COD_ROL=#codigoRol#
			   
  	</update>

<update id="updateRolDocumentoAccion" parameterClass="java.util.Map">
        UPDATE STO_TIPO_DOCUM_ACCIO_ROL A
			  SET  
				  A.EST_DOCU_ACCI_ROL=#estado#
	 			  
			  WHERE  A.COD_TIPO_DOCU = #codigoDocumento#
		  AND A.ROL_COD_ROL=#codigoRol#
		  AND A.COD_ACCI=#codigoAccion#
			   
  	</update>
 <select id="getAccionEditable" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		 SELECT DISTINCT S.COD_ACCI CODIGO
		  FROM SEG_USUAR                U,
		       SEG_USUAR_ROL            UR,
		       STO_TIPO_DOCUM_ACCIO_ROL S        
		 WHERE U.COD_USUA = UR.USUA_COD_USUA 
		   AND UR.PAIS_COD_PAIS = S.COD_PAIS
		   AND UR.ROL_COD_ROL = S.ROL_COD_ROL	  
		   AND S.COD_ACCI = #codigoAccion#
		   AND U.USE_USUA = #codigoUsuario#   
		   AND S.cod_pais = #codigoPais#
		   AND S.EST_DOCU_ACCI_ROL='1'
		   AND UR.EST_UROL = '1'
		   AND S.COD_TIPO_DOCU =
		       (SELECT DECODE(T.IND_CABE, 1, T.COD_TIPO_DOCU,
		                      T.COD_TIPO_DOCU_CABE)
		          FROM STO_TIPO_DOCUM_DIGIT T
		         WHERE T.COD_TIPO_DOCU = #codigoTipo#)
 
	</select>
	<parameterMap id="executeEnvioMailSCCParams" class="map" >
		<parameter property="codigoPais"            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="numeroProceso"	   	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="tipoDocumento"	        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="observaciones"	        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    
    <procedure id="executeEnvioMailSCC"  parameterMap="executeEnvioMailSCCParams" >
		{call STO_PKG_ENVIO_VALID_SICC.STO_PR_SCC_ENVI_MAIL(?,?,?,?)}
    </procedure>

	<resultMap id="EnvioMailsSCCResult" class="java.util.HashMap">														
		<result property="numeroProceso"       column="NUM_PROCE"/>	        
		<result property="emailGerentaZona"    column="VAL_MAIL_GERE_ZONA"/>	
		<result property="subjectCorreo"       column="VAL_SUBJ"/>	        
		<result property="nombreCliente"       column="VAL_NOMB_CLIE"/>	    
		<result property="tipoDocumento"       column="VAL_TIPO_DOCU"/>	    
		<result property="codigoCliente"       column="COD_CLIE"/>		    
		<result property="indicadorRechazo"    column="IND_RECH"/>
        <result property="observaciones"	   column="VAL_OBSE"/>															
    </resultMap>
    	
    <select id="getEnvioMailsSCCList" parameterClass="java.util.Map" resultMap="EnvioMailsSCCResult">
		SELECT  DISTINCT
		        NUM_PROCE         ,	        
				VAL_MAIL_GERE_ZONA,	
				VAL_SUBJ	      ,  
				VAL_NOMB_CLIE	  , 
				VAL_TIPO_DOCU	  ,
				COD_CLIE		  ,
				IND_RECH		  ,
				VAL_OBSE			
		FROM STO_ENVIO_EMAIL_SCC
		WHERE NUM_PROCE = #numeroProceso#
    </select>

	<resultMap id="EnvioMailsSCCParamsResult" class="java.util.HashMap">																	        	      
		<result property="mailOrigen"          column="VAL_MAIL_ORIG"/>	    
		<result property="plantillaOK"       column="NOM_BOBY_OK"/>	    
		<result property="plantillaRechazo"       column="NOM_BODY_RECH"/>		    													
    </resultMap>

	<select id="getEnvioMailsSCCParams" parameterClass="java.util.Map" resultMap="EnvioMailsSCCParamsResult">
		SELECT  VAL_MAIL_ORIG ,
		        NOM_BOBY_OK   ,
		        NOM_BODY_RECH
		FROM STO_ENVIO_EMAIL_PARAM
		WHERE COD_PAIS = #codigoPais#
		  AND COD_TIPO_DOCU = #tipoDocumento#
	</select>
	
    <delete id="deleteEnvioMailsSCC" parameterClass="java.util.Map">
       delete from STO_ENVIO_EMAIL_SCC where NUM_PROCE = #numeroProceso#
    </delete>


<select id="getBloqueosConsultora" parameterClass="java.util.Map" resultMap="baseResult">
	SELECT I18N.VAL_I18N AS CODIGO,
           TO_CHAR(MCB.FEC_BLOQ,'DD/MM/YYYY') AS DESCRIPCION
	  FROM MAE_CLIEN_BLOQU MCB,
           MAE_TIPO_BLOQU  MTB,
           (SELECT * FROM GEN_I18N_SICC WHERE ATTR_ENTI = 'MAE_TIPO_BLOQU')  I18N,
           MAE_CLIEN M
      WHERE MCB.TIBQ_OID_TIPO_BLOQ = MTB.OID_TIPO_BLOQ 
        AND MCB.FEC_DESB IS NULL
        AND I18N.VAL_OID = MTB.OID_TIPO_BLOQ
        AND MCB.CLIE_OID_CLIE = M.OID_CLIE 
        AND M.COD_CLIE = #codCliente#
	</select>
	
	<select id="getDocumentosReferenciaConsultora" parameterClass="java.util.Map" resultMap="documentoReferenciaResult">

		SELECT CP.VAL_NOMB_PERI,
		       I18N.VAL_I18N,
		       TO_CHAR(PSC.FEC_FACT,'DD/MM/YYYY') FEC_FACT,
		       PSC.VAL_NUME_SOLI
		FROM PED_SOLIC_CABEC PSC,
		     CRA_PERIO CP,
		     MAE_CLIEN MC,
		     PED_TIPO_SOLIC_PAIS PTSP,
		     PED_TIPO_SOLIC PTS,
		     (SELECT * FROM GEN_I18N_SICC WHERE ATTR_ENTI = 'PED_TIPO_SOLIC') I18N
		WHERE PSC.PERD_OID_PERI = CP.OID_PERI
		AND PSC.CLIE_OID_CLIE = MC.OID_CLIE
		AND PSC.TSPA_OID_TIPO_SOLI_PAIS = PTSP.OID_TIPO_SOLI_PAIS
		AND PTSP.TSOL_OID_TIPO_SOLI = PTS.OID_TIPO_SOLI
		AND PTS.IND_CONS = 1
		AND PTS.OID_TIPO_SOLI = I18N.VAL_OID
		AND EXISTS (
		    SELECT 1
		    FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP
		    WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = PSC.TSPA_OID_TIPO_SOLI_PAIS
		)
		AND MC.COD_CLIE =#codigoCliente#
		ORDER BY CP.OID_PERI DESC, PSC.FEC_FACT DESC
	</select>
	
<insert id="insertCuponPago" parameterClass="java.util.Map">
    	
	    INSERT INTO INT_SOLIC_CONSO_CUPON_PAGO
			  (COD_PAIS,
			   COD_COMP,
			   NUM_DOCU,
			   COD_REFE_PAGO,
			   COD_CLIE,
			   IMP_VALO,
			   FEC_PROC,
			   COD_REGI,
			   COD_ZONA,
			   STA_PROC,
			   COD_MOTI_RECH,
			   DOCU_COD_TIPO_DOCU,
			   NUM_LOTE,
			   SEC_NUME_DOCU,
			   COD_PERI,
			   IND_RECH_SELL,
			   COD_VERI)
			VALUES
			  (#codigoPais#,
			   #codigoCompania#,
			   #caracterDocumento#||LPAD(#secuenciaCupon#,6,'0'),
			   <isNotEmpty property="numeroCuponPago">
			   #numeroCuponPago#,
			   </isNotEmpty>
			   <isEmpty property="numeroCuponPago">
			   #codCliente#,
			   </isEmpty>
			   #codCliente#,
			   TO_NUMBER(#valorPagado#,'9999999999999.99'),
			   TO_DATE(#fechaRegistro#,'DD/MM/YYYY'),
			   nvl(gen_pkg_gener.gen_fn_clien_datos(#codCliente#,'COD_REGI'),null),
			   nvl(gen_pkg_gener.gen_fn_clien_datos(#codCliente#,'COD_ZONA'),null),
			   '01',
			   '',
			   #codigoDocumento#,
			   #numLoteSTO#,
			   #secuenciaSTO#,
			   #codigoPeriodo#,
			   #indicadorRechazo#,
			  (SELECT COD_DIGI_CTRL FROM MAE_CLIEN A WHERE A.COD_CLIE= #codCliente#)
			  )
	   
	</insert>

<select id="getCodigoCompania" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		  SELECT COD_COMP
		    FROM BAS_PAIS_COMPA
		   WHERE COD_PAIS = #codigoPais#
</select>

	 <select id="getCodigoCliente" parameterClass="java.util.Map" resultClass="java.lang.String">
   		 SELECT COD_CLIE
   		 FROM MAE_CLIEN
   		 WHERE PAIS_OID_PAIS=#oidPais#
   		       AND COD_CLIE=#codigoCliente#
    </select>
    
    <select id="getCuponPagoSearchList" parameterClass="java.util.Map" resultMap="cuponPagoSearchResult">
		SELECT A.COD_PAIS COD_PAIS,
			   A.COD_REFE_PAGO COD_REFE_PAGO,
			   GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(A.Cod_Clie,'NOM_CLIE') NOMBRE,
			   TRIM(TO_CHAR(IMP_VALO,'9999999999999.99')) IMP_VALO,
			   TO_CHAR(A.FEC_PROC,'DD/MM/YYYY') FEC_PROC,
			   A.IND_RECH_SELL IND_RECH_SELL,
			   A.NUM_DOCU NUM_DOCU,
	           (select mid.num_docu_iden 
          from MAE_CLIEN_IDENT mid
         where mae.oid_clie = mid.clie_oid_clie
           and rownum = 1)	num_docu_iden
	   FROM INT_SOLIC_CONSO_CUPON_PAGO A,
	        mae_clien mae
	   WHERE A.COD_PAIS =#codigoPais#	     
	     and A.Cod_Clie = mae.cod_clie(+)     
	     
         <isNotEmpty property="codigoCliente">
	       AND (A.COD_REFE_PAGO LIKE  #codigoCliente#|| '%'  OR A.Cod_Clie LIKE #codigoCliente#|| '%')
	     </isNotEmpty>
	     <![CDATA[
		   AND ( A.FEC_PROC=NVL(TO_DATE(#fechaRegistro#,'DD/MM/YYYY'),A.FEC_PROC))		   
		 ]]>
	</select>
	
    <delete id="deleteCuponPago" parameterClass="java.util.Map">
       DELETE FROM INT_SOLIC_CONSO_CUPON_PAGO A
       WHERE  A.COD_PAIS =#codigoPais#
       		  AND A.NUM_DOCU= #numeroDocumento#
    </delete>
    
    <select id="getCuponPagoModificar" parameterClass="java.util.Map" resultMap="cuponPagoResult">
		  SELECT COD_PAIS AS COD_PAIS,             
		  		COD_COMP AS COD_COMP,             
		  		COD_CLIE AS COD_CLIE,             
				NUM_DOCU AS NUM_DOCU,        
				TO_CHAR(FEC_PROC,'DD/MM/YYYY') AS FEC_PROC,                                    
				COD_PERI AS COD_PERI,                        
				COD_REGI AS COD_REGI,  
				COD_ZONA AS COD_ZONA,   
				STA_PROC AS STA_PROC,   
				DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH), NULL, COD_MOTI_RECH,STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,#codigoTipo#,COD_MOTI_RECH))AS  COD_MOTI_RECH,  
				TRIM(TO_CHAR(IMP_VALO,'9999999999999.99')) IMP_VALO,
			    VAL_DEUD AS VAL_DEUD,
			    STA_CUPO AS STA_CUPO,
			    IND_RECH_SELL AS IND_RECH_SELL,
			    DOCU_COD_TIPO_DOCU AS DOCU_COD_TIPO_DOCU,
				SEC_NUME_DOCU AS SEC_NUME_DOCU,
				NUM_LOTE AS NUM_LOTE,
				COD_VERI AS COD_VERI,
				COD_ZONA_ARRI
		  FROM INT_SOLIC_CONSO_CUPON_PAGO 
		  WHERE COD_PAIS=#codigoPais#
				AND NUM_DOCU=#numeroDocumento#
				
</select>
<update id="updateCuponPagoModificar" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CUPON_PAGO B
			  SET
			   	  B.COD_REFE_PAGO=#codigoCliente#,
			   	  B.COD_CLIE =#codigoCliente#,
                  B.IMP_VALO=TO_NUMBER(#valorPagado#,'9999999999999.99'),
				  B.FEC_PROC=TO_DATE(#fechaRegistro#,'DD/MM/YYYY'),
				  B.IND_RECH_SELL= #indicadorRechazo#	  ,
				  B.COD_VERI=(SELECT COD_DIGI_CTRL FROM MAE_CLIEN A WHERE A.COD_CLIE=#codigoCliente#)
			 WHERE B.COD_PAIS=#codigoPais#
				  AND B.NUM_DOCU=#numeroDocumento#
			   
  	</update>
  	
  	<select id="getSecuenciaCuponPagoSTONextValue" resultClass="string">
   		 SELECT SEQ_CUPON_STO.NEXTVAL FROM DUAL
    </select>

	<insert id="insertCuponPagoSTO" parameterClass="java.util.Map">
    	
	    INSERT INTO STO_DOCUM_DIGIT
          (COD_PAIS,
           COD_TIPO_DOCU,
           NUM_LOTE,
           SEC_NUME_DOCU,
           NUM_DOCU,
           COD_ULTI_VALI_EJEC,
           COD_ULTI_VALI_EXIT,
           COD_ULTI_VALI_ERRO,
           IND_ENVI,
           IND_RECH,
           FEC_DIGI,
           USU_DIGI,
           FEC_MODI,
           USU_MODI,
           COD_ZONA,
           COD_CLIE,
           COD_REGI,
           COD_PERI)
        VALUES
          (#codigoPais#,
           #codigoDocumento#,
           #numLoteSTO#,
           #secuenciaSTO#,
           #caracterDocumento#||LPAD(#secuenciaCupon#,6,'0'),
           NULL,
           NULL,
           NULL,
           0,
           0,
           SYSDATE,
           #codigoUsuario#,
           SYSDATE,
           #codigoUsuario#,
           nvl(gen_pkg_gener.gen_fn_clien_datos(#codCliente#,'COD_ZONA'),null),
           #codCliente#,
           nvl(gen_pkg_gener.gen_fn_clien_datos(#codCliente#,'COD_REGI'),null),
           #codigoPeriodo#)  
	</insert>
	<update id="updateSolicitudPostVentaDetalleCliente" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_POVEN_DETAL
          SET COD_CLIE =#codCliente#				  
			 WHERE COD_PAIS=#codigoPais#
          AND NUM_LOTE =#numLote#               
          AND SEC_NUME_DOCU IN (SELECT SEC_NUME_DOCU
                                  FROM STO_DOCUM_DIGIT
                                 WHERE COD_TIPO_DOCU = 'SPVD'
                                   AND SEC_NUME_DOCU_CABE = #numDocumento#)
			   
  	</update>
<update id="updateSTOCodigoCliente" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			  SET COD_CLIE =#codCliente#,
			      COD_ZONA_ARRI = #codZona#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				   AND (SEC_NUME_DOCU=#numDocumento# OR SEC_NUME_DOCU_CABE =#numDocumento#)
			   
  	</update>
	
	<insert id="insertRechazoEnvioMailSTO" parameterClass="java.util.Map">
		Insert into STO_ENVIO_EMAIL_SCC
		  (num_proce,
           val_mail_gere_zona,
           val_subj,
           val_nomb_clie,
           val_tipo_docu,
           cod_clie,
           ind_rech,
           num_lote,
           sec_nume_docu)   
	     (select #numeroProceso# as numero_proceso,
	             (Select VAL_TEXT_COMU
	                from mae_clien_comun
	               where TICM_OID_TIPO_COMU = 3
	                 and clie_oid_cLie = 
	                     (select clie_oid_clie
	                        from zon_zona
	                       where oid_zona = (GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#,
						                                                           'T',
						                                                           'VD',
						                                                           a.COD_REGI,
						                                                           a.COD_ZONA)))) as correo_gerente_zona,
	             'Rechazo de Solicitud de Crédito' as subject,
	             initcap(b.val_nom1) ||' '|| initcap(b.val_nom2) ||' '|| initcap(b.val_ape1) ||' '|| initcap(b.val_ape2) as nombre_consultora,
	             b.tip_docu ||' - '|| b.num_docu_iden as tipo_documento,
	             b.cod_clie as codigo_consultora,
	             '1',
	             a.num_lote,
	             a.sec_nume_docu
	      from sto_docum_digit a ,
	           int_solic_conso_credi b
	      where a.cod_pais      = b.cod_pais
	        and a.num_lote      = b.num_lote
	        and a.sec_nume_docu = b.sec_nume_docu
	        and a.cod_tipo_docu = #tipoDocumento#     
	        and a.cod_pais      = #codigoPais#
	        and a.num_lote      = #numLote#
	        and a.sec_nume_docu = #numDocumento# 
	      )
	</insert>	
	
	<update id="updateDocumentoForValidate" parameterClass="java.util.Map">
	  UPDATE STO_DOCUM_DIGIT
	     SET NUM_PROC = #numeroProceso#		       
	   WHERE COD_PAIS = #codigoPais#
	     AND NUM_LOTE =#gestionDocumento.lote#
         AND (SEC_NUME_DOCU=#gestionDocumento.numeroDocumento# OR SEC_NUME_DOCU=#gestionDocumento.numeroDocumento#)	   
	     AND COD_TIPO_DOCU IN ( SELECT COD_TIPO_DOCU
	                              FROM STO_TIPO_DOCUM_DIGIT
	                             WHERE COD_TIPO_DOCU = #codigoTipo# 
	                                OR COD_TIPO_DOCU_CABE = #codigoTipo# )                       

  	</update>
	
	<update id="updateSTOCuponPago" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			  SET COD_CLIE =#codCliente#,
			   	  COD_ZONA_ARRI = #codigoZonaArribo#				  
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				  AND COD_PERI=#codPeriodo#
				   AND SEC_NUME_DOCU=#numSecDocumento# 
			   
  	</update>
  	
  	<select id="getNombreConsultora"  parameterClass="java.util.Map" resultClass="string">
   		 SELECT GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(#codCliente#,'NOM_CLIE') FROM DUAL
    </select>
    
    <select id="getCodigoNumeroTipoDocumentoConsultoraPorCodigo"  parameterClass="java.util.Map" resultClass="string">
	    select (t.cod_tipo_docu|| '-' || b.num_docu_iden || '-' || c.cod_clie || '-' || p.cod_pais) as resultado
  		from SEG_PAIS p, MAE_CLIEN_IDENT b, MAE_CLIEN c, MAE_TIPO_DOCUM t
 		where c.cod_clie = #codigoCliente#
   		and b.clie_oid_clie = c.oid_clie
   		and b.tdoc_oid_tipo_docu = t.oid_tipo_docu
   		and c.pais_oid_pais = p.oid_pais
 		 and rownum = 1
    </select>
    
    <select id="getCodigoNumeroTipoDocumentoConsultoraPorDocumento"  parameterClass="java.util.Map" resultClass="string">
    	select (t.cod_tipo_docu|| '-' || b.num_docu_iden || '-' || c.cod_clie || '-' || p.cod_pais) as resultado
  		from SEG_PAIS p, MAE_CLIEN_IDENT b, MAE_CLIEN c, MAE_TIPO_DOCUM t
 		where b.num_docu_iden = #numeroDocumentoIdentidad#
   		and b.clie_oid_clie = c.oid_clie
   		and b.tdoc_oid_tipo_docu = t.oid_tipo_docu
   		and c.pais_oid_pais = p.oid_pais
 		 and rownum = 1
    </select>
    
	<select id="getEstadosSTOByTipoDocumento" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT cod_esta CODIGO,
		   des_esta DESCRIPCION
      from STO_ESTAD_PEDID
	 where cod_pais      = #codigoPais#
	   and cod_tipo_docu = #tipoDocumento#  
	   and ind_acti      = '1'
	 order by cod_esta  
	</select>
	
	<resultMap id="consultaValidacionesTemporalResult" class="consultaValidaciones">                                      
	    <result property="tipoDocumento"            	column="DESTIPODOCU"/>   
	    <result property="codigoTipoDocumento"      	column="TIPO_DOCU"/>
	    <result property="codigoPais"               	column="COD_PAIS"/>          
	    <result property="fecha"                  		column="FECDIGI"/>     
	    <result property="fechaModificacion"     		column="FECMODI"/>                   
		<result property="lote"                 		column="NUMLOTE"/>    
		<result property="codRegion"                	column="COD_REGI"/>                   
		<result property="codZona"                 		column="COD_ZONA"/>      
		<result property="cliente"                 		column="COD_CLIE"/>      
		<result property="totalCarga"          			column="CARGADAS"/>
		<result property="correctas"          			column="CORRECTAS"/> 
		<result property="cantidadGP1"         			column="GP1"/>
		<result property="cantidadFacturadas"  			column="FACTURADAS"/>
	    <result property="erradas"         				column="ERRADAS"/>	
	    <result property="rechazadas"          			column="RECHAZADAS"/>
	    <result property="detallesOK"          			column="DETALLESOK_CABECERRADAS"/>
	    <result property="codigoPeriodo"          		column="COD_PERI"/>	    
	    <result property="origen"          	        	column="DES_ORIG"/>
	    <result property="fechaProgramadaFacturacion"   column="FECPROGFACT"/>
	</resultMap> 
	
	<resultMap id="consultaPedidosResult" class="consultaPedidos">
	    <result property="codigoPais"               	column="COD_PAIS"/>
		<result property="codigoTipoDocumento"      	column="COD_TIPO_DOCU"/>
	    <result property="fechaCarga"                  	column="FEC_DIGI"/>
	    <result property="fechaModificacion"     		column="FEC_MODI"/>
		<result property="fechaProgramadaFacturacion"   column="FEC_PROG_FACT"/>
		<result property="codigoCliente"                column="COD_CLIE"/>
		<result property="documentoIdentidad"           column="VAL_DOCU_IDEN"/>
		<result property="nombreCliente"                column="NOM_CLIE"/>
		<result property="numeroTelefono"                column="NUM_TELE"/>
		<result property="numeroLote"                 	column="NUM_LOTE"/>
		<result property="codigoRegion"                	column="COD_REGI"/>
		<result property="descripcionRegion"            column="DES_REGI"/>
		<result property="codigoZona"                 	column="COD_ZONA"/>
		<result property="descripcionSeccion"          	column="DES_SECC"/>
		<result property="codigoTerritorio"            	column="COD_TERR"/>
		<result property="cargadas"          			column="NUM_CARG"/>
		<result property="correctas"          			column="NUM_CORR"/>
		<result property="facturadas"  					column="NUM_FACT"/>
		<result property="numGP2"  						column="NUM_GP2"/>
		<result property="numGP3"  						column="NUM_GP3"/>
		<result property="numGP4"  						column="NUM_GP4"/>
		<result property="numGP5"  						column="NUM_GP5"/>
		<result property="erradas"         				column="NUM_ERRO"/>
	    <result property="rechazadas"          			column="NUM_RECH"/>
	    <result property="noValidadas"          		column="NUM_NOVA"/>
	    <result property="codigoPeriodo"          		column="COD_PERI"/>
		<result property="codigoOrigen"          	    column="COD_ORIG"/>
	    <result property="descripcionOrigen"          	column="DES_ORIG"/>
	    <result property="montoPedido"          		column="VAL_MONT_PEDI"/>
	    <result property="deuda"          				column="SAL_DEUD_VENC"/>
	</resultMap>
	<select id="getConsultaPedidosList" parameterClass="java.util.Map" resultMap="consultaPedidosResult">
		SELECT  O.COD_PAIS,
		        TMP.COD_TIPO_DOCU,
				<isNotEmpty property="agruFecDigi">
	                TO_CHAR(TMP.FEC_DIGI,'DD/MM/YYYY') FEC_DIGI,
	            </isNotEmpty>
				<isEmpty property="agruFecDigi">
	                null FEC_DIGI,
	            </isEmpty>
				<isNotEmpty property="agruFecProce">
	                TO_CHAR(TMP.FEC_MODI,'DD/MM/YYYY') FEC_MODI,
	            </isNotEmpty>
				<isEmpty property="agruFecProce">
	                null FEC_MODI,
	            </isEmpty>
	            <isNotEmpty property="agruFecFactu">
	                TO_CHAR(TMP.FEC_PROG_FACT,'DD/MM/YYYY') FEC_PROG_FACT,
	            </isNotEmpty>
				<isEmpty property="agruFecFactu">
	                null FEC_PROG_FACT,
	            </isEmpty>
				<isNotEmpty property="agrupacionClinte">
	                TMP.COD_CLIE,
	            	gen_pkg_gener.gen_fn_clien_datos (tmp.cod_clie, 'NOM_CLIE') NOM_CLIE,
	            	gen_pkg_gener.gen_fn_clien_datos_codig (tmp.cod_clie, 'NUM_TELE') NUM_TELE,
	            	(SELECT x.NUM_DOCU_IDEN
  		  			 FROM MAE_CLIEN_IDENT X,
  		       			  MAE_CLIEN Y
 		 				WHERE X.CLIE_OID_CLIE = Y.OID_CLIE
   		   					AND VAL_IDEN_DOCU_PRIN = '1'
   		   					AND Y.COD_CLIE = tmp.cod_clie) VAL_DOCU_IDEN,
   		   		   (SELECT CCC_PKG_GENER.Ccc_Fn_Obtie_Saldo_Venci(Y.OID_CLIE) 
					  FROM MAE_CLIEN_IDENT X, MAE_CLIEN Y
					 WHERE X.CLIE_OID_CLIE = Y.OID_CLIE
					   AND VAL_IDEN_DOCU_PRIN = '1'
					   AND Y.COD_CLIE = tmp.cod_clie) SAL_DEUD_VENC,
	            </isNotEmpty>
				<isEmpty property="agrupacionClinte">
	                null COD_CLIE,
	                null NOM_CLIE,
	                null NUM_TELE,
	                null VAL_DOCU_IDEN,
	                null SAL_DEUD_VENC,
	            </isEmpty>
	            <isNotEmpty property="agruLote">
	                TMP.NUM_LOTE,
	            </isNotEmpty>
				<isEmpty property="agruLote">
	                null NUM_LOTE,
	            </isEmpty>
				<isNotEmpty property="agruRegion">
	                TMP.COD_REGI,   
	                R.DES_REGI,
	            </isNotEmpty>
				<isEmpty property="agruRegion">
	                null COD_REGI,  
	                null DES_REGI,
	            </isEmpty>
			    <isNotEmpty property="agruZona">
	                TMP.COD_ZONA,	 
	            </isNotEmpty>
				<isEmpty property="agruZona">
	                null COD_ZONA, 
	            </isEmpty>
	            <isNotEmpty property="agrupacionClinte">
	            	gen_pkg_gener.gen_fn_clien_datos_codig(tmp.cod_clie, 'DES_SECC') DES_SECC,
	            	gen_pkg_gener.gen_fn_clien_datos_codig(tmp.cod_clie, 'COD_TERR') COD_TERR,
	            </isNotEmpty>
				<isEmpty property="agrupacionClinte">
	                null DES_SECC,
	                null COD_TERR,
	            </isEmpty>	            
			    SUM(IND_CARG) NUM_CARG,
			    SUM(IND_ENVI) NUM_CORR,				
				SUM(IND_FACT) NUM_FACT,
				SUM(IND_GP2) NUM_GP2,
       			SUM(IND_GP3) NUM_GP3,
       			SUM(IND_GP4) NUM_GP4,
       			SUM(IND_GP5) NUM_GP5,
			    SUM(IND_ERRO) NUM_ERRO,
			    SUM(IND_RECH) NUM_RECH,
			    SUM(IND_NOVA) NUM_NOVA,		 	
			    SUM(VAL_MONT_PEDI) VAL_MONT_PEDI,
				<isNotEmpty property="agruPeriodo">
	                TMP.COD_PERI,	 
	            </isNotEmpty>
				<isEmpty property="agruPeriodo">
	                null COD_PERI, 
	            </isEmpty>		
				<isNotEmpty property="agruOrigen">
				    TMP.COD_ORIG,
	                DES_ORIG DES_ORIG	 
	            </isNotEmpty>
				<isEmpty property="agruOrigen">
				    null COD_ORIG,
	                null DES_ORIG 
	            </isEmpty>				
	   	    FROM STO_TMP_ELIMI_DOCUM TMP,
       			 STO_ORIGE_DOCUM     O,
                 ZON_REGIO           R
           WHERE TMP.COD_ORIG = O.COD_ORIG
             AND TMP.COD_TIPO_DOCU = O.COD_TIPO_DOCU
             AND R.COD_REGI(+) = TMP.COD_REGI
             AND TMP.NUM_SECU = #secuencia#         		 
             
             <isNotEmpty property="documentoIdentidad">
	            and	exists(SELECT x.NUM_DOCU_IDEN
  		  			 FROM MAE_CLIEN_IDENT X,
  		       			  MAE_CLIEN Y
 		 				WHERE X.CLIE_OID_CLIE = Y.OID_CLIE
   		   					AND VAL_IDEN_DOCU_PRIN = '1'
   		   					and x.NUM_DOCU_IDEN = #documentoIdentidad#
   		   					AND Y.COD_CLIE = tmp.cod_clie) 
	          </isNotEmpty>         		 
		   GROUP BY O.COD_PAIS
		        ,TMP.COD_TIPO_DOCU       			
				<isNotEmpty property="agruFecDigi">
	                ,TO_CHAR(TMP.FEC_DIGI,'DD/MM/YYYY')
	            </isNotEmpty>
				<isNotEmpty property="agruFecProce">
					,TO_CHAR(TMP.FEC_MODI,'DD/MM/YYYY')
	            </isNotEmpty>
	            <isNotEmpty property="agruFecFactu">
					,TO_CHAR(TMP.FEC_PROG_FACT,'DD/MM/YYYY')
	            </isNotEmpty>
	 			<isNotEmpty property="agruLote">
	                ,TMP.NUM_LOTE
	            </isNotEmpty>
	 			<isNotEmpty property="agruRegion">
					,TMP.COD_REGI   
	                ,R.DES_REGI
	            </isNotEmpty>
				<isNotEmpty property="agruZona">
	                ,TMP.COD_ZONA
	            </isNotEmpty>
		        <isNotEmpty property="agrupacionClinte">
	                ,TMP.COD_CLIE 
	            </isNotEmpty>
	            <isNotEmpty property="agruPeriodo">
					,TMP.COD_PERI
	            </isNotEmpty>					
				<isNotEmpty property="agruOrigen">
	                ,TMP.COD_ORIG
	                ,O.DES_ORIG	 
	            </isNotEmpty>				
		</select>

	 <select id="getOpeacionCodigoVenta" parameterClass="java.util.Map" resultMap="operacionCodigoVentaResult">
		    SELECT 
		        s.COD_PAIS COD_PAIS,
				d.NUM_LINE NUM_LINE,
				(SELECT VAL_DESC_LARG FROM REC_OPERA WHERE COD_OPER = d.COD_OPER) OPERACION, 
				d.COD_VENT_DEVU COD_VENT_DEVU,
				d.CAN_VENT_DEVU CAN_VENT_DEVU,
				(
				select mp.VAL_I18N
				from REC_MOTIV_DEVOL md,
				gen_i18n_sicc_pais mp
				where md.COD_MOTI_DEVO = d.mot_spv
				and md.OID_MOTI_DEVO = mp.val_oid
				and mp.ATTR_ENTI = 'REC_MOTIV_DEVOL'
				) MOTI_DEVO,
				d.COD_VENT_DESE COD_VENT_DESE,
				d.CAN_PROD_DESE CAN_PROD_DESE,
				DECODE((TO_NUMBER(nvl(s.IND_RECH,0))+TO_NUMBER(nvl(s.IND_ENVI,0))+TO_NUMBER(nvl(s.IND_ELIM,0))),0,'EN GESTION',decode(s.IND_RECH,1,'RECHAZADO'
				,decode(s.IND_ENVI,1,'ENVIADO',decode(s.IND_ELIM,1,'ELIMINADO','')))) GESTION,
				decode(s.IND_RECH,1,'X','') RECHAZADO,
				decode(s.IND_ENVI,1,'X','') ENVIADO,
				decode(s.IND_ELIM,1,'X','') ELIMINADO
			FROM  int_solic_conso_poven_detal d,
			      sto_docum_digit s
		    WHERE d.SEC_NUME_DOCU = s.SEC_NUME_DOCU
			 and s.SEC_NUME_DOCU_CABE = #numeroSecuencia#
			 order by 1 				
</select>
 <select id="getOpeacionCodigoVentaSPVD" parameterClass="java.util.Map" resultMap="operacionCodigoVentaResult">
		    SELECT 
		        s.COD_PAIS COD_PAIS,
				d.NUM_LINE NUM_LINE,
				(SELECT VAL_DESC_LARG FROM REC_OPERA WHERE COD_OPER = d.COD_OPER) OPERACION, 
				d.COD_VENT_DEVU COD_VENT_DEVU,
				d.CAN_VENT_DEVU CAN_VENT_DEVU,
				(
				select mp.VAL_I18N
				from REC_MOTIV_DEVOL md,
				gen_i18n_sicc_pais mp
				where md.COD_MOTI_DEVO = d.mot_spv
				and md.OID_MOTI_DEVO = mp.val_oid
				and mp.ATTR_ENTI = 'REC_MOTIV_DEVOL'
				) MOTI_DEVO,
				d.COD_VENT_DESE COD_VENT_DESE,
				d.CAN_PROD_DESE CAN_PROD_DESE,
				DECODE((TO_NUMBER(nvl(s.IND_RECH,0))+TO_NUMBER(nvl(s.IND_ENVI,0))+TO_NUMBER(nvl(s.IND_ELIM,0))),0,'EN GESTION',
				decode(s.IND_RECH,1,'RECHAZADO',decode(s.IND_ENVI,1,'ENVIADO',decode(s.IND_ELIM,1,'ELIMINADO','')))) GESTION,
				decode(s.IND_RECH,1,'X','') RECHAZADO,
				decode(s.IND_ENVI,1,'X','') ENVIADO,
				decode(s.IND_ELIM,1,'X','') ELIMINADO
			FROM  int_solic_conso_poven_detal d,
			      sto_docum_digit s
		    WHERE d.SEC_NUME_DOCU = s.SEC_NUME_DOCU
			 and d.NUM_DOCU = #numeroDocumento#
			 and d.NUM_LOTE = #numLote#
			 order by 1 				
</select>
<select id="getCantidadDevuelveList" parameterClass="java.util.Map" resultMap="cDRsAnterioresResult">
		    SELECT r.num_recl NUM_RECL, 
				(
				SELECT VAL_I18N
				FROM  gen_i18n_sicc_comun g
				WHERE g.attr_enti = 'REC_ESTAD_RECLA'
				AND G.VAL_OID = r.ESRE_OID_ESTA_RECL) ESTADO, 
				TO_CHAR(r.fec_ingr,'DD/MM/YYYY') FEC_INGR,
				rop.VAL_DESC_LARG VAL_DESC_LARG,
				num_unid_recl NUM_UNID_RECL
			FROM  rec_linea_opera_recla l,
				  rec_opera_recla o,
				  rec_cabec_recla r,
				  REC_TIPOS_OPERA TOP,
				  rec_opera rop
			WHERE l.SOPO_OID_SOLI_POSI = #oidSoliDevuelve# 
			   AND o.oid_oper_recl = l.opre_oid_oper_recl
			   AND o.care_oid_cabe_recl = r.oid_cabe_recl
			   AND top.OID_TIPO_OPER = o.TIOP_OID_TIPO_OPER
			   AND top.ROPE_OID_OPER = rop.oid_oper
			   AND l.TIMO_OID_TIPO_MOVI = 2				
</select>

<select id="getCodigoVentaPedidoList" parameterClass="java.util.Map" resultMap="codigoVentaPedidoResult">
	SELECT *
       FROM (SELECT TO_NUMBER(POS.VAL_CODI_VENT) CUV,
               (select cod_sap from mae_produ where oid_prod = POS.PROD_OID_PROD) SAP,
               NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(POS.PROD_OID_PROD,'MAE_PRODU',#codigoIdiomaISO#),'-') AS PRODUCTO,
               pos.VAL_PREC_CATA_UNIT_LOCA,
               POS.VAL_PREC_FACT_UNIT_LOCA AS PRECIO_FACTURA,
               pos.NUM_UNID_ATEN NUM_UNID_ATEN,
               (pos.NUM_UNID_DEMA_REAL - pos.NUM_UNID_ATEN) NUM_UNID_FALT,
               pos.VAL_PORC_DESC,
               decode(pos.val_prec_cata_unit_loca,0,0,pos.VAL_PREC_FACT_TOTA_LOCA) IMPORTE,
               J.VAL_I18N TIPO_DE_SOLICITUD,
             (SELECT nvl(sum(rlor.num_unid_recl ),0) 
                FROM rec_linea_opera_recla rlor,
                     rec_opera_recla       ror,
                     rec_cabec_recla       rcr,
                     ped_solic_cabec       cab
               WHERE rlor.timo_oid_tipo_movi = 2
                 and rlor.sopo_oid_soli_posi = pos.OID_SOLI_POSI 
                 AND rlor.OPRE_OID_OPER_RECL = ror.OID_OPER_RECL
                 AND ror.CARE_OID_CABE_RECL = rcr.OID_CABE_RECL
                 and RCR.SOCA_OID_SOLI_CABE = CAB.OID_SOLI_CABE
                 and CAB.VAL_NUME_SOLI = C.VAL_NUME_SOLI) NUM_RECL_PRO,
             (SELECT nvl(SUM(nvl(det.can_vent_devu,0)),0)
                FROM int_solic_conso_poven_detal det,
                     int_solic_conso_poven_cabec cab,
                     sto_docum_digit             dig
               WHERE CAB.NUM_DOCU_CRUC = C.VAL_NUME_SOLI
                 and cab.cod_clie = #codigoCliente#
                 and CAB.SEC_NUME_DOCU = DIG.SEC_NUME_DOCU_CABE
                 AND det.oid_soli_posi_devu = POS.OID_SOLI_POSI
                 AND dig.sec_nume_docu = det.sec_nume_docu
                 and cab.sec_nume_docu = dig.sec_nume_docu_cabe
                 AND dig.ind_envi = 0
                 AND dig.ind_rech = 0) NUM_RECL_PEN,
				 gen_pkg_gener.gen_fn_devue_orige_pedid_posic (P.OID_SOLI_CABE,POS.VAL_CODI_VENT) ORIGEN,
				 pos.OID_SOLI_POSI           
          FROM PED_SOLIC_CABEC C, 
               PED_SOLIC_CABEC P, 
               PED_SOLIC_POSIC POS,
               PED_TIPO_SOLIC_PAIS H,
               PED_TIPO_SOLIC I,
               GEN_I18N_SICC_COMUN J
         WHERE POS.SOCA_OID_SOLI_CABE = P.OID_SOLI_CABE
           AND P.SOCA_OID_SOLI_CABE = C.OID_SOLI_CABE
           AND C.VAL_NUME_SOLI = #numeroCruce#
           AND POS.VAL_CODI_VENT IS NOT NULL
           AND EXISTS (SELECT 1
               FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP
               WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = C.TSPA_OID_TIPO_SOLI_PAIS)
           AND P.TSPA_OID_TIPO_SOLI_PAIS = H.OID_TIPO_SOLI_PAIS
           AND H.TSOL_OID_TIPO_SOLI = I.OID_TIPO_SOLI
           AND J.ATTR_ENTI = 'PED_TIPO_SOLIC'
           AND J.VAL_OID = I.OID_TIPO_SOLI
        UNION ALL
        SELECT TO_NUMBER(POS.VAL_CODI_VENT_FICT) CUV,
               (select cod_sap from mae_produ where oid_prod = POS.PROD_OID_PROD) SAP,
               NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(POS.PROD_OID_PROD,'MAE_PRODU',#codigoIdiomaISO#),'-') PRODUCTO,
               pos.VAL_PREC_CATA_UNIT_LOCA,
               0 AS PRECIO_FACTURA,
               pos.NUM_UNID_ATEN NUM_UNID_ATEN,
               (pos.NUM_UNID_DEMA_REAL - pos.NUM_UNID_ATEN) NUM_UNID_FALT,
               0 as VAL_PORC_DESC,
               0 as IMPORTE,
               J.VAL_I18N TIPO_DE_SOLICITUD,
             (SELECT nvl(sum(rlor.num_unid_recl ),0) 
                FROM rec_linea_opera_recla rlor,
                     rec_opera_recla       ror,
                     rec_cabec_recla       rcr,
                     ped_solic_cabec       cab
               WHERE rlor.timo_oid_tipo_movi = 2
                 and rlor.sopo_oid_soli_posi = pos.OID_SOLI_POSI 
                 AND rlor.OPRE_OID_OPER_RECL = ror.OID_OPER_RECL
                 AND ror.CARE_OID_CABE_RECL = rcr.OID_CABE_RECL
                 and RCR.SOCA_OID_SOLI_CABE = CAB.OID_SOLI_CABE
                 and CAB.VAL_NUME_SOLI = C.VAL_NUME_SOLI) NUM_RECL_PRO,
             (SELECT nvl(SUM(nvl(det.can_vent_devu,0)),0)
                FROM int_solic_conso_poven_detal det, 
                     int_solic_conso_poven_cabec cab,
                     sto_docum_digit             dig
               WHERE CAB.NUM_DOCU_CRUC =  C.VAL_NUME_SOLI
                 and cab.cod_clie = #codigoCliente#
                 and CAB.SEC_NUME_DOCU = DIG.SEC_NUME_DOCU_CABE        
                 AND det.oid_soli_posi_devu = POS.OID_SOLI_POSI 
                 AND dig.sec_nume_docu = det.sec_nume_docu
                 and cab.sec_nume_docu = dig.sec_nume_docu_cabe
                 AND dig.ind_envi = 0
                 AND dig.ind_rech = 0) NUM_RECL_PEN,
				 gen_pkg_gener.gen_fn_devue_orige_pedid_posic(P.OID_SOLI_CABE,POS.VAL_CODI_VENT) ORIGEN,
				 pos.OID_SOLI_POSI
          FROM PED_SOLIC_CABEC C, 
               PED_SOLIC_CABEC P, 
               PED_SOLIC_POSIC POS,
               PED_TIPO_SOLIC_PAIS H, 
               PED_TIPO_SOLIC I, 
               GEN_I18N_SICC_COMUN J
         WHERE POS.SOCA_OID_SOLI_CABE = P.OID_SOLI_CABE
           AND P.SOCA_OID_SOLI_CABE = C.OID_SOLI_CABE
           AND C.VAL_NUME_SOLI = #numeroCruce#
           AND EXISTS (SELECT 1
               FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP
               WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = C.TSPA_OID_TIPO_SOLI_PAIS)
           AND P.TSPA_OID_TIPO_SOLI_PAIS = H.OID_TIPO_SOLI_PAIS
           AND H.TSOL_OID_TIPO_SOLI = I.OID_TIPO_SOLI
           AND J.ATTR_ENTI = 'PED_TIPO_SOLIC'
           AND J.VAL_OID = I.OID_TIPO_SOLI
           AND POS.VAL_CODI_VENT_FICT IS NOT NULL) t
      WHERE T.CUV = T.CUV
			      <isNotEmpty property="descripcion">
		            AND (T.PRODUCTO like '%' || #descripcion# || '%')
		         </isNotEmpty>
		          <isNotEmpty property="codigoVenta">
			       AND ( T.CUV=NVL(#codigoVenta#,T.CUV))
			      </isNotEmpty>
			      <isNotEmpty property="codigoSAP">
			       AND ( T.SAP=NVL(#codigoSAP#,T.SAP))
			      </isNotEmpty>
			ORDER BY 1 ASC
		
</select>
<select id="getCodigoVentaMatrizList" parameterClass="java.util.Map" resultMap="codigoVentaMatrizResult">
		  SELECT d.VAL_CODI_VENT CUV,
				(select cod_sap from mae_produ where oid_prod =d.PROD_OID_PROD ) SAP,
				 NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(d.PROD_OID_PROD,'MAE_PRODU','es'),'-') PRODUCTO ,
				 d.IMP_PREC_CATA PRECIO
		 FROM   pre_ofert_detal d,
				pre_ofert o,
				pre_matri_factu_cabec c
				where c.oid_cabe = o.MFCA_OID_CABE
				and d.OFER_OID_OFER = o.OID_OFER
				and c.PERD_OID_PERI = (
					select c.PERD_OID_PERI
					FROM PED_SOLIC_CABEC C
					WHERE C.VAL_NUME_SOLI = #numeroCruce#
					AND EXISTS (       
					    SELECT 1       
					    FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP   
					    WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = C.TSPA_OID_TIPO_SOLI_PAIS   
				)
			)
			<isNotEmpty property="precioInicial">
				AND d.IMP_PREC_CATA >= TO_NUMBER(#precioInicial#,'9999999999999.99') 				
			</isNotEmpty>			
			<isNotEmpty property="precioFinal">
				<![CDATA[
				AND d.IMP_PREC_CATA <= TO_NUMBER(#precioFinal#,'9999999999999.99')
				]]>
			</isNotEmpty>			

		  UNION

          SELECT i.cod_vent_fict CUV,
			(select cod_sap from mae_produ where oid_prod =i.PROD_OID_PROD ) SAP,
			 NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(i.PROD_OID_PROD,'MAE_PRODU','es'),'-')  PRODUCTO,
			 i.IMP_PREC_PUBL PRECIO
		  FROM inc_artic_lote i
		  WHERE 1=1
			<isNotEmpty property="precioInicial">
				AND i.IMP_PREC_PUBL >= TO_NUMBER(#precioInicial#,'9999999999999.99') 
			</isNotEmpty>			
			<isNotEmpty property="precioFinal">
				<![CDATA[
				AND i.IMP_PREC_PUBL <= TO_NUMBER(#precioFinal#,'9999999999999.99')
				]]>
			</isNotEmpty>
		  ORDER BY 1
			
</select>
<select id="getPeriodoReferencia" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		 SELECT 
			(
			select cod_peri 
			from seg_perio_corpo s,
			cra_perio a
			where a.peri_oid_peri = s.oid_peri
			and a.OID_PERI = c.PERD_OID_PERI
			) periodo
		 FROM PED_SOLIC_CABEC C
		 WHERE C.VAL_NUME_SOLI = #numeroCruce#
			AND EXISTS (       
			    SELECT 1       
			    FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP   
			    WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = C.TSPA_OID_TIPO_SOLI_PAIS   
			) 
</select>
<select id="getCodigoVentaMatrizPrecioList" parameterClass="java.util.Map" resultMap="codigoVentaMatrizResult">
		  
		  SELECT d.VAL_CODI_VENT CUV,
				(select cod_sap from mae_produ where oid_prod =d.PROD_OID_PROD ) SAP,
				 NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(d.PROD_OID_PROD,'MAE_PRODU','es'),'-') PRODUCTO ,
				 d.PRECIO_UNITARIO PRECIO
		  FROM   pre_ofert_detal d,
				pre_ofert o,
				pre_matri_factu_cabec c
		  WHERE c.oid_cabe = o.MFCA_OID_CABE
				and d.OFER_OID_OFER = o.OID_OFER
				
				and c.PERD_OID_PERI = (
					SELECT c.PERD_OID_PERI
					FROM PED_SOLIC_CABEC C
					WHERE C.VAL_NUME_SOLI = #numeroCruce#
					AND EXISTS (       
					    SELECT 1       
					    FROM INT_LAR_TIPO_SOLICI_PEDIDO_DIS LTSP   
					    WHERE LTSP.TSPA_OID_TIPO_SOLI_PAIS = C.TSPA_OID_TIPO_SOLI_PAIS   
				    )
			     )
		       <isNotEmpty property="codigoVenta">
			       AND ( d.VAL_CODI_VENT=NVL(#codigoVenta#,d.VAL_CODI_VENT))
			   </isNotEmpty>
			   <isNotEmpty property="descripcion">
		            AND (NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(d.PROD_OID_PROD,'MAE_PRODU','es'),'-') like '%' || #descripcion# || '%')
		       </isNotEmpty>
		   	   <isNotEmpty property="codigoSAP">
			       AND ( (select cod_sap from mae_produ where oid_prod =d.PROD_OID_PROD )=NVL(#codigoSAP#,(select cod_sap from mae_produ where oid_prod =d.PROD_OID_PROD )))
			   </isNotEmpty>
				<isNotEmpty property="precioInicial">
					AND d.PRECIO_UNITARIO >= TO_NUMBER(#precioInicial#,'9999999999999.99') 
				</isNotEmpty>			
				<isNotEmpty property="precioFinal">
					<![CDATA[
					AND d.PRECIO_UNITARIO <= TO_NUMBER(#precioFinal#,'9999999999999.99') 
					]]>
				</isNotEmpty>
			   
</select>

<select id="getCodigoVentaMatrizIncentivoList" parameterClass="java.util.Map" resultMap="codigoVentaMatrizResult">
	 SELECT * FROM (
		  SELECT i.cod_vent_fict CUV,
           (SELECT cod_sap
              FROM mae_produ
             WHERE oid_prod = i.prod_oid_prod)                                                  SAP,
           NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(i.prod_oid_prod,'MAE_PRODU','es'),'-') PRODUCTO,
           i.imp_prec_publ 																		PRECIO
	  FROM inc_artic_lote i ,
           (SELECT DISTINCT id.cod_vent_fict cod_vent_fict,
                   MAX(id.oid_arti_lote) oid_arti_lote
              FROM inc_artic_lote id
          GROUP BY id.cod_vent_fict) id
     WHERE i.cod_vent_fict = id.cod_vent_fict
       AND i.oid_arti_lote = id.oid_arti_lote
		       <isNotEmpty property="codigoVenta">
			       AND ( i.cod_vent_fict=NVL(#codigoVenta#,i.cod_vent_fict))
			   </isNotEmpty>
			   <isNotEmpty property="descripcion">
		            AND (NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(i.PROD_OID_PROD,'MAE_PRODU','es'),'-') like '%' || #descripcion# || '%')
		       </isNotEmpty>
		   	   <isNotEmpty property="codigoSAP">
			       AND ( (select cod_sap from mae_produ where oid_prod =i.PROD_OID_PROD )=NVL(#codigoSAP#,(select cod_sap from mae_produ where oid_prod =i.PROD_OID_PROD )))
			   </isNotEmpty>
				<isNotEmpty property="precioInicial">
					AND i.imp_prec_publ >= TO_NUMBER(#precioInicial#,'9999999999999.99')
				</isNotEmpty>			
				<isNotEmpty property="precioFinal">
					<![CDATA[
					AND i.imp_prec_publ <= TO_NUMBER(#precioFinal#,'9999999999999.99')
					]]>
				</isNotEmpty>
	    UNION ALL
            SELECT i.cod_vent_fict CUV,
           (SELECT cod_sap
              FROM mae_produ
             WHERE oid_prod = i.prod_oid_prod)                                                  SAP,
           NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(i.prod_oid_prod,'MAE_PRODU','es'),'-') PRODUCTO,
           i.imp_prec_publ                                                                         PRECIO
      FROM inc_artic_lote j , inc_reemp_artic_lote i
      WHERE  j.oid_arti_lote = i.arlo_oid_arti_lote
              and i.cod_vent_fict not in(select cod_vent_fict from inc_artic_lote ) 
               <isNotEmpty property="codigoVenta">
                   AND ( i.cod_vent_fict=NVL(#codigoVenta#,i.cod_vent_fict))
               </isNotEmpty>
               <isNotEmpty property="descripcion">
                    AND (NVL(GEN_PKG_GENER.GEN_FN_DEVUELVE_DESCRIPCION(i.PROD_OID_PROD,'MAE_PRODU','es'),'-') like '%' || #descripcion# || '%')
               </isNotEmpty>
                  <isNotEmpty property="codigoSAP">
                   AND ( (select cod_sap from mae_produ where oid_prod =i.PROD_OID_PROD )=NVL(#codigoSAP#,(select cod_sap from mae_produ where oid_prod =i.PROD_OID_PROD )))
               </isNotEmpty>

                <isNotEmpty property="precioInicial">
                    AND i.imp_prec_publ >= TO_NUMBER(#precioInicial#,'9999999999999.99')
                </isNotEmpty>           

                <isNotEmpty property="precioFinal">
                    <![CDATA[
                    AND i.imp_prec_publ <= TO_NUMBER(#precioFinal#,'9999999999999.99')
                    ]]>
                </isNotEmpty>
	    ) archtemp  		   
		  ORDER BY 1
</select>

<select id="getReferenciaOperacionList" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT COD_OPER CODIGO,
		   DES_OPER DESCRIPCION
    FROM   STO_POVEN_OPERA
		 
	</select>
	 <select id="getNumeroRegistrosSTO" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		  SELECT NUM_REGI   
		    FROM STO_TIPO_DOCUM_DIGIT
		   WHERE COD_TIPO_DOCU = #tipoDocumento#
		     AND COD_PAIS = #codigoPais#
		     
    </select>
    	 <select id="getFechaFinProceso" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		  SELECT COUNT(1)  
		    FROM STO_HISTO_PROCE
		   WHERE DOCU_COD_TIPO_DOCU = #codTipoDocu#
		     AND PAIS_COD_PAIS = #codigoPais#
		     AND USU_PROC= #codigoUsuario#
		     AND FEC_FPRO IS NULL
		     
    </select>
<select id="getReporteTiposDocumentosSTO" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT DISTINCT T.COD_TIPO_DOCU CODIGO,
		       T.DES_TIPO_DOCU DESCRIPCION
		  FROM STO_TIPO_DOCUM_DIGIT T , SEG_USUAR U, SEG_USUAR_ROL UR, STO_TIPO_DOCUM_ROL S
		 WHERE U.COD_USUA = UR.USUA_COD_USUA 
		   AND UR.PAIS_COD_PAIS = S.COD_PAIS
		   AND S.COD_PAIS=T.COD_PAIS
		   AND UR.ROL_COD_ROL = S.ROL_COD_ROL
		   AND S.COD_TIPO_DOCU = T.COD_TIPO_DOCU
		   AND S.EST_DOCU_ROL='1'
		   AND UR.EST_UROL = '1'
		   AND U.USE_USUA = #codigoUsuario#
		   AND UR.PAIS_COD_PAIS = #codigoPais#
		   AND T.IND_CABE = '1'
		   AND T.COD_TIPO_DOCU IN ('OCC','SPVC')
	</select>
	
<select id="getReporteSTO" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT     T.NOM_REPO CODIGO,
		       T.DES_REPO DESCRIPCION
		  FROM STO_REPOR_TIPO_DOCUM T
		 WHERE T.COD_PAIS = #codigoPais#
		   AND T.COD_TIPO_DOCU =#tipoDocumento#
	</select>
	
	<insert id="insertTemporalEliminarCDR" parameterClass="java.util.Map">
		INSERT INTO GTT_STO_ELIMI_POVEN(DES_TIPO_DOCU,
										FEC_DIGI,
										FEC_MODI,
										COD_TIPO_DOCU,
										SEC_NUME_DOCU,
										COD_CLIE,
										NUM_LOTE,
										DES_REGI,
										COD_ZONA,
										COD_PAIS,
										IND_CORR,
										IND_GP1	,
										IND_FACT,
										IND_ERRA,
										IND_RECH,
										IND_CERR,
										COD_PERI,
										NUM_DOCU)
SELECT DES_TIPO_DOCU,
       FEC_DIGI,
       FEC_MODI,
       COD_TIPO_DOCU,
       SEC_NUME_DOCU,
       COD_CLIE,
       NUM_LOTE,
       DES_REGI,
       COD_ZONA,
       COD_PAIS,
       IND_ENVI,
       IND_GP1,
       IND_FACT,
       IND_ERRA,
       IND_RECH,
       Abs(1 - IND_GP1 - IND_FACT - IND_ERRA - IND_RECH) DETALLESOK_CABECERRADAS2,
       COD_PERI,
       NUM_DOCU
  FROM (SELECT B.DES_TIPO_DOCU,
               E.FEC_DIGI,
               E.FEC_MODI,
		       E.COD_TIPO_DOCU,
               E.SEC_NUME_DOCU,
               E.COD_CLIE,
               E.NUM_LOTE,
               (SELECT X.DES_REGI FROM ZON_REGIO X WHERE X.COD_REGI = E.COD_REGI) DES_REGI,
               E.COD_ZONA,
               E.COD_PAIS,
               E.IND_ENVI,
               (SELECT COUNT(1)
                  FROM INT_SOLIC_CONSO_POVEN_CABEC I,
                       REC_CABEC_RECLA             R
                 WHERE R.OID_CABE_RECL = I.OID_CABE_RECL_REFE
                   AND I.SEC_NUME_DOCU = E.SEC_NUME_DOCU
                   AND R.ESRE_OID_ESTA_RECL = 6) IND_GP1,
               (SELECT COUNT(1)
                  FROM INT_SOLIC_CONSO_POVEN_CABEC I,
                       REC_CABEC_RECLA             R
                 WHERE R.OID_CABE_RECL = I.OID_CABE_RECL_REFE
                   AND I.SEC_NUME_DOCU = E.SEC_NUME_DOCU
                   AND R.ESRE_OID_ESTA_RECL = 4) IND_FACT,
               (SELECT COUNT(R.SEC_NUME_DOCU)
		             FROM STO_DETAL_DOCUM_EXCEP R
		            WHERE R.COD_PAIS = E.COD_PAIS
		              AND R.COD_TIPO_DOCU = E.COD_TIPO_DOCU
		              AND R.NUM_LOTE = E.NUM_LOTE
		              AND R.SEC_NUME_DOCU = E.SEC_NUME_DOCU
                   AND R.IND_LEVA_ERRO = '0'
                   AND R.IND_APRO = '0'
                   AND E.IND_RECH = '0'
                   AND E.IND_ENVI = '0'
                   AND ROWNUM = 1) IND_ERRA,
               E.IND_RECH,
               E.COD_PERI,
               E.NUM_DOCU
          FROM STO_TIPO_DOCUM_DIGIT B,
               STO_DOCUM_DIGIT      E
         WHERE E.COD_TIPO_DOCU = B.COD_TIPO_DOCU
           AND E.COD_PAIS = B.COD_PAIS
		   AND E.COD_PAIS =#codigoPais#
		   AND E.COD_TIPO_DOCU = #tipoDocumento#
			   <isNotEmpty property="codigoCliente">
	       AND E.COD_CLIE = #codigoCliente#
		       </isNotEmpty>	
		       <isNotEmpty property="numLote">
		   AND E.NUM_LOTE = #numLote#
			   </isNotEmpty>			   
			   <isNotEmpty property="codigoPeriodo">
		   AND E.COD_PERI = #codigoPeriodo#
			   </isNotEmpty>
			   <iterate prepend="AND" property="numeroDocumentoList" open="(" close=")" conjunction="OR">
			     E.NUM_DOCU = #numeroDocumentoList[]#
			   </iterate> 
			   <isNotEmpty property="fechaInicio">
			   <![CDATA[
			AND E.FEC_DIGI>=TO_DATE(#fechaInicio#,'DD/MM/YYYY HH24:MI')
			   ]]>
			   </isNotEmpty>
			   <isNotEmpty property="fechaFin">
			   <![CDATA[
			AND E.FEC_DIGI<=TO_DATE(#fechaFin#,'DD/MM/YYYY HH24:MI')
			   ]]>
			   </isNotEmpty>
			   <isNotEmpty property="fechaInicioProceso">
			   <![CDATA[
			AND E.FEC_MODI>= TO_DATE(#fechaInicioProceso#,'DD/MM/YYYY HH24:MI')
			   ]]>
			   </isNotEmpty>
			   <isNotEmpty property="fechaFinProceso">
			   <![CDATA[
			AND E.FEC_MODI<= TO_DATE(#fechaFinProceso#,'DD/MM/YYYY HH24:MI')
			   ]]>
			   </isNotEmpty>
			   <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
			   E.COD_REGI = #regionList[]#
			   </iterate>  
			   <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
			   E.COD_ZONA = #zonaList[]#
			   </iterate>      
		) TEMP
	</insert>			
	
	<resultMap id="consultaCDRTemporalResult" class="consultaValidaciones">                                      
	    <result property="tipoDocumento"            column="DES_TIPO_DOCU"/>   
	    <result property="codigoTipoDocumento"      column="COD_TIPO_DOCU"/>
	    <result property="codigoPais"               column="COD_PAIS"/>          
	    <result property="fecha"                  	column="FEC_DIGI"/>     
	    <result property="fechaModificacion"     	column="FEC_MODI"/>                   
		<result property="lote"                 	column="NUM_LOTE"/>    
		<result property="codRegion"                column="DES_REGI"/>                   
		<result property="codZona"                 	column="COD_ZONA"/>      
		<result property="cliente"                 	column="COD_CLIE"/>      
		<result property="totalCarga"          		column="IND_CARG"/>
		<result property="correctas"          		column="IND_CORR"/> 
		<result property="cantidadGP1"         		column="IND_GP1"/>
		<result property="cantidadFacturadas"  		column="IND_FACT"/>
	    <result property="erradas"         			column="IND_ERRA"/>	
	    <result property="rechazadas"          		column="IND_RECH"/>
	    <result property="detallesOK"          		column="IND_CERR"/>
	    <result property="codigoPeriodo"          	column="COD_PERI"/>	    
	    <result property="numeroDocumento"          column="NUM_DOCU"/>
	    <result property="secNumeDocu"              column="SEC_NUME_DOCU"/>
	</resultMap> 

	<select id="getConsultaCDRTemporalList" parameterClass="java.util.Map" resultMap="consultaCDRTemporalResult">
		SELECT  DES_TIPO_DOCU,
		        COD_TIPO_DOCU,
       			COD_PAIS,
				TO_CHAR(FEC_DIGI,'DD/MM/YYYY') FEC_DIGI,
	            TO_CHAR(FEC_MODI,'DD/MM/YYYY') FEC_MODI,
	            COD_CLIE,
	            NUM_LOTE,
	            DES_REGI,   
	            COD_ZONA,	 
	            1 IND_CARG,
			    IND_CORR,
				IND_GP1,
				IND_FACT,
			    IND_ERRA,
			    IND_RECH,
			    IND_CERR,		 	
				COD_PERI,	 
	            NUM_DOCU,
	            SEC_NUME_DOCU
	   	   FROM gtt_sto_elimi_poven	
           WHERE 1 = 1
                <isNotEmpty property="estadoGP1">
	                and IND_GP1 = 1
	            </isNotEmpty>    
	            <isNotEmpty property="estadoFacturadas">
	                and IND_FACT = 1
	            </isNotEmpty>  
	            <isNotEmpty property="estadoError">
	                and IND_ERRA = 1
	            </isNotEmpty>   
	            <isNotEmpty property="estadoRechazadas">
	                and IND_RECH = 1
	            </isNotEmpty>    
	            <isNotEmpty property="estadoSinValidar">
	                and IND_CERR = 1
	            </isNotEmpty>         		 
	   ORDER BY COD_CLIE,
	            COD_ZONA,
	            DES_REGI,
	            FEC_DIGI,
	            FEC_MODI,
	            COD_PERI,
	            NUM_DOCU
		</select>	
	
	<resultMap id="getCantidadDevuelveDetalleListResult" class="java.util.HashMap">
    	<result property="tipodoc" column="TIPODOC"/>
    	<result property="numero" column="NUMERO"/>
    	<result property="periodo" column="PERIODO"/>
    	<result property="fecha" column="FECHA"/>
    	<result property="unidades" column="UNIDADES"/>
    	<result property="observacion" column="OBSERVACION"/>
    </resultMap>
    
    <select id="getCantidadDevuelveDetalleList" parameterClass="java.util.Map" resultMap="getCantidadDevuelveDetalleListResult">
    	SELECT 'a. '||soli.val_i18n AS tipodoc, 
       con.VAL_NUME_SOLI AS numero,
       seg.cod_peri AS Periodo,
       to_char(con.fec_fact,'DD/MM/YYYY') AS Fecha,
       det.num_unid_aten AS unidades,
       'Facturado' AS Observacion
		FROM ped_solic_posic  det,
		     ped_solic_cabec  cab,
		     ped_solic_cabec  con,
		     cra_perio        cra,
		     seg_perio_corpo  seg,
		     (SELECT tsp.OID_TIPO_SOLI_PAIS,i.val_i18n
		     FROM ped_tipo_solic_pais tsp, ped_tipo_solic ts, v_gen_i18n_sicc i
		     WHERE i.idio_oid_idio = 1
		     AND i.attr_enti ='PED_TIPO_SOLIC'
		     AND i.val_oid = ts.oid_tipo_soli
		     AND tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli) soli
		WHERE det.oid_soli_posi = #oidSoliDevuelve#
		AND det.SOCA_OID_SOLI_CABE = cab.OID_SOLI_CABE
		AND cab.SOCA_OID_SOLI_CABE = con.OID_SOLI_CABE
		AND cra.OID_PERI = con.PERD_OID_PERI
		AND cra.PERI_OID_PERI = seg.OID_PERI   
		AND con.TSPA_OID_TIPO_SOLI_PAIS = soli.OID_TIPO_SOLI_PAIS
		UNION
		SELECT 'b. '||ro.val_desc_larg AS tipodoc, 
		       rcr.num_recl AS numero,
		       seg.cod_peri AS Periodo,
		       to_char(ror.fec_fact,'DD/MM/YYYY') AS Fecha,
		       rlor.num_unid_recl*-1 AS unidades,
		       'Atendido' AS Observacion
		FROM rec_linea_opera_recla rlor,
		     rec_opera_recla ror,
		     rec_cabec_recla rcr,
		     cra_perio       cra,
		     seg_perio_corpo seg,
		     rec_tipos_opera rto,    
		     rec_opera       ro    
		WHERE rlor.timo_oid_tipo_movi = 2
		AND rlor.sopo_oid_soli_posi = #oidSoliDevuelve#
		AND rlor.OPRE_OID_OPER_RECL = ror.OID_OPER_RECL
		AND ror.CARE_OID_CABE_RECL = rcr.OID_CABE_RECL
		AND cra.OID_PERI = rcr.PERD_OID_PERI_RECL
		AND cra.PERI_OID_PERI = seg.OID_PERI
		AND ror.TIOP_OID_TIPO_OPER = rto.OID_TIPO_OPER   
		AND ro.OID_OPER = rto.ROPE_OID_OPER
		UNION
		SELECT 'c. '||ro.val_desc_larg AS tipodoc, 
		       TO_NUMBER(det2.num_docu) AS numero,
		       det2.cod_peri AS Periodo,
		       to_char(TRUNC(det2.fec_digi),'DD/MM/YYYY') AS Fecha,
		       det2.can_vent_devu*-1 AS unidades,
		       'En Gestion' AS Observacion
		FROM INT_SOLIC_CONSO_POVEN_DETAL det2, 
		     STO_DOCUM_DIGIT dig,
		     rec_opera       ro    
		WHERE det2.cod_pais = #pais# 
		 AND det2.cod_clie = #codigoCliente# 
		AND det2.cod_peri = #codPeriodo# 
		 AND det2.oid_soli_posi_devu = #oidSoliDevuelve# 
		AND dig.sec_nume_docu = det2.sec_nume_docu
		AND ro.oid_oper = det2.oid_oper
		AND dig.ind_envi = 0
		AND dig.ind_rech = 0
    </select>
	
	 <select id="getParametroRechazoByDocumento" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		SELECT IND_MENS_RECH
		  FROM STO_TIPO_DOCUM_DIGIT
		 WHERE COD_PAIS=#codigoPais#
		 	   AND COD_TIPO_DOCU= #tipoDocumento#
	</select>
		       
	<select id="getListaValidacionExistenciaCronograma" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT g.val_param CODIGO,
		       #codPeriodo# DESCRIPCION
		  FROM sto_param_gener_occrr g
		 WHERE g.cod_para LIKE '%STO_CRA_COD_ACTIV%'
		   AND G.VAL_PARAM IS NOT NULL
		   AND g.val_param NOT IN
		       (SELECT e.cod_acti
		          FROM cra_crono a, cra_activ e
		         WHERE e.oid_acti = a.cact_oid_acti
		           AND a.perd_oid_peri = #oidPeriodo#
		           AND a.zzon_oid_zona = #oidZona#
		           AND e.cod_acti IN (SELECT f.val_param
		                                FROM sto_param_gener_occrr f
		                               WHERE f.cod_para LIKE '%STO_CRA_COD_ACTIV%'
		                                 AND f.val_param IS NOT NULL))
		   <![CDATA[                              
		   AND #indicadorExistencia# > 0
		   ]]>
		UNION
		SELECT g.val_param CODIGO,
		       COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,1) DESCRIPCION
		  FROM sto_param_gener_occrr g
		 WHERE g.cod_para LIKE '%STO_CRA_COD_ACTIV%'
		   AND G.VAL_PARAM IS NOT NULL
		   AND g.val_param NOT IN
		       (SELECT e.cod_acti
		          FROM cra_crono a, cra_activ e
		         WHERE e.oid_acti = a.cact_oid_acti
		           AND a.perd_oid_peri in (
											SELECT b.oid_peri
											  FROM cra_perio b
											 WHERE b.peri_oid_peri IN
											       (SELECT c.oid_peri
											          FROM seg_perio_corpo c
											         WHERE c.cod_peri =
											               cob_pkg_gener.cob_fn_calcu_perio_nsgte(#codPeriodo#, 1))		           
										)
		           AND a.zzon_oid_zona = #oidZona#
		           AND e.cod_acti IN (SELECT f.val_param
		                                FROM sto_param_gener_occrr f
		                               WHERE f.cod_para LIKE '%STO_CRA_COD_ACTIV%'
		                                 AND f.val_param IS NOT NULL))
		    <![CDATA[   
		   AND #indicadorExistencia# > 1
		   ]]>
		UNION
		SELECT g.val_param CODIGO,
		       COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,2) DESCRIPCION
		  FROM sto_param_gener_occrr g
		 WHERE g.cod_para LIKE '%STO_CRA_COD_ACTIV%'
		   AND G.VAL_PARAM IS NOT NULL
		   AND g.val_param NOT IN
		       (SELECT e.cod_acti
		          FROM cra_crono a, cra_activ e
		         WHERE e.oid_acti = a.cact_oid_acti
		           AND a.perd_oid_peri in (
											SELECT b.oid_peri
											  FROM cra_perio b
											 WHERE b.peri_oid_peri IN
											       (SELECT c.oid_peri
											          FROM seg_perio_corpo c
											         WHERE c.cod_peri =
											               cob_pkg_gener.cob_fn_calcu_perio_nsgte(#codPeriodo#, 2))		           
										)
		           AND a.zzon_oid_zona = #oidZona#
		           AND e.cod_acti IN (SELECT f.val_param
		                                FROM sto_param_gener_occrr f
		                               WHERE f.cod_para LIKE '%STO_CRA_COD_ACTIV%'
		                                 AND f.val_param IS NOT NULL))
		    <![CDATA[   
		   AND #indicadorExistencia# > 2
		   ]]>
		UNION
		SELECT g.val_param CODIGO,
		       COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,3) DESCRIPCION
		  FROM sto_param_gener_occrr g
		 WHERE g.cod_para LIKE '%STO_CRA_COD_ACTIV%'
		   AND G.VAL_PARAM IS NOT NULL
		   AND g.val_param NOT IN
		       (SELECT E.COD_ACTI
		          FROM CRA_CRONO A, CRA_ACTIV E
		         WHERE E.OID_ACTI = A.CACT_OID_ACTI
		           AND A.PERD_OID_PERI IN (
											SELECT b.oid_peri
											  FROM cra_perio b
											 WHERE b.peri_oid_peri IN
											       (SELECT c.oid_peri
											          FROM seg_perio_corpo c
											         WHERE c.cod_peri =
											               cob_pkg_gener.cob_fn_calcu_perio_nsgte(#codPeriodo#, 3))		           
										)
		           AND A.ZZON_OID_ZONA = #oidZona#
		           AND E.COD_ACTI IN (SELECT F.VAL_PARAM
		                                FROM STO_PARAM_GENER_OCCRR F
		                               WHERE F.COD_PARA LIKE '%STO_CRA_COD_ACTIV%'
		                                 AND F.VAL_PARAM IS NOT NULL))
		    <![CDATA[   
		   AND #indicadorExistencia#> 3
		   ]]>	
	</select>

<select id="getListaValidacionVencimientoCronograma" parameterClass="java.util.Map" resultMap="validacionVencimientoCronogramaResult">
	    SELECT COD_ZONA,
			   TO_CHAR(FEC_INI,'DD/MM/YYYY') FEC_INI,
			   TO_CHAR(FEC_FIN,'DD/MM/YYYY') FEC_FIN,
			   COD_ACTI,
			   COD_ACTI_AUX,
			   COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,1) COD_PERI
  			          FROM (SELECT c.cod_zona cod_zona, 
					  	   		   a.fec_inic fec_ini, 
								   b.fec_inic fec_fin,
								   e.cod_acti cod_acti,
								   f.cod_acti cod_acti_aux
          				      FROM cra_crono a,
               				  	   cra_crono b,
               					   zon_zona c,
               					   cra_activ e,
               					   cra_activ f
         					 WHERE e.cod_acti = 'V1'
           					 	   AND a.perd_oid_peri IN (SELECT bb.oid_peri
                  				   	   				         FROM cra_perio bb
                    										WHERE bb.peri_oid_peri IN (SELECT cc.oid_peri
                          										  				   	     FROM seg_perio_corpo cc
                          																WHERE cc.cod_peri = #codPeriodo#))
           						   AND f.cod_acti = 'CV'
           						   AND b.perd_oid_peri IN (SELECT bv.oid_peri
                     			   	   				   	     FROM cra_perio bv
                    										WHERE bv.peri_oid_peri IN (SELECT CV.oid_peri
                          										  				   	     FROM seg_perio_corpo CV
                          																WHERE CV.cod_peri = COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,1)))
						           AND a.cact_oid_acti = e.oid_acti
						           AND b.cact_oid_acti = f.oid_acti
						           AND a.zzon_oid_zona = b.zzon_oid_zona
						           AND a.ZZON_OID_ZONA = #oidZona#
						           AND a.zzon_oid_zona = c.oid_zona
						           AND e.pais_oid_pais = #oidPais#
						           AND f.pais_oid_pais = #oidPais#)
						WHERE
						       #indVenciPrimerCaso# = '1'
							   <![CDATA[
								AND  FEC_INI<>FEC_FIN
								]]>
							
</select>

<select id="getListaValidacionVencimientoCronogramaSegundoCaso" parameterClass="java.util.Map" resultMap="validacionVencimientoCronogramaResult">
			
			SELECT COD_ZONA,
			   	   TO_CHAR(FEC_INI,'DD/MM/YYYY') FEC_INI,
			       TO_CHAR(FEC_FIN,'DD/MM/YYYY') FEC_FIN,
  			       COD_ACTI,
			       COD_ACTI_AUX,
				   COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,2) COD_PERI
					 
  			  FROM (SELECT c.cod_zona cod_zona, 
					  	   		   a.fec_inic fec_ini, 
								   b.fec_inic fec_fin,
								   e.cod_acti cod_acti,
								   f.cod_acti cod_acti_aux
          				      FROM cra_crono a,
               				  	   cra_crono b,
               					   zon_zona c,
               					   cra_activ e,
               					   cra_activ f
         					 WHERE e.cod_acti = 'V2'
           					 	   AND a.perd_oid_peri IN (SELECT bb.oid_peri
                  				   	   				         FROM cra_perio bb
                    										WHERE bb.peri_oid_peri IN (SELECT cc.oid_peri
                          										  				   	     FROM seg_perio_corpo cc
                          																WHERE cc.cod_peri = #codPeriodo#))
           						   AND f.cod_acti = 'CV'
           						   AND b.perd_oid_peri IN (SELECT bv.oid_peri
                     			   	   				   	     FROM cra_perio bv
                    										WHERE bv.peri_oid_peri IN (SELECT CV.oid_peri
                          										  				   	     FROM seg_perio_corpo CV
                          																WHERE CV.cod_peri = COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,2)))
						           AND a.cact_oid_acti = e.oid_acti
						           AND b.cact_oid_acti = f.oid_acti
						           AND a.zzon_oid_zona = b.zzon_oid_zona
						           AND a.ZZON_OID_ZONA = #oidZona#
						           AND a.zzon_oid_zona = c.oid_zona
						           AND e.pais_oid_pais = #oidPais#
						           AND f.pais_oid_pais = #oidPais#)
						WHERE
						       #indVenciSegundoCaso# = '2'
								<![CDATA[
								AND  FEC_INI<>FEC_FIN
								]]>
		
</select>

<select id="getListaValidacionVencimientoCronogramaTercerCaso" parameterClass="java.util.Map" resultMap="validacionVencimientoCronogramaResult">
			
		
		SELECT COD_ZONA,
			   TO_CHAR(FEC_INI,'DD/MM/YYYY') FEC_INI,
			    TO_CHAR(FEC_FIN,'DD/MM/YYYY') FEC_FIN,
  			           COD_ACTI,
			         COD_ACTI_AUX,
					 COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,3) COD_PERI
  			          FROM (SELECT c.cod_zona cod_zona, 
					  	   		   a.fec_inic fec_ini, 
								   b.fec_inic fec_fin,
								   e.cod_acti cod_acti,
								   f.cod_acti cod_acti_aux
          				      FROM cra_crono a,
               				  	   cra_crono b,
               					   zon_zona c,
               					   cra_activ e,
               					   cra_activ f
         					 WHERE e.cod_acti = 'V3'
           					 	   AND a.perd_oid_peri IN (SELECT bb.oid_peri
                  				   	   				         FROM cra_perio bb
                    										WHERE bb.peri_oid_peri IN (SELECT cc.oid_peri
                          										  				   	     FROM seg_perio_corpo cc
                          																WHERE cc.cod_peri = #codPeriodo#))
           						   AND f.cod_acti = 'CV'
           						   AND b.perd_oid_peri IN (SELECT bv.oid_peri
                     			   	   				   	     FROM cra_perio bv
                    										WHERE bv.peri_oid_peri IN (SELECT CV.oid_peri
                          										  				   	     FROM seg_perio_corpo CV
                          																WHERE CV.cod_peri = COB_PKG_GENER.COB_FN_CALCU_PERIO_NSGTE(#codPeriodo#,3)))
						           AND a.cact_oid_acti = e.oid_acti
						           AND b.cact_oid_acti = f.oid_acti
						           AND a.zzon_oid_zona = b.zzon_oid_zona
						           AND a.ZZON_OID_ZONA = #oidZona#
						           AND a.zzon_oid_zona = c.oid_zona
						           AND e.pais_oid_pais = #oidPais#
						           AND f.pais_oid_pais = #oidPais#)
						WHERE
						       #indVenciTercerCaso# = '3'
								<![CDATA[
								AND  FEC_INI<>FEC_FIN
								]]>

						
	</select>
	
	<update id="updateCodigoClienteOrdenCompraDetalle" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_DETAL
		   SET COD_CLIE = #codCliente#
		 WHERE COD_PAIS = #codigoPais#
		   AND COD_PERI = #codPeriodo#
		   AND COD_CLIE = #codClienteBD#
		   AND NUM_LOTE = #numLote#		   
  	</update>
	
	<update id="updateCodigoClienteSTODocumDigit" parameterClass="java.util.Map">
		UPDATE sto_docum_digit 
		   SET cod_clie = #codCliente#,
		       COD_REGI = GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codCliente#,'COD_REGI'),
		       COD_ZONA = GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(#codCliente#,'COD_ZONA')		    
		where (sec_nume_docu = #numDocumento# or sec_nume_docu_cabe = #numDocumento#) 
		  and NUM_LOTE = #numLote#	 
		  and COD_PAIS = #codigoPais#
	</update>	  
	
	<typeAlias alias="cambioTipoOrdenPedidosCargados" type="biz.belcorp.ssicc.dao.spusicc.sto.model.CambioTipoOrdenPedidosCargados"/>
	
	<resultMap id="getClientesTipoOrdenListResult" class="cambioTipoOrdenPedidosCargados">
		<result property="codigoCliente" column="COD_CLIE"/>
		<result property="tipoOrden" column="TIP_ORDE"/>
	</resultMap>
	
	<select id="getClientesTipoOrdenList" parameterClass="java.util.Map" resultMap="getClientesTipoOrdenListResult">
		select COD_CLIE,TIP_ORDE  
		from INT_SOLIC_CONSO_CABEC 
		where num_lote = #numeroLote#
		and cod_peri = #codigoPeriodo#
		<iterate prepend="AND" property="listaClientes" open=" cod_clie IN (" close=")" conjunction="," >
			#listaClientes[]#
		</iterate>		
	</select>
	
	<update id="updateTipoOrdenPedidosCargados" parameterClass="java.util.Map">
		update INT_SOLIC_CONSO_CABEC a
		set a.TIP_ORDE = #tipoOrden#
		where a.cod_peri = #codigoPeriodo#
		and a.num_lote = #numeroLote#
		<iterate prepend="and" property="listaClientes" open=" a.cod_clie IN (" close=")" conjunction=",">
			#listaClientes[]#
		</iterate>
	</update>

	<select id="getTipoViaCliente" resultMap="baseResult">
		select tv.cod_tipo_via       as codigo, 
		       tv.des_abrv_tipo_via  as descripcion
		  from SEG_TIPO_VIA tv
	</select>

	<resultMap id="getBloqueoControlListResult"  class="java.util.HashMap">
		<result property="codigoPeriodo"             column="CODIGO_PERIODO"/>
		<result property="tipoCliente"	             column="TIPO_CLIENTE"/>
		<result property="subTipoCliente"            column="SUBTIPO_CLIENTE"/>
		<result property="tipoClasificacionCliente"  column="TIPO_CLASIFICACION_CLIENTE"/>
		<result property="clasificacion"             column="CLASIFICACION"/>
		<result property="codigoCliente"             column="CODIGO_CLIENTE"/>
		<result property="observaciones"             column="OBSERVACIONES"/>
		<result property="oidTipoCliente"            column="OID_TIPO_CLIENTE"/>
		<result property="oidRegion"                 column="OID_REGION"/>
		<result property="oidCliente"                column="OID_CLIENTE"/>
		<result property="descripcionRegion"         column="DESC_REGION"/>
		<result property="descripcionZona"           column="DESC_ZONA"/>
		<result property="codigoBloqueo"             column="COD_BLOQ"/>
		<result property="codigoTipoBloqueo"         column="IND_TIPO_BLOQ"/>
		<result property="valorPorcentaje"           column="VAL_PMON_DEVU"/>
		<result property="usuarioCreacion"           column="USU_CREA"/>
		<result property="fechaCreacion"             column="FEC_CREA"/>
	</resultMap>
  
	<select id="getBloqueoControlList" parameterClass="java.util.Map" resultMap="getBloqueoControlListResult">		
			SELECT BC.COD_BLOQ,
			       DECODE(BC.OID_PERI,null,null,gen_pkg_gener.gen_fn_devuelve_des_perio(BC.OID_PERI)) AS Codigo_Periodo,TC.DESCRIPCION AS Tipo_Cliente,
			       TC.DESCRIPCION Tipo_Cliente,
			       STC.DESCRIPCION Subtipo_Cliente,
			       TCS.DESCRIPCION Tipo_Clasificacion_Cliente,
			       CL.DESCRIPCION Clasificacion,
			       CI.COD_CLIE Codigo_Cliente,
			       RG.DESCRIPCION DESC_REGION,
			       BC.DES_OBSE Observaciones,
			       BC.OID_TIPO_CLIE OID_TIPO_CLIENTE,
			       BC.OID_REGI OID_REGION,
			       BC.CLIE_OID_CLIE OID_CLIENTE,
			       ZN.DESCRIPCION DESC_ZONA,
			       BC.IND_TIPO_BLOQ,
			       TO_CHAR(BC.VAL_PMON_DEVU,'999.99') VAL_PMON_DEVU,
			       BC.USU_CREA, 
			       TO_CHAR(BC.FEC_CREA,'DD/MM/YYYY HH24:MI:SS') FEC_CREA
			  FROM STO_BLOQU_CONTR BC,
			       (SELECT OID_TIPO_CLIE OID, VAL_I18N DESCRIPCION
			          FROM GEN_I18N_SICC_COMUN P, MAE_TIPO_CLIEN C, SEG_IDIOM I
			         WHERE P.VAL_OID = C.OID_TIPO_CLIE
			           AND P.IDIO_OID_IDIO = I.OID_IDIO
			           AND P.ATTR_ENTI = 'MAE_TIPO_CLIEN'
			           AND I.COD_ISO_IDIO = #codigoIso#
			         ORDER BY 2) TC,
			       (SELECT c.oid_subt_clie OID, VAL_I18N DESCRIPCION
			          FROM GEN_I18N_SICC_COMUN P,
			               MAE_SUBTI_CLIEN     C,
			               MAE_TIPO_CLIEN      T,
			               SEG_IDIOM           I
			         WHERE P.VAL_OID = C.OID_SUBT_CLIE
			           AND P.IDIO_OID_IDIO = I.OID_IDIO
			           AND P.ATTR_ENTI = 'MAE_SUBTI_CLIEN'
			           AND T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE
			           AND I.COD_ISO_IDIO = #codigoIso#) STC,
			       (SELECT oid_Tipo_Clas OID, VAL_I18N DESCRIPCION
			          FROM GEN_I18N_SICC_COMUN,
			               SEG_IDIOM,
			               MAE_TIPO_CLASI_CLIEN,
			               MAE_TIPO_CLIEN,
			               MAE_SUBTI_CLIEN
			         WHERE GEN_I18N_SICC_COMUN.VAL_OID =
			               MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
			           AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
			           AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_TIPO_CLASI_CLIEN'
			           AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE =
			               MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
			           AND MAE_TIPO_CLIEN.OID_TIPO_CLIE =
			               MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE) TCS,
			       (SELECT OID_CLAS OID, VAL_I18N DESCRIPCION
			          FROM GEN_I18N_SICC_COMUN,
			               SEG_IDIOM,
			               MAE_CLASI,
			               MAE_TIPO_CLASI_CLIEN,
			               MAE_SUBTI_CLIEN,
			               MAE_TIPO_CLIEN
			         WHERE GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS
			           AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
			           AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI'
			           AND SEG_IDIOM.COD_ISO_IDIO = #codigoIso#
			           AND MAE_CLASI.TCCL_OID_TIPO_CLAS =
			               MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
			           AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE =
			               MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
			           AND MAE_TIPO_CLIEN.OID_TIPO_CLIE =
			               MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE) CL,
			       MAE_CLIEN CI,
			       (SELECT DISTINCT ZON_REGIO.OID_REGI OID,
			                        UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) DESCRIPCION
			          FROM SEG_PAIS, SEG_MARCA, SEG_CANAL, ZON_REGIO
			         WHERE ((ZON_REGIO.IND_ACTI = 1) AND
			               (SEG_PAIS.COD_PAIS = #codigoPais#) AND
			               (SEG_MARCA.COD_MARC = #codigoMarca#) AND 
			               (SEG_CANAL.COD_CANA = #codigoCanal#) AND
			               (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS) AND
			               (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC) AND
			               (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA))
			         ORDER BY 2 ASC) RG,
			        (SELECT ZON_ZONA.OID_ZONA AS OID, 	   
						   NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION
					 FROM  ZON_ZONA,
					       SEG_PAIS,
					       SEG_CANAL,
					       SEG_MARCA,
					       ZON_REGIO
					 WHERE (ZON_ZONA.IND_ACTI = 1)
				     AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
					 AND   (SEG_MARCA.COD_MARC = #codigoMarca#)
					 AND   (SEG_CANAL.COD_CANA = #codigoCanal#)
					 AND   (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
					 AND   (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
					 AND   (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
					 AND   (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
					 AND   (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
					 AND   (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)) ZN
			 WHERE BC.OID_TIPO_CLIE = TC.OID(+)
			   AND BC.OID_SUBT_CLIE = STC.OID(+)
			   AND BC.OID_TIPO_CLAS_CLIE = TCS.OID(+)
			   AND BC.OID_CLAS_CLIE = CL.OID(+)
			   AND BC.CLIE_OID_CLIE = CI.OID_CLIE(+)
			   AND BC.OID_REGI = RG.OID(+)
			   AND BC.OID_ZONA = ZN.OID(+)
			   AND BC.IND_ACTI = 1
			   AND BC.COD_TIPO_DOCU = #codigoTipoDocumento#
		<isNotEmpty property="motivoBloqueo">
			   AND BC.val_moti_bloq = #motivoBloqueo#
		</isNotEmpty>	   			   
		<isNotEmpty property="oidPeriodo">
			AND BC.OID_PERI = #oidPeriodo#
		</isNotEmpty>
		<isNotEmpty property="oidTipoCliente">
			AND BC.OID_TIPO_CLIE = #oidTipoCliente#
		</isNotEmpty>
		<isNotEmpty property="oidSubTipoCliente">
			AND BC.OID_SUBT_CLIE = #oidSubTipoCliente#
		</isNotEmpty>
		<isNotEmpty property="oidSubTipoClasificacion">
			AND BC.OID_TIPO_CLAS_CLIE = #oidSubTipoClasificacion#
		</isNotEmpty>
		<isNotEmpty property="oidClasificacion">
			AND BC.OID_CLAS_CLIE = #oidClasificacion#
		</isNotEmpty>
		<isNotEmpty property="codigoRegion">
			AND BC.OID_REGI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_REGION(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoRegion#)
		</isNotEmpty>
		<isNotEmpty property="codigoZona">
			AND BC.OID_ZONA = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoRegion#,#codigoZona#)
		</isNotEmpty>
		
	    <isNotEmpty property="clienteList">	
			<iterate prepend="AND" property="clienteList" open="(" close=")" conjunction="OR">
			     BC.CLIE_OID_CLIE = #clienteList[]#
		    </iterate> 
	    </isNotEmpty>

		<isNotEmpty property="tipoBloqueo">
			AND BC.IND_TIPO_BLOQ = #tipoBloqueo#
		</isNotEmpty>
	</select>
	
	<insert id="insertSTOBloqueoControl" parameterClass="java.util.Map">
		INSERT INTO STO_BLOQU_CONTR 
		(COD_BLOQ,
		 OID_TIPO_CLIE,
		 OID_SUBT_CLIE,
		 OID_TIPO_CLAS_CLIE,
		 OID_CLAS_CLIE,
		 CLIE_OID_CLIE,
		 OID_ZONA,
		 OID_REGI,
		 OID_PERI,
		 USU_CREA,
		 FEC_CREA,
		 DES_OBSE,
		 IND_ACTI,
		 IND_TIPO_BLOQ,
		 COD_TIPO_DOCU,
		 VAL_PMON_DEVU,
		 val_moti_bloq
		 )
		VALUES
		(SBCO_SEQ.nextval,
		 #oidTipoCliente#,
		 #oidSubTipoCliente#,
		 #oidSubTipoClasificacion#,
		 #oidClasificacion#,
		 #oidCliente#,
		 (SELECT OID_ZONA FROM ZON_ZONA WHERE COD_ZONA = #codigoZona#),
		 (SELECT OID_REGI FROM ZON_REGIO WHERE COD_REGI = #codigoRegion#),
		 #oidPeriodo#,
		 #usuario#,
		 #fechaCreacion#,
		 #observaciones#,
		 1,
		 #tipoBloqueo#,
		 #codigoTipoDocumento#,
		 #porcentaje#,
		 #motivoBloqueo#)
	</insert>
	
	<delete id="deleteBloqueoControl" parameterClass="java.util.Map">
		DELETE FROM STO_BLOQU_CONTR 
		 WHERE 1=1
		<isNotEmpty property="oidTipoCliente">
			 AND OID_TIPO_CLIE = #oidTipoCliente# 
		</isNotEmpty>
		<isEmpty property="oidTipoCliente">
			 AND OID_TIPO_CLIE IS NULL
		</isEmpty>
		<isNotEmpty property="oidRegion">
			AND OID_REGI = #oidRegion# 
		</isNotEmpty>
		<isEmpty property="oidRegion">
			 AND OID_REGI IS NULL
		</isEmpty>
		<isNotEmpty property="oidCliente">
			 AND CLIE_OID_CLIE = #oidCliente#
		</isNotEmpty>
		<isEmpty property="oidCliente">
			 AND CLIE_OID_CLIE IS NULL
		</isEmpty>
	</delete>
	<update id="updateEstadoInactivoBloqueoControl" parameterClass="java.util.Map">
		UPDATE STO_BLOQU_CONTR 
		SET IND_ACTI = 0,
		    USU_ELIM = #usuario#,
		    FEC_ELIM = SYSDATE
		WHERE COD_BLOQ = #codigoBloqueo#		
	</update>
	<select id="getMotivosDevolucion" parameterClass="java.util.Map" resultMap="baseResult">
	   SELECT base.cod_moti_devo AS codigo, 
	          gen.val_i18n AS descripcion
	     FROM gen_i18n_sicc_pais gen, 
	          seg_idiom idi, 
	          rec_motiv_devol base
	    WHERE gen.idio_oid_idio = idi.oid_idio
	      AND base.oid_moti_devo = gen.val_oid
	      AND idi.cod_iso_idio = #idiomaIso#
	      AND gen.attr_enti = 'REC_MOTIV_DEVOL'
	      AND TIP_MOTI_DEVU = 'C'
	    ORDER BY base.cod_moti_devo
	</select>
		
	<resultMap id="getExcepcionesPaseFueraFechaResult" class="java.util.HashMap">
		<result property="codigoPeriodo"			column="cod_peri" />
		<result property="codigoCliente"			column="cod_clie" />
		<result property="nombreCliente"			column="nombre_cliente" />
	</resultMap>		
		
	<select id="getExcepcionesPaseFueraFecha" parameterClass="java.util.Map" resultMap="getExcepcionesPaseFueraFechaResult">
		select cod_peri, 
	           cod_clie,
	           gen_pkg_gener.GEN_FN_CLIEN_DATOS_CODIG(cod_clie,'NOM_CLIE') as nombre_cliente 
	      from sto_clien_excep_fecha
	     <dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoCliente">           
				COD_CLIE = #codigoCliente#                             
	    	</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="codigoPeriodo">        
				COD_PERI = #codigoPeriodo#                          
	    	</isNotEmpty>  
    	 </dynamic>
	</select>
	
	<delete id="deleteExcepciones" parameterClass="java.util.Map">
		DELETE FROM sto_clien_excep_fecha 
		 WHERE COD_CLIE = #codigoCliente#
		   and COD_PERI = #codigoPeriodo#  
	</delete>
	
	<insert id="insertExcepciones" parameterClass="java.util.Map">
	  insert into sto_clien_excep_fecha(cod_peri, 
	                                    cod_clie)
	  values (#codigoPeriodo#, 
	          #codigoCliente#)
	</insert>
	
	<select id="getTiposOrdenTransporte" parameterClass="java.util.Map" resultMap="baseResult">    
		select a.cod_tipo_orde_tran CODIGO,
		       a.val_desc           DESCRIPCION 
		  from sto_tipo_orden_trans a
	</select>
	
	<resultMap id="getEstadosOrdenTransporteResult" class="java.util.HashMap">
	    <result property="codigoTipoOrden"		column="codigo_tipo_orden"/>
		<result property="tipoOrden"			column="tipo_orden"/>
		<result property="codigoEstado"			column="codigo"/>
		<result property="descripcion"			column="descripcion"/>
	</resultMap>
	
	<select id="getEstadosOrdenTransporte" parameterClass="java.util.Map" resultMap="getEstadosOrdenTransporteResult">
		select a.cod_tipo_orde_tran as codigo_tipo_orden,
		       b.val_desc      as tipo_orden, 
		       a.cod_esta_entr as codigo, 
		       a.val_desc      as descripcion
		  from sto_estad_orden_trans a,
		       sto_tipo_orden_trans b
		 where a.cod_tipo_orde_tran = b.cod_tipo_orde_tran
		   <isNotEmpty property="codigoTipoOrdenTransporte">
		   	  and a.cod_tipo_orde_tran = #codigoTipoOrdenTransporte#
		   </isNotEmpty>
		   <isNotEmpty property="estadoEntrega">
		   	  and a.cod_esta_entr = #estadoEntrega#
		   </isNotEmpty>
		   <isNotEmpty property="descripcionEstado">
		   	  and upper(a.val_desc) like upper(#descripcionEstado#)||'%'
		   </isNotEmpty>
	</select>
	
	<insert id="insertEstadoOrdenTransporte" parameterClass="java.util.Map">
		insert into sto_estad_orden_trans (cod_tipo_orde_tran, 
		                                   cod_esta_entr, 
		                                   val_desc)
	    values(#codigoTipoOrdenTransporte#, 
	           #estadoEntrega#, 
	           #descripcionEstado#)
	</insert>
	
	<update id="updateEstadoOrdenTransporte" parameterClass="java.util.Map">
		 update sto_estad_orden_trans
    	    set val_desc = #descripcionEstado#
  		  where cod_tipo_orde_tran = #codigoTipoOrdenTransporte#
            and cod_esta_entr = #estadoEntrega# 
	</update>            
	
	<delete id="deleteEstadoOrdenTransporte" parameterClass="java.util.Map">
		delete from sto_estad_orden_trans 
		 where cod_tipo_orde_tran = #codigoTipoOrdenTransporte#
           and cod_esta_entr = #estadoEntrega#  
	</delete>
	
	<resultMap id="getNovedadesOrdenTransporteResult" class="java.util.HashMap">
	    <result property="codigoNovedad"			column="cod_nove"/>
		<result property="descripcionNovedad"		column="val_desc"/>
	</resultMap>
	
	<select id="getNovedadesOrdenTransporte" parameterClass="java.util.Map" resultMap="getNovedadesOrdenTransporteResult">
		select cod_nove, 
		       val_desc 
	      from sto_noved_orden_trans
	     <dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoNovedad">           
				cod_nove = #codigoNovedad#                             
	    	</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="descripcionNovedad">        
				upper(val_desc) like upper(#descripcionNovedad#)||'%'                     
	    	</isNotEmpty>  
    	 </dynamic>
	</select>
	
	<delete id="deleteNovedadesOrdenTransporte" parameterClass="java.util.Map">
		 delete sto_noved_orden_trans
   		  where cod_nove = #codigoNovedad#    
	</delete>
	
	<insert id="insertNovedadesOrdenTransporte" parameterClass="java.util.Map">
		insert into sto_noved_orden_trans(cod_nove, 
		                                  val_desc)
		values (#codigoNovedad#, 
		        #descripcionNovedad#)
	</insert>
	
	<update id="updateNovedadesOrdenTransporte" parameterClass="java.util.Map">
		 update sto_noved_orden_trans
            set cod_nove = #codigoNovedad# ,
                val_desc = #descripcionNovedad#
          where cod_nove = #codigoNovedad#  
	</update>
		
	<resultMap id="getCalificacionesOrdenTransporteResult" class="java.util.HashMap">
	    <result property="codigoCalificacion"			column="cod_cali"/>
		<result property="descripcionCalificacion"		column="val_desc"/>
	</resultMap>
	
	<select id="getCalificacionesOrdenTransporte" parameterClass="java.util.Map" resultMap="getCalificacionesOrdenTransporteResult">
		select cod_cali, 
		       val_desc 
	      from sto_calif_orden_trans
	     <dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoCalificacion">           
				cod_cali = #codigoCalificacion#                             
	    	</isNotEmpty>                                            
			<isNotEmpty prepend="AND" property="descripcionCalificacion">        
				upper(val_desc) like upper(#descripcionCalificacion#)||'%'                     
	    	</isNotEmpty>  
    	 </dynamic>
	</select>
	
	<delete id="deleteCalificacionesOrdenTransporte" parameterClass="java.util.Map">
		 delete sto_calif_orden_trans
   		  where cod_cali = #codigoCalificacion#    
	</delete>
	
	<insert id="insertCalificacionesOrdenTransporte" parameterClass="java.util.Map">
		insert into sto_calif_orden_trans(cod_cali, 
		                                  val_desc)
		values (#codigoCalificacion#, 
		        #descripcionCalificacion#)
	</insert>
	
	<update id="updateCalificacionesOrdenTransporte" parameterClass="java.util.Map">
		 update sto_calif_orden_trans
            set cod_cali = #codigoCalificacion# ,
                val_desc = #descripcionCalificacion#
          where cod_cali = #codigoCalificacion#  
	</update>
	
	<select id="getTipoDocumento" resultMap="baseResult">
		select    cod_tipo_docu as codigo,
		          val_sigl as descripcion
		from      MAE_TIPO_DOCUM
		order by  2			
	</select>
	
	<insert id="insertAuditoriaCambioCodCliente" parameterClass="java.util.Map">
		INSERT INTO PED_AUDIT_CONSO_CABEC
		(OID_AUID_CONS_CABE,		
		 SEC_NUME_DOCU,
		 FEC_SOLI,
		 COD_PERI,
		 COD_CLIE_ANTE,
		 COD_CLIE_NUEV,
		 FEC_MODI,
		 USU_MODI)
		 VALUES(
		 PACC_SEQ.nextval,
		 #numDocumento#,
		 to_date(#fechaSolicitud#,'dd/MM/yyyy'),
		 #codPeriodo#,
		 #codClienteBD#,
		 #codCliente#,
		 sysdate,
		 #usuario#)		
	</insert>
	

	
	
	<resultMap id="ordenTransporteResult" class="ordenTransporte">                                      
		<result property="codigoPais"                    column="cod_pais" />
		<result property="codigoCompania"                column="cod_comp" />
		<result property="numeroDocumento"               column="num_docu" />
		<result property="codigoDocumento"               column="cod_docu" />
		<result property="codigoTipoDocumento"           column="cod_tipo_docu" />
		<result property="codigoCompaniaTransporte"      column="cod_comp_tran" />
		<result property="codigoCentroAcopio"            column="cod_cent_acop" />
		<result property="codigoEstadoEntrega"           column="cod_esta_entr" />
		<result property="codigoEstadoRecojo"            column="cod_esta_reco" />
		<result property="codigoNovedad"                 column="cod_nove" />
		<result property="codigoRecibiConforme"          column="cod_reci_conf" />
		<result property="oidPais"                       column="oid_pais" />
		<result property="fechaProceso"                  column="fecha" />
		<result property="horaProceso"                   column="hora" />		
		<result property="minutosProceso"                column="minutos" />
		<result property="tipoHorario"                   column="tipo_horario" />		
		<result property="estadoProceso"                 column="sta_proc" />
		<result property="codigoMotivoRechazo"           column="cod_moti_rech" />
		<result property="numeroLote"                    column="num_lote" />
		<result property="codigoEstadoEntrega2"          column="cod_esta_ent2" />
		<result property="mensaje"                       column="val_mens" />
		<result property="direccion"                     column="val_dire" />
		<result property="numeroSecuencia"               column="sec_nume_docu" />
		<result property="indicadorNovedad"              column="ind_nove" />
		<result property="indicadorEnvio"                column="ind_envi" />
		<result property="tipoOrden"                     column="tip_orde" />
		<result property="codigoZona"                    column="cod_zona" />
		<result property="codigoCalificacion"            column="cod_cali" />
		<result property="codigoCliente"                 column="cod_clie" />
		<result property="fechaFacturacion"              column="fec_fact" />
		<result property="nombreCliente"                 column="nom_clie" />
		<result property="codigoPeriodo"                 column="cod_peri" />
		<result property="codigoRegion"                  column="cod_regi" />
		<result property="codigoSeccion"	             column="cod_secc" />
		<result property="nombreCentroAcopio"            column="nom_cent_acop" />
		<result property="nombreCompanhiaTransporte"     column="nom_comp_tran" />
		<result property="valEmail"                 	 column="val_emai" />
		<result property="valDescricpcion"               column="val_desc" />
		<result property="direccionDelCliente"           column="dir_cli" />
		<result property="telefonoCliente"	             column="tel_cli" />
		<result property="indicadorComprobanteCaja"           column="ind_caja_comp" />
		<result property="indicadorFueraCaja"	             column="ind_fuer_caja" />
		
  	</resultMap>   
	
	<select id="getOrdenTransporte" parameterClass="java.util.Map" resultMap="ordenTransporteResult">
	   select cod_pais,
	          cod_comp,
	          num_docu,
                  num_docu as cod_docu,
	          cod_tipo_docu,
                  IOT.COD_COMP_TRAN,
                  IOT.COD_CENT_ACOP,
	          cod_esta_entr,
	          cod_esta_reco,
                  IOT.COD_NOVE ,
	          cod_reci_conf,
	          oid_pais,
	          to_char(fec_proc,'dd/MM/yyyy') as fecha,
        	  to_char(fec_proc,'hh') as hora,
              to_char(fec_proc,'mi') as minutos,
              to_char(fec_proc,'AM') as tipo_horario,
	          sta_proc,
	          cod_moti_rech,
	          num_lote,
	          cod_esta_ent2,
	          val_mens,
	          val_dire,
	          sec_nume_docu,
	          ind_nove,
	          ind_envi,
	          tip_orde,
	          cod_zona,
	          cod_cali,
	          cod_clie,
	          to_char(fec_fact,'dd/MM/yyyy') as fec_fact,
	          nom_clie,
	          cod_peri,
	          cod_regi,
                  cod_secc,
                  CEN.NOM_CENT_ACOP,
                  CEN.NOM_COMP_TRAN,
                  CEN.VAL_EMAI,
                  NOV.VAL_DESC,
                  imp_pkg_proce_laser.imp_fn_obtiene_text_direc(imp_pkg_proce_laser.imp_fn_obtiene_direc_clie(#codigoPais#,(select oid_clie from mae_clien where cod_clie = IOT.COD_CLIE )),'') dir_cli,
                  imp_pkg_proce_laser.imp_fn_obtiene_text2_direc(imp_pkg_proce_laser.imp_fn_obtiene_direc_clie(#codigoPais#,(select oid_clie from mae_clien where cod_clie = IOT.COD_CLIE )),'') tel_cli,
			      NVL(iot.ind_caja_comp, 'N') ind_caja_comp, 
			      NVL(iot.ind_fuer_caja, 'N') ind_fuer_caja
             from int_solic_conso_orden_trans iot,
                     sto_centr_acopi cen,
                     sto_noved_orden_trans nov
                where IOT.COD_COMP_TRAN = CEN.COD_COMP_TRAN(+)
                   and IOT.COD_CENT_ACOP = CEN.COD_CENT_ACOP(+)
                   and IOT.COD_NOVE = NOV.COD_NOVE(+)
                  and COD_PAIS=#codigoPais#
		  AND COD_TIPO_DOCU=#codigoTipo#
		  AND NUM_LOTE =#numLote#
		  AND SEC_NUME_DOCU=#numDocumento#				
	</select>
	
	<resultMap id="getCalificacionOrdenTransporteResult"  class="java.util.HashMap">
	    <result property="codigo"		    	column="CODIGO"/>	                                                                       
    	<result property="descripcion"		column="DESCRIPCION"/>
	</resultMap>
	
	<select id="getCalificacionOrdenTransporte" parameterClass="java.util.Map" resultMap="getCalificacionOrdenTransporteResult">
		SELECT b.cod_cali AS codigo, b.val_desc AS descripcion
		  FROM sto_noved_accio_orden_trans a, sto_calif_orden_trans b
		 WHERE NVL (a.cod_esta_entr, 0) = to_number(NVL (#codigoEstadoEntrega#, 0))
		   AND NVL (a.cod_nove, 0) = to_number(NVL (#codigoNovedad#, 0))
		   AND b.cod_cali = a.cod_cali(+)
	</select>
	
	<update id="updateOrdenTransporte" parameterClass="java.util.Map">
           update int_solic_conso_orden_trans
		      set cod_comp_tran = #codigoCompaniaTransporte#,
		          cod_cent_acop = #codigoCentroAcopio#      ,
		          cod_cali      = #calificacion#            ,
		          val_mens      = #mensaje#                 ,
		          val_dire      = #direccionCliente#		,
		          cod_zona_arri = #codigoZonaArribo#		,
	              num_docu = #codigoDocumento#		, 
		          fec_solu_nove = sysdate
		    where cod_pais      = #codigoPais#
		      and sec_nume_docu = #numeroDocumento#
  	</update>
	
	<resultMap id="getNovedadesAccionesOrdenTransporteResult" class="java.util.HashMap">
	    <result property="codEstadoEntrega"     	 column="cod_esta_entr"/>	
		<result property="codigoNovedad"     	     column="cod_nove"/>    
		<result property="codEstadoEntrega2"     	 column="cod_esta_ent2"/>    
		<result property="indicadorRecibiConf"       column="ind_reci_conf"/>    
		<result property="codigoCalificacion"        column="cod_cali"/>    
		<result property="mensaje"     				 column="val_mens"/>    
		<result property="indicadorEnviaNovedad"     column="ind_envi_nove"/>    
		<result property="indicadorCambioDireccion"  column="ind_camb_dire"/>    
		<result property="indicadorGeneraNovedad"    column="ind_gene_nove"/>    
		<result property="codigoEstadoNuevo"     	 column="cod_esta_nuev"/>    
		<result property="codigoNovedadNuevo"     	 column="cod_nove_nuev"/>  
	</resultMap>
	
	<select id="getNovedadesAccionesOrdenTransporte" parameterClass="java.util.Map" resultMap="getNovedadesAccionesOrdenTransporteResult">
		 select cod_esta_entr,
		        cod_nove,
		        cod_esta_ent2,
		        ind_reci_conf,
		        cod_cali,
		        val_mens,
		        ind_envi_nove,
		        ind_camb_dire,
		        ind_gene_nove,
		        cod_esta_nuev,
		        cod_nove_nuev
		   from sto_noved_accio_orden_trans
		  where nvl(cod_esta_entr,0) = to_number(nvl(#codigoEstadoEntrega#,0))
		    and nvl(cod_nove,0) = to_number(nvl(#codigoNovedad#,0))
		    and nvl(cod_cali,0) = to_number(nvl(#calificacion#,0))
	</select>
	
	<parameterMap id="executeModificarOrdenTransporteParams" class="map" >
		<parameter property="codigoPais"              jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>									
		<parameter property="numeroDocumento"         jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoTipodoc"           jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numeroLote"              jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoEstadoEntrega"     jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoNovedad"           jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="calificacion"            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indicadorNovedad"        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="indicadorGeneraNovedad"  jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="usuario"                 jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	
	<procedure id="executeModificarOrdenTransporte" parameterMap="executeModificarOrdenTransporteParams">
	    {call sto_pkg_proce_gener.sto_pr_gener_noved_ortra(?,?,?,?,?,?,?,?,?,?)}    	
	</procedure>
		
	<resultMap id="getCentrosDeAcopioResult" class="java.util.HashMap">
	    <result property="codCiaTransporte"     	 column="COD_COMP_TRAN"/>	
		<result property="codCentroAcopio"     	     column="COD_CENT_ACOP"/>    
		<result property="ciaTransporte"         	 column="NOM_COMP_TRAN"/>    
		<result property="nomCentroAcopio"           column="NOM_CENT_ACOP"/>    
		<result property="emailCentroAcopio"     	 column="VAL_EMAI"/>  
	</resultMap>
	
	<select id="getCentrosDeAcopio" parameterClass="java.util.Map" resultMap="getCentrosDeAcopioResult">
		Select COD_COMP_TRAN,
		       COD_CENT_ACOP,
		       NOM_COMP_TRAN,
		       NOM_CENT_ACOP,
		       VAL_EMAI
		  from STO_CENTR_ACOPI
		<dynamic prepend="where">                                    
			<isNotEmpty prepend="AND" property="codigoCentroAcopio">           
				COD_CENT_ACOP = #codigoCentroAcopio#                             
	    	</isNotEmpty>                                            			
    	 </dynamic>  
    </select>	
		
	<update id="updateIndicadorEnvio" parameterClass="java.util.Map">
        update int_solic_conso_orden_trans a
   		   set a.ind_envi = 1
 		 where a.ind_envi = 0
 		  oR a.ind_envi is NULL
  	</update>	
		
	<select id="getCentrosDeAcopioSolucionesCentroAcopioAutomatico" resultMap="getCentrosDeAcopioResult">
		Select x.COD_COMP_TRAN,
		       x.COD_CENT_ACOP,
		       x.NOM_COMP_TRAN,
		       x.NOM_CENT_ACOP,
		       x.VAL_EMAI
		  from STO_CENTR_ACOPI x
 		 where(
		Select count(1)
		  from int_solic_conso_orden_trans a,
		       zon_regio                   b,
		       mae_clien                   c,
		       mae_clien_ident             d,
		       sto_calif_orden_trans       e,
		       sto_noved_orden_trans       f
		 where nvl(a.ind_envi,0) = 0
		   And substr(a.cod_zona, 1, 2) = b.cod_regi
		   and a.cod_clie = c.cod_clie
		   and c.oid_clie = d.clie_oid_clie
		   and d. VAL_IDEN_DOCU_PRIN = 1
		   and a.cod_cali = e.cod_cali
		   And a.cod_nove = f.cod_nove
		   and a.cod_comp_tran = x.cod_comp_tran
		   And a.cod_cent_acop = x.cod_cent_acop) > 0
    </select>			
		
	<select id="getCompaniasTransporte" resultMap="baseResult">	
		select distinct cod_comp_tran as codigo, 
		                nom_comp_tran as descripcion
		  from sto_centr_acopi  
         order by nom_comp_tran
	</select>		
		
	<select id="getCentrosAcopio" resultMap="baseResult">	
		select distinct cod_cent_acop as codigo, 
		                nom_cent_acop as descripcion
		  from sto_centr_acopi  
		 order by nom_cent_acop
	</select>		

	
  <parameterMap id="executeUpdateCodigoConsultoraParams" class="map" >
  		<parameter property="codigoPais" 		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codCliente"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codClienteBD"  	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codPeriodo" 		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numLote" 			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numCliente"    	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoSolicitud" 	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codSubAcc"   		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codAcc"      		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="tipoDespacho"  	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="estadoProceso" 	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="montoPedido"   	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="numDocumento"  	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="usuario"       	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codigoZonaArribo"  jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="oidMotiGes"  jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="valObseGestion"  jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  </parameterMap>
  
  <procedure id="executeUpdateCodigoConsultora" parameterMap="executeUpdateCodigoConsultoraParams">
    {call OCR_SOLIC_PEDIDOS.OCR_PR_ACTUA_CODIG_CONSU(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}    	
  </procedure>
		
   <resultMap id="getBeneficioDeudaListResult" class="java.util.HashMap">
   		<result property="codigoPeriodo"             column="CODIGO_PERIODO"/>
		<result property="tipoCliente"	             column="TIPO_CLIENTE"/>
		<result property="subTipoCliente"            column="SUBTIPO_CLIENTE"/>
		<result property="tipoClasificacionCliente"  column="TIPO_CLASIFICACION_CLIENTE"/>
		<result property="clasificacion"             column="CLASIFICACION"/>
		<result property="codigoCliente"             column="CODIGO_CLIENTE"/>
		<result property="descripcionRegion"         column="DESC_REGION"/>
		<result property="descripcionZona"           column="DESC_ZONA"/>
		<result property="oidClienteBeneDeud"        column="OID_CLIE_BENE_DEUD"/>
		<result property="tipoBeneficio"             column="TIP_BENE"/>
		<result property="valorMonto"                column="VAL_MONT"/>
		<result property="valorPorcentaje"           column="VAL_PORC"/>
   </resultMap>	
   
   <select id="getBeneficioDeudaList" parameterClass="java.util.Map" resultMap="getBeneficioDeudaListResult">
   		SELECT BC.OID_CLIE_BENE_DEUD,
		       BC.Codigo_Periodo,
		       BC.Tipo_Cliente,
		       BC.Subtipo_Cliente,
		       BC.Tipo_Clasificacion_Cliente,
		       BC.Clasificacion,
		       BC.Codigo_Cliente,
		       BC.DESC_REGION,
		       BC.DESC_ZONA,
		       BC.TIP_BENE,
		       BC.VAL_MONT,
		       BC.VAL_PORC
		 FROM TABLE(STO_PKG_GENER.STO_FN_BENEF_DEUDA(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoIso#,#oidTipoCliente#,#oidRegion#,#oidCliente#,#oidPeriodo#)) BC
		 <dynamic prepend="WHERE">
		   <isNotEmpty property="oidPeriodo" prepend="AND">
				BC.OID_PERI = #oidPeriodo#
			</isNotEmpty>
			
			<isNotEmpty property="oidTipoCliente" prepend="AND">
				BC.OID_TIPO_CLIE = #oidTipoCliente#
			</isNotEmpty>
			
			<isNotEmpty property="oidSubTipoCliente" prepend="AND">
				BC.OID_SUBT_CLIE = #oidSubTipoCliente#
			</isNotEmpty>
			
			<isNotEmpty property="oidSubTipoClasificacion" prepend="AND">
				BC.OID_TIPO_CLAS_CLIE = #oidSubTipoClasificacion#
			</isNotEmpty>
			
			<isNotEmpty property="oidClasificacion" prepend="AND">
				BC.OID_CLAS_CLIE = #oidClasificacion#
			</isNotEmpty>
			
			<isNotEmpty property="oidCliente" prepend="AND">
				BC.CLIE_OID_CLIE = #oidCliente#
			</isNotEmpty>
			
			<isNotEmpty property="oidRegion" prepend="AND">
				BC.OID_REGI = #oidRegion#
			</isNotEmpty>
			
			<isNotEmpty property="oidZona" prepend="AND">
				BC.OID_ZONA = #oidZona#
			</isNotEmpty>
					
			<isNotEmpty property="tipoBeneficio" prepend="AND">
				BC.TIP_BENE = #tipoBeneficio#
			</isNotEmpty>

			<isNotEmpty property="oidClienteCarga" prepend="AND">
				BC.CODIGO_CLIENTE IN (SELECT cod_clie
                		                FROM STO_TMP_CARGA_CLIEN_FILES
                         		       WHERE OID_CLIE_FILE = #oidClienteCarga#)
			</isNotEmpty>
		</dynamic>  
   </select>		
   
   <update id="deleteBeneficioDeuda" parameterClass="java.util.Map">
   		UPDATE  STO_CLIEN_BENEF_DEUDA
   		SET IND_ELIM = '1',
   		    USU_ELIM =  #usuario#,
   		    FEC_ELIM = SYSDATE
   		WHERE OID_CLIE_BENE_DEUD = #oidBeneficioDeuda#
   </update>
   
   <insert id="insertDeudaBenficio" parameterClass="java.util.Map">
   		INSERT INTO STO_CLIEN_BENEF_DEUDA
   		(OID_CLIE_BENE_DEUD,
   		 OID_TIPO_CLIE,
   		 OID_SUBT_CLIE,
   		 OID_TIPO_CLAS_CLIE,
   		 OID_CLAS_CLIE,
   		 CLIE_OID_CLIE,
   		 OID_ZONA,
   		 OID_REGI,
   		 OID_PERI,
   		 TIP_BENE,
   		 VAL_PORC,
   		 VAL_MONT,
   		 USU_CREA,
   		 FEC_CREA,
   		 VAL_OBSE,
   		 IND_ELIM)
   		VALUES(
   		 SCBD_SEQ.nextval,
   		 #oidTipoCliente#,
   		 #oidSubTipoCliente#,
   		 #oidSubTipoClasificacion#,
   		 #oidClasificacion#,
   		 #oidCliente#,
   		 #oidZona#,
		 #oidRegion#,
   		 #oidPeriodo#,
   		 #tipoBeneficio#,
   		 #porcentajeBeneficio#,
		 TO_NUMBER(#montoDeuda#,'999999.99'),
   		 #usuario#,
   		 #fechaCreacion#,
   		 #observaciones#,
   		 0)
   </insert>
   
   <resultMap id="getExcepcionValidaDeudaListResult" class="java.util.HashMap">
   		<result property="oidClienExcepValiDeud"     column="OID_CLIE_EXCE_VALI_DEUD"/>
   		<result property="codigoCliente"             column="CODIGO_CLIENTE"/>
   		<result property="codigoPeriodo"             column="CODIGO_PERIODO"/>   		
   </resultMap>
   
   <select id="getExcepcionValidaDeudaList" parameterClass="java.util.Map" resultMap="getExcepcionValidaDeudaListResult">
   		select OID_CLIE_EXCE_VALI_DEUD,
   			   GEN_PKG_GENER.GEN_FN_DEVUELVE_COD_CLIE(OID_CLIE) AS CODIGO_CLIENTE,
       		   DECODE(OID_PERI,null,null,gen_pkg_gener.gen_fn_devuelve_des_perio(OID_PERI)) AS CODIGO_PERIODO
		from STO_CLIEN_EXCEP_VALID_DEUDA
		where 1=1
		<isNotEmpty property="oidCliente">
			AND OID_CLIE = #oidCliente#
		</isNotEmpty>
		
		<isNotEmpty property="oidPeriodo">
			AND OID_PERI = #oidPeriodo#
		</isNotEmpty>
   </select>
   
   <insert id="insertExcepValidDeuda" parameterClass="java.util.Map">
   		INSERT INTO STO_CLIEN_EXCEP_VALID_DEUDA
   		(OID_CLIE_EXCE_VALI_DEUD,
   		 OID_CLIE,
   		 OID_PERI)
   		VALUES(
   		SCEVD_SEQ.nextval,
   		#oidCliente#,
   		#oidPeriodo#)
   </insert>
   
   <delete id="deleteExcepcionValidaDeuda" parameterClass="java.util.Map">
   		DELETE FROM STO_CLIEN_EXCEP_VALID_DEUDA WHERE OID_CLIE_EXCE_VALI_DEUD = #oidClienExcepValiDeud#
   </delete>
   
   <resultMap id="getControlDevolucionListResult"  class="java.util.HashMap">
		<result property="codigoControl"             	column="cod_contr"/>		
		<result property="oidTipoCliente"	         	column="oid_tipo_clie"/>
		<result property="tipoCliente"            	 	column="TIPO_CLIENTE"/>		
		<result property="oidSubTipoCliente"         	column="oid_subt_clie"/>
		<result property="subTipoCliente"            	column="SUBTIPO_CLIENTE"/>		
		<result property="oidTipoClasificacionCliente"  column="oid_tipo_clas_clie"/>
		<result property="tipoClasificacionCliente"     column="TIPO_CLASIFICACION_CLIENTE"/>		
		<result property="oidClasificacion"          	column="oid_clas_clie"/>
		<result property="clasificacion"             	column="CLASIFICACION"/>		
		<result property="oidZona"           			column="oid_zona"/>
		<result property="descripcionZona"           	column="DESC_ZONA"/>		
		<result property="oidRegion"                 	column="OID_REGI"/>
		<result property="descripcionRegion"         	column="DESC_REGION"/>	
		<result property="porcentaje" 		        	column="val_pmon_dev"/>
		<result property="observaciones"             	column="OBSERVACIONES"/>		
	</resultMap>
   
   <select id="getControlDevolucionList" parameterClass="java.util.Map" resultMap="getControlDevolucionListResult">		
   		select cd.cod_contr,
		       cd.oid_tipo_clie,
		       TC.DESCRIPCION Tipo_Cliente,
		       cd.oid_subt_clie,
		       STC.DESCRIPCION Subtipo_Cliente,
		       cd.oid_tipo_clas_clie,
		       TCS.DESCRIPCION Tipo_Clasificacion_Cliente,
		       cd.oid_clas_clie,
		       CL.DESCRIPCION Clasificacion,
		       cd.oid_zona,
		       ZN.DESCRIPCION DESC_ZONA,
		       cd.oid_regi,
		       RG.DESCRIPCION DESC_REGION,
		       cd.val_pmon_dev,
		       cd.DES_OBSE Observaciones 
		              from sto_contr_devol cd,
		     			   (SELECT OID_TIPO_CLIE OID, VAL_I18N DESCRIPCION
					          FROM GEN_I18N_SICC_COMUN P, MAE_TIPO_CLIEN C, SEG_IDIOM I
					         WHERE P.VAL_OID = C.OID_TIPO_CLIE
					           AND P.IDIO_OID_IDIO = I.OID_IDIO
					           AND P.ATTR_ENTI = 'MAE_TIPO_CLIEN'
					           AND I.COD_ISO_IDIO = #codigoIso#
					         ORDER BY 2) TC,
		     			   
		     			   (SELECT c.oid_subt_clie OID, VAL_I18N DESCRIPCION
					          FROM GEN_I18N_SICC_COMUN P,
					               MAE_SUBTI_CLIEN     C,
					               MAE_TIPO_CLIEN      T,
					               SEG_IDIOM           I
					         WHERE P.VAL_OID = C.OID_SUBT_CLIE
					           AND P.IDIO_OID_IDIO = I.OID_IDIO
					           AND P.ATTR_ENTI = 'MAE_SUBTI_CLIEN'
					           AND T.OID_TIPO_CLIE = C.TICL_OID_TIPO_CLIE
					           AND I.COD_ISO_IDIO = #codigoIso#) STC,
					           
		     			   (SELECT oid_Tipo_Clas OID, VAL_I18N DESCRIPCION
					          FROM GEN_I18N_SICC_COMUN,
					               SEG_IDIOM,
					               MAE_TIPO_CLASI_CLIEN,
					               MAE_TIPO_CLIEN,
					               MAE_SUBTI_CLIEN
					         WHERE GEN_I18N_SICC_COMUN.VAL_OID = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
					           AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
					           AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_TIPO_CLASI_CLIEN'
					           AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
					           AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE) TCS,
		      			   
		      			   (SELECT OID_CLAS OID, VAL_I18N DESCRIPCION
					          FROM GEN_I18N_SICC_COMUN,
					               SEG_IDIOM,
					               MAE_CLASI,
					               MAE_TIPO_CLASI_CLIEN,
					               MAE_SUBTI_CLIEN,
					               MAE_TIPO_CLIEN
					         WHERE GEN_I18N_SICC_COMUN.VAL_OID = MAE_CLASI.OID_CLAS
					           AND GEN_I18N_SICC_COMUN.IDIO_OID_IDIO = SEG_IDIOM.OID_IDIO
					           AND GEN_I18N_SICC_COMUN.ATTR_ENTI = 'MAE_CLASI'
					           AND SEG_IDIOM.COD_ISO_IDIO = #codigoIso#
					           AND MAE_CLASI.TCCL_OID_TIPO_CLAS = MAE_TIPO_CLASI_CLIEN.OID_TIPO_CLAS
					           AND MAE_SUBTI_CLIEN.OID_SUBT_CLIE = MAE_TIPO_CLASI_CLIEN.SBTI_OID_SUBT_CLIE
					           AND MAE_TIPO_CLIEN.OID_TIPO_CLIE = MAE_SUBTI_CLIEN.TICL_OID_TIPO_CLIE) CL,
		                   
		                   (SELECT DISTINCT ZON_REGIO.OID_REGI OID,
					               UPPER(NVL(ZON_REGIO.DES_REGI, ' ')) DESCRIPCION
					          FROM SEG_PAIS, SEG_MARCA, SEG_CANAL, ZON_REGIO
					         WHERE ((ZON_REGIO.IND_ACTI = 1) AND
					               (SEG_PAIS.COD_PAIS = #codigoPais#) AND
					               (SEG_MARCA.COD_MARC = #codigoMarca#) AND 
					               (SEG_CANAL.COD_CANA = #codigoCanal#) AND
					               (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS) AND
					               (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC) AND
					               (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA))
					         ORDER BY 2 ASC) RG,
					        
					        (SELECT ZON_ZONA.OID_ZONA AS OID, 	   
								   NVL(ZON_ZONA.DES_ZONA, ' ') AS DESCRIPCION
							 FROM  ZON_ZONA,
							       SEG_PAIS,
							       SEG_CANAL,
							       SEG_MARCA,
							       ZON_REGIO
							 WHERE (ZON_ZONA.IND_ACTI = 1)
						     AND   (SEG_PAIS.COD_PAIS = #codigoPais#)
		  					 AND   (SEG_MARCA.COD_MARC = #codigoMarca#)
		  					 AND   (SEG_CANAL.COD_CANA = #codigoCanal#)
		  					 AND   (SEG_CANAL.OID_CANA = ZON_REGIO.CANA_OID_CANA)
		  					 AND   (SEG_PAIS.OID_PAIS = ZON_REGIO.PAIS_OID_PAIS)
		  					 AND   (SEG_MARCA.OID_MARC = ZON_REGIO.MARC_OID_MARC)	        
		  					 AND   (SEG_CANAL.OID_CANA = ZON_ZONA.CANA_OID_CANA)
		  					 AND   (SEG_PAIS.OID_PAIS = ZON_ZONA.PAIS_OID_PAIS)
		  					 AND   (ZON_REGIO.OID_REGI = ZON_ZONA.ZORG_OID_REGI)) ZN
		  					 
		where cd.OID_TIPO_CLIE = TC.OID(+)
			AND cd.OID_SUBT_CLIE = STC.OID(+)
			AND cd.OID_TIPO_CLAS_CLIE = TCS.OID(+)
			AND cd.OID_CLAS_CLIE = CL.OID(+)
			AND cd.OID_REGI = RG.OID(+)
			AND cd.OID_ZONA = ZN.OID(+)
			AND cd.IND_ACTI = 1
		<isNotEmpty property="oidTipoCliente">
			AND cd.OID_TIPO_CLIE = #oidTipoCliente#
		</isNotEmpty>
		<isNotEmpty property="oidSubTipoCliente">
			AND cd.OID_SUBT_CLIE = #oidSubTipoCliente#
		</isNotEmpty>
		<isNotEmpty property="oidSubTipoClasificacion">
			AND cd.OID_TIPO_CLAS_CLIE = #oidSubTipoClasificacion#
		</isNotEmpty>
		<isNotEmpty property="oidClasificacion">
			AND cd.OID_CLAS_CLIE = #oidClasificacion#
		</isNotEmpty>
		<isNotEmpty property="codigoRegion">
			AND cd.OID_REGI = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_REGION(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoRegion#)
		</isNotEmpty>
		<isNotEmpty property="codigoZona">
			AND cd.OID_ZONA = GEN_PKG_GENER.GEN_FN_DEVUELVE_ID_ZONA(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoRegion#,#codigoZona#)
		</isNotEmpty>			
	</select>
   
    <update id="updateEstadoInactivoControlDevoluciones" parameterClass="java.util.Map">
		UPDATE STO_CONTR_DEVOL 
		SET IND_ACTI = 0,
		    USU_ELIM = #usuario#,
		    FEC_ELIM = SYSDATE
		WHERE COD_CONTR = #codigoControl#		
	</update>
      
   <insert id="insertSTOControlDevoluciones" parameterClass="java.util.Map">
	   insert into sto_contr_devol(cod_contr,
								   oid_tipo_clie,
								   oid_subt_clie,
								   oid_tipo_clas_clie,
								   oid_clas_clie,
								   oid_zona,
								   oid_regi,
								   val_pmon_dev,
								   usu_crea,
								   fec_crea,
								   des_obse,
								   ind_acti)
		VALUES
		(SCDP_SEQ.nextval,
		 #oidTipoCliente#,
		 #oidSubTipoCliente#,
		 #oidSubTipoClasificacion#,
		 #oidClasificacion#,
		 (SELECT OID_ZONA FROM ZON_ZONA WHERE COD_ZONA = #codigoZona#),
		 (SELECT OID_REGI FROM ZON_REGIO WHERE COD_REGI = #codigoRegion#),
		 #porcentaje#,
		 #usuario#,		 
		 #fechaCreacion#,
		 #observaciones#,
		 '1')
	</insert>
	
	<update id="updateSTOZonaArribo" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			  SET COD_ZONA_ARRI = #codigoZonaArribo#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numeroLote#
				   AND (SEC_NUME_DOCU=#numeroDocumento# OR SEC_NUME_DOCU_CABE =#numeroDocumento#)
			   
  	</update>
  	
  	<select id="getObtenerValParametroSTO" parameterClass="java.util.Map" resultClass="java.lang.String">
	    SELECT a.val_param as VALOR
	      FROM sto_param_gener_occrr a
	     WHERE a.cod_pais = #codigoPais#
	       AND a.cod_para = #codigoParametro#  	
	</select>
		
	<parameterMap id="executeHomologarCodigoConsultoraParams" class="map" >
  		<parameter property="codigoPais" 		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
		<parameter property="codCliente"		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  	</parameterMap>
  
  	<procedure id="executeHomologarCodigoConsultora" parameterMap="executeHomologarCodigoConsultoraParams">
    	{call OCR_SOLIC_PEDIDOS.OCR_ACTUA_CLIEN_PEDID_ACTUA(?,?)}    	
  	</procedure>
	  
  	<select id="getParametroGenericoSistema" parameterClass="java.util.Map" resultClass="java.lang.String">
			SELECT VAL_PARA
			FROM BAS_PARAM_PAIS
			WHERE COD_PAIS  = #codigoPais#
 			 AND COD_SIST = #codigoSistema#
			 AND NOM_PARA = #nombreParametro#
	</select>
	
	<resultMap id="getParametroGenericoSistemaMailResult" class="java.util.HashMap">                                      
    	<result property="parametro"                    	column="VAL_PARA" />                                
	</resultMap>
	
	<select id="getParametroGenericoSistemaMail" parameterClass="java.util.Map" resultMap="getParametroGenericoSistemaMailResult">
	
			SELECT VAL_PARA
			FROM BAS_PARAM_PAIS
			WHERE COD_PAIS  = #codigoPais#
 			 AND COD_SIST = #codigoSistema#
			 AND NOM_PARA = #nombreParametro#
			 
	</select>		 
	
  
    <select id="getCodigoClienteByDocumentoIdentidad" parameterClass="java.util.Map" resultClass="java.lang.String">
  		select MAE.COD_CLIE
		  from MAE_CLIEN_IDENT mid, 
		       mae_clien mae
		 where mid.NUM_DOCU_IDEN = #numeroDocumentoIdentidad#
		   and mid.CLIE_OID_CLIE = MAE.OID_CLIE
	<isNotEmpty property="rutCliente" >
		   		and mid.VAL_IDEN_DOCU_PRIN ='1'  and  rownum  <![CDATA[ <=  ]]> 1
		   </isNotEmpty>
	</select>
	
	
	<select id="getPostVentaCabecera" parameterClass="java.util.Map" resultMap="getPostVentaResult">
       SELECT b.cod_clie as consultora,
       GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(b.cod_clie, 'NOM_CLIE') as nombre,
       GEN_PKG_GENER.GEN_FN_CLIEN_DATOS(b.cod_clie, 'DES_ZONA') as zona
       FROM ped_solic_cabec     a,
       mae_clien           b,
       seg_subac           e,
       ped_tipo_solic_pais tsp,
       ped_tipo_solic      ts
 		WHERE a.clie_oid_clie = b.oid_clie
   		AND a.sbac_oid_sbac = e.oid_sbac
   		AND a.val_nume_soli = #nroPedido#
   		AND e.cod_sbac = '000'
   		AND a.ind_ts_no_conso = 0
   		AND a.soca_oid_soli_cabe IS NULL
   		AND a.tspa_oid_tipo_soli_pais = tsp.oid_tipo_soli_pais
   		AND tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli
   		AND ts.ind_soli_nega = 0
   		AND ts.ind_cons = 1

	</select>
  
	<select id="getNumeroRegistroMinMaxSTO" parameterClass="java.util.Map" resultClass="java.lang.String"  >
		SELECT    NUM_REGI || ',' || NUM_REGI_MAXI
		FROM      STO_TIPO_DOCUM_DIGIT
		WHERE     COD_TIPO_DOCU = #tipoDocumento#
		  AND     COD_PAIS = #codigoPais#
    </select>
    
	<select id="getIngresoMetas" parameterClass="java.util.Map" resultMap="ingresoMetasResult">
        SELECT ismt.COD_PAIS AS COD_PAIS,
               ismt.COD_COMP AS COD_COMP,
               ismt.COD_CLIE AS COD_CLIE,
               ismt.NUM_DOCU AS NUM_DOCU,
               ismt.NUM_LINE AS NUM_LINE,
               TO_CHAR(ismt.FEC_PROC, 'DD/MM/YYYY') AS FEC_PROC,
               ismt.COD_CAMP_PROC AS COD_CAMPPROC,
               ismt.TIP_META      AS TIPO_META,
               TRIM(TO_CHAR(REPLACE(ismt.VAL_MNTO_META,',', '.'))) AS MNTO_META,
               ismt.VAL_DIRE      AS DIRECCION,
               DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,
                                                           'SIM',
                                                           ismt.COD_MOTI_RECH),
                      NULL,
                      ismt.COD_MOTI_RECH,
                      STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#,
                                                           'SIM',
                                                           ismt.COD_MOTI_RECH)) AS COD_MOTI_RECH,
               ismt.SEC_NUME_DOCU AS SEC_NUME_DOCU,
               ismt.NUM_LOTE      AS NUM_LOTE,
               ismt.COD_CAMP_INIC AS COD_CAMP_INIC,
               ismt.COD_REGI_ARRI AS COD_REGI_ARRI,
               ismt.COD_ZONA_ARRI AS COD_ZONA_ARRI,
               ismt.COD_ESTA      AS COD_ESTADO,
               s.val_i18n         AS DES_ESTADO
          FROM INT_SOLIC_CONSO_INGRE_METAS ismt,
               MAE_CLIEN                   mcli,
               MAE_CLIEN_DATOS_ADICI       mcda,
               GEN_I18N_SICC_COMUN         s
         WHERE ismt.NUM_LOTE = #numLote#
           AND ismt.SEC_NUME_DOCU = #numDocumento#
           AND ismt.cod_clie = mcli.cod_clie(+)
           AND mcli.oid_clie = mcda.clie_oid_clie(+)
           AND mcda.esta_oid_esta_clie = s.val_oid(+)
           AND s.attr_enti(+) = 'MAE_ESTAT_CLIEN'           					
	</select>
  
	<select id="getCartaInvitacionFlexipago" parameterClass="java.util.Map" resultMap="ingresoCartaInvitacionFlexipagoResult">
		select 
			iscf.cod_pais,
			(case iscf.cod_esta_ocr when '01' then 'Aprobado' else 'Rechazado' end) cod_esta_ocr,
			(decode (iscf.mot_rech_ocr ,'D', 'PreImpreso Duplicado','I', 'Documento ilegible','N', 'Consultora en blanco','')) mot_rech_ocr,
			iscf.num_docu,
			iscf.cod_clie,
			iscf.cod_regi,
			iscf.cod_zona,			
			(select td.OID_TIPO_DOCU from mae_tipo_docum td where td.PAIS_OID_PAIS = #oidPais#  and td.cod_tipo_docu = cod_tipo_docu_iden) cod_tipo_docu_iden,  
			num_docu_iden,
			ind_firm_cons,
			ind_firm_repr_lega,
			num_lote,
			sec_nume_docu
			from 
			int_solic_conso_carta_flexi iscf
		where iscf.num_lote = #numLote# 
			and iscf.sec_nume_docu = #numDocumento# 
	</select>
  
	<update id="updateIngresoMetas" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_INGRE_METAS
		  SET
		   	  COD_CLIE =#codCliente#,
			  COD_CAMP_INIC=#codigoCampanaInicio#,
			  TIP_META=#tipMeta#,
			  VAL_MNTO_META=TO_NUMBER(#montoMeta#,'999999999.99'),
			  COD_REGI_ARRI=#codigoRegionArribo#,
			  COD_ZONA_ARRI=#codigoZonaArribo#
		 WHERE COD_PAIS=#codigoPais#
			  AND NUM_LOTE =#numLote#
			  AND SEC_NUME_DOCU=#numSecDocumento#
  	</update>
  
	<update id="updateSTOIngresoMetas" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			  SET COD_CLIE=#codCliente#,
			   	  COD_ZONA_ARRI=#codigoZonaArribo#				  
			 WHERE COD_PAIS=#codigoPais#
			   AND NUM_LOTE=#numLote#
			   AND SEC_NUME_DOCU=#numSecDocumento# 
  	</update>
  
	<update id="updateCartaInvitacionFlexipago" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CARTA_FLEXI
		  SET
			NUM_DOCU =#numeroPreImpreso#, 
			COD_CLIE =#codigoConsultora#, 
			COD_REGI =#codigoRegion#, 
			COD_ZONA =#codigoZona#, 
			COD_TIPO_DOCU_IDEN = (select td.COD_TIPO_DOCU from mae_tipo_docum td where td.PAIS_OID_PAIS = #oidPais#  and td.oid_tipo_docu =  #tipoDocumentoIden#), 
			NUM_DOCU_IDEN =#numDocumentoIden#, 
			IND_FIRM_CONS =#indFirmaCliente#, 
			IND_FIRM_REPR_LEGA =#indFirmaReprLegal# 
		 WHERE COD_PAIS=#codigoPais#
			  AND NUM_LOTE =#numLote#
			  AND SEC_NUME_DOCU=#numSecuencia#
  	</update>

	<update id="updateSTOCartaInvitacionFlexipago" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			  SET COD_CLIE=#codigoConsultora#, 
			   	  NUM_DOCU=#numeroPreImpreso#, 
			   	  COD_REGI=#codigoRegion#, 
			   	  COD_ZONA=#codigoZona#
			 WHERE COD_PAIS=#codigoPais#
			   AND NUM_LOTE=#numLote#
			   AND SEC_NUME_DOCU=#numSecuencia# 
  	</update>
  	  
	<parameterMap id="executePulirDataActualizadaParams" class="map" >
		<parameter property="codigoPais" jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
    </parameterMap>
   <procedure id="executePulirDataActualizada" parameterMap="executePulirDataActualizadaParams">
      {call STO_PKG_ENVIO_VALID_SICC.STO_PR_PULIR_UNIDA_ADMIN(?)}    	
   </procedure>
  
  	<insert id="insertTemporalEliminarPedido" parameterClass="java.util.Map">
		INSERT INTO STO_TMP_ELIMI_DOCUM
		  (NUM_SECU,
		   COD_TIPO_DOCU,
		   NUM_LOTE,
		   SEC_NUME_DOCU,
		   COD_PERI,
		   COD_CLIE,
		   COD_REGI,
		   COD_ZONA,
		   COD_ORIG,
		   FEC_DIGI,
		   FEC_MODI,
		   FEC_PROG_FACT,
		   IND_CARG,
           IND_ENVI,
           IND_FACT,
  		   IND_GP2,
  		   IND_GP3,
  		   IND_GP4,
  		   IND_GP5,
           IND_ERRO,
           IND_RECH,
           IND_NOVA,
           VAL_MONT_PEDI)
		  SELECT #secuencia#,
		         D.COD_TIPO_DOCU,
		         D.NUM_LOTE,
		         D.SEC_NUME_DOCU,
		         D.COD_PERI,
		         D.COD_CLIE,
		         D.COD_REGI,
		         D.COD_ZONA,
		         (SELECT C.COD_ORIG
		            FROM STO_COMBI_ORIGE_DOCUM C
		           WHERE C.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		             AND C.COD_PAIS = D.COD_PAIS
		             AND C.IND_RECE_OCR = D.IND_RECE_OCR
		             AND C.IND_RECE_WEB = D.IND_RECE_WEB
		             AND C.IND_RECE_DD = D.IND_RECE_DD
		             AND C.IND_RECE_DIGI = D.IND_RECE_DIGI
		             AND C.IND_RECE_CC = D.IND_RECE_CC
		             AND C.IND_RECE_MENS = D.IND_RECE_MENS
		             AND C.IND_RECE_ONLI = D.IND_RECE_ONLI
		             AND C.IND_RECE_IVR = D.IND_RECE_IVR),
		         TRUNC(D.FEC_DIGI),
		         TRUNC(D.FEC_MODI),
		         TRUNC(CAB.FEC_PROG_FACT),
		         1 IND_CARG,
                 DECODE(P.GRPR_OID_GRUP_PROC, 1, 1, 0) IND_ENVI,
                 CASE
		           WHEN P.GRPR_OID_GRUP_PROC > 1 THEN
		             1
		           ELSE
		             0
		           END IND_FACT,         
		         DECODE(P.GRPR_OID_GRUP_PROC, 2, 1, 0) IND_GP2,
        		 DECODE(P.GRPR_OID_GRUP_PROC, 3, 1, 0) IND_GP3,
        	     DECODE(P.GRPR_OID_GRUP_PROC, 4, 1, 0) IND_GP4,
        	     DECODE(P.GRPR_OID_GRUP_PROC, 5, 1, 0) IND_GP5,        
                 CASE
                   WHEN P.GRPR_OID_GRUP_PROC >= 1 THEN
                    0
                   ELSE
                    (SELECT NVL(MIN(1), 0)
		                   FROM STO_DETAL_DOCUM_EXCEP R
		                  WHERE R.COD_PAIS = D.COD_PAIS
		                    AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		                    AND R.NUM_LOTE = D.NUM_LOTE
		                    AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU		             
		                    AND R.IND_APRO = '0'
		                    AND D.IND_RECH = '0'
                        AND D.IND_ENVI = '0')
                   END IND_ERR,
                 D.IND_RECH,
                 CASE
                   WHEN P.GRPR_OID_GRUP_PROC IS NULL 
                    AND D.IND_ENVI = '0' 
                    AND D.IND_RECH = '0' 
                    AND NOT EXISTS (SELECT 1
			                  FROM STO_DETAL_DOCUM_EXCEP R
			                 WHERE R.COD_PAIS = D.COD_PAIS
			                   AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
			                   AND R.NUM_LOTE = D.NUM_LOTE
			                   AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU
                               AND R.IND_APRO = '0') THEN
			          1
			         ELSE
			          0
			       END IND_NOVA,
			       CASE
			         WHEN P.GRPR_OID_GRUP_PROC IS NULL OR P.GRPR_OID_GRUP_PROC <![CDATA[ <   ]]> 5 THEN
			          NVL(CAB.VAL_MONT_PEDI,
			              (SELECT SUM(VAL_UNID_DEM * VAL_PREC_CATA_UNIT_LOCA)
			                 FROM INT_SOLIC_CONSO_DETAL
			                WHERE SEC_NUME_DOCU_CABE = CAB.SEC_NUME_DOCU))
				         ELSE
			          P.VAL_TOTA_PAGA_LOCA
			       END VAL_MONT_PEDI
		    FROM STO_DOCUM_DIGIT       D,
		         INT_SOLIC_CONSO_CABEC CAB,
		         PED_SOLIC_CABEC       P
		   WHERE CAB.SEC_NUME_DOCU = D.SEC_NUME_DOCU
		     AND CAB.NUM_LOTE = D.NUM_LOTE
		     AND P.OID_SOLI_CABE(+) = CAB.SOCA_OID_SOLI_CABE_REFE
		     AND D.COD_PAIS = #codigoPais#
		     AND D.COD_TIPO_DOCU = #tipoDocumento#
		     <isNotEmpty property="codigoPeriodo">
		     AND D.COD_PERI = #codigoPeriodo#
		     </isNotEmpty>
		     <isNotEmpty property="fechaInicio">
			 <![CDATA[
		     AND D.FEC_DIGI >= TO_DATE(#fechaInicio#,'DD/MM/YYYY HH24:MI')
		     ]]>
			 </isNotEmpty>
			 <isNotEmpty property="fechaFin">
			 <![CDATA[
		     AND D.FEC_DIGI <= TO_DATE(#fechaFin#,'DD/MM/YYYY HH24:MI')
		     ]]>	
			 </isNotEmpty>
			 <isNotEmpty property="fechaInicioProceso">
			 <![CDATA[		        
		     AND D.FEC_MODI >= TO_DATE(#fechaInicioProceso#,'DD/MM/YYYY HH24:MI')
		     ]]>			
			 </isNotEmpty>
			 <isNotEmpty property="fechaFinProceso">
			 <![CDATA[
		     AND D.FEC_MODI <= TO_DATE(#fechaFinProceso#,'DD/MM/YYYY HH24:MI')
		     ]]>
			 </isNotEmpty>
			 <isNotEmpty property="fechaInicioProgramadaFacturacion">
			 <![CDATA[
		     AND CAB.FEC_PROG_FACT >= TO_DATE(#fechaInicioProgramadaFacturacion#,'DD/MM/YYYY')
		     ]]>
			 </isNotEmpty>	
			 <isNotEmpty property="fechaFinProgramadaFacturacion">
			 <![CDATA[
		     AND CAB.FEC_PROG_FACT <= TO_DATE(#fechaFinProgramadaFacturacion#,'DD/MM/YYYY')
		     ]]>
			 </isNotEmpty>
			 <isNotEmpty property="numLote">
		     AND D.NUM_LOTE = #numLote#
		     </isNotEmpty>
		     <isNotEmpty property="estadoGP1">
		     AND EXISTS (SELECT 1
		            FROM PED_SOLIC_CABEC P
		           WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		             AND P.GRPR_OID_GRUP_PROC = 1
		             AND D.IND_ENVI='1')
		     </isNotEmpty>
		     <isNotEmpty property="estadoGP2">
		     AND EXISTS (SELECT 1
		            FROM PED_SOLIC_CABEC P
		           WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		             AND P.GRPR_OID_GRUP_PROC = 2
		             AND D.IND_ENVI='1')
		     </isNotEmpty>
		     <isNotEmpty property="estadoGP3">
		     AND EXISTS (SELECT 1
		            FROM PED_SOLIC_CABEC P
		           WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		             AND P.GRPR_OID_GRUP_PROC = 3
		             AND D.IND_ENVI='1')
		     </isNotEmpty>
		     <isNotEmpty property="estadoGP4">
		     AND EXISTS (SELECT 1
		            FROM PED_SOLIC_CABEC P
		           WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		             AND P.GRPR_OID_GRUP_PROC = 4
		             AND D.IND_ENVI='1')
		     </isNotEmpty>
		     <isNotEmpty property="estadoGP5">
		     AND EXISTS (SELECT 1
		            FROM PED_SOLIC_CABEC P
		           WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		             AND P.GRPR_OID_GRUP_PROC = 5
		             AND D.IND_ENVI='1')
		     </isNotEmpty>
		     <isNotEmpty property="estadoFacturadas">
		     AND EXISTS (SELECT 1
		            FROM PED_SOLIC_CABEC P
		           WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		             AND P.GRPR_OID_GRUP_PROC > 1
		             AND D.IND_ENVI='1')
		     </isNotEmpty>
		     <isNotEmpty property="estadoError">
		     AND EXISTS (SELECT 1
		                   FROM STO_DETAL_DOCUM_EXCEP R
		                  WHERE R.COD_PAIS = D.COD_PAIS
		                    AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		                    AND R.NUM_LOTE = D.NUM_LOTE
		                    AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU		             
		                    AND R.IND_APRO = '0'
		                    AND D.IND_RECH = '0'
		                    AND D.IND_ENVI = '0')
		     </isNotEmpty>   
	         <isNotEmpty property="estadoRechazadas">
		     AND D.IND_RECH = '1'
		     </isNotEmpty>
		     <isNotEmpty property="estadoSinValidar">
		     AND (D.IND_ENVI = '0' AND D.IND_RECH = '0' AND NOT EXISTS
		          (SELECT 1
		             FROM STO_DETAL_DOCUM_EXCEP R
		            WHERE R.COD_PAIS = D.COD_PAIS
		              AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		              AND R.NUM_LOTE = D.NUM_LOTE
		              AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU
		              AND R.IND_APRO = '0')
		          )
		     </isNotEmpty>
			<iterate prepend="AND" property="clienteList" open="(" close=")" conjunction="OR">
		         D.COD_CLIE = #clienteList[]#
		    </iterate>	
		    <isNotEmpty property="codigoOrigen">
		     AND EXISTS (SELECT 1
		            FROM STO_COMBI_ORIGE_DOCUM C
		           WHERE C.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		             AND C.COD_PAIS = D.COD_PAIS
		             AND C.IND_RECE_OCR = D.IND_RECE_OCR
		             AND C.IND_RECE_WEB = D.IND_RECE_WEB
		             AND C.IND_RECE_DD = D.IND_RECE_DD
		             AND C.IND_RECE_DIGI = D.IND_RECE_DIGI
		             AND C.IND_RECE_CC = D.IND_RECE_CC
		             AND C.IND_RECE_MENS = D.IND_RECE_MENS
		             AND C.IND_RECE_ONLI = D.IND_RECE_ONLI
		             AND C.IND_RECE_IVR = D.IND_RECE_IVR
		             AND C.COD_ORIG = #codigoOrigen#)
		     </isNotEmpty>
		     <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		         D.COD_REGI = #regionList[]#
		     </iterate>  
			 <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		         D.COD_ZONA = #zonaList[]#
		     </iterate>			                	            
		</insert>			
		
		<update id="updateEliminarPedido" parameterClass="java.util.Map">
            UPDATE STO_TMP_ELIMI_DOCUM
			   SET NUM_PROC = #historico.numeroProceso#
			 WHERE COD_TIPO_DOCU=#pedido.codigoTipoDocumento#
			   AND IND_GP4 = 0
    		   AND IND_GP5 = 0 
			   AND NUM_SECU=#secuencia#
			   <isNotEmpty property="pedido.numeroLote">
			   AND NUM_LOTE=#pedido.numeroLote#
			   </isNotEmpty>
			   <isNotEmpty property="pedido.codigoPeriodo">		  
               AND COD_PERI=#pedido.codigoPeriodo#
               </isNotEmpty> 
               <isNotEmpty property="pedido.codigoCliente">
			   AND COD_CLIE=#pedido.codigoCliente#
			   </isNotEmpty>
			   <isNotEmpty property="pedido.codigoRegion">			   
			   AND COD_REGI=#pedido.codigoRegion# 
			   </isNotEmpty>
			   <isNotEmpty property="pedido.codigoZona">
			   AND COD_ZONA=#pedido.codigoZona#
			   </isNotEmpty> 
			   <isNotEmpty property="pedido.codigoOrigen">
			   AND COD_ORIG=#pedido.codigoOrigen#
			   </isNotEmpty> 
			   <isNotEmpty property="pedido.fechaCarga">
			   AND FEC_DIGI=TO_DATE(#pedido.fechaCarga#,'DD/MM/YYYY')
			   </isNotEmpty>
			   <isNotEmpty property="pedido.fechaModificacion"> 
			   AND FEC_MODI=TO_DATE(#pedido.fechaModificacion#,'DD/MM/YYYY')
			   </isNotEmpty>
			   <isNotEmpty property="pedido.fechaModificacion">
			   AND FEC_PROG_FACT=TO_DATE(#pedido.fechaProgramadaFacturacion#,'DD/MM/YYYY')
			   </isNotEmpty>
		</update>		
	
  		<parameterMap id="executeEliminarPedidoParams" class="map" >
  			<parameter property="tipoDocumento.codPais" 	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  			<parameter property="tipoDocumento.codTipoDocu" jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>  		
			<parameter property="historico.numeroProceso"	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
			<parameter property="usuario.login"				jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		</parameterMap>
  		<procedure id="executeEliminarPedido" parameterMap="executeEliminarPedidoParams">
    		{call STO_PKG_PROCE_GENER.STO_PR_ELIMI_PEDID(?,?,?,?)}    	
  		</procedure>
  
  		<parameterMap id="executeBloquearEliminarDocumentoParams" class="map" >
  			<parameter property="tipoDocumento.codPais" 	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  			<parameter property="tipoDocumento.codTipoDocu" jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  			<parameter property="secuencia" 				jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
			<parameter property="historico.numeroProceso"	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
			<parameter property="usuario.login"				jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		</parameterMap>
  		<procedure id="executeBloquearEliminarDocumento" parameterMap="executeBloquearEliminarDocumentoParams">
    		{call STO_PKG_PROCE_GENER.STO_PR_BLOQU_ELIMI_DOCUM(?,?,?,?,?)}    	
  		</procedure>
		
		<resultMap id="consultaPedidosGP1Result" class="consultaPedidosGP1">
	    	<result property="fechaProgramadaFacturacion"   column="FEC_PROG_FACT"/>
			<result property="codigoRegion"                	column="COD_REGION"/>
			<result property="descripcionRegion"            column="DES_REGION"/>
			<result property="codigoZona"                 	column="COD_ZONA"/>
			<result property="codigoCliente"                column="COD_CLIENTE"/>
			<result property="codigoPeriodo"          		column="COD_PERIODO"/>
			<result property="correctas"          			column="IND_GP1"/>
			<result property="numGP2"        				column="IND_GP2"/>
			<result property="numGP3"        				column="IND_GP3"/>
			<result property="oidSolicabec"          		column="OID_SOLI_CABE"/>			
		</resultMap>
		<select id="getConsultaPedidosGP1List" parameterClass="java.util.Map" resultMap="consultaPedidosGP1Result">
			SELECT 	to_char(CAB.FEC_PROG_FACT,'dd/MM/yyyy') FEC_PROG_FACT,
       				cab.cod_regi       						COD_REGION,
       				r.des_regi         						DES_REGION,
       				cab.cod_zona       						COD_ZONA,
       				cab.cod_clie       						COD_CLIENTE,
       				cab.cod_peri       						COD_PERIODO,
       				decode(P.GRPR_OID_GRUP_PROC, 1,1,0)     IND_GP1,
       				decode(P.GRPR_OID_GRUP_PROC, 2,1,0)     IND_GP2,
       				decode(P.GRPR_OID_GRUP_PROC, 3,1,0)     IND_GP3,
       				p.OID_SOLI_CABE							OID_SOLI_CABE
  			  FROM 	ped_solic_cabec       p,
       				int_solic_conso_cabec cab,
       				sto_docum_digit       d,
       				zon_regio           r
 			 WHERE 	p.oid_soli_cabe = cab.soca_oid_soli_cabe_refe
 			  <![CDATA[
   			   AND 	p.grpr_oid_grup_proc  < 4
   			     ]]>
			  
   			   AND 	cab.ind_ocs_proc = '1'
   			   AND 	d.ind_envi = '1'
   			   AND 	cab.sec_nume_docu = d.sec_nume_docu
   			   AND 	cab.num_lote = d.num_lote
   			   AND 	r.cod_regi(+)= cab.cod_regi
   			   AND 	d.cod_tipo_docu = #tipoDocumento#
   			   AND 	d.cod_pais = #codigoPais#
   			   
   			<isNotEmpty property="codigoPeriodo">
		       AND 	cab.cod_peri = #codigoPeriodo#
		    </isNotEmpty>
		    
		    <isNotEmpty property="fechaInicioProgramadaFacturacion">
			 <![CDATA[
		       AND  cab.fec_prog_fact >= TO_DATE(#fechaInicioProgramadaFacturacion#,'DD/MM/YYYY')
		     ]]>
			</isNotEmpty>	
			
			<isNotEmpty property="fechaFinProgramadaFacturacion">
			 <![CDATA[
		       AND  cab.fec_prog_fact <= TO_DATE(#fechaFinProgramadaFacturacion#,'DD/MM/YYYY')
		     ]]>
			</isNotEmpty>
   			
   			<isNotEmpty property="estadoGP1">
	        	AND p.grpr_oid_grup_proc = 1
	        </isNotEmpty>
	        
	        <isNotEmpty property="estadoGP2">
	        	AND p.grpr_oid_grup_proc = 2
	        </isNotEmpty>
	        
	        <isNotEmpty property="estadoGP3">
	        	AND p.grpr_oid_grup_proc = 3
	        </isNotEmpty>

			<iterate prepend="AND" property="clienteList" open="(" close=")" conjunction="OR">
		         	cab.cod_clie = #clienteList[]#
		    </iterate>
	        
		    <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		         	cab.cod_regi = #regionList[]#
		     </iterate>
		       
			 <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		         	cab.cod_zona = #zonaList[]#
		     </iterate>
		</select>
		
		<delete id="deletePedidoGP1Det" parameterClass="java.util.Map">
       		DELETE ped_solic_posic
       		<dynamic prepend="WHERE"> 			 
				<iterate prepend="AND" property="listaOid" open="(" close=")" conjunction="OR">
        	  		soca_oid_soli_cabe =#listaOid[]#
    			</iterate>  				    	
  			</dynamic>		
    	</delete>
    	
    	<delete id="deletePedidoGP1Cab" parameterClass="java.util.Map">
       		DELETE ped_solic_cabec
       		<dynamic prepend="WHERE">       			 
				<iterate prepend="AND" property="listaOid" open="(" close=")" conjunction="OR">
        	  		oid_soli_cabe =#listaOid[]#
    			</iterate>  					         	
  			</dynamic>		       		

    	</delete>
    	
    	<update id="updateReversarDocumentoDet" parameterClass="java.util.Map">
        	UPDATE sto_docum_digit
   			   SET ind_envi = '0',
   			   	   ind_rech = '0' 
 			 WHERE sec_nume_docu IN (SELECT sec_nume_docu
                                       FROM int_solic_conso_cabec
                                      <dynamic prepend="WHERE"> 			 
										<iterate prepend="AND" property="listaOid" open="(" close=")" conjunction="OR">
						        	  		soca_oid_soli_cabe_refe =#listaOid[]#
						    			</iterate>  						  				       	
  									 </dynamic>                                        
                                    )
  		</update>
  		
  		<update id="updateReversarDocumentoCab" parameterClass="java.util.Map">
        	UPDATE sto_docum_digit
   			   SET ind_envi = '0',
   			       ind_rech = '0'
 		     WHERE sec_nume_docu_cabe IN (SELECT sec_nume_docu
                                            FROM int_solic_conso_cabec
		                                      <dynamic prepend="WHERE"> 			 
												<iterate prepend="AND" property="listaOid" open="(" close=")" conjunction="OR">
								        	  		soca_oid_soli_cabe_refe =#listaOid[]#
								    			</iterate>           	
		  									 </dynamic>)
  		</update>
  		
  		<update id="updateReversarConsolidado" parameterClass="java.util.Map">
        	UPDATE int_solic_conso_cabec
   			   SET ind_ocs_proc = '0'
            <dynamic prepend="WHERE"> 			         	
				<iterate prepend="AND" property="listaOid" open="(" close=")" conjunction="OR">
        	  		soca_oid_soli_cabe_refe =#listaOid[]#
    			</iterate>  			    
			 </dynamic>      			   

  		</update>
  		
  		<delete id="deletePremioElegidos" parameterClass="java.util.Map">
          DELETE inc_premi_elegi x
           WHERE
            exists(SELECT 1
                    FROM int_solic_conso_detal det,
                         INT_SOLIC_CONSO_CABEC cab
                   WHERE cab.cod_clie = det.cod_clie
                     AND cab.num_lote = det.num_lote
                     AND cab.cod_peri = det.cod_peri
                     AND cab.cod_pais = det.cod_pais
                     AND det.num_prem IS NOT NULL
					<iterate prepend="AND" property="listaOid" open="(" close=")" conjunction="OR">
	        	  		cab.soca_oid_soli_cabe_refe =#listaOid[]#
	    			</iterate> 			    	  
                      and det.copa_oid_para_gral = x.copa_oid_para_gral
			    	  and det.panp_oid_para_nive_prem = x.panp_oid_para_nive_prem
			    	  and det.num_prem = x.num_prem
                      and cab.clie_oid_clie = x.clie_oid_clie 			    	  
			    	 )	       		
    	</delete>
  		
  		
       <select id="getValoresOidDetalleOferta" parameterClass="java.util.Map" resultMap="detalleOfertaResult"> 
	       SELECT pos.soca_oid_soli_cabe OID_SOLI_CABE, 
		          pos.prod_oid_prod PROD_OID_PROD,
		          ofe.oid_ofer	OID_OFER
	         FROM ped_solic_posic pos, pre_ofert_detal pre, pre_ofert ofe
	        WHERE pos.ofde_oid_deta_ofer = pre.oid_deta_ofer
	          AND pre.ofer_oid_ofer = ofe.oid_ofer
	          AND pos.oid_soli_posi = #oidSoliDevuelve#
       </select>

       <select id="getDetalleOfertaList" parameterClass="java.util.Map" resultMap="detalleOfertaListResult">
	        SELECT pos.oid_soli_posi OID_SOLI_POSI,
	        	   pos.val_codi_vent COD_VENTA,
	               INT_PKG_RECLA.GEN_FN_DESC_PROD(POS.PROD_OID_PROD) DESC_PROD,
	               CASE WHEN NVL(pos.val_prec_cata_unit_loca, 0) = 0 THEN
	               'GR' ELSE #codigoPais# END TIPO,
	               pos.num_unid_aten NUM_UNID_FACT,
	               NVL(SUM(num_unid_recl), 0) NUM_RECL_PRO,
	              (SELECT NVL(SUM(nvl(det.can_vent_devu, 0)), 0)
	                 FROM int_solic_conso_poven_detal det, sto_docum_digit dig
	                WHERE det.cod_pais = #pais#
	                  AND det.cod_clie = #codigoCliente#
	                  AND det.cod_peri = #codPeriodo#
	                  AND det.oid_soli_posi_devu = pos.oid_soli_posi
	                  AND dig.sec_nume_docu = det.sec_nume_docu
	                  AND dig.ind_envi = 0
	                  AND dig.ind_rech = 0) NUM_RECL_PEN,
                   i18of.val_i18n           DES_OFERTA
	           FROM ped_solic_posic       pos,
	                pre_ofert_detal       pre,
	                pre_ofert             ofe,
                    pre_tipo_ofert        tofe,
                    v_gen_i18n_sicc       i18of,
	                rec_linea_opera_recla rel
	          WHERE pos.ofde_oid_deta_ofer = pre.oid_deta_ofer
	            AND pre.ofer_oid_ofer = ofe.oid_ofer
                AND pre.tofe_oid_tipo_ofer = tofe.oid_tipo_ofer(+)
                AND tofe.oid_tipo_ofer = i18of.val_oid(+)
	            AND (nvl(pos.val_prec_cata_unit_loca, 0) = 0 OR
	                pos.prod_oid_prod = #oidProd#)
	            AND pos.soca_oid_soli_cabe = #oidSoliCabe#
	            AND ofe.oid_ofer = #oidOfer#
	            AND pos.oid_soli_posi = rel.sopo_oid_soli_posi(+)
	            AND rel.timo_oid_tipo_movi(+) = 2
                AND i18of.attr_enti = #nombreTablaTipoOfer# AND i18of.idio_oid_idio = #oidIdioma#
	       GROUP BY pos.oid_soli_posi,
	                pos.val_prec_cata_unit_loca,
	                pos.val_codi_vent,
	                pos.prod_oid_prod,
	                pos.num_unid_aten,
                    i18of.val_i18n 
	       ORDER BY tipo desc, pos.val_codi_vent
       </select>
  		
  		<resultMap id="getFacturaAdicionalListResult" class="java.util.HashMap">
   			<result property="oidFacturaAdicional"       column="OID_FACTURACION_ADICIONAL"/>
   			<result property="codigoPeriodo"             column="COD_PERIODO"/>
   			<result property="codigoCliente"             column="COD_CLIENTE"/>
   			<result property="tipoCliente"	             column="TIP_CLIENTE"/>
   			<result property="subTipoCliente"            column="SUB_TIPO_CLIENTE"/>
   			<result property="tipoClasificacion"  		 column="TIP_CLASIFICACION"/>
			<result property="clasificacion"             column="DES_CLASIFICACION"/>
			<result property="descripcionRegion"         column="DES_REGION"/>
			<result property="descripcionZona"           column="DES_ZONA"/>
			<result property="validaPromedio"         	 column="IND_VALI_PROM"/>
			<result property="validaMontoMinimo"         column="IND_VALI_MTMI"/>
   		</resultMap>
  		<select id="getFacturaAdicionalList" parameterClass="java.util.Map" resultMap="getFacturaAdicionalListResult">
  			SELECT	oid_fact_adic				OID_FACTURACION_ADICIONAL,
  					codigo_periodo				COD_PERIODO,
  					codigo_cliente				COD_CLIENTE,
  					tipo_cliente				TIP_CLIENTE,
  					subtipo_cliente 			SUB_TIPO_CLIENTE,
  					tipo_clasificacion			TIP_CLASIFICACION,
  					clasificacion				DES_CLASIFICACION,
  					desc_region					DES_REGION,
  					desc_zona					DES_ZONA,
					IND_VALI_PROM,
					IND_VALI_MTMI
  			  FROM	TABLE(STO_PKG_GENER.STO_FN_FACTU_ADICI(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoIso#))
  			  <dynamic prepend="WHERE">
  			  	<isNotEmpty property="oidPeriodo" prepend="AND">
					oid_peri = #oidPeriodo#
				</isNotEmpty>
			
  			  	<isNotEmpty property="oidTipoCliente" prepend="AND">
					oid_tipo_clie = #oidTipoCliente#
				</isNotEmpty>
				
				<isNotEmpty property="oidSubTipoCliente" prepend="AND">
					oid_subt_clie = #oidSubTipoCliente#
				</isNotEmpty>
				
				<isNotEmpty property="oidSubTipoClasificacion" prepend="AND">
					oid_tipo_clas = #oidSubTipoClasificacion#
				</isNotEmpty>
				
				<isNotEmpty property="oidClasificacion" prepend="AND">
					oid_clas = #oidClasificacion#
				</isNotEmpty>
				
				<isNotEmpty property="oidRegion" prepend="AND">
					oid_regi = #oidRegion#
				</isNotEmpty>
			
				<isNotEmpty property="oidZona" prepend="AND">
					oid_zona = #oidZona#
				</isNotEmpty>
				
				<isNotEmpty property="oidClienteCarga" prepend="AND" >
					oid_clie IN (SELECT OID_CLIE
                              	   FROM STO_TMP_CARGA_CLIEN_FILES
                                  WHERE OID_CLIE_FILE = #oidClienteCarga#)
	    		</isNotEmpty>
	    		
	    		<isNotEmpty property="codigoCliente" prepend="AND">
					codigo_cliente = #codigoCliente#
	    		</isNotEmpty>

	    		<isNotEmpty property="validaMontoMinimo" prepend="AND">
					ind_vali_mtmi = #validaMontoMinimo#
	    		</isNotEmpty>

	    		<isNotEmpty property="validaPromedio" prepend="AND">
					ind_vali_prom = #validaPromedio#
	    		</isNotEmpty>

  			  </dynamic>
  			 ORDER BY oid_fact_adic
  		</select>
  		
  		<update id="deleteFacturaAdicional" parameterClass="java.util.Map">
   			UPDATE sto_factu_adici
   			   SET ind_acti = '0',
   		           usu_elim = #usuario#,
   		    	   fec_elim = SYSDATE
   		     WHERE oid_fact_adic = #oidFactAdicional#
   		</update>
   
   		<insert id="insertFacturaAdicional" parameterClass="java.util.Map">
   			INSERT INTO sto_factu_adici(
   				oid_fact_adic,
   				oid_tipo_clie,
   				oid_subt_clie,
   				oid_tipo_clas,
   				oid_clas,
   				oid_clie,
   				oid_regi,
   				oid_zona,
   				ind_acti,
   				val_obse,
   				oid_peri,
   			    usu_crea, 
  				fec_crea,
				ind_vali_prom,
				ind_vali_mtmi  				
   			)
   			VALUES(
   		 		STO_FAAD_SEQ.nextval,
   		 		#oidTipoCliente#,
   		 		#oidSubTipoCliente#,
   		 		#oidSubTipoClasificacion#,
   		 		#oidClasificacion#,
   		 		#oidCliente#,
   		 		#oidRegion#,		
   		 		#oidZona#,
		 		'1',
   		 		#observaciones#,
   		 		#oidPeriodo#,
   		 		#usuario#,
   		 		#fechaCreacion#,
   		 		#validaPromedio#,
   		 		#validaMontoMinimo#
   		 	)
   		</insert>
   		
    <resultMap id="getConsultaDetalleMovimientoListResult" class="java.util.HashMap">
    	<result property="tipodoc" column="TIPODOC"/>
    	<result property="numero" column="NUMERO"/>
    	<result property="periodo" column="PERIODO"/>
    	<result property="fecha" column="FECHA"/>
    	<result property="unidades" column="UNIDADES"/>
    	<result property="observacion" column="OBSERVACION"/>
    </resultMap>
    
    <select id="getConsultaDetalleMovimientoList" parameterClass="java.util.Map" resultMap="getConsultaDetalleMovimientoListResult">
      SELECT 'a. ' || i.val_i18n AS TIPODOC,
             con.val_nume_soli AS NUMERO,
             seg.cod_peri AS PERIODO,
             to_char(con.fec_fact, 'DD/MM/YYYY') AS FECHA,
             det.num_unid_aten AS UNIDADES,
             'Facturado' AS OBSERVACION 
        FROM ped_solic_posic det,
             ped_solic_cabec cab,
             ped_solic_cabec con,
             cra_perio cra,
             seg_perio_corpo seg,
             ped_tipo_solic_pais tsp,
             ped_tipo_solic ts,
             v_gen_i18n_sicc i
       WHERE det.oid_soli_posi = #oidSoliPosi#
         AND det.soca_oid_soli_cabe = cab.oid_soli_cabe
         AND cab.soca_oid_soli_cabe = con.oid_soli_cabe
         AND cra.oid_peri = con.perd_oid_peri
         AND cra.peri_oid_peri = seg.oid_peri
         AND i.attr_enti (+) = #nombreTablaTipoSolic#
         AND i.val_oid = ts.oid_tipo_soli (+)
         AND tsp.tsol_oid_tipo_soli (+) = ts.oid_tipo_soli
         AND con.tspa_oid_tipo_soli_pais = tsp.oid_tipo_soli_pais
      UNION
      SELECT 'b. ' || ro.val_desc_larg TIPODOC,
             rcr.num_recl NUMERO,
             seg.cod_peri PERIODO,
             to_char(ror.fec_fact, 'DD/MM/YYYY') FECHA,
             rlor.num_unid_recl * -1 UNIDADES,
             'Atendido' OBSERVACION
        FROM rec_linea_opera_recla rlor,
             rec_opera_recla       ror,
             rec_cabec_recla       rcr,
             cra_perio             cra,
             seg_perio_corpo       seg,
             rec_tipos_opera       rto,
             rec_opera             ro
       WHERE rlor.timo_oid_tipo_movi = 2 
         AND rlor.sopo_oid_soli_posi = #oidSoliPosi#
         AND rlor.opre_oid_oper_recl = ror.oid_oper_recl
         AND ror.care_oid_cabe_recl = rcr.oid_cabe_recl
         AND cra.oid_peri = rcr.perd_oid_peri_recl
         AND cra.peri_oid_peri = seg.oid_peri
         AND ror.tiop_oid_tipo_oper = rto.oid_tipo_oper
         AND ro.oid_oper = rto.rope_oid_oper
      UNION
      SELECT 'c. ' || ro.val_desc_larg TIPODOC,
             TO_NUMBER(det2.num_docu) NUMERO,
             det2.cod_peri PERIODO,
             to_char(TRUNC(det2.fec_digi), 'DD/MM/YYYY') FECHA,
             det2.can_vent_devu * -1 UNIDADES,
             'En Gestion' OBSERVACION
        FROM INT_SOLIC_CONSO_POVEN_DETAL det2, 
             STO_DOCUM_DIGIT dig,
             rec_opera ro
       WHERE det2.cod_pais = #codigoPais#
         AND det2.cod_clie = #codigoCliente#
         AND det2.cod_peri = #codigoPeriodo#
         AND det2.oid_soli_posi_devu = #oidSoliPosi#
         AND dig.sec_nume_docu = det2.sec_nume_docu
         AND ro.oid_oper = det2.oid_oper
         AND dig.ind_envi = 0
         AND dig.ind_rech = 0
    </select>

	<select id="getFamiliaSegura" parameterClass="java.util.Map" resultMap="familiaSeguraResult">
		SELECT 	iscfs.cod_pais                         COD_PAIS,
       			iscfs.cod_comp                         COD_COMP,
       			iscfs.cod_clie                         COD_CLIE,
       			iscfs.tip_docu_iden                    TIP_DOCU_IDEN,
       			iscfs.num_docu_iden                    NUM_DOCU_IDEN,
       			TO_CHAR(iscfs.fec_proc, 'DD/MM/YYYY')  FEC_PROC,
       			iscfs.cam_proc                         COD_CAMP_PROC,
       			iscfs.cam_inic                         COD_CAMP_INIC,
       			iscfs.cam_regis                        COD_CAMP_REGI,
       			iscfs.can_coas                         NUM_COAS,
       			iscfs.nom_ben1                         NOM_BENE1,
       			iscfs.tip_docu_ben1                    TIP_DOCU1,
       			iscfs.num_docu_ben1                    NUM_DOCU1,
       			iscfs.nom_ben2                         NOM_BENE2,
       			iscfs.tip_docu_ben2                    TIP_DOCU2,
       			iscfs.num_docu_ben2                    NUM_DOCU2,
       			TO_CHAR(iscfs.fec_naci, 'DD/MM/YYYY')  FEC_NACI,
       			iscfs.val_edad                         VAL_EDAD,
       			iscfs.cod_esta_civi                    COD_ESTA_CIVI,
       			iscfs.cod_sexo                         COD_SEXO,
       			iscfs.sec_nume_docu                    SEC_NUME_DOCU,
       			iscfs.num_lote                         NUM_LOTE,
       			iscfs.mot_rech_ocr                     COD_ESTA_OCR,
       			DECODE(STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#, #codigoTipo#, iscfs.mot_rech_ocr), 
                       NULL, iscfs.mot_rech_ocr,
                       STO_PKG_GENER.STO_FN_DEVUE_MOTI_RECH(#codigoPais#, #codigoTipo#, iscfs.mot_rech_ocr)) MOT_RECH_OCR,
                cod_regi_orig_docu						COD_REGION, 
                cod_zona_orig_docu						COD_ZONA,
                NVL(IND_FIRM, 'S')						IND_FIRM
          FROM 	int_solic_conso_famil_segur iscfs
 		 WHERE 	iscfs.cod_pais = #codigoPais#
           AND 	iscfs.num_lote = #numLote#
   		   AND 	iscfs.sec_nume_docu = #numDocumento#
	</select>

	<update id="updateFamiliaSegura" parameterClass="java.util.Map">
    	UPDATE int_solic_conso_famil_segur
		   SET 	cod_clie      = #codigoCliente#,
				tip_docu_iden = #codTipoDocuIdent#,
				num_docu_iden = #numDocuIdent#,
				can_coas      = #numCoasegurado#,
				nom_ben1      = #beneficiario1#,
				tip_docu_ben1 = #codTipoDocuIdent1#,
				num_docu_ben1 = #numDocuIdent1#,
				nom_ben2      = #beneficiario2#,
				tip_docu_ben2 = #codTipoDocuIdent2#,
				num_docu_ben2 = #numDocuIdent2#,
				clie_oid_clie = #oidCliente#,
				cod_regi_orig_docu = #codigoRegion#,
				cod_zona_orig_docu = #codigoZona#
		 WHERE COD_PAIS = #codigoPais#
		   AND NUM_LOTE = #numLote#
		   AND SEC_NUME_DOCU = #numSecDocumento#
  	</update>
  
	<update id="updateSTOFamiliaSegura" parameterClass="java.util.Map">
    	UPDATE STO_DOCUM_DIGIT
		   SET COD_CLIE=#codigoCliente#
		 WHERE COD_PAIS=#codigoPais#
		   AND NUM_LOTE=#numLote#
		   AND SEC_NUME_DOCU=#numSecDocumento#
  	</update>
  	
  	<update id="deleteLimiteVentaFocalizadoConsejera" parameterClass="java.util.Map">
  		UPDATE STO_LIMIT_VENTA_FOCAL_CONSU
  		SET EST_REGI = 0,
  		    USU_MODI = #usuario#,
  		    FEC_MODI = sysdate
  		WHERE COD_PAIS = #codigoPais#
  		AND COD_PERI = #codigoPeriodo#
  		AND COD_CLIE = #codigoCliente#
  	</update>
  	
  	<resultMap id="getLimiteVentaFocalizadoConsejeraListResult" class="java.util.HashMap">
  		<result property="codigoPais"           column="COD_PAIS"/>
  		<result property="codigoPeriodo"        column="COD_PERI"/>
  		<result property="codigoCliente"        column="COD_CLIE"/>
  		<result property="nombres"              column="NOMBRES"/>
  		<result property="numeroUnidadesLimite" column="VAL_NUME_UNID_LIMI"/>
  	</resultMap>
  	<select id="getLimiteVentaFocalizadoConsejeraList" parameterClass="java.util.Map" resultMap="getLimiteVentaFocalizadoConsejeraListResult">
  		SELECT a.COD_PAIS,
               a.COD_PERI,
               a.COD_CLIE,
               GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.COD_CLIE,'NOM_CLIE') AS NOMBRES,
               a.VAL_NUME_UNID_LIMI
		FROM STO_LIMIT_VENTA_FOCAL_CONSU a
		WHERE a.COD_PAIS = #codigoPais#
		<isNotEmpty property="codigoPeriodo">
			AND a.COD_PERI = #codigoPeriodo#
		</isNotEmpty>

		AND a.EST_REGI = 1

  		<isNotEmpty property="clienteList">	
			<iterate prepend="AND" property="clienteList" open="(" close=")" conjunction="OR">
			    a.COD_CLIE = #clienteList[]#
		    </iterate>
		</isNotEmpty> 
  	</select>
  	
  	<insert id="insertSTOLimiteVentaFocalizadoConsejera" parameterClass="java.util.Map">
  		INSERT INTO STO_LIMIT_VENTA_FOCAL_CONSU(
  		 COD_PAIS,
  		 COD_PERI,
  		 COD_CLIE,
  		 VAL_NUME_UNID_LIMI,
  		 FEC_DIGI,
  		 USU_DIGI,
  		 EST_REGI)
  		VALUES(
  	     #codigoPais#,
  	     #codigoPeriodo#,
  	     #codigoCliente#,
  	     #numUnidadesLimite#,
  	     sysdate,
  	     #usuario#,
  	     1
  		)  		
  	</insert>
  	
  	<resultMap id="getExisteSTOLimiteVentaFocalizadoConsejeraResult" class="java.util.HashMap">
  		<result property="contador"       column="CONT"/>
  		<result property="estadoRegistro" column="EST_REGI"/>
  	</resultMap>
  	
  	<select id="getExisteSTOLimiteVentaFocalizadoConsejera" parameterClass="java.util.Map" resultMap="getExisteSTOLimiteVentaFocalizadoConsejeraResult">
  		SELECT COUNT(1) AS CONT,EST_REGI
  		FROM STO_LIMIT_VENTA_FOCAL_CONSU
  		WHERE COD_PAIS = #codigoPais#
  		AND COD_PERI = #codigoPeriodo#
  		AND COD_CLIE = #codigoCliente#
  		GROUP BY EST_REGI
  	</select>
  	
  	<update id="updateSTOLimiteVentaFocalizadoConsejeraEstadoUnidadLimite" parameterClass="java.util.Map">
  		UPDATE STO_LIMIT_VENTA_FOCAL_CONSU
  		SET EST_REGI = 1,
  			VAL_NUME_UNID_LIMI = #numUnidadesLimite#, 
  		    USU_MODI = #usuario#,
  		    FEC_MODI = sysdate
  		WHERE COD_PAIS = #codigoPais#
  		AND COD_PERI = #codigoPeriodo#
  		AND COD_CLIE = #codigoCliente#
  	</update>
  	
  	<resultMap id="getObjectoSTOLimiteVentaFocalizadoConsejeraResult" class="java.util.HashMap">
  		<result property="codigoPais"     column="COD_PAIS"/>
  		<result property="codigoPeriodo"  column="COD_PERI"/>
  		<result property="codigoCliente"  column="COD_CLIE"/>
  		<result property="numUnidadesLimite"  column="VAL_NUME_UNID_LIMI"/>
  	</resultMap>
  	
  	<select id="getObjectoSTOLimiteVentaFocalizadoConsejera" parameterClass="java.util.Map" resultMap="getObjectoSTOLimiteVentaFocalizadoConsejeraResult">
  		SELECT COD_PAIS,COD_PERI,COD_CLIE,VAL_NUME_UNID_LIMI
  		FROM STO_LIMIT_VENTA_FOCAL_CONSU
  		WHERE COD_PAIS = #codigoPais#
  		AND COD_PERI = #codigoPeriodo#
  		AND COD_CLIE = #codigoCliente#
  	</select>
  	
  	<update id="updateObjetoSTOLimiteVentaFocalizadoConsejera" parameterClass="java.util.Map">
  		UPDATE STO_LIMIT_VENTA_FOCAL_CONSU
  		SET VAL_NUME_UNID_LIMI = #numUnidadesLimite#, 
  		    USU_MODI = #usuario#,
  		    FEC_MODI = sysdate
  		WHERE COD_PAIS = #codigoPais#
  		AND COD_PERI = #codigoPeriodo#
  		AND COD_CLIE = #codigoCliente#
  	</update>

  	<select id="getindicadorDesmarcarAgrupacion" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT b.val_para
		  FROM bas_param_pais b
		 WHERE b.cod_pais = #codigoPais#
   		   AND b.cod_sist = 'STO'
   		   AND b.cod_para = '005' 
	</select>
	
	<parameterMap id="executeReversarPedidosGPParams" class="map" >
      <parameter property="numPedido" 	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  	</parameterMap>
  	<procedure id="executeReversarPedidosGP" parameterMap="executeReversarPedidosGPParams">
    		{call STO_PKG_PROCE_GENER.STO_PR_REVER_PEDID_GP3(?)}    	
  	</procedure>

  	<resultMap id="getDatosClienteActualResult" class="java.util.HashMap">
  		<result property="nombreCliente"  		column="NOM_CLIENTE"/>
  		<result property="direccionCliente"  	column="DIR_CLIENTE"/>
  		<result property="region"  				column="DES_REGION"/>
  		<result property="zona"  				column="DES_ZONA"/>
  		<result property="seccion"  			column="DES_SECCION"/>
  		<result property="territorio"  			column="COD_TERRITORIO"/>
  		<result property="unidadGeografica"  	column="UNI_GEOGRAFICA"/>
  		<result property="estatus"  			column="ESTATUS"/>
  		<result property="campana"  			column="COD_CAMPANA"/>
  		<result property="bloqueo"  			column="BLOQUEO"/>
  		<result property="activa"  				column="ACTIVA"/>
  	</resultMap>
  	<select id="getDatosClienteActual" parameterClass="java.util.Map" resultMap="getDatosClienteActualResult">
		SELECT 	GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(#codigoCliente#,'NOM_CLIE')                    NOM_CLIENTE,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(#codigoCliente#,'DIR_CLIE')                    DIR_CLIENTE,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(#codigoCliente#,'DES_REGI')                    DES_REGION,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(#codigoCliente#,'DES_ZONA')                    DES_ZONA,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(#codigoCliente#,'DES_SECC')                    DES_SECCION,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(#codigoCliente#,'COD_TERR')                    COD_TERRITORIO,
       			(SELECT GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_DPTO')|| ' / ' ||
               			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_PROV')|| ' / ' ||
               			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_DIST')|| ' / ' ||
               			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_URBA')||
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 24 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 IS NULL)
                 			ELSE
                   				NULL
               			END ||
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 30 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 IS NULL)
                 		ELSE
                   			NULL
               			END || 
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 36 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     	    	  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 = SUBSTR(b.cod_unid_geog, 37, 6)
                       				AND orde_8 IS NULL)
                 			ELSE
                   				NULL
               			END || 
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 42 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 = SUBSTR(b.cod_unid_geog, 37, 6)
                       				AND orde_8 = SUBSTR(b.cod_unid_geog, 43, 6)
                       				AND orde_9 IS NULL)
               				ELSE
                 				NULL
               			END || 
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 48 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 = SUBSTR(b.cod_unid_geog, 37, 6)
                       				AND orde_8 = SUBSTR(b.cod_unid_geog, 43, 6)
                       				AND orde_9 = SUBSTR(b.cod_unid_geog, 49, 6))
                 			ELSE
                   				NULL
               			END
          		   FROM mae_clien a,
               			mae_clien_direc b
         	      WHERE a.oid_clie = b.clie_oid_clie
           			AND b.ind_dire_ppal = 1
           			AND b.ind_elim = 0
           			AND a.cod_clie = #codigoCliente#)                                                 UNI_GEOGRAFICA,
       			(SELECT g.val_i18n
          		   FROM mae_clien             m,
               			mae_estat_clien       e,
               			mae_clien_datos_adici d,
               			gen_i18n_sicc_comun   g
                  WHERE m.cod_clie =#codigoCliente#
           			AND d.clie_oid_clie = m.oid_clie
           			AND e.oid_esta_clie(+) = d.esta_oid_esta_clie
           			AND g.attr_enti = 'MAE_ESTAT_CLIEN'
           			AND g.val_oid = e.oid_esta_clie)                                              ESTATUS,
       			(SELECT max(per.cod_peri)
          		   FROM ped_solic_cabec     psc,
               			ped_tipo_solic_pais tsp,
               			ped_tipo_solic      ts,
               			cra_perio           cra,
               			seg_perio_corpo     per,
               			mae_clien           m
         		  WHERE cra.oid_peri = psc.perd_oid_peri
           			AND per.OID_PERI = cra.peri_oid_peri
           			AND ts.cod_tipo_soli = 'C1'
           			 <![CDATA[       
         				AND psc.esso_oid_esta_soli <> 4
         			 ]]>
           			AND psc.tspa_oid_tipo_soli_pais = tsp.oid_tipo_soli_pais
           			AND tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli
           			AND psc.clie_oid_clie = m.oid_clie
           			AND m.cod_clie = #codigoCliente#)                                                 COD_CAMPANA,
           			(SELECT  X.VAL_I18N
					    FROM (SELECT A.NUM_NIVE_GRAV_BLOQ, A.cod_tipo_bloq, D.VAL_I18N 
					    from MAE_TIPO_BLOQU A,
					       MAE_CLIEN_BLOQU B,
					       MAE_CLIEN C,
					       GEN_I18N_SICC_COMUN D
					    WHERE A.OID_TIPO_BLOQ = B.TIBQ_OID_TIPO_BLOQ
					    AND B.CLIE_OID_CLIE = C.OID_CLIE
					    AND B.FEC_DESB IS NULL
					    AND D.ATTR_ENTI = 'MAE_TIPO_BLOQU'
					    AND D.VAL_OID = A.OID_TIPO_BLOQ
					    AND C.COD_CLIE = #codigoCliente#
					    ORDER BY 1 ) X
					    WHERE ROWNUM=1 )															BLOQUEO,
					(
					select decode(da.ind_acti,'1','Si','No') 
						from mae_clien m,
						     mae_clien_datos_adici da
						where da.clie_oid_clie = m.oid_clie
						  and m.cod_clie = #codigoCliente#					
					)   																			ACTIVA 								
  	      FROM 	dual	
  	</select>

	<resultMap id="getDatosClienteActualNumDocIdentResult" class="java.util.HashMap">
    	<result property="codigo_consultora"	column="cod_consultora"/>
  		<result property="nombreCliente"  		column="NOM_CLIENTE"/>
  		<result property="direccionCliente"  	column="DIR_CLIENTE"/>
  		<result property="region"  				column="DES_REGION"/>
  		<result property="zona"  				column="DES_ZONA"/>
  		<result property="seccion"  			column="DES_SECCION"/>
  		<result property="territorio"  			column="COD_TERRITORIO"/>
  		<result property="unidadGeografica"  	column="UNI_GEOGRAFICA"/>
  		<result property="estatus"  			column="ESTATUS"/>
  		<result property="campana"  			column="COD_CAMPANA"/>
  		<result property="bloqueo"  			column="BLOQUEO"/>
  		<result property="activa"  				column="ACTIVA"/>
  	</resultMap>
  	
  	<select id="getDatosClienteActualNumDocIdent" parameterClass="java.util.Map" resultMap="getDatosClienteActualNumDocIdentResult">
		SELECT 	(SELECT m.cod_clie
                              FROM mae_tipo_docum td, 
                                   mae_clien_ident ci,
                                   mae_clien m
                             WHERE td.cod_tipo_docu = #tipoDocumento#
                               AND td.ind_doc_iden_fisc = 1
                               and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
                               and ci.num_docu_iden = #numeroDocIdentidad#
                               and m.oid_clie = ci.clie_oid_clie) cod_consultora,
		        GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG((SELECT m.cod_clie
														  FROM mae_tipo_docum td, 
														       mae_clien_ident ci,
														       mae_clien m
														 WHERE td.cod_tipo_docu = #tipoDocumento#
														   AND td.ind_doc_iden_fisc = 1
														   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
														   and ci.num_docu_iden = #numeroDocIdentidad#
														   and m.oid_clie = ci.clie_oid_clie),'NOM_CLIE')                    NOM_CLIENTE,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG((SELECT m.cod_clie
														  FROM mae_tipo_docum td, 
														       mae_clien_ident ci,
														       mae_clien m
														 WHERE td.cod_tipo_docu = #tipoDocumento#
														   AND td.ind_doc_iden_fisc = 1
														   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
														   and ci.num_docu_iden = #numeroDocIdentidad#
														   and m.oid_clie = ci.clie_oid_clie),'DIR_CLIE')                    DIR_CLIENTE,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG((SELECT m.cod_clie
														  FROM mae_tipo_docum td, 
														       mae_clien_ident ci,
														       mae_clien m
														 WHERE td.cod_tipo_docu = #tipoDocumento#
														   AND td.ind_doc_iden_fisc = 1
														   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
														   and ci.num_docu_iden = #numeroDocIdentidad#
														   and m.oid_clie = ci.clie_oid_clie),'DES_REGI')                    DES_REGION,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG((SELECT m.cod_clie
														  FROM mae_tipo_docum td, 
														       mae_clien_ident ci,
														       mae_clien m
														 WHERE td.cod_tipo_docu = #tipoDocumento#
														   AND td.ind_doc_iden_fisc = 1
														   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
														   and ci.num_docu_iden = #numeroDocIdentidad#
														   and m.oid_clie = ci.clie_oid_clie),'DES_ZONA')                    DES_ZONA,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG((SELECT m.cod_clie
														  FROM mae_tipo_docum td, 
														       mae_clien_ident ci,
														       mae_clien m
														 WHERE td.cod_tipo_docu = #tipoDocumento#
														   AND td.ind_doc_iden_fisc = 1
														   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
														   and ci.num_docu_iden = #numeroDocIdentidad#
														   and m.oid_clie = ci.clie_oid_clie),'DES_SECC')                    DES_SECCION,
       			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG((SELECT m.cod_clie
														  FROM mae_tipo_docum td, 
														       mae_clien_ident ci,
														       mae_clien m
														 WHERE td.cod_tipo_docu = #tipoDocumento#
														   AND td.ind_doc_iden_fisc = 1
														   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
														   and ci.num_docu_iden = #numeroDocIdentidad#
														   and m.oid_clie = ci.clie_oid_clie),'COD_TERR')                    COD_TERRITORIO,
       			(SELECT GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_DPTO')|| ' / ' ||
               			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_PROV')|| ' / ' ||
               			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_DIST')|| ' / ' ||
               			GEN_PKG_GENER.GEN_FN_CLIEN_DATOS_CODIG(a.cod_clie,'DES_URBA')||
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 24 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 IS NULL)
                 			ELSE
                   				NULL
               			END ||
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 30 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 IS NULL)
                 		ELSE
                   			NULL
               			END || 
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 36 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     	    	  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 = SUBSTR(b.cod_unid_geog, 37, 6)
                       				AND orde_8 IS NULL)
                 			ELSE
                   				NULL
               			END || 
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 42 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 = SUBSTR(b.cod_unid_geog, 37, 6)
                       				AND orde_8 = SUBSTR(b.cod_unid_geog, 43, 6)
                       				AND orde_9 IS NULL)
               				ELSE
                 				NULL
               			END || 
               			CASE
                 			WHEN LENGTH(b.cod_unid_geog) > 48 THEN
                   				(SELECT ' / ' || des_geog
                      			   FROM zon_valor_estru_geopo
                     			  WHERE pais_oid_pais = a.pais_oid_pais
                       				AND orde_1 = SUBSTR(b.cod_unid_geog, 1, 6)
                       				AND orde_2 = SUBSTR(b.cod_unid_geog, 7, 6)
                       				AND orde_3 = SUBSTR(b.cod_unid_geog, 13, 6)
                       				AND orde_4 = SUBSTR(b.cod_unid_geog, 19, 6)
                       				AND orde_5 = SUBSTR(b.cod_unid_geog, 25, 6)
                       				AND orde_6 = SUBSTR(b.cod_unid_geog, 31, 6)
                       				AND orde_7 = SUBSTR(b.cod_unid_geog, 37, 6)
                       				AND orde_8 = SUBSTR(b.cod_unid_geog, 43, 6)
                       				AND orde_9 = SUBSTR(b.cod_unid_geog, 49, 6))
                 			ELSE
                   				NULL
               			END
          		   FROM mae_clien a,
               			mae_clien_direc b
         	      WHERE a.oid_clie = b.clie_oid_clie
           			AND b.ind_dire_ppal = 1
           			AND b.ind_elim = 0
           			AND a.cod_clie = (SELECT m.cod_clie
									   FROM mae_tipo_docum td, 
									        mae_clien_ident ci,
									        mae_clien m
									  WHERE td.cod_tipo_docu = #tipoDocumento#
									    AND td.ind_doc_iden_fisc = 1
									    and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
									    and ci.num_docu_iden = #numeroDocIdentidad#
									    and m.oid_clie = ci.clie_oid_clie))                                                 UNI_GEOGRAFICA,
       			(SELECT g.val_i18n
          		   FROM mae_clien             m,
               			mae_estat_clien       e,
               			mae_clien_datos_adici d,
               			gen_i18n_sicc_comun   g
                  WHERE m.cod_clie = (SELECT m.cod_clie
								 	   FROM mae_tipo_docum td, 
									        mae_clien_ident ci,
									        mae_clien m
									  WHERE td.cod_tipo_docu = #tipoDocumento#
									    AND td.ind_doc_iden_fisc = 1
									    and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
									    and ci.num_docu_iden = #numeroDocIdentidad#
									    and m.oid_clie = ci.clie_oid_clie)
           			AND d.clie_oid_clie = m.oid_clie
           			AND e.oid_esta_clie(+) = d.esta_oid_esta_clie
           			AND g.attr_enti = 'MAE_ESTAT_CLIEN'
           			AND g.val_oid = e.oid_esta_clie)                                              ESTATUS,
       			(SELECT max(per.cod_peri)
          		   FROM ped_solic_cabec     psc,
               			ped_tipo_solic_pais tsp,
               			ped_tipo_solic      ts,
               			cra_perio           cra,
               			seg_perio_corpo     per,
               			mae_clien           m
         		  WHERE cra.oid_peri = psc.perd_oid_peri
           			AND per.OID_PERI = cra.peri_oid_peri
           			AND ts.cod_tipo_soli = 'C1'
           			 <![CDATA[       
         				AND psc.esso_oid_esta_soli <> 4
         			 ]]>
           			AND psc.tspa_oid_tipo_soli_pais = tsp.oid_tipo_soli_pais
           			AND tsp.tsol_oid_tipo_soli = ts.oid_tipo_soli
           			AND psc.clie_oid_clie = m.oid_clie
           			AND m.cod_clie = (SELECT m.cod_clie
									    FROM mae_tipo_docum td, 
									         mae_clien_ident ci,
									         mae_clien m
									   WHERE td.cod_tipo_docu = #tipoDocumento#
									     AND td.ind_doc_iden_fisc = 1
									     and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
									     and ci.num_docu_iden = #numeroDocIdentidad#
									     and m.oid_clie = ci.clie_oid_clie))                                                 COD_CAMPANA,
           			(SELECT  X.VAL_I18N
					    FROM (SELECT A.NUM_NIVE_GRAV_BLOQ, A.cod_tipo_bloq, D.VAL_I18N 
					    from MAE_TIPO_BLOQU A,
					       MAE_CLIEN_BLOQU B,
					       MAE_CLIEN C,
					       GEN_I18N_SICC_COMUN D
					    WHERE A.OID_TIPO_BLOQ = B.TIBQ_OID_TIPO_BLOQ
					    AND B.CLIE_OID_CLIE = C.OID_CLIE
					    AND B.FEC_DESB IS NULL
					    AND D.ATTR_ENTI = 'MAE_TIPO_BLOQU'
					    AND D.VAL_OID = A.OID_TIPO_BLOQ
					    AND C.COD_CLIE = (SELECT m.cod_clie
											  FROM mae_tipo_docum td, 
											       mae_clien_ident ci,
											       mae_clien m
											 WHERE td.cod_tipo_docu = #tipoDocumento#
											   AND td.ind_doc_iden_fisc = 1
											   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
											   and ci.num_docu_iden = #numeroDocIdentidad#
											   and m.oid_clie = ci.clie_oid_clie)
					    ORDER BY 1 ) X
					    WHERE ROWNUM=1 )															BLOQUEO,
					(
					select decode(da.ind_acti,'1','Si','No') 
						from mae_clien m,
						     mae_clien_datos_adici da
						where da.clie_oid_clie = m.oid_clie
						  and m.cod_clie = (SELECT m.cod_clie
											  FROM mae_tipo_docum td, 
											       mae_clien_ident ci,
											       mae_clien m
											 WHERE td.cod_tipo_docu = #tipoDocumento#
											   AND td.ind_doc_iden_fisc = 1
											   and ci.tdoc_oid_tipo_docu = td.oid_tipo_docu
											   and ci.num_docu_iden = #numeroDocIdentidad#
											   and m.oid_clie = ci.clie_oid_clie)					
					)   																			ACTIVA 								
  	      FROM 	dual	
  	</select>


	<insert id="insertTemporalEliminarPolizasFamiliaSegura" parameterClass="java.util.Map">
		INSERT INTO STO_TMP_ELIMI_DOCUM(
			NUM_SECU,
		   	COD_TIPO_DOCU,
		   	NUM_LOTE,
		   	SEC_NUME_DOCU,
		   	COD_PERI,
		   	COD_CLIE,
		   	COD_REGI,
		   	COD_ZONA,
		   	FEC_DIGI,
		   	FEC_MODI,
		   	IND_CARG,
           	IND_ENVI,
           	IND_ERRO,
           	IND_RECH
        )
        SELECT	#secuencia#,
        		d.cod_tipo_docu,
        		d.num_lote,
        		d.sec_nume_docu,
        		d.cod_peri,
        		d.cod_clie,
       			d.cod_regi,
       			d.cod_zona,
       			TRUNC(d.fec_digi),
       			TRUNC(d.fec_modi),
       			1,
       			IND_ENVI,
		        DECODE((SELECT COUNT(1)
                		  FROM STO_DETAL_DOCUM_EXCEP R
               		     WHERE R.COD_PAIS = D.COD_PAIS
                 		   AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
                 		   AND R.NUM_LOTE = D.NUM_LOTE
                 		   AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU
                 		   AND R.IND_APRO = '0'
                 		   AND D.IND_RECH = '0'
                 	       AND D.IND_ENVI = '0'),
                       0,
              		   0,
              		   1) IND_ERROR,
       			d.ind_rech
          FROM	sto_docum_digit d,
       			int_solic_conso_famil_segur cab
         WHERE	cab.sec_nume_docu = d.sec_nume_docu
   		   AND 	cab.num_lote = d.num_lote
   		   AND 	d.cod_pais = #codigoPais#
   		   AND 	d.cod_tipo_docu = #tipoDocumento#

   		 <isNotEmpty property="codigoPeriodo">
		   AND 	d.cod_peri = #codigoPeriodo#
		 </isNotEmpty>

		 <isNotEmpty property="fechaInicioCarga">
		   <![CDATA[
		   AND d.fec_digi >= TO_DATE(#fechaInicioCarga#,'DD/MM/YYYY HH24:MI')
		   ]]>
	 	 </isNotEmpty>

		 <isNotEmpty property="fechaFinCarga">
		   <![CDATA[
		   AND d.fec_digi <= TO_DATE(#fechaFinCarga#,'DD/MM/YYYY HH24:MI')
		   ]]>
		 </isNotEmpty>

		 <isNotEmpty property="fechaInicioProceso">
		   <![CDATA[
		     AND d.fec_modi >= TO_DATE(#fechaInicioProceso#,'DD/MM/YYYY HH24:MI')
		   ]]>
		 </isNotEmpty>

		 <isNotEmpty property="fechaFinProceso">
		   <![CDATA[
		     AND d.fec_modi <= TO_DATE(#fechaFinProceso#,'DD/MM/YYYY HH24:MI')
		   ]]>
		 </isNotEmpty>
		 
		 <isNotEmpty property="numLote">
		     AND d.num_lote = #numLote#
		 </isNotEmpty>

		 <isNotEmpty property="estadoError">
		     AND EXISTS (SELECT 1
		                   FROM STO_DETAL_DOCUM_EXCEP R
		                  WHERE R.COD_PAIS = D.COD_PAIS
		                    AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		                    AND R.NUM_LOTE = D.NUM_LOTE
		                    AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU		             
		                    AND R.IND_APRO = '0'
		                    AND D.IND_RECH = '0'
		                    AND D.IND_ENVI = '0')
		 </isNotEmpty>

		 <isNotEmpty property="estadoRechazadas">
		     AND d.ind_rech = '1'
	     </isNotEmpty>

	     <isNotEmpty property="estadoEnviadas">
	     	 AND EXISTS (SELECT 1
                           FROM sgr_famse_poliz_regis sg
                          WHERE sg.cod_clie = cab.cod_clie
                   		    AND sg.ind_orig_regi = 'O'
                  		    AND sg.num_poli = cab.num_docu)
	     </isNotEmpty>

	     <iterate prepend="AND" property="clienteList" open="(" close=")" conjunction="OR">
		        d.cod_clie = #clienteList[]#
		 </iterate>

		 <iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		        d.cod_regi = #regionList[]#
		 </iterate>

		 <iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		        d.cod_zona = #zonaList[]#
	     </iterate>
	</insert>

	<resultMap id="consultaPolizasResult" class="consultaPolizas">
		<result property="codigoTipoDocumento"      	column="COD_TIPO_DOCU"/>
	    <result property="fechaCarga"                  	column="FEC_DIGI"/>
	    <result property="fechaModificacion"     		column="FEC_MODI"/>
		<result property="numeroLote"                 	column="NUM_LOTE"/>
		<result property="codigoRegion"                	column="COD_REGI"/>
		<result property="descripcionRegion"            column="DES_REGI"/>
		<result property="codigoZona"                 	column="COD_ZONA"/>
		<result property="codigoCliente"                column="COD_CLIE"/>
		<result property="codigoPeriodo"          		column="COD_PERI"/>
		<result property="cargadas"          			column="NUM_CARG"/>
		<result property="enviadas"          			column="NUM_ENVI"/>
		<result property="erradas"         				column="NUM_ERRO"/>
	    <result property="rechazadas"          			column="NUM_RECH"/>
	</resultMap>
	<select id="getConsultaPolizasFamiliaSeguraList" parameterClass="java.util.Map" resultMap="consultaPolizasResult">
		SELECT	TMP.COD_TIPO_DOCU  COD_TIPO_DOCU,
				<isNotEmpty property="agruFecCarga">
	            	TO_CHAR(TMP.FEC_DIGI,'DD/MM/YYYY') FEC_DIGI,
	          	</isNotEmpty>
				<isEmpty property="agruFecCarga">
	          		null FEC_DIGI,
	          	</isEmpty>
	          	<isNotEmpty property="agruFecProce">
	          		TO_CHAR(TMP.FEC_MODI,'DD/MM/YYYY') FEC_MODI,
	          	</isNotEmpty>
				<isEmpty property="agruFecProce">
	          		null FEC_MODI,
	          	</isEmpty>
	          	<isNotEmpty property="agruLote">
	            	TMP.NUM_LOTE  NUM_LOTE,
	          	</isNotEmpty>
				<isEmpty property="agruLote">
	          		null NUM_LOTE,
	          	</isEmpty>
	          	<isNotEmpty property="agruRegion">
	            	TMP.COD_REGI  COD_REGI,
	            	R.DES_REGI    DES_REGI,
	          	</isNotEmpty>
				<isEmpty property="agruRegion">
	          		null COD_REGI,
	            	null DES_REGI,
	          	</isEmpty>
	          	<isNotEmpty property="agruZona">
	            	TMP.COD_ZONA  COD_ZONA,
	         	</isNotEmpty>
				<isEmpty property="agruZona">
	          		null COD_ZONA,
	          	</isEmpty>
	          	<isNotEmpty property="agrupacionClinte">
	          		TMP.COD_CLIE  COD_CLIE,
	          	</isNotEmpty>
				<isEmpty property="agrupacionClinte">
	            	null COD_CLIE,
	          	</isEmpty>
	          	<isNotEmpty property="agruPeriodo">
	          		TMP.COD_PERI  COD_PERI,
	          	</isNotEmpty>
				<isEmpty property="agruPeriodo">
	          		null COD_PERI,
	          	</isEmpty>
	          	SUM(IND_CARG) NUM_CARG,
	          	SUM(IND_ENVI) NUM_ENVI,
	          	SUM(IND_ERRO) NUM_ERRO,
			    SUM(IND_RECH) NUM_RECH
		  FROM 	STO_TMP_ELIMI_DOCUM TMP,
       			ZON_REGIO           R
       	 WHERE	R.COD_REGI(+) = TMP.COD_REGI
           AND 	TMP.NUM_SECU = #secuencia#
         GROUP BY TMP.COD_TIPO_DOCU
				<isNotEmpty property="agruFecCarga">
	            	,TO_CHAR(TMP.FEC_DIGI,'DD/MM/YYYY')
	          	</isNotEmpty>
				<isNotEmpty property="agruFecProce">
					,TO_CHAR(TMP.FEC_MODI,'DD/MM/YYYY')
	          	</isNotEmpty>
	          	<isNotEmpty property="agruLote">
	          		,TMP.NUM_LOTE
	          	</isNotEmpty>
	 			<isNotEmpty property="agruRegion">
					,TMP.COD_REGI
	            	,R.DES_REGI
	          	</isNotEmpty>
				<isNotEmpty property="agruZona">
	          		,TMP.COD_ZONA
	          	</isNotEmpty>
		        <isNotEmpty property="agrupacionClinte">
	            	,TMP.COD_CLIE
	          	</isNotEmpty>
	          	<isNotEmpty property="agruPeriodo">
					,TMP.COD_PERI
	          	</isNotEmpty>
	</select>

	<update id="updateEliminarPoliza" parameterClass="java.util.Map">
		UPDATE STO_TMP_ELIMI_DOCUM
		   SET NUM_PROC = #historico.numeroProceso#
		 WHERE COD_TIPO_DOCU = #poliza.codigoTipoDocumento#
		   AND IND_ENVI = 0
		   AND NUM_SECU = #secuencia#
		   <isNotEmpty property="poliza.numeroLote">
			   AND NUM_LOTE = #poliza.numeroLote#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.codigoPeriodo">
               AND COD_PERI = #poliza.codigoPeriodo#
           </isNotEmpty>
           <isNotEmpty property="poliza.codigoCliente">
			   AND COD_CLIE = #poliza.codigoCliente#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.codigoRegion">
			   AND COD_REGI = #poliza.codigoRegion#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.codigoZona">
			   AND COD_ZONA = #poliza.codigoZona#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.fechaCarga">
			   AND FEC_DIGI = TO_DATE(#poliza.fechaCarga#,'DD/MM/YYYY')
		   </isNotEmpty>
		   <isNotEmpty property="poliza.fechaModificacion">
			   AND FEC_MODI = TO_DATE(#poliza.fechaModificacion#,'DD/MM/YYYY')
		   </isNotEmpty>
	</update>

<resultMap id="getTiposDocumentosHistoricoSTOAutResult" class="java.util.HashMap">
  		<result property="codigoPais"      			column="COD_PAIS"/> 		
		<result property="codigoTipo"      column="COD_TIPO_DOCU"/>	    
	    <result property="procesoHistorico"     		column="EXE_PROC_HIST"/>
	    <result property="codigoPeriodo"     		column="COD_PERI"/>
	</resultMap>
  	<select id="getTiposDocumentosHistoricoSTOAut" parameterClass="java.util.Map" resultMap="getTiposDocumentosHistoricoSTOAutResult">
		SELECT T.COD_PAIS,
		       T.COD_TIPO_DOCU,		       
               T.EXE_PROC_HIST,
		       GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(T.COD_PAIS,#codigoPeriodo#,-NUM_CAMP_HIST) COD_PERI
          FROM STO_TIPO_DOCUM_DIGIT T
         WHERE T.IND_CABE = '1'
           AND T.IND_PASE_HIST_AUTO = 'S'
           AND T.COD_PAIS=#codigoPais#
		   AND NVL(T.NUM_CAMP_HIST,0) > 0
	</select>
	<select id="getTiposDocumentosHistoricoSTOSinGestion" parameterClass="java.util.Map" resultMap="getTiposDocumentosHistoricoSTOAutResult">
		SELECT T.COD_PAIS,
		       T.COD_TIPO_DOCU,
		       T.EXE_PROC_HIST,
		       GEN_PKG_GENER.GEN_FN_PERIO_NSIGU(T.COD_PAIS,#codigoPeriodo#,-NUM_CAMP_HIST_SGES) COD_PERI
		  FROM STO_TIPO_DOCUM_DIGIT T
		 WHERE T.IND_CABE = '1'
		   AND T.IND_PASE_HIST_SGES = 'S'
		   AND T.COD_PAIS = #codigoPais#
		   AND NVL(T.NUM_CAMP_HIST_SGES,0) > 0
		   AND T.COD_TIPO_DOCU='SPVC'
	</select>
	
	
	 <select id="getDescripcionOnline" parameterClass="java.util.Map" resultClass="string">
   		SELECT a.des_orig
  		  FROM sto_orige_docum a
 		 WHERE a.cod_pais = #codigoPais#
   		   AND a.cod_orig = #codigoOnLine#
   		   AND a.cod_tipo_docu = 'OCC'
    </select>
    
    <insert id="insertTemporalEliminarPedidoOnLine" parameterClass="java.util.Map">
		INSERT INTO STO_TMP_ELIMI_DOCUM
		  (NUM_SECU,
		   COD_TIPO_DOCU,
		   NUM_LOTE,
		   SEC_NUME_DOCU,
		   COD_PERI,
		   COD_CLIE,
		   COD_REGI,
		   COD_ZONA,
		   COD_ORIG,
		   FEC_DIGI,
		   FEC_MODI,
		   FEC_PROG_FACT,
		   IND_CARG,
           IND_ENVI,
           IND_FACT,
  		   IND_GP2,
  		   IND_GP3,
  		   IND_GP4,
  		   IND_GP5,
           IND_ERRO,
           IND_RECH,
           IND_NOVA)
		  SELECT #secuencia#,
		         D.COD_TIPO_DOCU,
		         D.NUM_LOTE,
		         D.SEC_NUME_DOCU,
		         D.COD_PERI,
		         D.COD_CLIE,
		         D.COD_REGI,
		         D.COD_ZONA,
		         (SELECT C.COD_ORIG
		            FROM STO_COMBI_ORIGE_DOCUM C
		           WHERE C.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		             AND C.COD_PAIS = D.COD_PAIS
		             AND C.IND_RECE_OCR = D.IND_RECE_OCR
		             AND C.IND_RECE_WEB = D.IND_RECE_WEB
		             AND C.IND_RECE_DD = D.IND_RECE_DD
		             AND C.IND_RECE_DIGI = D.IND_RECE_DIGI
		             AND C.IND_RECE_CC = D.IND_RECE_CC
		             AND C.IND_RECE_MENS = D.IND_RECE_MENS
		             AND C.IND_RECE_ONLI = D.IND_RECE_ONLI
		             AND C.IND_RECE_IVR = D.IND_RECE_IVR),
		         TRUNC(D.FEC_DIGI),
		         TRUNC(D.FEC_MODI),
		         TRUNC(CAB.FEC_PROG_FACT),
		         1 IND_CARG,
                 DECODE((SELECT COUNT(1)
		                   FROM PED_SOLIC_CABEC P
		                  WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		                    AND P.GRPR_OID_GRUP_PROC = 1
		                    AND D.IND_ENVI='1'),0,0,1) IND_ENVI,
                 DECODE((SELECT COUNT(1)
		                   FROM PED_SOLIC_CABEC P
		                  WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
		                    AND P.GRPR_OID_GRUP_PROC > 1
		                    AND D.IND_ENVI='1'),0,0,1) IND_FACT,         
		         DECODE((SELECT COUNT(1)
                 		   FROM PED_SOLIC_CABEC P
                		  WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
                            AND P.GRPR_OID_GRUP_PROC = 2
                  			AND D.IND_ENVI='1'),0,0,1) IND_GP2,
        		 DECODE((SELECT COUNT(1)
                    	   FROM PED_SOLIC_CABEC P
                		  WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
                  		    AND P.GRPR_OID_GRUP_PROC = 3
                  		    AND D.IND_ENVI='1'),0,0,1) IND_GP3,
        	     DECODE((SELECT COUNT(1)
                 	       FROM PED_SOLIC_CABEC P
                	      WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
                  		    AND P.GRPR_OID_GRUP_PROC = 4
                  		    AND D.IND_ENVI='1'),0,0,1) IND_GP4,
        	     DECODE((SELECT COUNT(1)
                  		   FROM PED_SOLIC_CABEC P
                		  WHERE P.OID_SOLI_CABE = CAB.SOCA_OID_SOLI_CABE_REFE
                  		    AND P.GRPR_OID_GRUP_PROC = 5
                  		    AND D.IND_ENVI='1'),0,0,1) IND_GP5,        
                 DECODE((SELECT COUNT(1)
		                   FROM STO_DETAL_DOCUM_EXCEP R
		                  WHERE R.COD_PAIS = D.COD_PAIS
		                    AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		                    AND R.NUM_LOTE = D.NUM_LOTE
		                    AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU		             
		                    AND R.IND_APRO = '0'
		                    AND D.IND_RECH = '0'
		                    AND D.IND_ENVI = '0'),0,0,1) IND_ERR,
                 D.IND_RECH,
                 CASE
			         WHEN (D.IND_ENVI = '0' AND D.IND_RECH = '0' AND NOT EXISTS
			               (SELECT 1
			                  FROM STO_DETAL_DOCUM_EXCEP R
			                 WHERE R.COD_PAIS = D.COD_PAIS
			                   AND R.COD_TIPO_DOCU = D.COD_TIPO_DOCU
			                   AND R.NUM_LOTE = D.NUM_LOTE
			                   AND R.SEC_NUME_DOCU = D.SEC_NUME_DOCU
			                   AND R.IND_APRO = '0')) THEN
			          1
			         ELSE
			          0
			       END IND_NOVA		         
		    FROM STO_DOCUM_DIGIT       D,
		         INT_SOLIC_CONSO_CABEC CAB
		   WHERE CAB.SEC_NUME_DOCU = D.SEC_NUME_DOCU
		     AND CAB.NUM_LOTE = D.NUM_LOTE
		     AND D.COD_PAIS = #codigoPais#
		     AND D.COD_TIPO_DOCU = #tipoDocumento#
		     AND D.COD_CLIE = #codigoCliente#
		     AND D.COD_PERI = #codigoPeriodo#
		     <isNotEmpty property="codigoOrigen">
		     AND EXISTS (SELECT 1
		            FROM STO_COMBI_ORIGE_DOCUM C
		           WHERE C.COD_TIPO_DOCU = D.COD_TIPO_DOCU
		             AND C.COD_PAIS = D.COD_PAIS
		             AND C.IND_RECE_OCR = D.IND_RECE_OCR
		             AND C.IND_RECE_WEB = D.IND_RECE_WEB
		             AND C.IND_RECE_DD = D.IND_RECE_DD
		             AND C.IND_RECE_DIGI = D.IND_RECE_DIGI
		             AND C.IND_RECE_CC = D.IND_RECE_CC
		             AND C.IND_RECE_MENS = D.IND_RECE_MENS
		             AND C.IND_RECE_ONLI = D.IND_RECE_ONLI
		             AND C.IND_RECE_IVR = D.IND_RECE_IVR
		             AND C.COD_ORIG = #codigoOrigen#)
		     </isNotEmpty>      	            
		</insert>
    
  <procedure id="executeHabilitarDesabilitarProlConsultoras">
    {call STO_PKG_PROCE_VALID_OCC.STO_PR_OCC_MARCA_PROL}
  </procedure>
  
  <resultMap id="detallePedidoFolioResult"  class="detallePedidoFolio">
    	<result property="codigoCliente" 				column="COD_CLIE" 	/>
    	<result property="codigoPeri" 					column="COD_PERI"/>
    	<result property="valorNumericoSolicitud" 		column="VAL_NUME_SOLI"/>
    	<result property="fechaProc" 					column="FEC_PROC"/>
    	<result property="valorCodigoVenta" 			column="VAL_CODI_VENT"/>
    	<result property="valorDescripcionProducto" 	column="VAL_DESC_PROD"/>
    	<result property="numeroUnidad" 				column="NUM_UNID"/>
    	<result property="valorFolio" 					column="VAL_FOLI"/>
    	<result property="indiceReclamo" 				column="IND_RECL"/>
    </resultMap>
    
  <select id="getDetallePedidoFolio" resultMap="detallePedidoFolioResult" parameterClass="string">
  	SELECT 
  		distinct cod_clie, 
  		cod_peri, 
  		val_nume_soli, 
  		fec_proc, 
  		val_codi_vent,
    	val_desc_prod, 
    	num_unid, 
    	val_prec_cata, 
    	val_foli, 
    	ind_Recl
	FROM ped_bolet_elect_histo
    WHERE oid_soli_posi_pedi = #value#  	
  </select>
  
  <parameterMap id="executeHistoricoSinGestionarParams" class="map" >
		<parameter property="codigoPais"        	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="codigoTipo"   			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="codigoPeriodo"	    	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	    <parameter property="numeroProceso"	    	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    
   <procedure id="executeHistoricoSinGestionar"  parameterMap="executeHistoricoSinGestionarParams" >
		{call STO_PKG_GENER.STO_PR_DOCUM_SGEST_HISTO(?,?,?,?)}
    </procedure>
       
    <parameterMap id="executeHistoricoPostVentaParams" class="map" >
		<parameter property="codigoPais"        	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="codigoTipo"   			jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="numeroProceso"	    	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    
   <procedure id="executeHistoricoPostVenta"  parameterMap="executeHistoricoPostVentaParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO_POVEN(?,?,?)}
    </procedure>
    
    <parameterMap id="executeHistoricoSTOParams" class="map" >
		<parameter property="codigoPais"        jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="codigoTipo"   		jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>	    
	    <parameter property="numeroProceso"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
    
   <procedure id="executeHistoricoSTO"  parameterMap="executeHistoricoSTOParams" >
		{call STO_PKG_PROCE_GENER.STO_PR_HISTO(?,?,?)}
    </procedure>
    	<resultMap id="getListaPeriodosHistoricosSinGestionResult" class="java.util.HashMap">
		<result property="codigoPeriodo"      	column="COD_PERI"/>
	</resultMap>
  	<select id="getListaPeriodosHistoricosSinGestion" parameterClass="java.util.Map" resultMap="getListaPeriodosHistoricosSinGestionResult">
  	  SELECT COD_PERI
        FROM STO_DOCUM_DIGIT D,
             STO_DETAL_DOCUM_EXCEP E
       WHERE E.SEC_NUME_DOCU=D.SEC_NUME_DOCU
         AND E.NUM_LOTE=D.NUM_LOTE
         AND E.COD_TIPO_DOCU=D.COD_TIPO_DOCU
         AND E.COD_PAIS = D.COD_PAIS
         AND E.COD_PAIS = #codigoPais#         		
         AND D.IND_ENVI='0'
         AND D.IND_RECH='0'	
         AND E.COD_TIPO_DOCU = #codigoTipo#
           <![CDATA[  
         AND D.COD_PERI <= #codigoPeriodo#
			]]>
    GROUP BY D.COD_PERI	    
	</select>
  
  <select id="getURLOCRParametro" parameterClass="java.util.Map" resultClass="string">
  		SELECT VAL_PARA
			  FROM bas_param_pais
			 WHERE cod_pais = #codigoPais# AND cod_sist = 'OCR' AND cod_para = '016'
  </select>
  
  <select id="getMarcaPais" parameterClass="java.util.Map" resultClass="string">
  		SELECT COD_PAIS_OCR||'-'|| COD_COMP FROM BAS_PAIS_COMPA WHERE COD_PAIS = #codigoPais#
  </select>
  
  <select id="getValorTipoDocumento" parameterClass="java.util.Map" resultClass="string">
		select COD_TIPO_DOCU_VISO from sto_tipo_docum_digit where cod_tipo_docu = #tipoDocumento#
  </select>
 
<select id="getListaHistoricoSolicitudAprobados" parameterClass="java.util.Map" resultMap="getHistoricoSolicitudesAprobadasResult">
		 <![CDATA[ 
		select cod_peri,cod_oper,num_docu,to_char(fec_ingr, 'dd/mm/yyyy') fec_ingr,cod_vent_devu,
		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION(prod_oid_prod_devu,'MAE_PRODU','es') descripcion,
		can_vent_devu,val_prec_cata_devu,motivo 
		from
		(select gen_pkg_gener.GEN_FN_DEVUELVE_ID_CRA_PERIO2(cod_peri) oidcam ,cod_peri from
		(select bas.cod_peri from bas_ctrl_fact bas
		where bas.cod_peri < (select cod_peri from bas_ctrl_fact a where a.sta_camp = '0')order by cod_peri desc) cam
		where rownum <= (select val_param from sto_param_gener_occrr where cod_para = #tipoGrupoNc#) ) cam , 
		(select REC.PERD_OID_PERI_RECL ,DET.COD_OPER, cab.num_docu, REC.FEC_INGR, DET.COD_VENT_DEVU,det.prod_oid_prod_devu,DET.CAN_VENT_DEVU, DET.VAL_PREC_CATA_DEVU, 
		gen_pkg_gener.GEN_FN_DEVUELVE_DESCRIPCION((select MOT.OID_MOTI_DEVO from REC_MOTIV_DEVOL mot where MOT.COD_MOTI_DEVO= DET.MOT_SPV),'REC_MOTIV_DEVOL','es') motivo
		from int_solic_conso_poven_cabec cab, sto_docum_digit dig, int_solic_conso_poven_detal det, rec_Cabec_recla rec
		where CAB.SEC_NUME_DOCU = DIG.SEC_NUME_DOCU_CABE
		and DIG.SEC_NUME_DOCU = DET.SEC_NUME_DOCU
		and CAB.OID_CABE_RECL_REFE  = REC.OID_CABE_RECL
		and CAB.OID_CABE_RECL_REFE is not null
		and DIG.IND_ENVI = '1'
		and DIG.IND_RECH = '0'
		and CAB.COD_CLIE = #codigoCliente#   
		]]>
		<isNotEqual property="tipoGrupo" compareValue="STO_TOPE_%">
		and det.cod_oper in ((select val_param from sto_param_gener_occrr where cod_para like #tipoGrupo#)) ) detal
		</isNotEqual>
		<isEqual property="tipoGrupo" compareValue="STO_TOPE_%">
		and det.cod_oper not in ((select val_param from sto_param_gener_occrr where cod_para like #tipoGrupo#)) ) detal
		</isEqual>
		where cam.oidcam = detal.PERD_OID_PERI_RECL (+)
		order by cam.oidcam
		
  </select>
  
 
 <update id="updateDocumentoDigital" parameterClass="java.util.Map">
        UPDATE STO_DOCUM_DIGIT
			   SET COD_MOTI_RECH = #codigoRechazo#,
			   	   VAL_OBSE_RECH_DEFI = #observacionRechazo#		       
			 WHERE COD_PAIS = #codigoPais#
			   AND COD_TIPO_DOCU = #codigoTipo#
			   AND NUM_LOTE =#numLote#
               AND SEC_NUME_DOCU=#numDocumento#
			   
  	</update>  
  
  <update id="updateEliminarPedidoList" parameterClass="java.util.Map">
            UPDATE STO_TMP_ELIMI_DOCUM
			   SET NUM_PROC = '0'
			 WHERE COD_TIPO_DOCU=#pedido.codigoTipoDocumento#
			   AND IND_GP4 = 0
    		   AND IND_GP5 = 0 
			   AND NUM_SECU=#secuencia#
			   <isNotEmpty property="pedido.numeroLote">
			   AND NUM_LOTE=#pedido.numeroLote#
			   </isNotEmpty>
			   <isNotEmpty property="pedido.codigoPeriodo">		  
               AND COD_PERI=#pedido.codigoPeriodo#
               </isNotEmpty> 
               <isNotEmpty property="pedido.codigoCliente">
			   AND COD_CLIE=#pedido.codigoCliente#
			   </isNotEmpty>
			   <isNotEmpty property="pedido.codigoRegion">			   
			   AND COD_REGI=#pedido.codigoRegion# 
			   </isNotEmpty>
			   <isNotEmpty property="pedido.codigoZona">
			   AND COD_ZONA=#pedido.codigoZona#
			   </isNotEmpty> 
			   <isNotEmpty property="pedido.codigoOrigen">
			   AND COD_ORIG=#pedido.codigoOrigen#
			   </isNotEmpty> 
			   <isNotEmpty property="pedido.fechaCarga">
			   AND FEC_DIGI=TO_DATE(#pedido.fechaCarga#,'DD/MM/YYYY')
			   </isNotEmpty>
			   <isNotEmpty property="pedido.fechaModificacion"> 
			   AND FEC_MODI=TO_DATE(#pedido.fechaModificacion#,'DD/MM/YYYY')
			   </isNotEmpty>
			   <isNotEmpty property="pedido.fechaModificacion">
			   AND FEC_PROG_FACT=TO_DATE(#pedido.fechaProgramadaFacturacion#,'DD/MM/YYYY')
			   </isNotEmpty>
		</update>	
	<typeAlias alias="documentoDigitadoPK" type="biz.belcorp.ssicc.dao.spusicc.sto.model.DocumentoDigitadoPK"/>
    <resultMap id="documentoDigitadoPKResult" class="documentoDigitadoPK">                                      
    	<result property="codPais"         column="COD_PAIS" />                    
    	<result property="codTipoDocu"     column="COD_TIPO_DOCU" />              
    	<result property="numLote"         column="NUM_LOTE" />     
    	<result property="secNumeDocu"     column="SEC_NUME_DOCU" />                  
	</resultMap>   
  
	<select id="getSTOListByPedidoList" parameterClass="java.util.Map" resultMap="documentoDigitadoPKResult">
		SELECT #codigoPais# COD_PAIS,
			   D.COD_TIPO_DOCU,		       
		       D.NUM_LOTE,
		       D.SEC_NUME_DOCU
		  FROM STO_TMP_ELIMI_DOCUM D
         WHERE NUM_SECU = #secuencia#
           AND NUM_PROC = '0'
	</select>

	
	 <update id="updateEliminarPolizaList" parameterClass="java.util.Map">
            UPDATE STO_TMP_ELIMI_DOCUM
			   SET NUM_PROC = '0'
			 WHERE COD_TIPO_DOCU = #poliza.codigoTipoDocumento#
		   AND IND_ENVI = 0
		   AND NUM_SECU = #secuencia#
		   <isNotEmpty property="poliza.numeroLote">
			   AND NUM_LOTE = #poliza.numeroLote#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.codigoPeriodo">
               AND COD_PERI = #poliza.codigoPeriodo#
           </isNotEmpty>
           <isNotEmpty property="poliza.codigoCliente">
			   AND COD_CLIE = #poliza.codigoCliente#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.codigoRegion">
			   AND COD_REGI = #poliza.codigoRegion#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.codigoZona">
			   AND COD_ZONA = #poliza.codigoZona#
		   </isNotEmpty>
		   <isNotEmpty property="poliza.fechaCarga">
			   AND FEC_DIGI = TO_DATE(#poliza.fechaCarga#,'DD/MM/YYYY')
		   </isNotEmpty>
		   <isNotEmpty property="poliza.fechaModificacion">
			   AND FEC_MODI = TO_DATE(#poliza.fechaModificacion#,'DD/MM/YYYY')
		   </isNotEmpty>
		</update>		
		
	<select id="getSTOListByPolizaList" parameterClass="java.util.Map" resultMap="documentoDigitadoPKResult">
		SELECT #codigoPais# COD_PAIS,
			   D.COD_TIPO_DOCU,		       
		       D.NUM_LOTE,
		       D.SEC_NUME_DOCU
		  FROM STO_TMP_ELIMI_DOCUM D
         WHERE NUM_SECU = #secuencia#
           AND NUM_PROC = '0'
	</select>	
		
  	<select id="getValidarCuponPeriodoCliente" parameterClass="java.util.Map" resultClass="int">
		SELECT COUNT(1)
		  FROM INT_SOLIC_CONSO_CUPON_PAGO
         WHERE COD_PAIS = #codigoPais#
           AND COD_CLIE = (select x.cod_clie 
           				   from mae_clien x, 
           				        MAE_CLIEN_IDENT y 
           				   where x.oid_clie = y.CLIE_OID_CLIE 
           				   	and y.NUM_DOCU_IDEN = #rutCliente# and 
           				   		y.VAL_IDEN_DOCU_PRIN ='1'  and rownum    <![CDATA[   <= 1   ]]> )
           AND COD_PERI =#codigoPeriodo#
           AND TO_CHAR(FEC_PROC,'dd/MM/yyyy') = #fechaRegistro#
           AND IMP_VALO = #valorPagado#
           AND COD_REFE_PAGO = #numeroCuponPago#
	</select>
	<select id="getValidarDeudaCliente" parameterClass="java.util.Map" resultClass="int">
		SELECT COUNT(1) FROM INT_SOLIC_CONSO_CABEC 
		 WHERE COD_PAIS = #codigoPais# 
		  AND COD_CLIE = (select x.cod_clie 
		                    from mae_clien x, 
		                         MAE_CLIEN_IDENT y 
		                   where x.oid_clie = y.CLIE_OID_CLIE 
		                     and y.NUM_DOCU_IDEN = #rutCliente# 
		                     and y.VAL_IDEN_DOCU_PRIN ='1' and rownum <![CDATA[ <= 1  ]]> ) 
		 AND COD_PERI =#codigoPeriodo#
		 AND VAL_SALD_DEUD > 0 
		 AND IND_ERRO_DEUD = '2' 
	</select>
	
	<resultMap id="getConsultaDetallePedidoGP1_GP2Result"  class="java.util.HashMap">
	    <result property="codigoVenta"		    	column="COD_VENT"/>	                                                                       
    	<result property="descripcionProducto"		column="DES_PROD"/>
    	<result property="unidadDemanda"			column="VAL_UNID_DEM"/>
    	<result property="limiteVenta" 				column="LIMITE_VENTA"/>
    	<result property="valorPrecioCatalogo" 		column="VAL_PREC_CATA_UNIT_LOCA"/>
    	<result property="valorTotalPrecioCatalogo" column="PRECIO_CATALOGO_TOTAL"/>
    	<result property="origenOCR" 				column="IND_RECE_OCR"/>
    	<result property="origenWEB" 				column="IND_RECE_WEB"/>
    	<result property="origenDD" 				column="IND_RECE_DD"/>
    	<result property="origenIVR" 				column="IND_RECE_IVR"/>
    	<result property="origenDIG" 				column="IND_RECE_DIGI"/>
	</resultMap>
	
	<select id="getConsultaDetallePedidoGP1_GP2" 
			parameterClass="java.util.Map" resultMap="getConsultaDetallePedidoGP1_GP2Result">
		SELECT DISTINCT 
		B.COD_VENT, 
		DES_PROD, 
		VAL_UNID_DEM, 
		VAL_LIMI_CTRL_VENT LIMITE_VENTA, 
		VAL_PREC_CATA_UNIT_LOCA, 
		VAL_PREC_CATA_UNIT_LOCA*VAL_UNID_DEM PRECIO_CATALOGO_TOTAL,
        B.VAL_UNID_OCR IND_RECE_OCR,
        B.VAL_UNID_WEB IND_RECE_WEB,
        B.VAL_UNID_DD IND_RECE_DD,
        B.VAL_UNID_IVR IND_RECE_IVR,
        B.VAL_UNID_DIGI IND_RECE_DIGI
		FROM INT_SOLIC_CONSO_CABEC A, INT_SOLIC_CONSO_DETAL B, PED_GESTI_STOCK C
		WHERE A.COD_CLIE=B.COD_CLIE AND A.COD_CLIE = #codigoCliente#
		<isNotEmpty property="codigoVenta">
			AND  B.COD_VENT = #codigoVenta#
		</isNotEmpty>
		AND a.sec_nume_docu = b.sec_nume_docu_cabe
		AND B.OFDE_OID_DETA_OFER=C.OFDE_OID_DETA_OFER(+)
		AND C.VAL_LIMI_CTRL_VENT(+) IS NOT NULL
	</select>
	
	<resultMap id="getConsultaDetallePedidoGP3_GP4_GP5Result" class="java.util.HashMap">
	    <result property="codigoVenta"		    	column="VAL_CODI_VENT"/>	                                                                       
    	<result property="descripcionProducto"			column="DESCRIPCION"/>
    	<result property="unidadDemanda"			column="UNIDADES_DEMANDADAS"/>
    	<result property="unidadesPorAtender" 		column="UNIDADES_POR_ATENDER"/>
    	<result property="limiteVenta" 				column="LIMITE_VENTA"/>
    	<result property="tipoPosicion" 			column="TPOS_OID_TIPO_POSI"/>
    	<result property="precioCatalogoUnitario" 	column="PRECIO_CATALOGO_UNITARIO"/>
    	<result property="precioCatalogoTotal" 		column="PRECIO_CATALOGO_TOTAL"/>
    	<result property="porcentajeDescuento" 		column="PORCENTAJE_DESCUENTO"/>
    	<result property="tipoDemanda" 				column="TIPO"/>
    	<result property="origenOCR" 				column="IND_RECE_OCR"/>
    	<result property="origenWEB" 				column="IND_RECE_WEB"/>
    	<result property="origenDD" 				column="IND_RECE_DD"/>
    	<result property="origenIVR" 				column="IND_RECE_IVR"/>
    	<result property="origenDIG" 				column="IND_RECE_DIGI"/>    	
	</resultMap>
	
	<select id="getConsultaDetallePedidoGP3_GP4_GP5"
			parameterClass="java.util.Map" resultMap="getConsultaDetallePedidoGP3_GP4_GP5Result">
	SELECT 
       B.VAL_CODI_VENT,
			E.VAL_I18N DESCRIPCION, 
			B.NUM_UNID_DEMA UNIDADES_DEMANDADAS, 
			B.NUM_UNID_POR_ATEN UNIDADES_POR_ATENDER, 
       F.VAL_LIMI_CTRL_VENT LIMITE_VENTA,
       B.TPOS_OID_TIPO_POSI,
       B.VAL_PREC_CATA_UNIT_LOCA PRECIO_CATALOGO_UNITARIO,
       B.VAL_PREC_CATA_UNIT_LOCA * B.NUM_UNID_POR_ATEN PRECIO_CATALOGO_TOTAL,
			B.VAL_PORC_DESC PORCENTAJE_DESCUENTO,
			CASE B.TPOS_OID_TIPO_POSI 
			WHEN 4 THEN 'CUADRE OFERTAS'  
			WHEN 3 THEN 'MAV'  
			ELSE 'DEMANDADO'  
       END TIPO,
      NVL( ( SELECT G.VAL_UNID_OCR FROM INT_SOLIC_CONSO_DETAL G WHERE G.SEC_NUME_DOCU_CABE = C.SEC_NUME_DOCU and G.PROD_OID_PROD = B.PROD_OID_PROD ),0) IND_RECE_OCR,
      NVL( ( SELECT G.VAL_UNID_WEB FROM INT_SOLIC_CONSO_DETAL G WHERE G.SEC_NUME_DOCU_CABE = C.SEC_NUME_DOCU and G.PROD_OID_PROD = B.PROD_OID_PROD ),0) IND_RECE_WEB,
      NVL( ( SELECT G.VAL_UNID_DD FROM INT_SOLIC_CONSO_DETAL G WHERE G.SEC_NUME_DOCU_CABE = C.SEC_NUME_DOCU and G.PROD_OID_PROD = B.PROD_OID_PROD ),0) IND_RECE_DD,
      NVL( ( SELECT G.VAL_UNID_IVR FROM INT_SOLIC_CONSO_DETAL G WHERE G.SEC_NUME_DOCU_CABE = C.SEC_NUME_DOCU and G.PROD_OID_PROD = B.PROD_OID_PROD ),0) IND_RECE_IVR,
      NVL( ( SELECT G.VAL_UNID_DIGI FROM INT_SOLIC_CONSO_DETAL G WHERE G.SEC_NUME_DOCU_CABE = C.SEC_NUME_DOCU and G.PROD_OID_PROD = B.PROD_OID_PROD ),0) IND_RECE_DIGI                           
  	FROM PED_SOLIC_CABEC A,
       PED_SOLIC_POSIC B,
       INT_SOLIC_CONSO_CABEC C,
       GEN_I18N_SICC_PAIS E,
       PED_GESTI_STOCK F
	WHERE A.OID_SOLI_CABE = B.SOCA_OID_SOLI_CABE
       AND C.SOCA_OID_SOLI_CABE_REFE = A.OID_SOLI_CABE 
       AND A.CLIE_OID_CLIE = ( select oid_clie from mae_clien where cod_clie = #codigoCliente# )
             <isNotEmpty property="codigoVenta">
                    AND   B.VAL_CODI_VENT = #codigoVenta#
             </isNotEmpty>
       AND ( E.ATTR_ENTI = 'MAE_PRODU' AND E.VAL_OID = B.PROD_OID_PROD )
			AND B.OFDE_OID_DETA_OFER = F.OFDE_OID_DETA_OFER(+)
			AND F.VAL_LIMI_CTRL_VENT(+) IS NOT NULL
	</select>
	
	<select id="getRegionZonaTemporal" parameterClass="java.util.Map" resultClass="string">
		SELECT NVL(TMP.COD_ZONA,'') ||'_'|| NVL(R.DES_REGI,'') 
			FROM STO_TMP_ELIMI_DOCUM TMP, ZON_REGIO R
			WHERE R.COD_REGI(+) = TMP.COD_REGI
			AND TMP.COD_CLIE = #codigoCliente#
			AND TMP.NUM_SECU = #secuencia#
			AND ROWNUM = 1
	</select>
	
	<select id="getTiposDocumentosExcepcionSTO" parameterClass="java.util.Map" resultMap="baseResult">
    SELECT DISTINCT T.COD_TIPO_DOCU CODIGO,
		       T.DES_TIPO_DOCU DESCRIPCION
		  FROM STO_TIPO_DOCUM_DIGIT T , SEG_USUAR U, SEG_USUAR_ROL UR, STO_TIPO_DOCUM_ROL S
		 WHERE U.COD_USUA = UR.USUA_COD_USUA 
		     AND UR.PAIS_COD_PAIS = S.COD_PAIS
			 AND S.COD_PAIS=T.COD_PAIS
			  AND UR.ROL_COD_ROL = S.ROL_COD_ROL
			 AND S.COD_TIPO_DOCU = T.COD_TIPO_DOCU
			AND S.EST_DOCU_ROL='1'
			AND UR.EST_UROL = '1'
			AND U.USE_USUA = #codigoUsuario#
			AND UR.PAIS_COD_PAIS = #codigoPais#
		    AND T.IND_CABE = '1'
		    AND T.IND_EXCL_VALI = 'S'
		   <isNotEmpty property="indicadorPantalla">
           		AND NVL($indicadorPantalla$,'0') = '1' 
           </isNotEmpty>
	</select>
	
	<select id="getValidacionesExcepcionByDocumento" parameterClass="java.util.Map" resultMap="baseResult">
		SELECT P.COD_VALI CODIGO,
		       P.COD_VALI || ' - ' || P.DES_VALI DESCRIPCION
		  FROM STO_PARAM_SECUE_VALID S,
		       STO_PARAM_VALID       P,
		       STO_TIPO_DOCUM_DIGIT  T
		 WHERE T.COD_PAIS = P.COD_PAIS
		   AND T.COD_TIPO_DOCU = P.COD_TIPO_DOCU
		   AND P.COD_PAIS = S.COD_PAIS
		   AND P.COD_TIPO_DOCU = S.COD_TIPO_DOCU
		   AND P.COD_VALI = S.COD_VALI
		   AND (T.COD_TIPO_DOCU =  #tipoDocumento# OR T.COD_TIPO_DOCU_CABE = #tipoDocumento#)
		   AND T.COD_PAIS = #codigoPais#
		   AND P.IND_EXCL_VALID = 'S'		   
		 ORDER BY S.NUM_SECU
	</select>
	
	<select id="getTipoDocumentoByValidacion" parameterClass="java.util.Map" resultClass="string">
			SELECT T.COD_TIPO_DOCU
			  FROM STO_PARAM_VALID P, STO_TIPO_DOCUM_DIGIT T
			 WHERE T.COD_PAIS = P.COD_PAIS
			   AND T.COD_TIPO_DOCU = P.COD_TIPO_DOCU
			   AND T.COD_PAIS = #codigoPais#
			   AND P.COD_VALI = #codigoValidacion#
	</select>
	
	<typeAlias alias="pedidoSeguidoSTO" type="biz.belcorp.ssicc.dao.spusicc.sto.model.PedidoSeguidoSTO"/>
			
	<resultMap id="pedidoSeguidoSTOResult" class="pedidoSeguidoSTO">
  		<result property="codigoPais"      		column="COD_PAIS"/>
  		<result property="codigoConsultora"     column="COD_CLIE"/>
  		<result property="codigoPeriodo"        column="COD_PERI"/>
  		<result property="etapa"              	column="DES_ETAP"/>
  		<result property="fecha"		        javaType="java.sql.Timestamp" column="FEC_REGI"/>
  		<result property="novedad" 				column="DES_NOVE"/>
  		<result property="estado" 				column="DES_ESTA"/>
  		<result property="grupo" 				column="VAL_GRUP"/>
  		<result property="orden" 				column="VAL_ORDE"/>
  	</resultMap>
  	
  	<select id="getPedidoSeguidoSTOList" parameterClass="java.util.Map" resultMap="pedidoSeguidoSTOResult">
			SELECT P.COD_PAIS,
			       P.COD_CLIE,
			       P.COD_PERI,
			       P.DES_ETAP,
			       P.FEC_REGI,
			       P.DES_NOVE,
			       P.DES_ESTA,
             	   P.VAL_GRUP,
             	   P.VAL_ORDE
			  FROM PED_GTT_SEGUI_PEDID P
			 WHERE P.COD_PERI = #codigoPeriodo#
			   AND P.COD_CLIE = #codigoCliente#
			 order by p.val_grup, P.VAL_ORDE, p.fec_regi  
  	</select>
  	
  	<parameterMap id="seguimientoPedidosParams" class="java.util.HashMap" >
	    <parameter property="codigoCliente"				jdbcType="VARCHAR2" javaType="java.lang.String"	mode="IN"/>
	    <parameter property="codigoPeriodo"				jdbcType="VARCHAR2" javaType="java.lang.String"	mode="IN"/>
    </parameterMap>
	
	<select id="getFechaEntregaConfirmada" parameterClass="java.util.Map" resultClass="string">
   		 SELECT STO_PKG_GENER.sto_fn_fecha_entre_forma(#codigoCliente#, #codigoPeriodo#) FROM DUAL
    </select>
	
	<procedure id="executeCargaSeguimientoPedidos" parameterMap="seguimientoPedidosParams">
		{call sto_pkg_gener.sto_pr_carga_segui_pedid(?,?)}
	</procedure>
	
	<resultMap id="contratoEjecutivaResult" class="java.util.HashMap">                                            
	  <result property="codPais"                    column="COD_PAIS" />                    
  	  <result property="codCliente"                 column="COD_CLIE" />     
	  <result property="numDocumento"               column="NUM_DOCU" />   	  
	  <result property="valApellido1"               column="VAL_APE1" />
	  <result property="valApellido2"               column="VAL_APE2" />
	  <result property="valNombre1"                 column="VAL_NOM1" />
	  <result property="valNombre2"                 column="VAL_NOM2" />
	  <result property="tipoDocumento"              column="COD_TIPO_DOCU" />                 
	  <result property="numDocuIdentidad"           column="NUM_DOCU_IDEN" />              
	  <result property="numDocuLegal"                column="NUM_DOCU_LEGA" />	                      
	  <result property="valDirecCliente"            column="VAL_DIRE_CLIE" />          
	  <result property="valBarrCliente"             column="VAL_BARR_CLIE" />                 
	  <result property="valCiudCliente"             column="VAL_CIUD_CLIE" />                       
	  <result property="valDepaCliente"             column="VAL_DEPA_CLIE" />    
	  <result property="valTelfCliente"             column="VAL_TELF_CLIE" />             
	  <result property="valCeluCliente"             column="VAL_CELU_CLIE" />                              
	  <result property="valMailCliente"             column="VAL_MAIL_CLIE" />                                                          
	  <result property="region"			            column="COD_REGI" />              
	  <result property="zona"           		  	column="COD_ZONA" />
	  <result property="indicadorFirma"             column="IND_FIRM" />	                   
	  <result property="numSecuencia"           	column="SEC_NUME_DOCU" />               
	  <result property="numLote"           			column="NUM_LOTE" />
	  <result property="fechaNacimiento"           	column="FEC_NACI" />     
  </resultMap>   
	
	
	<select id="getContratoEjecutiva" parameterClass="java.util.Map" resultMap="contratoEjecutivaResult">
		  SELECT COD_PAIS AS COD_PAIS,                          
			X.COD_CLIE AS COD_CLIE,             
			NUM_DOCU AS NUM_DOCU,             
		      (select val_ape1 from mae_clien m where m.cod_clie = x.cod_clie) VAL_APE1,                                                                                                                  
		      (select val_ape2 from mae_clien m where m.cod_clie = x.cod_clie) VAL_APE2,                                                                                                                  
		      (select val_nom1 from mae_clien m where m.cod_clie = x.cod_clie) VAL_NOM1,                                                                                                                  
		      (select val_nom2 from mae_clien m where m.cod_clie = x.cod_clie) VAL_NOM2,                                                                                                                  
			COD_TIPO_DOCU AS COD_TIPO_DOCU,             
			NUM_DOCU_IDEN AS NUM_DOCU_IDEN,   
			NUM_DOCU_LEGA AS NUM_DOCU_LEGA,               
			gen_pkg_gener.gen_fn_clien_datos_codig(X.COD_CLIE,'DIR_CLIE') AS VAL_DIRE_CLIE,   
			'' AS VAL_BARR_CLIE,   
			'' AS VAL_CIUD_CLIE,   
			'' AS VAL_DEPA_CLIE,   
		      (SELECT clco.val_text_comu FROM mae_clien_comun clco, mae_clien m WHERE m.oid_clie = clco.clie_oid_clie and m.cod_clie = x.cod_clie AND clco.ticm_oid_tipo_comu = 1) AS VAL_TELF_CLIE,      
		      (SELECT clco.val_text_comu FROM mae_clien_comun clco, mae_clien m WHERE m.oid_clie = clco.clie_oid_clie and m.cod_clie = x.cod_clie AND clco.ticm_oid_tipo_comu = 6) AS VAL_CELU_CLIE,      
		      (SELECT clco.val_text_comu FROM mae_clien_comun clco, mae_clien m WHERE m.oid_clie = clco.clie_oid_clie and m.cod_clie = x.cod_clie AND clco.ticm_oid_tipo_comu = 3) AS VAL_MAIL_CLIE,      
			COD_REGI as COD_REGI,
			COD_ZONA as COD_ZONA,
			NVL(IND_FIRM,'0') as IND_FIRM, 			   
			SEC_NUME_DOCU AS SEC_NUME_DOCU,
			NUM_LOTE AS NUM_LOTE,
		      (select fec_naci from mae_clien_datos_adici da, mae_clien m where da.clie_oid_clie = m.oid_clie and m.cod_clie = x.cod_clie) fec_naci                                                       		
		 FROM INT_SOLIC_CONSO_CONTR_DESAR X  
		  WHERE x.COD_PAIS=#codigoPais#
				AND x.NUM_LOTE =#numLote#
				AND x.SEC_NUME_DOCU=#numSecuenciaDocumento#
	</select>


	<resultMap id="direccionEjecutivaResult" class="java.util.HashMap">                                            
	  <result property="valBarrCliente"             column="VAL_BARR_CLIE" />                 
	  <result property="valCiudCliente"             column="VAL_CIUD_CLIE" />                       
	  <result property="valDepaCliente"             column="VAL_DEPA_CLIE" />    
  </resultMap>   

	<select id="getDireccionEjecutiva" parameterClass="java.util.Map" resultMap="direccionEjecutivaResult">		     
         SELECT nivel_1  VAL_DEPA_CLIE,            
               VAL_BARR VAL_BARR_CLIE,
               DES_CIUD VAL_CIUD_CLIE                          
          FROM (SELECT   d.oid_clie, 
                         a.OID_CLIE_DIRE,
                         c.DES_ABRV_TIPO_VIA, 
                         a.VAL_NOMB_VIA, 
                         a.NUM_PPAL, 
                         a.VAL_OBSE, 
                         a.VAL_BARR,
                         t.COD_TERR,
                         (SELECT DES_CIUD FROM ZON_CIUDA WHERE COD_UGEO_REGI = a.CIUD_COD_UGEO_REGI AND COD_CIUD = a.CIUD_COD_CIUD) DES_CIUD,
                          a.DES_VILLA_POBL,                     
                         (SELECT des_geog
                            FROM zon_valor_estru_geopo
                           WHERE pais_oid_pais = d.pais_oid_pais
                             AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                             AND orde_2 IS NULL) AS nivel_1,
                         (SELECT des_geog
                            FROM zon_valor_estru_geopo
                           WHERE pais_oid_pais = d.pais_oid_pais
                             AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                             AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                             AND orde_3 IS NULL) AS nivel_2,
                         (SELECT des_geog
                            FROM zon_valor_estru_geopo
                           WHERE pais_oid_pais = d.pais_oid_pais
                             AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                             AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                             AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
                             AND orde_4 IS NULL) AS nivel_3,
                         CASE
                            WHEN LENGTH (a.cod_unid_geog) > 18
                               THEN (SELECT des_geog
                                       FROM zon_valor_estru_geopo
                                      WHERE pais_oid_pais =
                                                           d.pais_oid_pais
                                        AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                                        AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                                        AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
                                        AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
                                        AND orde_5 IS NULL)
                            ELSE NULL
                         END AS nivel_4,
                         CASE
                            WHEN LENGTH (a.cod_unid_geog) > 24
                               THEN (SELECT des_geog
                                       FROM zon_valor_estru_geopo
                                      WHERE pais_oid_pais =
                                                           d.pais_oid_pais
                                        AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                                        AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                                        AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
                                        AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
                                        AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
                                        AND orde_6 IS NULL)
                            ELSE NULL
                         END AS nivel_5,
                         CASE
                            WHEN LENGTH (a.cod_unid_geog) > 30
                               THEN (SELECT des_geog
                                       FROM zon_valor_estru_geopo
                                      WHERE pais_oid_pais =
                                                           d.pais_oid_pais
                                        AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                                        AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                                        AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
                                        AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
                                        AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
                                        AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
                                        AND orde_7 IS NULL)
                            ELSE NULL
                         END AS nivel_6,
                         CASE
                            WHEN LENGTH (a.cod_unid_geog) > 36
                               THEN (SELECT des_geog
                                       FROM zon_valor_estru_geopo
                                      WHERE pais_oid_pais =
                                                           d.pais_oid_pais
                                        AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                                        AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                                        AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
                                        AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
                                        AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
                                        AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
                                        AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
                                        AND orde_8 IS NULL)
                            ELSE NULL
                         END AS nivel_7,
                         CASE
                            WHEN LENGTH (a.cod_unid_geog) > 42
                               THEN (SELECT des_geog
                                       FROM zon_valor_estru_geopo
                                      WHERE pais_oid_pais =
                                                           d.pais_oid_pais
                                        AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                                        AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                                        AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
                                        AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
                                        AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
                                        AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
                                        AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
                                        AND orde_8 = SUBSTR (a.cod_unid_geog, 43, 6)
                                        AND orde_9 IS NULL)
                            ELSE NULL
                         END AS nivel_8,
                         CASE
                            WHEN LENGTH (a.cod_unid_geog) > 48
                               THEN (SELECT des_geog
                                       FROM zon_valor_estru_geopo
                                      WHERE pais_oid_pais =
                                                           d.pais_oid_pais
                                        AND orde_1 = SUBSTR (a.cod_unid_geog, 1, 6)
                                        AND orde_2 = SUBSTR (a.cod_unid_geog, 7, 6)
                                        AND orde_3 = SUBSTR (a.cod_unid_geog, 13, 6)
                                        AND orde_4 = SUBSTR (a.cod_unid_geog, 19, 6)
                                        AND orde_5 = SUBSTR (a.cod_unid_geog, 25, 6)
                                        AND orde_6 = SUBSTR (a.cod_unid_geog, 31, 6)
                                        AND orde_7 = SUBSTR (a.cod_unid_geog, 37, 6)
                                        AND orde_8 = SUBSTR (a.cod_unid_geog, 43, 6)
		                                AND orde_9 = SUBSTR (a.cod_unid_geog, 49, 6))
		                    ELSE NULL
		                 END AS nivel_9
		            FROM MAE_CLIEN_DIREC a,
		                 MAE_TIPO_DIREC b,
		                 SEG_TIPO_VIA c,
		                 MAE_CLIEN d,
		                 ZON_TERRI t
		           WHERE d.COD_CLIE = #codCliente# and
		             d.OID_CLIE = a.CLIE_OID_CLIE		           
		             AND a.IND_ELIM = 0
		             AND b.OID_TIPO_DIRE = a.TIDC_OID_TIPO_DIRE
		             AND c.OID_TIPO_VIA = a.TIVI_OID_TIPO_VIA		             
		             AND a.IND_DIRE_PPAL  = 1
		             AND a.TERR_OID_TERR = t.OID_TERR (+)
		        ORDER BY a.OID_CLIE_DIRE DESC)
		 WHERE ROWNUM = 1	
	</select>
	
	
	<update id="updateContratoEjecutiva" parameterClass="java.util.Map">
        UPDATE INT_SOLIC_CONSO_CONTR_DESAR
			  SET
				  COD_TIPO_DOCU=#tipoDocumento#,
				  NUM_DOCU_IDEN=#numDocuIdentidad#,
				  NUM_DOCU_LEGA=#numDocuLega#,
				  NUM_DOCU = #numeroPreImpreso#,
				  IND_FIRM = #indicadorFirma#
			 WHERE COD_PAIS=#codigoPais#
				  AND NUM_LOTE =#numLote#
				   AND SEC_NUME_DOCU=#numSecuencia#			   
  	</update>
	
	<resultMap id="getReclamosEliminadosResult" class="java.util.HashMap">                                            
		<result property="numLote"             column="NUM_LOTE" />
		<result property="secNumeDocu"         column="SEC_NUME_DOCU" />		
		<result property="numDocu"             column="NUM_DOCU" />
		<result property="codClie"             column="COD_CLIE" />
		<result property="desErro"             column="DES_ERRO" />
	</resultMap>   

	<select id="getReclamosEliminados" parameterClass="java.util.Map" resultMap="getReclamosEliminadosResult">		     
      SELECT NUM_LOTE,
             SEC_NUME_DOCU,            
             NUM_DOCU,
             COD_CLIE,       
             DES_ERRO
        FROM REC_AUDIT_ELIMI_CDR
       WHERE NUM_PROC = #numeroProceso#
	</select>
	
	<resultMap id="getSolicitudesCreditoErrorReferidosResult" class="java.util.HashMap">                                            
		<result property="region"             column="REGION" />
		<result property="zona"               column="ZONA" />		
		<result property="codigoCliente"      column="COD_CLIE" />
		<result property="nombreCliente"      column="NOMBRE" />
		<result property="fechaSolicitud"     column="FECHASOLICITUD" />
	</resultMap>   

	<select id="getSolicitudesCreditoErrorReferidos" parameterClass="java.util.Map" resultMap="getSolicitudesCreditoErrorReferidosResult">	
		select gen_pkg_gener.gen_fn_clien_datos(cc.cod_clie,'COD_REGI')|| ' - ' || gen_pkg_gener.gen_fn_clien_datos(cc.cod_clie,'DES_REGI') REGION, 
		       gen_pkg_gener.gen_fn_clien_datos(cc.cod_clie,'DES_ZONA') ZONA,       
		       cc.cod_clie,        
		       gen_pkg_gener.gen_fn_clien_datos(cc.cod_clie,'NOM_CLIE') NOMBRE,
		       to_char(cc.fec_proc,'dd/mm/yyyy') FECHASOLICITUD
		from int_solic_conso_credi cc,
		     sto_docum_digit dd
		where cc.ind_erro_refe = 'S'		    
   		  and dd.sec_nume_docu = cc.sec_nume_docu
		  and dd.cod_tipo_docu = 'SCC'
		  and dd.ind_envi = '1' 		
		  and not exists (select 1
		                  from mae_tipo_vincu tv,
		                       mae_clien_vincu mv,
		                       mae_clien m
		                 where tv.cod_tipo_vinc = '03'
		                   and mv.tivc_oid_tipo_vinc = tv.oid_tipo_vinc
		                   and nvl(mv.fec_hast,sysdate) >= sysdate
		                   and m.oid_clie = mv.clie_oid_clie_vndo
		                   and m.cod_clie = cc.cod_clie)		
		and exists (select 1 from mae_clien where cod_clie = cc.cod_clie )
		<isNotEmpty property="fechaSolicitud">
			and to_char(cc.fec_proc,'dd/mm/yyyy') = #fechaSolicitud#
		</isNotEmpty>
		<isNotEmpty property="codigoPeriodo">
			and dd.cod_peri = #codigoPeriodo#
		</isNotEmpty>
		<iterate prepend="AND" property="regionList" open="(" close=")" conjunction="OR">
		    gen_pkg_gener.gen_fn_clien_datos(cc.cod_clie,'COD_REGI') = #regionList[]#
		</iterate>  
		<iterate prepend="AND" property="zonaList" open="(" close=")" conjunction="OR">
		    gen_pkg_gener.gen_fn_clien_datos(cc.cod_clie,'COD_ZONA') = #zonaList[]#
		</iterate>	
	</select>	
	
	<select id="getCentrosDeAcopioFacturado" resultMap="getCentrosDeAcopioResult">
		Select x.COD_COMP_TRAN,
		       x.COD_CENT_ACOP,
		       x.NOM_COMP_TRAN,
		       x.NOM_CENT_ACOP,
		       x.VAL_EMAI
		  from STO_CENTR_ACOPI x,
          	   (select distinct cod_Cent_acop, cod_comp_tran 
                  from sto_tmp_centr_acopi_factu) y
    	 where x.cod_cent_acop = y.cod_cent_acop
      	   and x.cod_comp_tran = y.cod_comp_tran   
    </select>    
    
    <select id="getValidaMostrarCombo" parameterClass="java.util.Map" resultClass="java.lang.String">
    	select pg.IND_VIEW_MOTI_GEST 
		from sto_param_valid pg 
		where pg.cod_vali = #validacion#
    </select> 
    
   <select id="getMotivosGestion" resultMap="baseResult">
    	select mg.DES_MOTI_GEST descripcion,
    	to_char(OID_MOTI_GEST) codigo
		from STO_MOTIV_GESTI mg
		order by mg.DES_MOTI_GEST
    </select>  

	<select id="getIndicadorTerritorioBuzon" parameterClass="java.util.Map" resultClass="java.lang.String">
    	select decode(count(1),0,'No','Si')
		from sto_acopi_cober ac 
		where ac.cod_terr = substr(#unidadAdministrativa#,8,6)
		and ac.cod_buzo is not null
    </select>

    <select id="getOidUltimoFacturaAdicionalCabecera" resultClass="string">
		SELECT MAX(OID_FACT_ADIC) FROM STO_FACTU_ADICI
	</select>
	
	<insert id="insertFacturaAdicionalDetalle" parameterClass="java.util.Map">
		INSERT INTO STO_FACTU_ADICI_CLIEN
		            (OID_FACT_ADIC,
		             OID_CLIE,
		             COD_PERI,
		             COD_CLIE,
		             NOM_CLIE,
		             COD_REGI,
		             DES_REGI,
		             COD_ZONA,
		             DES_ZONA,
		             COD_TERR,
		             VAL_MONT_PROM_CALC,
		             VAL_MONT_PROM_REAL,
		             VAL_MTMI_CALC,
		             VAL_MTMI_REAL,
		             IND_VALI_PROM,
		             IND_VALI_MTMI)
		VALUES
		            (#oidFactAdicCabecera#,
		             #oidCliente#,
		             #codigoPeriodo#,
		             <isEmpty property="oidClienteList">
		             #codigoCliente#,
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(#codigoCliente#, 'NOM_CLIE'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(#codigoCliente#, 'COD_REGI'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(#codigoCliente#, 'DES_REGI'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(#codigoCliente#, 'COD_ZONA'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(#codigoCliente#, 'DES_ZONA'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(#codigoCliente#, 'COD_TERR'),
		             </isEmpty>
		             <isNotEmpty property="oidClienteList">
		             gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(#oidClienteList#),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(#oidClienteList#), 'NOM_CLIE'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(#oidClienteList#), 'COD_REGI'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(#oidClienteList#), 'DES_REGI'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(#oidClienteList#), 'COD_ZONA'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(#oidClienteList#), 'DES_ZONA'),
		             gen_pkg_gener.GEN_FN_CLIEN_DATOS(gen_pkg_gener.GEN_FN_DEVUELVE_COD_CLIE(#oidClienteList#), 'COD_TERR'),
		             </isNotEmpty>
		             0,
		             0,
		             0,
		             0,
		             #validaPromedio#,
		             #validaMontoMinimo#)
	</insert>
	
	<update id="deleteFacturaAdicionalDetalle" parameterClass="java.util.Map">
		DELETE STO_FACTU_ADICI_CLIEN
		 WHERE OID_FACT_ADIC = #oidFactAdicional#
		<isNotEmpty property="codigoCliente">
		   AND COD_CLIE = #codigoCliente#
		</isNotEmpty>
	</update>
	
	<select id="validateSolicitudPedidoOrdenTransporte" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT TO_CHAR (COUNT (*)) AS cantidad
		  FROM ped_solic_cabec
		 WHERE val_nume_soli = TO_NUMBER (#codigoDocumento#)
    </select>
    
	<select id="validateBoletaReciboOrdenTransporte" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT TO_CHAR (COUNT (*)) AS cantidad
		  FROM int_rec_cabec_borec
		 WHERE cod_cabe_bore = TO_NUMBER (#codigoDocumento#)
    </select>
    
    <parameterMap id="executeInsertFADDetalleParams" class="map" >
		<parameter property="codigoPais"              	jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="codigoPeriodo"	            jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
  		<parameter property="oidFactAdicCabecera"	    jdbcType="VARCHAR2" javaType="java.lang.String"  mode="IN"/>
	</parameterMap>
	<procedure id="executeInsertFADDetalle" parameterMap="executeInsertFADDetalleParams">
		{call PED_PKG_PROCE.PED_PR_INSER_CONSU_FAD_DETAL(?,?,?)}
	</procedure>
	
	<select id="getValidateParamMantFacturacionAdicional" parameterClass="java.util.Map" resultClass="java.lang.String">
		select val_para 
		from bas_param_pais a 
		where cod_sist = 'STO' 
		and cod_para ='019' 
		and cod_pais = #codigoPais# 
    </select>
    <select id="getIndInformacionOk" parameterClass="java.util.Map" resultClass="java.lang.String">
		select val_para 
		from bas_param_pais 
		where cod_sist = 'OCR' 
		and cod_para ='042' 
		and cod_pais = #codigoPais#
    </select>
    
    <select id="getIndSitCrediticia" parameterClass="java.util.Map" resultClass="java.lang.String">
		select val_para 
		from bas_param_pais 
		where cod_sist = 'OCR' 
		and cod_para ='043' 
		and cod_pais = #codigoPais#
    </select>
    <select id="getIndSinSalAmbas" parameterClass="java.util.Map" resultClass="java.lang.String">
		select val_para 
		from bas_param_pais 
		where cod_sist = 'OCR' 
		and cod_para ='044' 
		and cod_pais = #codigoPais#
    </select>
    
    <select id="getMotivosGestionDocumento" parameterClass="java.util.Map" resultMap="baseResult">
    	select mg.DES_MOTI_GEST descripcion,
    	to_char(OID_MOTI_GEST) codigo
		from STO_MOTIV_GESTI mg
		where COD_TIPO_DOCU = #codigoTipoDocumento#
		order by mg.DES_MOTI_GEST
    </select>
    
    <select id="getEstructGeopoByUA" parameterClass="java.util.Map" resultClass="java.lang.String">
		select sto_pkg_gener.sto_fn_devue_estru_geopo(#codigoPais#, #unidadAdmin#) from dual
    </select>
    
    <insert id="insertFormaPagoClasificacion" parameterClass="java.util.Map">
   			INSERT INTO STO_FORMA_PAGO_CLASI(
   				  OID,
				  COD_PERI,
				  OID_DETA_OFER,
				  FOPA_OID_FORM_PAGO,
				  OID_REGI,
				  OID_ZONA,
				  OID_TIPO_CLIE,
				  OID_SUBT_CLIE,
				  OID_TIPO_CLAS,
				  OID_CLAS,
				  IND_ACTI,
				  USU_CREA,
				  FEC_CREA,
				  USU_MODI,
				  FEC_MODI 				
   			)
   			VALUES(
   		 		STO_FORMA_PAGO_CLASI_SEQ.nextval,
   		 		#codigoPeriodo#,
   		 		#oidDetaOfer#,
   		 		#oidFormPago#,
   		 		#oidRegion#,		
   		 		#oidZona#,
   		 		#oidTipoCliente#,
   		 		#oidSubTipoCliente#,
   		 		#oidSubTipoClasificacion#,
   		 		#oidClasificacion#,
		 		'1',
   		 		#usuario#,
   		 		#fechaCreacion#,
   		 		null,
   		 		null
   		 	)
   		</insert>
   		
		<resultMap id="getFormaPagoClasificacionListResult" class="java.util.HashMap">
   			<result property="oid"       				 column="OID"/>
   			<result property="codigoPeriodo"             column="COD_PERIODO"/>
   			<result property="oidDetaOfer"               column="OID_DETA_OFER"/>
   			<result property="formaPago"				 column="FOR_PAGO"/>
   			<result property="tipoCliente"	             column="TIP_CLIENTE"/>
   			<result property="subTipoCliente"            column="SUB_TIPO_CLIENTE"/>
   			<result property="tipoClasificacion"  		 column="TIP_CLASIFICACION"/>
			<result property="clasificacion"             column="DES_CLASIFICACION"/>
			<result property="descripcionRegion"         column="DES_REGION"/>
			<result property="descripcionZona"           column="DES_ZONA"/>
			<result property="codigoCUV"           		 column="COD_CUV"/>
			<result property="oidFormaPago"        		 column="FOPA_OID_FORM_PAGO"/>
			
   		</resultMap>
   		
  		<select id="getFormaPagoClasificacionList" parameterClass="java.util.Map" resultMap="getFormaPagoClasificacionListResult">
  			SELECT	oid							OID,
  					codigo_periodo				COD_PERIODO,
  					OID_DETA_OFER				OID_DETA_OFER,
  					forma_pago					FOR_PAGO,
  					tipo_cliente				TIP_CLIENTE,
  					subtipo_cliente 			SUB_TIPO_CLIENTE,
  					tipo_clasificacion			TIP_CLASIFICACION,
  					clasificacion				DES_CLASIFICACION,
  					desc_region					DES_REGION,
  					desc_zona					DES_ZONA,
  					codigo_cuv					COD_CUV,
  					FOPA_OID_FORM_PAGO
  			  FROM	TABLE(STO_PKG_GENER.STO_FN_FORMA_PAGO_CLASI(#codigoPais#,#codigoMarca#,#codigoCanal#,#codigoIso#))
  			  <dynamic prepend="WHERE">

  			    <isNotEmpty property="codigoCUV" prepend="AND">
					codigo_cuv = #codigoCUV#
				</isNotEmpty>
  			  
  			  	<isNotEmpty property="codigoPeriodo" prepend="AND">
					codigo_periodo = #codigoPeriodo#
				</isNotEmpty>
				
				<isNotEmpty property="oidFormaPago" prepend="AND">
					FOPA_OID_FORM_PAGO = #oidFormaPago#
				</isNotEmpty>
				
				<isNotEmpty property="oidDetaOfer" prepend="AND">
					OID_DETA_OFER = #oidDetaOfer#
				</isNotEmpty>
			
  			  	<isNotEmpty property="oidTipoCliente" prepend="AND">
					oid_tipo_clie = #oidTipoCliente#
				</isNotEmpty>
				
				<isNotEmpty property="oidSubTipoCliente" prepend="AND">
					oid_subt_clie = #oidSubTipoCliente#
				</isNotEmpty>
				
				<isNotEmpty property="oidSubTipoClasificacion" prepend="AND">
					oid_tipo_clas = #oidSubTipoClasificacion#
				</isNotEmpty>
				
				<isNotEmpty property="oidClasificacion" prepend="AND">
					oid_clas = #oidClasificacion#
				</isNotEmpty>
				
				<isNotEmpty property="oidRegion" prepend="AND">
					oid_regi = #oidRegion#
				</isNotEmpty>
			
				<isNotEmpty property="oidZona" prepend="AND">
					oid_zona = #oidZona#
				</isNotEmpty>
  			  </dynamic>
  			 ORDER BY oid
  		</select>
  		
  		<update id="deleteFormaPagoClasificacion" parameterClass="java.util.Map">
   			UPDATE STO_FORMA_PAGO_CLASI
   			   SET ind_acti = '0',
   		           USU_MODI = #usuario#,
   		    	   FEC_MODI = SYSDATE
   		     WHERE oid = #oid#
   		</update>
    
		<select id="getValidaNumeroDocumento" parameterClass="string" resultClass="java.lang.Integer">
			select count(1) from int_solic_conso_credi where ltrim (num_docu_iden, '0') = ltrim (#value#, '0')
		</select>
    
		<update id="updateNumeroDocumento" parameterClass="java.util.Map">
			update int_solic_conso_credi
			   set ind_tele_ok = '1',
			       ind_situ_cred = '1',
			       ind_sin_sald_amba_marc = '1'
			 where ltrim (num_docu_iden, '0') = ltrim (#numeroDocIdentidad#, '0')
		</update>
    
    <select id="getCorreoEnviarInformeEstatusSolicitudesCredito" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT
		VAL_TEXT_COMU
		FROM MAE_CLIEN_COMUN
		WHERE CLIE_OID_CLIE IN
		(
			<isEqual property="flagCualCorreo" compareValue="GR">
		    	SELECT CLIE_OID_CLIE FROM ZON_REGIO WHERE COD_REGI = #codigoRegion#
		    </isEqual>
			<isEqual property="flagCualCorreo" compareValue="GZ">
		    	SELECT CLIE_OID_CLIE FROM ZON_ZONA WHERE COD_ZONA = #codigoZona#
		    </isEqual>		    
		)
		AND TICM_OID_TIPO_COMU = 3
		AND ROWNUM = 1
    </select>
    
    <select id="getRegionesEnviarInformeEstatusSolicitudesCredito" parameterClass="java.util.Map" resultMap="baseResult">
    	<![CDATA[
			SELECT  DISTINCT B.COD_REGI CODIGO, '' DESCRIPCION
			FROM INT_SOLIC_CONSO_CREDI A, STO_DOCUM_DIGIT B
			WHERE A.SEC_NUME_DOCU = B.SEC_NUME_DOCU
			AND TRUNC(B.FEC_MODI) >= TO_DATE(#fechaInicio#, 'DD/MM/YYYY')
			AND TRUNC(B.FEC_MODI) <= TO_DATE(#fechaFin#, 'DD/MM/YYYY')
		]]>
    </select>

    <select id="getZonasEnviarInformeEstatusSolicitudesCredito" parameterClass="java.util.Map" resultMap="baseResult">
    	<![CDATA[
			SELECT  
			DISTINCT B.COD_ZONA CODIGO, '' DESCRIPCION
			FROM INT_SOLIC_CONSO_CREDI A, STO_DOCUM_DIGIT B
			WHERE A.SEC_NUME_DOCU = B.SEC_NUME_DOCU
			AND TRUNC(B.FEC_MODI) >= TO_DATE(#fechaInicio#, 'DD/MM/YYYY')
			AND TRUNC(B.FEC_MODI) <= TO_DATE(#fechaFin#, 'DD/MM/YYYY')
			AND B.COD_REGI = #codigoRegion#
		]]>
    </select>

    <select id="getFechaNacimientoByCodigoCliente" parameterClass="java.util.Map" resultClass="string">
   		SELECT trim(to_char(a.fec_naci,'dd/mm/yyyy'))
		  FROM mae_clien_datos_adici a, mae_clien c
		 WHERE a.clie_oid_clie = c.oid_clie
		   And c.COD_CLIE = #codigoCliente#
    </select>
	
    <select id="getTipoDocumentosDigitList" resultMap="baseResult">
		    SELECT cod_tipo_docu CODIGO,
		       des_tipo_docu DESCRIPCION
		 	 FROM sto_tipo_docum_digit	 
	</select>
	
	
	<select id="getMotivosRechazoSTOList" parameterClass="java.util.Map" resultMap="baseResult">
     SELECT COD_MOTI_RECH CODIGO, DES_MOTI_RECH DESCRIPCION
	  FROM sto_recha_motiv
	 WHERE cod_tipo_docu = #codigoTipoDocumento#
	   AND cod_modu = 'STO'
	   AND cod_pais = #codigoPais#
	</select>
	
	<select id="getCodigoValidacion" parameterClass="string" resultClass="string">
     select to_char(#value#||'-'||TRIM(to_char(max(TO_NUMBER(SUBSTR(cod_vali, INSTR(cod_vali, '-') + 1, 6), 999999)) + 1,999999)))
	  from sto_param_valid
	 where cod_TIPO_DOCU =#value#
	</select>
	
	<select id="getValidacionesSTOList" parameterClass="java.util.Map" resultMap="baseResult">
	   
	   SELECT cod_vali CODIGO,
		       des_vali DESCRIPCION
		  FROM sto_param_valid
		 WHERE cod_tipo_docu = #codigoTipoDocumento#
		 AND cod_pais = #codigoPais#
	</select>
	
	<select id="getCodigoMensaje" parameterClass="string" resultClass="string">
     SELECT 
	   MAX((CASE NVL(to_char(B.COD_MENS,999999999999),'NULL') WHEN 'NULL' THEN 
	     TO_NUMBER(SUBSTR(A.cod_vali, INSTR(A.cod_vali, '-') + 1, 6), 999999)*100
	   ELSE 
	     B.COD_MENS+1
	    END))
	
	  FROM sto_param_valid A
	  LEFT JOIN STO_MENSA_VALID B
	  ON A.COD_VALI=B.Cod_Vali
	 WHERE A.COD_VALI = #value#
	</select>

	<select id="getValidacionesSTO" parameterClass="java.util.Map" resultMap="baseResult">	   
	   SELECT v.cod_vali CODIGO, v.des_vali DESCRIPCION
		  FROM sto_param_valid v, sto_tipo_docum_digit t
		 WHERE t.cod_tipo_docu = v.cod_tipo_docu
		   AND (t.cod_tipo_docu = #codigoTipoDocumento# OR t.cod_tipo_docu_cabe = #codigoTipoDocumento#)
		   AND NOT EXISTS (SELECT 1
		          FROM sto_param_secue_valid s
		         WHERE s.cod_vali = v.cod_vali
		           AND s.cod_tipo_docu = v.cod_tipo_docu)
	</select>
	
	<select id="getEstadoCivil" resultMap="baseResult">
		SELECT mec.cod_esta_civi CODIGO, 
			   gen.VAL_I18N DESCRIPCION
		  FROM gen_i18n_sicc_comun gen, MAE_ESTAD_CIVIL mec
		 WHERE gen.attr_enti LIKE '%MAE_ESTAD_CIVIL%'
		   AND gen.VAL_OID = mec.OID_ESTA_CIVI
	</select>
	
	<select id="getTipoPersona" resultMap="baseResult">
		SELECT VAL_OID CODIGO, 
			   VAL_I18N DESCRIPCION
		  FROM gen_i18n_sicc_comun gen
		 WHERE gen.attr_enti LIKE '%MAE_TIPO_PERSO%'
	</select>
	
	<select id="getTipoPersonaCodigo" resultMap="baseResult">
		SELECT x.cod_tipo_pers CODIGO, 
         VAL_I18N DESCRIPCION
      FROM gen_i18n_sicc_comun gen, 
           MAE_TIPO_PERSO x
     WHERE gen.attr_enti LIKE '%MAE_TIPO_PERSO%'
       AND x.oid_tipo_pers = gen.val_oid
	</select>
	
	<select id="getNacionalidad" resultMap="baseResult">
		SELECT UPPER(SUBSTR(VAL_I18N, 1, 9)) CODIGO, 
			   UPPER(SUBSTR(VAL_I18N, 1, 9)) DESCRIPCION
		  FROM gen_i18n_sicc_comun gen
		 WHERE gen.attr_enti LIKE '%SEG_NACIO%'
		 ORDER BY VAL_I18N
	</select>
	
	<select id="getNacionalidadCodigo" resultMap="baseResult">
		SELECT UPPER(SUBSTR(VAL_I18N, 1, 9)) CODIGO, 
			   UPPER(SUBSTR(VAL_I18N, 1, 9)) DESCRIPCION
		  FROM gen_i18n_sicc_comun gen
		 WHERE gen.attr_enti LIKE '%SEG_NACIO%'
		 ORDER BY VAL_I18N
	</select>
	
	<select id="getOrigenIngreso" resultMap="baseResult">
		SELECT VAL_OID CODIGO, 
			   VAL_I18N DESCRIPCION
		  FROM gen_i18n_sicc_comun gen
		 WHERE gen.attr_enti LIKE '%MAE_ORIG_INGRE%'
	</select>
	
	<select id="getOrigenIngresoCodigo" resultMap="baseResult">
		SELECT y.cod_orig_ingr CODIGO, 
               gen.VAL_I18N DESCRIPCION
      FROM gen_i18n_sicc_comun gen, 
           MAE_ORIG_INGRE y
     WHERE gen.attr_enti LIKE '%MAE_ORIG_INGRE%' 
       AND y.oid_orig_ingr = gen.val_oid
	</select>
	
	<resultMap id="cuadroOfertaOCCResult" 			class="java.util.HashMap">                                            
	  <result property="codigoVenta"               column="VAL_CODI_VENT" />                    
  	  <result property="codigoSap"                 column="COD_SAP" />     
	  <result property="descripcion"               column="NOMBRE" />   	  
	  <result property="nroUnidades"               column="NUM_UNID" />
	  <result property="nrounidadesCuadre"         column="NUM_UNID_CUAD" />
	  <result property="precioUnitario"            column="PRECIO_UNITARIO" />
	  <result property="precioTotal"               column="PRECIO_TOTAL" />
	  <result property="catalago"              	   column="DES_CATA" />                 
	  <result property="pagina"           		   column="NUM_PAGI_CATA" />              
	  <result property="tipoOferta"                column="COD_TIPO_OFER" />	                      
	  <result property="observacion"               column="VAL_OBSE" />	  
  </resultMap>   
  
	<select id="getCuadroOfertaOCC" parameterClass="java.util.Map" resultMap="cuadroOfertaOCCResult">
		select a.val_codi_vent VAL_CODI_VENT,
	       b.cod_sap COD_SAP,
	       c.val_i18n NOMBRE,
	       a.num_unid NUM_UNID,
	       a.num_unid_cuad NUM_UNID_CUAD,
	       a.precio_unitario PRECIO_UNITARIO,
	       a.precio_unitario * a.num_unid_cuad PRECIO_TOTAL,
	       e.des_cata DES_CATA,
	       d.num_pagi_cata NUM_PAGI_CATA,
	       f.cod_tipo_ofer COD_TIPO_OFER,
	       a.val_obse VAL_OBSE
	  from tmp_cuadr_ofert    a,
	       mae_produ          b,
	       gen_i18n_sicc_pais c,
	       pre_ofert_detal    d,
	       pre_catal          e,
	       pre_tipo_ofert     f
	 where a.sec_nume_docu = #nroDocumento# 
	   and a.prod_oid_prod = b.oid_prod
	   and b.oid_prod = c.val_oid
	   and c.attr_enti = 'MAE_PRODU'
	   and a.ofde_oid_deta_ofer = d.oid_deta_ofer
	   and d.ocat_oid_catal = e.oid_cata
	   and d.tofe_oid_tipo_ofer = f.oid_tipo_ofer
	</select>
	
	<select id="getValidaSolicCodigoConsultora" parameterClass="string" resultClass="java.lang.Integer">
			select count(1) from int_solic_conso_cabec where cod_clie = #value#			
	</select>
	
	<update id="updateSolicCodigoConsultora" parameterClass="java.util.Map">
			update int_solic_conso_cabec
   				set IND_SITU_CRED = 1
 				where cod_clie = #codigoConsultora#	
	</update>
	
	<resultMap id="dataCrediticiaInfoComercialResult" 			class="java.util.HashMap">                                            
	  <result property="resultado"               column="RESULTADO" />                    
  	  <result property="estado"                 column="ESTADO" /> 	  
  </resultMap> 
	
	<select id="getDataCrediticiaInfoComercial" parameterClass="string" resultMap="dataCrediticiaInfoComercialResult">			
			select decode(VAL_RESU_INFO_COME,
              'A', 'Aprobada',
              'N', 'Rechazada',
              null, 'No definido') as RESULTADO,
       			sto.cod_consu_data || '- ' || sto.val_consu_date AS ESTADO
  			from int_solic_conso_cabec cab, sto_consul_data_credit sto
 			where cab.val_esta_info_come = sto.cod_consu_data
  			and cab.cod_clie = #value#
	</select>

</sqlMap>