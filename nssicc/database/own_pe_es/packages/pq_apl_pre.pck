CREATE OR REPLACE PACKAGE "PQ_APL_PRE" AS

FUNCTION OBTENER_SECUENCIA_OFERTAS (OID_CABE IN NUMBER)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBTENER_SECUE_ESTRA_1_Y_5 (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBTENER_SECUE_ESTRA_2_IND_PA(OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
OID_OFERTA IN NUMBER)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBTENER_SECUE_ESTRA_2_IND_PP (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBTENER_SECUE_ESTRA_3_Y_7_OG (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBTENER_SECUE_ESTRA_4_OF (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBTENER_SECUE_ESTRA_4_OG (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_OFERTA IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;


FUNCTION OBTENER_SECUE_ESTRA_6_OF (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBTENER_SECUE_ESTRA_6_OG (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_OFERTA IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBT_SECUE_ESTRA_3_Y_7_DATOS (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_OFERTA IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBT_SECUE_ESTRA_4_DATOS(OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_GRUPO IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;

FUNCTION OBT_SECUE_ESTRA_6_DATOS(OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_GRUPO IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED;


PROCEDURE int_pre_carg_matr_plan_contr(psTipo VARCHAR2);

END PQ_APL_PRE;
/
CREATE OR REPLACE PACKAGE BODY "PQ_APL_PRE" AS
FUNCTION OBTENER_SECUENCIA_OFERTAS (OID_CABE IN NUMBER)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT DISTINCT PCO.NUM_ORDE,
       POD.NUM_PAGI_CATA,
       POD.VAL_POSI_PAGI,
       PE.COD_ESTR,
    PTE.COD_TIPO_ESTR
FROM PRE_OFERT PO,
     PRE_OFERT_DETAL POD,
     MAE_PRODU MP,
     PRE_CATAL PC,
     PRE_CATAL_ORDEN PCO,
     PRE_GRUPO_OFERT PGO,
     PRE_ESTRA PE,
  PRE_TIPO_ESTRA PTE
WHERE PO.MFCA_OID_CABE = OID_CABE
     AND POD.OFER_OID_OFER = PO.OID_OFER
     AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
     AND PO.COES_OID_ESTR = PE.OID_ESTR
     AND POD.PROD_OID_PROD = MP.OID_PROD
     AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
     AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
  AND PTE.OID_TIPO_ESTR = PE.TIES_OID_TIPO_ESTR
ORDER BY PCO.NUM_ORDE NULLS LAST,
         NVL (POD.NUM_PAGI_CATA,0),
         NVL (POD.VAL_POSI_PAGI,0),
   PE.COD_ESTR ASC;

TYPE CUR IS REF CURSOR;
C2 CUR;

BEGIN
  FOR I IN C1 LOOP

   IF (I.COD_TIPO_ESTR = '1' OR I.COD_TIPO_ESTR = '5') THEN
      OPEN C2 FOR
       SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_1_Y_5(OID_CABE, I.NUM_ORDE,
    I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR) AS OBJ_PRE_SECUE_OFER_TABLE));
      LOOP
       FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
         REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
         EXIT WHEN C2%NOTFOUND;
        PIPE ROW(REGISTROA);
      END LOOP;
      CLOSE C2;
   ELSE
       IF (I.COD_TIPO_ESTR = '2') THEN
       OPEN C2 FOR
        SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_2_IND_PP(OID_CABE, I.NUM_ORDE,
     I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR) AS OBJ_PRE_SECUE_OFER_TABLE));
       LOOP
        FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                 REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
          REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
          EXIT WHEN C2%NOTFOUND;
         PIPE ROW(REGISTROA);
       END LOOP;
         CLOSE C2;
    ELSE
      IF (I.COD_TIPO_ESTR = '3' OR I.COD_TIPO_ESTR = '7') THEN
     OPEN C2 FOR
         SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_3_Y_7_OG(OID_CABE, I.NUM_ORDE,
      I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR) AS OBJ_PRE_SECUE_OFER_TABLE));
        LOOP
         FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                  REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
           REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
           EXIT WHEN C2%NOTFOUND;
          PIPE ROW(REGISTROA);
        END LOOP;
          CLOSE C2;
   ELSE
    IF (I.COD_TIPO_ESTR = '4') THEN
      OPEN C2 FOR
          SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_4_OF(OID_CABE, I.NUM_ORDE,
       I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR) AS OBJ_PRE_SECUE_OFER_TABLE));
         LOOP
          FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                   REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
            REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
            EXIT WHEN C2%NOTFOUND;
           PIPE ROW(REGISTROA);
         END LOOP;
           CLOSE C2;
    ELSE
     IF (I.COD_TIPO_ESTR = '6') THEN
       OPEN C2 FOR
           SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_6_OF(OID_CABE, I.NUM_ORDE,
        I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR) AS OBJ_PRE_SECUE_OFER_TABLE));
          LOOP
           FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                    REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
             REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
             EXIT WHEN C2%NOTFOUND;
            PIPE ROW(REGISTROA);
          END LOOP;
            CLOSE C2;
     END IF;
    END IF;
   END IF;
       END IF;
   END IF;

  END LOOP;
  RETURN;
END OBTENER_SECUENCIA_OFERTAS;


FUNCTION OBTENER_SECUE_ESTRA_1_Y_5 (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT POD.OID_DETA_OFER,
       PCO.NUM_ORDE,
       POD.NUM_PAGI_CATA,
       PE.COD_ESTR,
       PO.NUM_OFER,
       POD.VAL_POSI_PAGI,
       MP.COD_SAP,
       POD.IND_PROD_PRIN,
       POD.GOFE_OID_GRUP_OFER,
       POD.VAL_CODI_VENT,
       POD.VAL_TEXT_BREV,
       PE.TIES_OID_TIPO_ESTR,
       PO.MFCA_OID_CABE,
       PO.OID_OFER
FROM PRE_OFERT PO,
     PRE_OFERT_DETAL POD,
     MAE_PRODU MP,
     PRE_CATAL PC,
     PRE_CATAL_ORDEN PCO,
     PRE_GRUPO_OFERT PGO,
     PRE_ESTRA PE
WHERE PO.MFCA_OID_CABE = OID_CABE
     AND POD.OFER_OID_OFER = PO.OID_OFER
     AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
     AND PO.COES_OID_ESTR = PE.OID_ESTR
     AND POD.PROD_OID_PROD = MP.OID_PROD
     AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
     AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
  AND PCO.NUM_ORDE = NUM_ORDEN
     AND POD.NUM_PAGI_CATA = PAGI_CATA
  AND POD.VAL_POSI_PAGI = POSI_PAGI
  AND PE.COD_ESTR = COD_ESTRA
ORDER BY PCO.NUM_ORDE NULLS LAST,
         NVL (POD.NUM_PAGI_CATA,0),
         NVL (POD.VAL_POSI_PAGI,0),
   PE.COD_ESTR ASC,
   UPPER(POD.VAL_TEXT_BREV);

BEGIN
  FOR I IN C1 LOOP

    REGISTROA.OID_DETA_OFER := I.OID_DETA_OFER;
    REGISTROA.NUM_ORDE := I.NUM_ORDE;
    REGISTROA.NUM_PAGI_CATA := I.NUM_PAGI_CATA;
    REGISTROA.COD_ESTR := I.COD_ESTR;
    REGISTROA.NUM_OFER := I.NUM_OFER;
    REGISTROA.VAL_POSI_PAGI := I.VAL_POSI_PAGI;
    REGISTROA.COD_SAP := I.COD_SAP;
    REGISTROA.IND_PROD_PRIN := I.IND_PROD_PRIN;
    REGISTROA.GOFE_OID_GRUP_OFER := I.GOFE_OID_GRUP_OFER;
    REGISTROA.VAL_CODI_VENT := I.VAL_CODI_VENT;
    REGISTROA.VAL_TEXT_BREV := I.VAL_TEXT_BREV;
    REGISTROA.TIES_OID_TIPO_ESTR := I.TIES_OID_TIPO_ESTR;
    REGISTROA.MFCA_OID_CABE := I.MFCA_OID_CABE;
    REGISTROA.OID_OFER := I.OID_OFER;

    PIPE ROW(REGISTROA);

  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_1_Y_5;



FUNCTION OBTENER_SECUE_ESTRA_2_IND_PA(OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
OID_OFERTA IN NUMBER)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT POD.OID_DETA_OFER,
       PCO.NUM_ORDE,
       POD.NUM_PAGI_CATA,
       PE.COD_ESTR,
       PO.NUM_OFER,
       POD.VAL_POSI_PAGI,
       MP.COD_SAP,
       POD.IND_PROD_PRIN,
       POD.GOFE_OID_GRUP_OFER,
       POD.VAL_CODI_VENT,
       POD.VAL_TEXT_BREV,
       PE.TIES_OID_TIPO_ESTR,
       PO.MFCA_OID_CABE,
       PO.OID_OFER
  FROM PRE_OFERT PO,
       PRE_OFERT_DETAL POD,
       MAE_PRODU MP,
       PRE_CATAL PC,
       PRE_CATAL_ORDEN PCO,
       PRE_GRUPO_OFERT PGO,
       PRE_ESTRA PE
 WHERE PO.MFCA_OID_CABE = OID_CABE
      AND POD.OFER_OID_OFER = PO.OID_OFER
   AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
   AND PO.COES_OID_ESTR = PE.OID_ESTR
      AND POD.PROD_OID_PROD = MP.OID_PROD
   AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
   AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
      AND POD.IND_PROD_PRIN = 0
       AND PCO.NUM_ORDE = NUM_ORDEN
     AND POD.NUM_PAGI_CATA = PAGI_CATA
  AND POD.VAL_POSI_PAGI = POSI_PAGI
  AND PE.COD_ESTR = COD_ESTRA
  AND PO.OID_OFER = OID_OFERTA
 ORDER BY UPPER(POD.VAL_TEXT_BREV) NULLS LAST;

BEGIN
  FOR I IN C1 LOOP

    REGISTROA.OID_DETA_OFER := I.OID_DETA_OFER;
    REGISTROA.NUM_ORDE := I.NUM_ORDE;
    REGISTROA.NUM_PAGI_CATA := I.NUM_PAGI_CATA;
    REGISTROA.COD_ESTR := I.COD_ESTR;
    REGISTROA.NUM_OFER := I.NUM_OFER;
    REGISTROA.VAL_POSI_PAGI := I.VAL_POSI_PAGI;
    REGISTROA.COD_SAP := I.COD_SAP;
    REGISTROA.IND_PROD_PRIN := I.IND_PROD_PRIN;
    REGISTROA.GOFE_OID_GRUP_OFER := I.GOFE_OID_GRUP_OFER;
    REGISTROA.VAL_CODI_VENT := I.VAL_CODI_VENT;
    REGISTROA.VAL_TEXT_BREV := I.VAL_TEXT_BREV;
    REGISTROA.TIES_OID_TIPO_ESTR := I.TIES_OID_TIPO_ESTR;
    REGISTROA.MFCA_OID_CABE := I.MFCA_OID_CABE;
    REGISTROA.OID_OFER := I.OID_OFER;

    PIPE ROW(REGISTROA);

  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_2_IND_PA;



FUNCTION OBTENER_SECUE_ESTRA_2_IND_PP (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT POD.OID_DETA_OFER,
       PCO.NUM_ORDE,
       POD.NUM_PAGI_CATA,
       PE.COD_ESTR,
       PO.NUM_OFER,
       POD.VAL_POSI_PAGI,
       MP.COD_SAP,
       POD.IND_PROD_PRIN,
       POD.GOFE_OID_GRUP_OFER,
       POD.VAL_CODI_VENT,
       POD.VAL_TEXT_BREV,
       PE.TIES_OID_TIPO_ESTR,
       PO.MFCA_OID_CABE,
       PO.OID_OFER
FROM PRE_OFERT PO,
     PRE_OFERT_DETAL POD,
     MAE_PRODU MP,
     PRE_CATAL PC,
     PRE_CATAL_ORDEN PCO,
     PRE_GRUPO_OFERT PGO,
     PRE_ESTRA PE
WHERE PO.MFCA_OID_CABE = OID_CABE
     AND POD.OFER_OID_OFER = PO.OID_OFER
     AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
     AND PO.COES_OID_ESTR = PE.OID_ESTR
     AND POD.PROD_OID_PROD = MP.OID_PROD
     AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
     AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
  AND PCO.NUM_ORDE = NUM_ORDEN
     AND POD.NUM_PAGI_CATA = PAGI_CATA
  AND POD.VAL_POSI_PAGI = POSI_PAGI
  AND PE.COD_ESTR = COD_ESTRA
  AND POD.IND_PROD_PRIN = 1
ORDER BY UPPER(POD.VAL_TEXT_BREV);

TYPE CUR IS REF CURSOR;
C2 CUR;

BEGIN
  FOR I IN C1 LOOP

    REGISTROA.OID_DETA_OFER := I.OID_DETA_OFER;
    REGISTROA.NUM_ORDE := I.NUM_ORDE;
    REGISTROA.NUM_PAGI_CATA := I.NUM_PAGI_CATA;
    REGISTROA.COD_ESTR := I.COD_ESTR;
    REGISTROA.NUM_OFER := I.NUM_OFER;
    REGISTROA.VAL_POSI_PAGI := I.VAL_POSI_PAGI;
    REGISTROA.COD_SAP := I.COD_SAP;
    REGISTROA.IND_PROD_PRIN := I.IND_PROD_PRIN;
    REGISTROA.GOFE_OID_GRUP_OFER := I.GOFE_OID_GRUP_OFER;
    REGISTROA.VAL_CODI_VENT := I.VAL_CODI_VENT;
    REGISTROA.VAL_TEXT_BREV := I.VAL_TEXT_BREV;
    REGISTROA.TIES_OID_TIPO_ESTR := I.TIES_OID_TIPO_ESTR;
    REGISTROA.MFCA_OID_CABE := I.MFCA_OID_CABE;
    REGISTROA.OID_OFER := I.OID_OFER;

    PIPE ROW(REGISTROA);

    OPEN C2 FOR
       SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_2_IND_PA(OID_CABE, I.NUM_ORDE,
    I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR, I.OID_OFER)  AS OBJ_PRE_SECUE_OFER_TABLE));
      LOOP
       FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
         REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
         EXIT WHEN C2%NOTFOUND;
        PIPE ROW(REGISTROA);
      END LOOP;
      CLOSE C2;
  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_2_IND_PP;


FUNCTION OBTENER_SECUE_ESTRA_3_Y_7_OG (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT NUM_ORDE,
       NUM_PAGI_CATA,
       VAL_POSI_PAGI,
       COD_ESTR,
       NUM_OFER,
       MIN(ORDEN)
FROM
(
 SELECT PCO.NUM_ORDE,
        POD.NUM_PAGI_CATA,
        POD.VAL_POSI_PAGI,
        PE.COD_ESTR,
        PO.NUM_OFER,
        SUM(1) OVER (PARTITION BY 1 ORDER BY UPPER(POD.VAL_TEXT_BREV)) ORDEN
 FROM PRE_OFERT PO,
      PRE_OFERT_DETAL POD,
      MAE_PRODU MP,
      PRE_CATAL PC,
      PRE_CATAL_ORDEN PCO,
      PRE_GRUPO_OFERT PGO,
      PRE_ESTRA PE
 WHERE PO.MFCA_OID_CABE = OID_CABE
      AND POD.OFER_OID_OFER = PO.OID_OFER
      AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
      AND PO.COES_OID_ESTR = PE.OID_ESTR
      AND POD.PROD_OID_PROD = MP.OID_PROD
      AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
      AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
   AND PCO.NUM_ORDE = NUM_ORDEN
      AND POD.NUM_PAGI_CATA = PAGI_CATA
   AND POD.VAL_POSI_PAGI = POSI_PAGI
   AND PE.COD_ESTR = COD_ESTRA
   AND PGO.NUM_GRUP = 1
)
GROUP BY NUM_ORDE,
       NUM_PAGI_CATA,
       VAL_POSI_PAGI,
       COD_ESTR,
       NUM_OFER
ORDER BY 6;

TYPE CUR IS REF CURSOR;
C2 CUR;

BEGIN
  FOR I IN C1 LOOP
 OPEN C2 FOR
       SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBT_SECUE_ESTRA_3_Y_7_DATOS(OID_CABE, I.NUM_ORDE,
      I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR, I.NUM_OFER) AS OBJ_PRE_SECUE_OFER_TABLE));
      LOOP
       FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
         REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
         EXIT WHEN C2%NOTFOUND;
        PIPE ROW(REGISTROA);
      END LOOP;
      CLOSE C2;
  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_3_Y_7_OG;



FUNCTION OBTENER_SECUE_ESTRA_4_OF (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT NUM_ORDE,
       NUM_PAGI_CATA,
       VAL_POSI_PAGI,
       COD_ESTR,
       NUM_OFER,
       MIN(ORDEN)
FROM
(
 SELECT PCO.NUM_ORDE,
        POD.NUM_PAGI_CATA,
        POD.VAL_POSI_PAGI,
        PE.COD_ESTR,
        PO.NUM_OFER,
        SUM(1) OVER (PARTITION BY 1 ORDER BY UPPER(POD.VAL_TEXT_BREV)) ORDEN
 FROM PRE_OFERT PO,
      PRE_OFERT_DETAL POD,
      MAE_PRODU MP,
      PRE_CATAL PC,
      PRE_CATAL_ORDEN PCO,
      PRE_GRUPO_OFERT PGO,
      PRE_ESTRA PE
 WHERE PO.MFCA_OID_CABE = OID_CABE
      AND POD.OFER_OID_OFER = PO.OID_OFER
      AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
      AND PO.COES_OID_ESTR = PE.OID_ESTR
      AND POD.PROD_OID_PROD = MP.OID_PROD
      AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
      AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
   AND PCO.NUM_ORDE = NUM_ORDEN
      AND POD.NUM_PAGI_CATA = PAGI_CATA
   AND POD.VAL_POSI_PAGI = POSI_PAGI
   AND PE.COD_ESTR = COD_ESTRA
   AND PGO.IND_CNDO = 1
)
GROUP BY NUM_ORDE,
       NUM_PAGI_CATA,
       VAL_POSI_PAGI,
       COD_ESTR,
       NUM_OFER
ORDER BY 6;

TYPE CUR IS REF CURSOR;
C2 CUR;

BEGIN
  FOR I IN C1 LOOP
 OPEN C2 FOR
       SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_4_OG(OID_CABE, I.NUM_ORDE,
      I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR, I.NUM_OFER) AS OBJ_PRE_SECUE_OFER_TABLE));
      LOOP
       FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
         REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
         EXIT WHEN C2%NOTFOUND;
        PIPE ROW(REGISTROA);
      END LOOP;
      CLOSE C2;
  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_4_OF;


FUNCTION OBTENER_SECUE_ESTRA_4_OG (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_OFERTA IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT NUM_ORDE,
    NUM_PAGI_CATA,
    VAL_POSI_PAGI,
    COD_ESTR,
    IND_CNDO,
    OID_GRUP_OFER,
    MIN(ORDEN) ORDEN
FROM
(
 SELECT PCO.NUM_ORDE,
     POD.NUM_PAGI_CATA,
     POD.VAL_POSI_PAGI,
     PE.COD_ESTR,
     PGO.OID_GRUP_OFER,
     PGO.IND_CNDO,
     SUM(1) OVER (PARTITION BY PGO.IND_CNDO ORDER BY UPPER(POD.VAL_TEXT_BREV)) ORDEN
 FROM PRE_OFERT PO,
      PRE_OFERT_DETAL POD,
      MAE_PRODU MP,
      PRE_CATAL PC,
      PRE_CATAL_ORDEN PCO,
      PRE_GRUPO_OFERT PGO,
      PRE_ESTRA PE
 WHERE PO.MFCA_OID_CABE = OID_CABE
      AND POD.OFER_OID_OFER = PO.OID_OFER
      AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
      AND PO.COES_OID_ESTR = PE.OID_ESTR
      AND POD.PROD_OID_PROD = MP.OID_PROD
      AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
      AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
   AND PCO.NUM_ORDE = NUM_ORDEN
   AND POD.NUM_PAGI_CATA = PAGI_CATA
   AND POD.VAL_POSI_PAGI = POSI_PAGI
   AND PE.COD_ESTR = COD_ESTRA
   AND PO.NUM_OFER = NUM_OFERTA
)
GROUP BY NUM_ORDE,
    NUM_PAGI_CATA,
    VAL_POSI_PAGI,
    COD_ESTR,
    IND_CNDO,
    OID_GRUP_OFER
ORDER BY IND_CNDO DESC,
     ORDEN;


TYPE CUR IS REF CURSOR;
C2 CUR;

BEGIN
  FOR I IN C1 LOOP
 OPEN C2 FOR
       SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBT_SECUE_ESTRA_4_DATOS(OID_CABE, I.NUM_ORDE,
      I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR, I.OID_GRUP_OFER) AS OBJ_PRE_SECUE_OFER_TABLE));
      LOOP
       FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
         REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
         EXIT WHEN C2%NOTFOUND;
        PIPE ROW(REGISTROA);
      END LOOP;
      CLOSE C2;
  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_4_OG;



FUNCTION OBTENER_SECUE_ESTRA_6_OF (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT NUM_ORDE,
       NUM_PAGI_CATA,
       VAL_POSI_PAGI,
       COD_ESTR,
       NUM_OFER,
       MIN(ORDEN)
FROM
(
 SELECT PCO.NUM_ORDE,
        POD.NUM_PAGI_CATA,
        POD.VAL_POSI_PAGI,
        PE.COD_ESTR,
        PO.NUM_OFER,
        SUM(1) OVER (PARTITION BY 1 ORDER BY UPPER(POD.VAL_TEXT_BREV)) ORDEN
 FROM PRE_OFERT PO,
      PRE_OFERT_DETAL POD,
      MAE_PRODU MP,
      PRE_CATAL PC,
      PRE_CATAL_ORDEN PCO,
      PRE_GRUPO_OFERT PGO,
      PRE_ESTRA PE
 WHERE PO.MFCA_OID_CABE = OID_CABE
      AND POD.OFER_OID_OFER = PO.OID_OFER
      AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
      AND PO.COES_OID_ESTR = PE.OID_ESTR
      AND POD.PROD_OID_PROD = MP.OID_PROD
      AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
      AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
   AND PCO.NUM_ORDE = NUM_ORDEN
      AND POD.NUM_PAGI_CATA = PAGI_CATA
   AND POD.VAL_POSI_PAGI = POSI_PAGI
   AND PE.COD_ESTR = COD_ESTRA
)
GROUP BY NUM_ORDE,
       NUM_PAGI_CATA,
       VAL_POSI_PAGI,
       COD_ESTR,
       NUM_OFER
ORDER BY 6;

TYPE CUR IS REF CURSOR;
C2 CUR;

BEGIN
  FOR I IN C1 LOOP
 OPEN C2 FOR
       SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBTENER_SECUE_ESTRA_6_OG(OID_CABE, I.NUM_ORDE,
      I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR, I.NUM_OFER) AS OBJ_PRE_SECUE_OFER_TABLE));
      LOOP
       FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
         REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
         EXIT WHEN C2%NOTFOUND;
        PIPE ROW(REGISTROA);
      END LOOP;
      CLOSE C2;
  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_6_OF;



FUNCTION OBTENER_SECUE_ESTRA_6_OG (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_OFERTA IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT NUM_ORDE,
    NUM_PAGI_CATA,
    VAL_POSI_PAGI,
    COD_ESTR,
    OID_GRUP_OFER,
    MIN(ORDEN) ORDEN
FROM
(
 SELECT PCO.NUM_ORDE,
     POD.NUM_PAGI_CATA,
     POD.VAL_POSI_PAGI,
     PE.COD_ESTR,
     PGO.OID_GRUP_OFER,
     SUM(1) OVER (PARTITION BY 1 ORDER BY UPPER(POD.VAL_TEXT_BREV)) ORDEN
 FROM PRE_OFERT PO,
      PRE_OFERT_DETAL POD,
      MAE_PRODU MP,
      PRE_CATAL PC,
      PRE_CATAL_ORDEN PCO,
      PRE_GRUPO_OFERT PGO,
      PRE_ESTRA PE
 WHERE PO.MFCA_OID_CABE = OID_CABE
      AND POD.OFER_OID_OFER = PO.OID_OFER
      AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
      AND PO.COES_OID_ESTR = PE.OID_ESTR
      AND POD.PROD_OID_PROD = MP.OID_PROD
      AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
      AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
        AND PCO.NUM_ORDE = NUM_ORDEN
   AND POD.NUM_PAGI_CATA = PAGI_CATA
   AND POD.VAL_POSI_PAGI = POSI_PAGI
   AND PE.COD_ESTR = COD_ESTRA
   AND PO.NUM_OFER = NUM_OFERTA
)
GROUP BY NUM_ORDE,
    NUM_PAGI_CATA,
    VAL_POSI_PAGI,
    COD_ESTR,
    OID_GRUP_OFER
ORDER BY ORDEN;


TYPE CUR IS REF CURSOR;
C2 CUR;

BEGIN
  FOR I IN C1 LOOP
 OPEN C2 FOR
       SELECT * FROM TABLE(CAST(PQ_APL_PRE.OBT_SECUE_ESTRA_6_DATOS(OID_CABE, I.NUM_ORDE,
      I.NUM_PAGI_CATA,I.VAL_POSI_PAGI,I.COD_ESTR, I.OID_GRUP_OFER) AS OBJ_PRE_SECUE_OFER_TABLE));
      LOOP
       FETCH C2 INTO REGISTROA.OID_DETA_OFER, REGISTROA.NUM_ORDE, REGISTROA.NUM_PAGI_CATA, REGISTROA.COD_ESTR, REGISTROA.NUM_OFER, REGISTROA.VAL_POSI_PAGI,
                REGISTROA.COD_SAP, REGISTROA.IND_PROD_PRIN, REGISTROA.GOFE_OID_GRUP_OFER, REGISTROA.VAL_CODI_VENT, REGISTROA.VAL_TEXT_BREV,
         REGISTROA.TIES_OID_TIPO_ESTR, REGISTROA.MFCA_OID_CABE, REGISTROA.OID_OFER;
         EXIT WHEN C2%NOTFOUND;
        PIPE ROW(REGISTROA);
      END LOOP;
      CLOSE C2;
  END LOOP;
  RETURN;
END OBTENER_SECUE_ESTRA_6_OG;



FUNCTION OBT_SECUE_ESTRA_3_Y_7_DATOS (OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_OFERTA IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS
SELECT POD.OID_DETA_OFER,
       PCO.NUM_ORDE,
       POD.NUM_PAGI_CATA,
       PE.COD_ESTR,
       PO.NUM_OFER,
       POD.VAL_POSI_PAGI,
       MP.COD_SAP,
       POD.IND_PROD_PRIN,
       POD.GOFE_OID_GRUP_OFER,
       POD.VAL_CODI_VENT,
       POD.VAL_TEXT_BREV,
       PE.TIES_OID_TIPO_ESTR,
       PO.MFCA_OID_CABE,
       PO.OID_OFER
FROM PRE_OFERT PO,
     PRE_OFERT_DETAL POD,
     MAE_PRODU MP,
     PRE_CATAL PC,
     PRE_CATAL_ORDEN PCO,
     PRE_GRUPO_OFERT PGO,
     PRE_ESTRA PE
WHERE PO.MFCA_OID_CABE = OID_CABE
     AND POD.OFER_OID_OFER = PO.OID_OFER
     AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
     AND PO.COES_OID_ESTR = PE.OID_ESTR
     AND POD.PROD_OID_PROD = MP.OID_PROD
     AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
     AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
     AND PCO.NUM_ORDE = NUM_ORDEN
  AND POD.NUM_PAGI_CATA = PAGI_CATA
  AND POD.VAL_POSI_PAGI = POSI_PAGI
  AND PE.COD_ESTR = COD_ESTRA
  AND PO.NUM_OFER = NUM_OFERTA
ORDER BY PCO.NUM_ORDE NULLS LAST,
         NVL (POD.NUM_PAGI_CATA,0),
         NVL (POD.VAL_POSI_PAGI,0),
   PE.COD_ESTR ASC,
   PGO.NUM_GRUP,
   UPPER(POD.VAL_TEXT_BREV);

BEGIN
  FOR I IN C1 LOOP

    REGISTROA.OID_DETA_OFER := I.OID_DETA_OFER;
    REGISTROA.NUM_ORDE := I.NUM_ORDE;
    REGISTROA.NUM_PAGI_CATA := I.NUM_PAGI_CATA;
    REGISTROA.COD_ESTR := I.COD_ESTR;
    REGISTROA.NUM_OFER := I.NUM_OFER;
    REGISTROA.VAL_POSI_PAGI := I.VAL_POSI_PAGI;
    REGISTROA.COD_SAP := I.COD_SAP;
    REGISTROA.IND_PROD_PRIN := I.IND_PROD_PRIN;
    REGISTROA.GOFE_OID_GRUP_OFER := I.GOFE_OID_GRUP_OFER;
    REGISTROA.VAL_CODI_VENT := I.VAL_CODI_VENT;
    REGISTROA.VAL_TEXT_BREV := I.VAL_TEXT_BREV;
    REGISTROA.TIES_OID_TIPO_ESTR := I.TIES_OID_TIPO_ESTR;
    REGISTROA.MFCA_OID_CABE := I.MFCA_OID_CABE;
    REGISTROA.OID_OFER := I.OID_OFER;

    PIPE ROW(REGISTROA);

  END LOOP;
  RETURN;
END OBT_SECUE_ESTRA_3_Y_7_DATOS;



FUNCTION OBT_SECUE_ESTRA_4_DATOS(OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_GRUPO IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS

SELECT POD.OID_DETA_OFER,
       PCO.NUM_ORDE,
       POD.NUM_PAGI_CATA,
       PE.COD_ESTR,
       PO.NUM_OFER,
       POD.VAL_POSI_PAGI,
       MP.COD_SAP,
       POD.IND_PROD_PRIN,
       POD.GOFE_OID_GRUP_OFER,
       POD.VAL_CODI_VENT,
       POD.VAL_TEXT_BREV,
       PE.TIES_OID_TIPO_ESTR,
       PO.MFCA_OID_CABE,
       PO.OID_OFER
FROM PRE_OFERT PO,
     PRE_OFERT_DETAL POD,
     MAE_PRODU MP,
     PRE_CATAL PC,
     PRE_CATAL_ORDEN PCO,
     PRE_GRUPO_OFERT PGO,
     PRE_ESTRA PE
WHERE PO.MFCA_OID_CABE = OID_CABE
     AND POD.OFER_OID_OFER = PO.OID_OFER
     AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
     AND PO.COES_OID_ESTR = PE.OID_ESTR
     AND POD.PROD_OID_PROD = MP.OID_PROD
     AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
     AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
     AND PCO.NUM_ORDE = NUM_ORDEN
  AND POD.NUM_PAGI_CATA = PAGI_CATA
  AND POD.VAL_POSI_PAGI = POSI_PAGI
  AND PE.COD_ESTR = COD_ESTRA
  AND POD.GOFE_OID_GRUP_OFER = NUM_GRUPO
ORDER BY PCO.NUM_ORDE NULLS LAST,
         NVL (POD.NUM_PAGI_CATA,0),
         NVL (POD.VAL_POSI_PAGI,0),
   PE.COD_ESTR ASC,
   UPPER(POD.VAL_TEXT_BREV);

BEGIN
  FOR I IN C1 LOOP

    REGISTROA.OID_DETA_OFER := I.OID_DETA_OFER;
    REGISTROA.NUM_ORDE := I.NUM_ORDE;
    REGISTROA.NUM_PAGI_CATA := I.NUM_PAGI_CATA;
    REGISTROA.COD_ESTR := I.COD_ESTR;
    REGISTROA.NUM_OFER := I.NUM_OFER;
    REGISTROA.VAL_POSI_PAGI := I.VAL_POSI_PAGI;
    REGISTROA.COD_SAP := I.COD_SAP;
    REGISTROA.IND_PROD_PRIN := I.IND_PROD_PRIN;
    REGISTROA.GOFE_OID_GRUP_OFER := I.GOFE_OID_GRUP_OFER;
    REGISTROA.VAL_CODI_VENT := I.VAL_CODI_VENT;
    REGISTROA.VAL_TEXT_BREV := I.VAL_TEXT_BREV;
    REGISTROA.TIES_OID_TIPO_ESTR := I.TIES_OID_TIPO_ESTR;
    REGISTROA.MFCA_OID_CABE := I.MFCA_OID_CABE;
    REGISTROA.OID_OFER := I.OID_OFER;

    PIPE ROW(REGISTROA);

  END LOOP;
  RETURN;
END OBT_SECUE_ESTRA_4_DATOS;



FUNCTION OBT_SECUE_ESTRA_6_DATOS(OID_CABE IN NUMBER,
NUM_ORDEN IN NUMBER, PAGI_CATA IN NUMBER, POSI_PAGI IN NUMBER, COD_ESTRA IN VARCHAR,
NUM_GRUPO IN NUMBER
)
RETURN OBJ_PRE_SECUE_OFER_TABLE PIPELINED IS

REGISTROA OBJ_PRE_SECUE_OFER := OBJ_PRE_SECUE_OFER(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

CURSOR c1 IS

SELECT POD.OID_DETA_OFER,
       PCO.NUM_ORDE,
       POD.NUM_PAGI_CATA,
       PE.COD_ESTR,
       PO.NUM_OFER,
       POD.VAL_POSI_PAGI,
       MP.COD_SAP,
       POD.IND_PROD_PRIN,
       POD.GOFE_OID_GRUP_OFER,
       POD.VAL_CODI_VENT,
       POD.VAL_TEXT_BREV,
       PE.TIES_OID_TIPO_ESTR,
       PO.MFCA_OID_CABE,
       PO.OID_OFER
FROM PRE_OFERT PO,
     PRE_OFERT_DETAL POD,
     MAE_PRODU MP,
     PRE_CATAL PC,
     PRE_CATAL_ORDEN PCO,
     PRE_GRUPO_OFERT PGO,
     PRE_ESTRA PE
WHERE PO.MFCA_OID_CABE = OID_CABE
     AND POD.OFER_OID_OFER = PO.OID_OFER
     AND POD.OCAT_OID_CATAL = PC.OID_CATA(+)
     AND PO.COES_OID_ESTR = PE.OID_ESTR
     AND POD.PROD_OID_PROD = MP.OID_PROD
     AND PCO.OCAT_OID_CATA(+) = PC.OID_CATA
     AND POD.GOFE_OID_GRUP_OFER = PGO.OID_GRUP_OFER(+)
     AND PCO.NUM_ORDE = NUM_ORDEN
  AND POD.NUM_PAGI_CATA = PAGI_CATA
  AND POD.VAL_POSI_PAGI = POSI_PAGI
  AND PE.COD_ESTR = COD_ESTRA
  AND POD.GOFE_OID_GRUP_OFER = NUM_GRUPO
ORDER BY PCO.NUM_ORDE NULLS LAST,
         NVL (POD.NUM_PAGI_CATA,0),
         NVL (POD.VAL_POSI_PAGI,0),
   PE.COD_ESTR ASC,
   UPPER(POD.VAL_TEXT_BREV);

BEGIN
  FOR I IN C1 LOOP

    REGISTROA.OID_DETA_OFER := I.OID_DETA_OFER;
    REGISTROA.NUM_ORDE := I.NUM_ORDE;
    REGISTROA.NUM_PAGI_CATA := I.NUM_PAGI_CATA;
    REGISTROA.COD_ESTR := I.COD_ESTR;
    REGISTROA.NUM_OFER := I.NUM_OFER;
    REGISTROA.VAL_POSI_PAGI := I.VAL_POSI_PAGI;
    REGISTROA.COD_SAP := I.COD_SAP;
    REGISTROA.IND_PROD_PRIN := I.IND_PROD_PRIN;
    REGISTROA.GOFE_OID_GRUP_OFER := I.GOFE_OID_GRUP_OFER;
    REGISTROA.VAL_CODI_VENT := I.VAL_CODI_VENT;
    REGISTROA.VAL_TEXT_BREV := I.VAL_TEXT_BREV;
    REGISTROA.TIES_OID_TIPO_ESTR := I.TIES_OID_TIPO_ESTR;
    REGISTROA.MFCA_OID_CABE := I.MFCA_OID_CABE;
    REGISTROA.OID_OFER := I.OID_OFER;

    PIPE ROW(REGISTROA);

  END LOOP;
  RETURN;
END OBT_SECUE_ESTRA_6_DATOS;

PROCEDURE int_pre_carg_matr_plan_contr(psTipo VARCHAR2)
IS

BEGIN
  if (psTipo = '0') then
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU DISABLE CONSTRAINT MAFA_MFCA_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU DISABLE CONSTRAINT MAFA_OFDE_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU DISABLE CONSTRAINT MAFA_PRFI_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU DISABLE CONSTRAINT MAFA_VARI_FK';

       EXECUTE IMMEDIATE 'ALTER TABLE PRE_RANGO_PROMO DISABLE CONSTRAINT RAPR_POMO_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_PROMO DISABLE CONSTRAINT POMO_OFER_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_OFERT_DETAL DISABLE CONSTRAINT OFDE_OFER_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_GRUPO_OFERT DISABLE CONSTRAINT GOFE_OFER_FK';
   else
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU ENABLE CONSTRAINT MAFA_MFCA_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU ENABLE CONSTRAINT MAFA_OFDE_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU ENABLE CONSTRAINT MAFA_PRFI_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_MATRI_FACTU ENABLE CONSTRAINT MAFA_VARI_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_RANGO_PROMO ENABLE CONSTRAINT RAPR_POMO_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_PROMO ENABLE CONSTRAINT POMO_OFER_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_OFERT_DETAL ENABLE CONSTRAINT OFDE_OFER_FK';
       EXECUTE IMMEDIATE 'ALTER TABLE PRE_GRUPO_OFERT ENABLE CONSTRAINT GOFE_OFER_FK';
  end if;

END;

END PQ_APL_PRE;
/
