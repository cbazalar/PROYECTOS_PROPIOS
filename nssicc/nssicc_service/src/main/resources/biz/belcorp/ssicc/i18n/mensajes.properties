javax.faces.component.UIInput.CONVERSION	=	Se ha producido un error de conversión.
javax.faces.component.UIInput.REQUIRED	=	Valor Obligatorio\!\!
javax.faces.component.UIInput.UPDATE	=	Se ha producido un error al procesar la información enviada.
javax.faces.component.UISelectMany.INVALID	=	Valor no es válido
javax.faces.component.UISelectOne.INVALID	=	Valor no es válido
javax.faces.converter.BigDecimalConverter.DECIMAL	=	{2}: Debe ser un número decimal positivo o negativo.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail	=	{2}: Debe ser un número decimal positivo o negativo formado por cero o más dígitos, que pueden incluir a continuación una coma decimal y una fracción. Ejemplo: {1}
javax.faces.converter.BigIntegerConverter.BIGINTEGER	=	{2}: Debe ser un número formado por uno o varios dígitos.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail	=	{2}: Debe ser un número formado por uno o varios dígitos. Ejemplo: {1}
javax.faces.converter.BooleanConverter.BOOLEAN	=	Debe ser 'true' o 'false'.
javax.faces.converter.BooleanConverter.BOOLEAN_detail	=	Debe ser 'true' o 'false'. Cualquier valor diferente a ''true'', se evaluará como ''false''.
javax.faces.converter.ByteConverter.BYTE	=	{2}: Debe ser un número entre 0 y 255.
javax.faces.converter.ByteConverter.BYTE_detail	=	{2}: Debe ser un número entre 0 y 255. Ejemplo: {1}
javax.faces.converter.CharacterConverter.CHARACTER	=	{1}: Debe ser un carácter válido.
javax.faces.converter.CharacterConverter.CHARACTER_detail	=	{1}: Debe ser un carácter ASCII válido.
javax.faces.converter.DateTimeConverter.DATE	=	{2}: No se ha podido reconocer como fecha.
javax.faces.converter.DateTimeConverter.DATETIME	=	{2}:No se ha podido reconocer como fecha y hora.
javax.faces.converter.DateTimeConverter.DATETIME_detail	=	{2}: No se ha podido reconocer como fecha y hora. Ejemplo: {1}
javax.faces.converter.DateTimeConverter.DATE_detail	=	{2}: No se ha podido reconocer como fecha. Ejemplo: {1}
javax.faces.converter.DateTimeConverter.PATTERN_TYPE	=	{1}: Debe especificarse el atributo ''pattern'' o ''type'' para convertir el valor ''{0}''.
javax.faces.converter.DateTimeConverter.TIME	=	{2}: No se ha podido reconocer como hora.
javax.faces.converter.DateTimeConverter.TIME_detail	=	{2}: No se ha podido reconocer como hora. Ejemplo: {1}
javax.faces.converter.DoubleConverter.DOUBLE	=	{2}: Debe ser un número formado por uno o varios dígitos.
javax.faces.converter.DoubleConverter.DOUBLE_detail	=	{2}: Debe ser un número entre 4.9E-324 y 1.7976931348623157E308 Ejemplo: {1}
javax.faces.converter.EnumConverter.ENUM	=	{2}: Debe poder convertirse en una enumeración.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS	=	{1}: Debe poder convertirse en una enumeración a partir de la enumeración, pero no se ha especificado ninguna clase de enumeración.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail	=	{1}: Debe poder convertirse en una enumeración a partir de la enumeración, pero no se ha especificado ninguna clase de enumeración.
javax.faces.converter.EnumConverter.ENUM_detail	=	{2}: Debe poder convertirse en una enumeración a partir de la enumeración que contiene la constante ''{1}''.
javax.faces.converter.FloatConverter.FLOAT	=	{2}: Debe ser un número formado por uno o varios dígitos.
javax.faces.converter.FloatConverter.FLOAT_detail	=	{2}: Debe ser un número entre 1.4E-45 y 3.4028235E38 Ejemplo: {1}
javax.faces.converter.IntegerConverter.INTEGER	=	{2}: Debe ser un número formado por uno o varios dígitos.
javax.faces.converter.IntegerConverter.INTEGER_detail	=	{2}: Debe ser un número entre -2147483648 y 2147483647. Ejemplo: {1}
javax.faces.converter.LongConverter.LONG	=	{2}: Debe ser un número formado por uno o varios dígitos.
javax.faces.converter.LongConverter.LONG_detail	=	{2}: Debe ser un número entre -9223372036854775808 y 9223372036854775807. Ejemplo: {1}
javax.faces.converter.NumberConverter.CURRENCY	=	{2}: No se ha podido reconocer como un valor de divisa.
javax.faces.converter.NumberConverter.CURRENCY_detail	=	{2}: No se ha podido reconocer como un valor de divisa. Ejemplo: {1}
javax.faces.converter.NumberConverter.NUMBER	=	{2}: No es un número.
javax.faces.converter.NumberConverter.NUMBER_detail	=	{2}: No es un número. Ejemplo: {1}
javax.faces.converter.NumberConverter.PATTERN	=	{2}: No es un modelo de número.
javax.faces.converter.NumberConverter.PATTERN_detail	=	{2}: No es un modelo de número. Ejemplo: {1}
javax.faces.converter.NumberConverter.PERCENT	=	{2}: No se ha podido reconocer como porcentaje.
javax.faces.converter.NumberConverter.PERCENT_detail	=	{2}: No se ha podido reconocer como porcentaje. Ejemplo: {1}
javax.faces.converter.STRING	=	{1}: No se ha podido convertir en una cadena.
javax.faces.converter.ShortConverter.SHORT	=	{2}: Debe ser un número formado por uno o varios dígitos.
javax.faces.converter.ShortConverter.SHORT_detail	=	{2}: Debe ser un número entre -32768 y 32767. Ejemplo: {1}
javax.faces.validator.BeanValidator.MESSAGE	=	{0}
javax.faces.validator.DoubleRangeValidator.MAXIMUM	=	Valor es mayor que el máximo permitido de "{0}"
javax.faces.validator.DoubleRangeValidator.MINIMUM	=	Valor es inferior que el mínimo permitido de ''{0}''
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE	=	No está entre los valores esperados: {0} y {1}.
javax.faces.validator.DoubleRangeValidator.TYPE	=	Valor no tiene el tipo correcto
javax.faces.validator.LengthValidator.MAXIMUM	=	Valor es mayor que el máximo permitido de ''{0}' 'caracteres
javax.faces.validator.LengthValidator.MINIMUM	=	Valor es inferior que el mínimo permitido de ''{0}'' caracteres
javax.faces.validator.LongRangeValidator.MAXIMUM	=	Valor es mayor que el máximo permitido de ''{0}''
javax.faces.validator.LongRangeValidator.MINIMUM	=	Valor es inferior que el mínimo permitido de ''{0}''
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE	=	No está entre los valores esperados: {0} y {1}.
javax.faces.validator.LongRangeValidator.TYPE	=	Valor no tiene el tipo correcto.
javax.faces.validator.NOT_IN_RANGE	=	No está entre los valores esperados: {0} y {1}.
javax.faces.validator.RegexValidator.MATCH_EXCEPTION	=	Error en expresión regular
javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail	=	Error en expresión regular, ''{0}''
javax.faces.validator.RegexValidator.NOT_MATCHED	=	El modelo Regex no coincide
javax.faces.validator.RegexValidator.NOT_MATCHED_detail	=	El modelo Regex ''{0}'' no coincide
javax.faces.validator.RegexValidator.PATTERN_NOT_SET	=	Debe definirse el modelo Regex.
javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail	=	El modelo Regex debe estar definido como un valor no vacío.