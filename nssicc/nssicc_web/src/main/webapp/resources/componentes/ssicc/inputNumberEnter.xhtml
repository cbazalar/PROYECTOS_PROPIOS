<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
         xmlns:h="http://java.sun.com/jsf/html"
         xmlns:f="http://java.sun.com/jsf/core"
         xmlns:p="http://primefaces.org/ui"
         xmlns:pe="http://primefaces.org/ui/extensions"
         xmlns:c="http://java.sun.com/jsp/jstl/core"
         xmlns:ui="http://java.sun.com/jsf/facelets"
         xmlns:ssicc="http://java.sun.com/jsf/composite/componentes/ssicc"
         xmlns:composite="http://java.sun.com/jsf/composite">
 <h:head>
   <title>This will not be present in rendered output</title>
 </h:head>
 <h:body>
   <composite:interface displayName="Boton de Comando" >
      <composite:attribute name="value"  required="true" />   
      <composite:attribute name="size"  required="false" default="20" />   
      <composite:attribute name="maxlength"  required="false" default="20" />     
      <composite:attribute name="update" required="false" default=" " />
      <composite:attribute name="activarEnter"  required="false" default="true" /> 
      <composite:attribute name="idForm"   required="false" default=":principalForm" /> 
      <composite:attribute name="onstart" required="false" default=" "/>
      <composite:attribute name="accion" required="true" method-signature="void f(javax.faces.event.ActionEvent)" /> 
     </composite:interface>
   
   <composite:implementation>
        <c:if test="${cc.attrs.activarEnter}">  
            <p:remoteCommand name="#{cc.clientId}_command" id="#{cc.clientId}_command"
						actionListener="#{cc.attrs.accion}"
						onstart="PF('idblockEspereBody').block(); #{cc.attrs.onstart}"	
	     			    oncomplete="PF('idblockEspereBody').unblock(); "	
						update="#{cc.attrs.update}"
   						process="@this input">
   			</p:remoteCommand>	
   			
   			<h:inputText id="input"
						value="#{cc.attrs.value}" 
						size="#{cc.attrs.size}" 
						styleClass="#{component.valid ? 'cls-inputfield' : 'ui-state-error'}"
						required="#{cc.attrs.required}"  
						maxlength="#{cc.attrs.maxlength}" 
						onblur="#{cc.attrs.onstart}"
						onkeypress="if (event.keyCode == 13) {
							              #{cc.clientId}_command();
 										 	return false;
 										 }
						            else {
										return soloNumero(event);

							            }"
 										 		>
	  	      
			</h:inputText>
	  	</c:if>
	  	
	  	<c:if test="${not cc.attrs.activarEnter}">  
   			<h:inputText id="input"
						value="#{cc.attrs.value}" 
						size="#{cc.attrs.size}" 
						styleClass="#{component.valid ? 'cls-inputfield' : 'ui-state-error'}"
						required="#{cc.attrs.required}"  
						maxlength="#{cc.attrs.maxlength}" 
						onblur="#{cc.attrs.onstart}"
						onkeypress="if (event.keyCode == 13) {
										 	return false;
 										 }
						            else {
										return soloNumero(event);

							            }"
 										 		>
	  	      
			</h:inputText>
	  	</c:if>
	  	
	
   </composite:implementation>
 </h:body>
</html>
